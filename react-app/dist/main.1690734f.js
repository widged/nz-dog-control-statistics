/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;
/******/
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ((function(modules) {
	// Check all modules for deduplicated modules
	for(var i in modules) {
		if(Object.prototype.hasOwnProperty.call(modules, i)) {
			switch(typeof modules[i]) {
			case "function": break;
			case "object":
				// Module can be created from a template
				modules[i] = (function(_m) {
					var args = _m.slice(1), fn = modules[_m[0]];
					return function (a,b,c) {
						fn.apply(this, [a,b,c].concat(args));
					};
				}(modules[i]));
				break;
			default:
				// Module is a copy of another module
				modules[i] = modules[modules[i]];
				break;
			}
		}
	}
	return modules;
}([
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(112);
	module.exports = __webpack_require__(123);


/***/ },
/* 1 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	/**
	 * Use invariant() to assert state which your program assumes to be true.
	 *
	 * Provide sprintf-style format (only %s is supported) and arguments
	 * to provide information about what broke and what you were
	 * expecting.
	 *
	 * The invariant message will be stripped in production, but the invariant
	 * will remain to ensure logic does not differ in production.
	 */

	function invariant(condition, format, a, b, c, d, e, f) {
	  if (false) {
	    if (format === undefined) {
	      throw new Error('invariant requires an error message argument');
	    }
	  }

	  if (!condition) {
	    var error;
	    if (format === undefined) {
	      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');
	    } else {
	      var args = [a, b, c, d, e, f];
	      var argIndex = 0;
	      error = new Error(format.replace(/%s/g, function () {
	        return args[argIndex++];
	      }));
	      error.name = 'Invariant Violation';
	    }

	    error.framesToPop = 1; // we don't care about invariant's own frame
	    throw error;
	  }
	}

	module.exports = invariant;

/***/ },
/* 2 */
/***/ function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule reactProdInvariant
	 *
	 */
	'use strict';

	/**
	 * WARNING: DO NOT manually require this module.
	 * This is a replacement for `invariant(...)` used by the error code system
	 * and will _only_ be required by the corresponding babel pass.
	 * It always throws.
	 */

	function reactProdInvariant(code) {
	  var argCount = arguments.length - 1;

	  var message = 'Minified React error #' + code + '; visit ' + 'http://facebook.github.io/react/docs/error-decoder.html?invariant=' + code;

	  for (var argIdx = 0; argIdx < argCount; argIdx++) {
	    message += '&args[]=' + encodeURIComponent(arguments[argIdx + 1]);
	  }

	  message += ' for the full message or use the non-minified dev environment' + ' for full errors and additional helpful warnings.';

	  var error = new Error(message);
	  error.name = 'Invariant Violation';
	  error.framesToPop = 1; // we don't care about reactProdInvariant's own frame

	  throw error;
	}

	module.exports = reactProdInvariant;

/***/ },
/* 3 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2014-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var emptyFunction = __webpack_require__(9);

	/**
	 * Similar to invariant but only logs a warning if the condition is not met.
	 * This can be used to log issues in development environments in critical
	 * paths. Removing the logging code for production environments will keep the
	 * same logic and follow the same code paths.
	 */

	var warning = emptyFunction;

	if (false) {
	  warning = function warning(condition, format) {
	    for (var _len = arguments.length, args = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
	      args[_key - 2] = arguments[_key];
	    }

	    if (format === undefined) {
	      throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');
	    }

	    if (format.indexOf('Failed Composite propType: ') === 0) {
	      return; // Ignore CompositeComponent proptype check.
	    }

	    if (!condition) {
	      var argIndex = 0;
	      var message = 'Warning: ' + format.replace(/%s/g, function () {
	        return args[argIndex++];
	      });
	      if (typeof console !== 'undefined') {
	        console.error(message);
	      }
	      try {
	        // --- Welcome to debugging React ---
	        // This error was thrown as a convenience so that you can use this stack
	        // to find the callsite that caused this warning to fire.
	        throw new Error(message);
	      } catch (x) {}
	    }
	  };
	}

	module.exports = warning;

/***/ },
/* 4 */
/***/ function(module, exports) {

	'use strict';
	/* eslint-disable no-unused-vars */
	var hasOwnProperty = Object.prototype.hasOwnProperty;
	var propIsEnumerable = Object.prototype.propertyIsEnumerable;

	function toObject(val) {
		if (val === null || val === undefined) {
			throw new TypeError('Object.assign cannot be called with null or undefined');
		}

		return Object(val);
	}

	function shouldUseNative() {
		try {
			if (!Object.assign) {
				return false;
			}

			// Detect buggy property enumeration order in older V8 versions.

			// https://bugs.chromium.org/p/v8/issues/detail?id=4118
			var test1 = new String('abc');  // eslint-disable-line
			test1[5] = 'de';
			if (Object.getOwnPropertyNames(test1)[0] === '5') {
				return false;
			}

			// https://bugs.chromium.org/p/v8/issues/detail?id=3056
			var test2 = {};
			for (var i = 0; i < 10; i++) {
				test2['_' + String.fromCharCode(i)] = i;
			}
			var order2 = Object.getOwnPropertyNames(test2).map(function (n) {
				return test2[n];
			});
			if (order2.join('') !== '0123456789') {
				return false;
			}

			// https://bugs.chromium.org/p/v8/issues/detail?id=3056
			var test3 = {};
			'abcdefghijklmnopqrst'.split('').forEach(function (letter) {
				test3[letter] = letter;
			});
			if (Object.keys(Object.assign({}, test3)).join('') !==
					'abcdefghijklmnopqrst') {
				return false;
			}

			return true;
		} catch (e) {
			// We don't expect any of the above to throw, but better to be safe.
			return false;
		}
	}

	module.exports = shouldUseNative() ? Object.assign : function (target, source) {
		var from;
		var to = toObject(target);
		var symbols;

		for (var s = 1; s < arguments.length; s++) {
			from = Object(arguments[s]);

			for (var key in from) {
				if (hasOwnProperty.call(from, key)) {
					to[key] = from[key];
				}
			}

			if (Object.getOwnPropertySymbols) {
				symbols = Object.getOwnPropertySymbols(from);
				for (var i = 0; i < symbols.length; i++) {
					if (propIsEnumerable.call(from, symbols[i])) {
						to[symbols[i]] = from[symbols[i]];
					}
				}
			}
		}

		return to;
	};


/***/ },
/* 5 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMComponentTree
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(2);

	var DOMProperty = __webpack_require__(18);
	var ReactDOMComponentFlags = __webpack_require__(75);

	var invariant = __webpack_require__(1);

	var ATTR_NAME = DOMProperty.ID_ATTRIBUTE_NAME;
	var Flags = ReactDOMComponentFlags;

	var internalInstanceKey = '__reactInternalInstance$' + Math.random().toString(36).slice(2);

	/**
	 * Drill down (through composites and empty components) until we get a host or
	 * host text component.
	 *
	 * This is pretty polymorphic but unavoidable with the current structure we have
	 * for `_renderedChildren`.
	 */
	function getRenderedHostOrTextFromComponent(component) {
	  var rendered;
	  while (rendered = component._renderedComponent) {
	    component = rendered;
	  }
	  return component;
	}

	/**
	 * Populate `_hostNode` on the rendered host/text component with the given
	 * DOM node. The passed `inst` can be a composite.
	 */
	function precacheNode(inst, node) {
	  var hostInst = getRenderedHostOrTextFromComponent(inst);
	  hostInst._hostNode = node;
	  node[internalInstanceKey] = hostInst;
	}

	function uncacheNode(inst) {
	  var node = inst._hostNode;
	  if (node) {
	    delete node[internalInstanceKey];
	    inst._hostNode = null;
	  }
	}

	/**
	 * Populate `_hostNode` on each child of `inst`, assuming that the children
	 * match up with the DOM (element) children of `node`.
	 *
	 * We cache entire levels at once to avoid an n^2 problem where we access the
	 * children of a node sequentially and have to walk from the start to our target
	 * node every time.
	 *
	 * Since we update `_renderedChildren` and the actual DOM at (slightly)
	 * different times, we could race here and see a newer `_renderedChildren` than
	 * the DOM nodes we see. To avoid this, ReactMultiChild calls
	 * `prepareToManageChildren` before we change `_renderedChildren`, at which
	 * time the container's child nodes are always cached (until it unmounts).
	 */
	function precacheChildNodes(inst, node) {
	  if (inst._flags & Flags.hasCachedChildNodes) {
	    return;
	  }
	  var children = inst._renderedChildren;
	  var childNode = node.firstChild;
	  outer: for (var name in children) {
	    if (!children.hasOwnProperty(name)) {
	      continue;
	    }
	    var childInst = children[name];
	    var childID = getRenderedHostOrTextFromComponent(childInst)._domID;
	    if (childID == null) {
	      // We're currently unmounting this child in ReactMultiChild; skip it.
	      continue;
	    }
	    // We assume the child nodes are in the same order as the child instances.
	    for (; childNode !== null; childNode = childNode.nextSibling) {
	      if (childNode.nodeType === 1 && childNode.getAttribute(ATTR_NAME) === String(childID) || childNode.nodeType === 8 && childNode.nodeValue === ' react-text: ' + childID + ' ' || childNode.nodeType === 8 && childNode.nodeValue === ' react-empty: ' + childID + ' ') {
	        precacheNode(childInst, childNode);
	        continue outer;
	      }
	    }
	    // We reached the end of the DOM children without finding an ID match.
	     true ?  false ? invariant(false, 'Unable to find element with ID %s.', childID) : _prodInvariant('32', childID) : void 0;
	  }
	  inst._flags |= Flags.hasCachedChildNodes;
	}

	/**
	 * Given a DOM node, return the closest ReactDOMComponent or
	 * ReactDOMTextComponent instance ancestor.
	 */
	function getClosestInstanceFromNode(node) {
	  if (node[internalInstanceKey]) {
	    return node[internalInstanceKey];
	  }

	  // Walk up the tree until we find an ancestor whose instance we have cached.
	  var parents = [];
	  while (!node[internalInstanceKey]) {
	    parents.push(node);
	    if (node.parentNode) {
	      node = node.parentNode;
	    } else {
	      // Top of the tree. This node must not be part of a React tree (or is
	      // unmounted, potentially).
	      return null;
	    }
	  }

	  var closest;
	  var inst;
	  for (; node && (inst = node[internalInstanceKey]); node = parents.pop()) {
	    closest = inst;
	    if (parents.length) {
	      precacheChildNodes(inst, node);
	    }
	  }

	  return closest;
	}

	/**
	 * Given a DOM node, return the ReactDOMComponent or ReactDOMTextComponent
	 * instance, or null if the node was not rendered by this React.
	 */
	function getInstanceFromNode(node) {
	  var inst = getClosestInstanceFromNode(node);
	  if (inst != null && inst._hostNode === node) {
	    return inst;
	  } else {
	    return null;
	  }
	}

	/**
	 * Given a ReactDOMComponent or ReactDOMTextComponent, return the corresponding
	 * DOM node.
	 */
	function getNodeFromInstance(inst) {
	  // Without this first invariant, passing a non-DOM-component triggers the next
	  // invariant for a missing parent, which is super confusing.
	  !(inst._hostNode !== undefined) ?  false ? invariant(false, 'getNodeFromInstance: Invalid argument.') : _prodInvariant('33') : void 0;

	  if (inst._hostNode) {
	    return inst._hostNode;
	  }

	  // Walk up the tree until we find an ancestor whose DOM node we have cached.
	  var parents = [];
	  while (!inst._hostNode) {
	    parents.push(inst);
	    !inst._hostParent ?  false ? invariant(false, 'React DOM tree root should always have a node reference.') : _prodInvariant('34') : void 0;
	    inst = inst._hostParent;
	  }

	  // Now parents contains each ancestor that does *not* have a cached native
	  // node, and `inst` is the deepest ancestor that does.
	  for (; parents.length; inst = parents.pop()) {
	    precacheChildNodes(inst, inst._hostNode);
	  }

	  return inst._hostNode;
	}

	var ReactDOMComponentTree = {
	  getClosestInstanceFromNode: getClosestInstanceFromNode,
	  getInstanceFromNode: getInstanceFromNode,
	  getNodeFromInstance: getNodeFromInstance,
	  precacheChildNodes: precacheChildNodes,
	  precacheNode: precacheNode,
	  uncacheNode: uncacheNode
	};

	module.exports = ReactDOMComponentTree;

/***/ },
/* 6 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	module.exports = __webpack_require__(147);


/***/ },
/* 7 */
/***/ function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);

	/**
	 * Simple, lightweight module assisting with the detection and context of
	 * Worker. Helps avoid circular dependencies and allows code to reason about
	 * whether or not they are in a Worker, even if they never include the main
	 * `ReactWorker` dependency.
	 */
	var ExecutionEnvironment = {

	  canUseDOM: canUseDOM,

	  canUseWorkers: typeof Worker !== 'undefined',

	  canUseEventListeners: canUseDOM && !!(window.addEventListener || window.attachEvent),

	  canUseViewport: canUseDOM && !!window.screen,

	  isInWorker: !canUseDOM // For now, this is true - might change in the future.

	};

	module.exports = ExecutionEnvironment;

/***/ },
/* 8 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2016-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactInstrumentation
	 */

	'use strict';

	var debugTool = null;

	if (false) {
	  var ReactDebugTool = require('./ReactDebugTool');
	  debugTool = ReactDebugTool;
	}

	module.exports = { debugTool: debugTool };

/***/ },
/* 9 */
/***/ function(module, exports) {

	"use strict";

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 *
	 */

	function makeEmptyFunction(arg) {
	  return function () {
	    return arg;
	  };
	}

	/**
	 * This function accepts and discards inputs; it has no side effects. This is
	 * primarily useful idiomatically for overridable function endpoints which
	 * always need to be callable, since JS lacks a null-call idiom ala Cocoa.
	 */
	var emptyFunction = function emptyFunction() {};

	emptyFunction.thatReturns = makeEmptyFunction;
	emptyFunction.thatReturnsFalse = makeEmptyFunction(false);
	emptyFunction.thatReturnsTrue = makeEmptyFunction(true);
	emptyFunction.thatReturnsNull = makeEmptyFunction(null);
	emptyFunction.thatReturnsThis = function () {
	  return this;
	};
	emptyFunction.thatReturnsArgument = function (arg) {
	  return arg;
	};

	module.exports = emptyFunction;

/***/ },
/* 10 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2014-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactElement
	 */

	'use strict';

	var _assign = __webpack_require__(4);

	var ReactCurrentOwner = __webpack_require__(16);

	var warning = __webpack_require__(3);
	var canDefineProperty = __webpack_require__(88);
	var hasOwnProperty = Object.prototype.hasOwnProperty;

	// The Symbol used to tag the ReactElement type. If there is no native Symbol
	// nor polyfill, then a plain number is used for performance.
	var REACT_ELEMENT_TYPE = typeof Symbol === 'function' && Symbol['for'] && Symbol['for']('react.element') || 0xeac7;

	var RESERVED_PROPS = {
	  key: true,
	  ref: true,
	  __self: true,
	  __source: true
	};

	var specialPropKeyWarningShown, specialPropRefWarningShown;

	function hasValidRef(config) {
	  if (false) {
	    if (hasOwnProperty.call(config, 'ref')) {
	      var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;
	      if (getter && getter.isReactWarning) {
	        return false;
	      }
	    }
	  }
	  return config.ref !== undefined;
	}

	function hasValidKey(config) {
	  if (false) {
	    if (hasOwnProperty.call(config, 'key')) {
	      var getter = Object.getOwnPropertyDescriptor(config, 'key').get;
	      if (getter && getter.isReactWarning) {
	        return false;
	      }
	    }
	  }
	  return config.key !== undefined;
	}

	/**
	 * Factory method to create a new React element. This no longer adheres to
	 * the class pattern, so do not use new to call it. Also, no instanceof check
	 * will work. Instead test $$typeof field against Symbol.for('react.element') to check
	 * if something is a React Element.
	 *
	 * @param {*} type
	 * @param {*} key
	 * @param {string|object} ref
	 * @param {*} self A *temporary* helper to detect places where `this` is
	 * different from the `owner` when React.createElement is called, so that we
	 * can warn. We want to get rid of owner and replace string `ref`s with arrow
	 * functions, and as long as `this` and owner are the same, there will be no
	 * change in behavior.
	 * @param {*} source An annotation object (added by a transpiler or otherwise)
	 * indicating filename, line number, and/or other information.
	 * @param {*} owner
	 * @param {*} props
	 * @internal
	 */
	var ReactElement = function (type, key, ref, self, source, owner, props) {
	  var element = {
	    // This tag allow us to uniquely identify this as a React Element
	    $$typeof: REACT_ELEMENT_TYPE,

	    // Built-in properties that belong on the element
	    type: type,
	    key: key,
	    ref: ref,
	    props: props,

	    // Record the component responsible for creating this element.
	    _owner: owner
	  };

	  if (false) {
	    // The validation flag is currently mutative. We put it on
	    // an external backing store so that we can freeze the whole object.
	    // This can be replaced with a WeakMap once they are implemented in
	    // commonly used development environments.
	    element._store = {};
	    var shadowChildren = Array.isArray(props.children) ? props.children.slice(0) : props.children;

	    // To make comparing ReactElements easier for testing purposes, we make
	    // the validation flag non-enumerable (where possible, which should
	    // include every environment we run tests in), so the test framework
	    // ignores it.
	    if (canDefineProperty) {
	      Object.defineProperty(element._store, 'validated', {
	        configurable: false,
	        enumerable: false,
	        writable: true,
	        value: false
	      });
	      // self and source are DEV only properties.
	      Object.defineProperty(element, '_self', {
	        configurable: false,
	        enumerable: false,
	        writable: false,
	        value: self
	      });
	      Object.defineProperty(element, '_shadowChildren', {
	        configurable: false,
	        enumerable: false,
	        writable: false,
	        value: shadowChildren
	      });
	      // Two elements created in two different places should be considered
	      // equal for testing purposes and therefore we hide it from enumeration.
	      Object.defineProperty(element, '_source', {
	        configurable: false,
	        enumerable: false,
	        writable: false,
	        value: source
	      });
	    } else {
	      element._store.validated = false;
	      element._self = self;
	      element._shadowChildren = shadowChildren;
	      element._source = source;
	    }
	    if (Object.freeze) {
	      Object.freeze(element.props);
	      Object.freeze(element);
	    }
	  }

	  return element;
	};

	/**
	 * Create and return a new ReactElement of the given type.
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.createelement
	 */
	ReactElement.createElement = function (type, config, children) {
	  var propName;

	  // Reserved names are extracted
	  var props = {};

	  var key = null;
	  var ref = null;
	  var self = null;
	  var source = null;

	  if (config != null) {
	    if (false) {
	      process.env.NODE_ENV !== 'production' ? warning(
	      /* eslint-disable no-proto */
	      config.__proto__ == null || config.__proto__ === Object.prototype,
	      /* eslint-enable no-proto */
	      'React.createElement(...): Expected props argument to be a plain object. ' + 'Properties defined in its prototype chain will be ignored.') : void 0;
	    }

	    if (hasValidRef(config)) {
	      ref = config.ref;
	    }
	    if (hasValidKey(config)) {
	      key = '' + config.key;
	    }

	    self = config.__self === undefined ? null : config.__self;
	    source = config.__source === undefined ? null : config.__source;
	    // Remaining properties are added to a new props object
	    for (propName in config) {
	      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
	        props[propName] = config[propName];
	      }
	    }
	  }

	  // Children can be more than one argument, and those are transferred onto
	  // the newly allocated props object.
	  var childrenLength = arguments.length - 2;
	  if (childrenLength === 1) {
	    props.children = children;
	  } else if (childrenLength > 1) {
	    var childArray = Array(childrenLength);
	    for (var i = 0; i < childrenLength; i++) {
	      childArray[i] = arguments[i + 2];
	    }
	    props.children = childArray;
	  }

	  // Resolve default props
	  if (type && type.defaultProps) {
	    var defaultProps = type.defaultProps;
	    for (propName in defaultProps) {
	      if (props[propName] === undefined) {
	        props[propName] = defaultProps[propName];
	      }
	    }
	  }
	  if (false) {
	    var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;

	    // Create dummy `key` and `ref` property to `props` to warn users against its use
	    var warnAboutAccessingKey = function () {
	      if (!specialPropKeyWarningShown) {
	        specialPropKeyWarningShown = true;
	        process.env.NODE_ENV !== 'production' ? warning(false, '%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://fb.me/react-special-props)', displayName) : void 0;
	      }
	      return undefined;
	    };
	    warnAboutAccessingKey.isReactWarning = true;

	    var warnAboutAccessingRef = function () {
	      if (!specialPropRefWarningShown) {
	        specialPropRefWarningShown = true;
	        process.env.NODE_ENV !== 'production' ? warning(false, '%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://fb.me/react-special-props)', displayName) : void 0;
	      }
	      return undefined;
	    };
	    warnAboutAccessingRef.isReactWarning = true;

	    if (typeof props.$$typeof === 'undefined' || props.$$typeof !== REACT_ELEMENT_TYPE) {
	      if (!props.hasOwnProperty('key')) {
	        Object.defineProperty(props, 'key', {
	          get: warnAboutAccessingKey,
	          configurable: true
	        });
	      }
	      if (!props.hasOwnProperty('ref')) {
	        Object.defineProperty(props, 'ref', {
	          get: warnAboutAccessingRef,
	          configurable: true
	        });
	      }
	    }
	  }
	  return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);
	};

	/**
	 * Return a function that produces ReactElements of a given type.
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.createfactory
	 */
	ReactElement.createFactory = function (type) {
	  var factory = ReactElement.createElement.bind(null, type);
	  // Expose the type on the factory and the prototype so that it can be
	  // easily accessed on elements. E.g. `<Foo />.type === Foo`.
	  // This should not be named `constructor` since this may not be the function
	  // that created the element, and it may not even be a constructor.
	  // Legacy hook TODO: Warn if this is accessed
	  factory.type = type;
	  return factory;
	};

	ReactElement.cloneAndReplaceKey = function (oldElement, newKey) {
	  var newElement = ReactElement(oldElement.type, newKey, oldElement.ref, oldElement._self, oldElement._source, oldElement._owner, oldElement.props);

	  return newElement;
	};

	/**
	 * Clone and return a new ReactElement using element as the starting point.
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.cloneelement
	 */
	ReactElement.cloneElement = function (element, config, children) {
	  var propName;

	  // Original props are copied
	  var props = _assign({}, element.props);

	  // Reserved names are extracted
	  var key = element.key;
	  var ref = element.ref;
	  // Self is preserved since the owner is preserved.
	  var self = element._self;
	  // Source is preserved since cloneElement is unlikely to be targeted by a
	  // transpiler, and the original source is probably a better indicator of the
	  // true owner.
	  var source = element._source;

	  // Owner will be preserved, unless ref is overridden
	  var owner = element._owner;

	  if (config != null) {
	    if (false) {
	      process.env.NODE_ENV !== 'production' ? warning(
	      /* eslint-disable no-proto */
	      config.__proto__ == null || config.__proto__ === Object.prototype,
	      /* eslint-enable no-proto */
	      'React.cloneElement(...): Expected props argument to be a plain object. ' + 'Properties defined in its prototype chain will be ignored.') : void 0;
	    }

	    if (hasValidRef(config)) {
	      // Silently steal the ref from the parent.
	      ref = config.ref;
	      owner = ReactCurrentOwner.current;
	    }
	    if (hasValidKey(config)) {
	      key = '' + config.key;
	    }

	    // Remaining properties override existing props
	    var defaultProps;
	    if (element.type && element.type.defaultProps) {
	      defaultProps = element.type.defaultProps;
	    }
	    for (propName in config) {
	      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
	        if (config[propName] === undefined && defaultProps !== undefined) {
	          // Resolve default props
	          props[propName] = defaultProps[propName];
	        } else {
	          props[propName] = config[propName];
	        }
	      }
	    }
	  }

	  // Children can be more than one argument, and those are transferred onto
	  // the newly allocated props object.
	  var childrenLength = arguments.length - 2;
	  if (childrenLength === 1) {
	    props.children = children;
	  } else if (childrenLength > 1) {
	    var childArray = Array(childrenLength);
	    for (var i = 0; i < childrenLength; i++) {
	      childArray[i] = arguments[i + 2];
	    }
	    props.children = childArray;
	  }

	  return ReactElement(element.type, key, ref, self, source, owner, props);
	};

	/**
	 * Verifies the object is a ReactElement.
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.isvalidelement
	 * @param {?object} object
	 * @return {boolean} True if `object` is a valid component.
	 * @final
	 */
	ReactElement.isValidElement = function (object) {
	  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
	};

	ReactElement.REACT_ELEMENT_TYPE = REACT_ELEMENT_TYPE;

	module.exports = ReactElement;

/***/ },
/* 11 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactUpdates
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(2),
	    _assign = __webpack_require__(4);

	var CallbackQueue = __webpack_require__(70);
	var PooledClass = __webpack_require__(15);
	var ReactFeatureFlags = __webpack_require__(78);
	var ReactReconciler = __webpack_require__(19);
	var Transaction = __webpack_require__(25);

	var invariant = __webpack_require__(1);

	var dirtyComponents = [];
	var updateBatchNumber = 0;
	var asapCallbackQueue = CallbackQueue.getPooled();
	var asapEnqueued = false;

	var batchingStrategy = null;

	function ensureInjected() {
	  !(ReactUpdates.ReactReconcileTransaction && batchingStrategy) ?  false ? invariant(false, 'ReactUpdates: must inject a reconcile transaction class and batching strategy') : _prodInvariant('123') : void 0;
	}

	var NESTED_UPDATES = {
	  initialize: function () {
	    this.dirtyComponentsLength = dirtyComponents.length;
	  },
	  close: function () {
	    if (this.dirtyComponentsLength !== dirtyComponents.length) {
	      // Additional updates were enqueued by componentDidUpdate handlers or
	      // similar; before our own UPDATE_QUEUEING wrapper closes, we want to run
	      // these new updates so that if A's componentDidUpdate calls setState on
	      // B, B will update before the callback A's updater provided when calling
	      // setState.
	      dirtyComponents.splice(0, this.dirtyComponentsLength);
	      flushBatchedUpdates();
	    } else {
	      dirtyComponents.length = 0;
	    }
	  }
	};

	var UPDATE_QUEUEING = {
	  initialize: function () {
	    this.callbackQueue.reset();
	  },
	  close: function () {
	    this.callbackQueue.notifyAll();
	  }
	};

	var TRANSACTION_WRAPPERS = [NESTED_UPDATES, UPDATE_QUEUEING];

	function ReactUpdatesFlushTransaction() {
	  this.reinitializeTransaction();
	  this.dirtyComponentsLength = null;
	  this.callbackQueue = CallbackQueue.getPooled();
	  this.reconcileTransaction = ReactUpdates.ReactReconcileTransaction.getPooled(
	  /* useCreateElement */true);
	}

	_assign(ReactUpdatesFlushTransaction.prototype, Transaction.Mixin, {
	  getTransactionWrappers: function () {
	    return TRANSACTION_WRAPPERS;
	  },

	  destructor: function () {
	    this.dirtyComponentsLength = null;
	    CallbackQueue.release(this.callbackQueue);
	    this.callbackQueue = null;
	    ReactUpdates.ReactReconcileTransaction.release(this.reconcileTransaction);
	    this.reconcileTransaction = null;
	  },

	  perform: function (method, scope, a) {
	    // Essentially calls `this.reconcileTransaction.perform(method, scope, a)`
	    // with this transaction's wrappers around it.
	    return Transaction.Mixin.perform.call(this, this.reconcileTransaction.perform, this.reconcileTransaction, method, scope, a);
	  }
	});

	PooledClass.addPoolingTo(ReactUpdatesFlushTransaction);

	function batchedUpdates(callback, a, b, c, d, e) {
	  ensureInjected();
	  batchingStrategy.batchedUpdates(callback, a, b, c, d, e);
	}

	/**
	 * Array comparator for ReactComponents by mount ordering.
	 *
	 * @param {ReactComponent} c1 first component you're comparing
	 * @param {ReactComponent} c2 second component you're comparing
	 * @return {number} Return value usable by Array.prototype.sort().
	 */
	function mountOrderComparator(c1, c2) {
	  return c1._mountOrder - c2._mountOrder;
	}

	function runBatchedUpdates(transaction) {
	  var len = transaction.dirtyComponentsLength;
	  !(len === dirtyComponents.length) ?  false ? invariant(false, 'Expected flush transaction\'s stored dirty-components length (%s) to match dirty-components array length (%s).', len, dirtyComponents.length) : _prodInvariant('124', len, dirtyComponents.length) : void 0;

	  // Since reconciling a component higher in the owner hierarchy usually (not
	  // always -- see shouldComponentUpdate()) will reconcile children, reconcile
	  // them before their children by sorting the array.
	  dirtyComponents.sort(mountOrderComparator);

	  // Any updates enqueued while reconciling must be performed after this entire
	  // batch. Otherwise, if dirtyComponents is [A, B] where A has children B and
	  // C, B could update twice in a single batch if C's render enqueues an update
	  // to B (since B would have already updated, we should skip it, and the only
	  // way we can know to do so is by checking the batch counter).
	  updateBatchNumber++;

	  for (var i = 0; i < len; i++) {
	    // If a component is unmounted before pending changes apply, it will still
	    // be here, but we assume that it has cleared its _pendingCallbacks and
	    // that performUpdateIfNecessary is a noop.
	    var component = dirtyComponents[i];

	    // If performUpdateIfNecessary happens to enqueue any new updates, we
	    // shouldn't execute the callbacks until the next render happens, so
	    // stash the callbacks first
	    var callbacks = component._pendingCallbacks;
	    component._pendingCallbacks = null;

	    var markerName;
	    if (ReactFeatureFlags.logTopLevelRenders) {
	      var namedComponent = component;
	      // Duck type TopLevelWrapper. This is probably always true.
	      if (component._currentElement.props === component._renderedComponent._currentElement) {
	        namedComponent = component._renderedComponent;
	      }
	      markerName = 'React update: ' + namedComponent.getName();
	      console.time(markerName);
	    }

	    ReactReconciler.performUpdateIfNecessary(component, transaction.reconcileTransaction, updateBatchNumber);

	    if (markerName) {
	      console.timeEnd(markerName);
	    }

	    if (callbacks) {
	      for (var j = 0; j < callbacks.length; j++) {
	        transaction.callbackQueue.enqueue(callbacks[j], component.getPublicInstance());
	      }
	    }
	  }
	}

	var flushBatchedUpdates = function () {
	  // ReactUpdatesFlushTransaction's wrappers will clear the dirtyComponents
	  // array and perform any updates enqueued by mount-ready handlers (i.e.,
	  // componentDidUpdate) but we need to check here too in order to catch
	  // updates enqueued by setState callbacks and asap calls.
	  while (dirtyComponents.length || asapEnqueued) {
	    if (dirtyComponents.length) {
	      var transaction = ReactUpdatesFlushTransaction.getPooled();
	      transaction.perform(runBatchedUpdates, null, transaction);
	      ReactUpdatesFlushTransaction.release(transaction);
	    }

	    if (asapEnqueued) {
	      asapEnqueued = false;
	      var queue = asapCallbackQueue;
	      asapCallbackQueue = CallbackQueue.getPooled();
	      queue.notifyAll();
	      CallbackQueue.release(queue);
	    }
	  }
	};

	/**
	 * Mark a component as needing a rerender, adding an optional callback to a
	 * list of functions which will be executed once the rerender occurs.
	 */
	function enqueueUpdate(component) {
	  ensureInjected();

	  // Various parts of our code (such as ReactCompositeComponent's
	  // _renderValidatedComponent) assume that calls to render aren't nested;
	  // verify that that's the case. (This is called by each top-level update
	  // function, like setState, forceUpdate, etc.; creation and
	  // destruction of top-level components is guarded in ReactMount.)

	  if (!batchingStrategy.isBatchingUpdates) {
	    batchingStrategy.batchedUpdates(enqueueUpdate, component);
	    return;
	  }

	  dirtyComponents.push(component);
	  if (component._updateBatchNumber == null) {
	    component._updateBatchNumber = updateBatchNumber + 1;
	  }
	}

	/**
	 * Enqueue a callback to be run at the end of the current batching cycle. Throws
	 * if no updates are currently being performed.
	 */
	function asap(callback, context) {
	  !batchingStrategy.isBatchingUpdates ?  false ? invariant(false, 'ReactUpdates.asap: Can\'t enqueue an asap callback in a context whereupdates are not being batched.') : _prodInvariant('125') : void 0;
	  asapCallbackQueue.enqueue(callback, context);
	  asapEnqueued = true;
	}

	var ReactUpdatesInjection = {
	  injectReconcileTransaction: function (ReconcileTransaction) {
	    !ReconcileTransaction ?  false ? invariant(false, 'ReactUpdates: must provide a reconcile transaction class') : _prodInvariant('126') : void 0;
	    ReactUpdates.ReactReconcileTransaction = ReconcileTransaction;
	  },

	  injectBatchingStrategy: function (_batchingStrategy) {
	    !_batchingStrategy ?  false ? invariant(false, 'ReactUpdates: must provide a batching strategy') : _prodInvariant('127') : void 0;
	    !(typeof _batchingStrategy.batchedUpdates === 'function') ?  false ? invariant(false, 'ReactUpdates: must provide a batchedUpdates() function') : _prodInvariant('128') : void 0;
	    !(typeof _batchingStrategy.isBatchingUpdates === 'boolean') ?  false ? invariant(false, 'ReactUpdates: must provide an isBatchingUpdates boolean attribute') : _prodInvariant('129') : void 0;
	    batchingStrategy = _batchingStrategy;
	  }
	};

	var ReactUpdates = {
	  /**
	   * React references `ReactReconcileTransaction` using this property in order
	   * to allow dependency injection.
	   *
	   * @internal
	   */
	  ReactReconcileTransaction: null,

	  batchedUpdates: batchedUpdates,
	  enqueueUpdate: enqueueUpdate,
	  flushBatchedUpdates: flushBatchedUpdates,
	  injection: ReactUpdatesInjection,
	  asap: asap
	};

	module.exports = ReactUpdates;

/***/ },
/* 12 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule EventConstants
	 */

	'use strict';

	var keyMirror = __webpack_require__(26);

	var PropagationPhases = keyMirror({ bubbled: null, captured: null });

	/**
	 * Types of raw signals from the browser caught at the top level.
	 */
	var topLevelTypes = keyMirror({
	  topAbort: null,
	  topAnimationEnd: null,
	  topAnimationIteration: null,
	  topAnimationStart: null,
	  topBlur: null,
	  topCanPlay: null,
	  topCanPlayThrough: null,
	  topChange: null,
	  topClick: null,
	  topCompositionEnd: null,
	  topCompositionStart: null,
	  topCompositionUpdate: null,
	  topContextMenu: null,
	  topCopy: null,
	  topCut: null,
	  topDoubleClick: null,
	  topDrag: null,
	  topDragEnd: null,
	  topDragEnter: null,
	  topDragExit: null,
	  topDragLeave: null,
	  topDragOver: null,
	  topDragStart: null,
	  topDrop: null,
	  topDurationChange: null,
	  topEmptied: null,
	  topEncrypted: null,
	  topEnded: null,
	  topError: null,
	  topFocus: null,
	  topInput: null,
	  topInvalid: null,
	  topKeyDown: null,
	  topKeyPress: null,
	  topKeyUp: null,
	  topLoad: null,
	  topLoadedData: null,
	  topLoadedMetadata: null,
	  topLoadStart: null,
	  topMouseDown: null,
	  topMouseMove: null,
	  topMouseOut: null,
	  topMouseOver: null,
	  topMouseUp: null,
	  topPaste: null,
	  topPause: null,
	  topPlay: null,
	  topPlaying: null,
	  topProgress: null,
	  topRateChange: null,
	  topReset: null,
	  topScroll: null,
	  topSeeked: null,
	  topSeeking: null,
	  topSelectionChange: null,
	  topStalled: null,
	  topSubmit: null,
	  topSuspend: null,
	  topTextInput: null,
	  topTimeUpdate: null,
	  topTouchCancel: null,
	  topTouchEnd: null,
	  topTouchMove: null,
	  topTouchStart: null,
	  topTransitionEnd: null,
	  topVolumeChange: null,
	  topWaiting: null,
	  topWheel: null
	});

	var EventConstants = {
	  topLevelTypes: topLevelTypes,
	  PropagationPhases: PropagationPhases
	};

	module.exports = EventConstants;

/***/ },
/* 13 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticEvent
	 */

	'use strict';

	var _assign = __webpack_require__(4);

	var PooledClass = __webpack_require__(15);

	var emptyFunction = __webpack_require__(9);
	var warning = __webpack_require__(3);

	var didWarnForAddedNewProperty = false;
	var isProxySupported = typeof Proxy === 'function';

	var shouldBeReleasedProperties = ['dispatchConfig', '_targetInst', 'nativeEvent', 'isDefaultPrevented', 'isPropagationStopped', '_dispatchListeners', '_dispatchInstances'];

	/**
	 * @interface Event
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var EventInterface = {
	  type: null,
	  target: null,
	  // currentTarget is set when dispatching; no use in copying it here
	  currentTarget: emptyFunction.thatReturnsNull,
	  eventPhase: null,
	  bubbles: null,
	  cancelable: null,
	  timeStamp: function (event) {
	    return event.timeStamp || Date.now();
	  },
	  defaultPrevented: null,
	  isTrusted: null
	};

	/**
	 * Synthetic events are dispatched by event plugins, typically in response to a
	 * top-level event delegation handler.
	 *
	 * These systems should generally use pooling to reduce the frequency of garbage
	 * collection. The system should check `isPersistent` to determine whether the
	 * event should be released into the pool after being dispatched. Users that
	 * need a persisted event should invoke `persist`.
	 *
	 * Synthetic events (and subclasses) implement the DOM Level 3 Events API by
	 * normalizing browser quirks. Subclasses do not necessarily have to implement a
	 * DOM interface; custom application-specific events can also subclass this.
	 *
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {*} targetInst Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @param {DOMEventTarget} nativeEventTarget Target node.
	 */
	function SyntheticEvent(dispatchConfig, targetInst, nativeEvent, nativeEventTarget) {
	  if (false) {
	    // these have a getter/setter for warnings
	    delete this.nativeEvent;
	    delete this.preventDefault;
	    delete this.stopPropagation;
	  }

	  this.dispatchConfig = dispatchConfig;
	  this._targetInst = targetInst;
	  this.nativeEvent = nativeEvent;

	  var Interface = this.constructor.Interface;
	  for (var propName in Interface) {
	    if (!Interface.hasOwnProperty(propName)) {
	      continue;
	    }
	    if (false) {
	      delete this[propName]; // this has a getter/setter for warnings
	    }
	    var normalize = Interface[propName];
	    if (normalize) {
	      this[propName] = normalize(nativeEvent);
	    } else {
	      if (propName === 'target') {
	        this.target = nativeEventTarget;
	      } else {
	        this[propName] = nativeEvent[propName];
	      }
	    }
	  }

	  var defaultPrevented = nativeEvent.defaultPrevented != null ? nativeEvent.defaultPrevented : nativeEvent.returnValue === false;
	  if (defaultPrevented) {
	    this.isDefaultPrevented = emptyFunction.thatReturnsTrue;
	  } else {
	    this.isDefaultPrevented = emptyFunction.thatReturnsFalse;
	  }
	  this.isPropagationStopped = emptyFunction.thatReturnsFalse;
	  return this;
	}

	_assign(SyntheticEvent.prototype, {

	  preventDefault: function () {
	    this.defaultPrevented = true;
	    var event = this.nativeEvent;
	    if (!event) {
	      return;
	    }

	    if (event.preventDefault) {
	      event.preventDefault();
	    } else {
	      event.returnValue = false;
	    }
	    this.isDefaultPrevented = emptyFunction.thatReturnsTrue;
	  },

	  stopPropagation: function () {
	    var event = this.nativeEvent;
	    if (!event) {
	      return;
	    }

	    if (event.stopPropagation) {
	      event.stopPropagation();
	    } else {
	      event.cancelBubble = true;
	    }
	    this.isPropagationStopped = emptyFunction.thatReturnsTrue;
	  },

	  /**
	   * We release all dispatched `SyntheticEvent`s after each event loop, adding
	   * them back into the pool. This allows a way to hold onto a reference that
	   * won't be added back into the pool.
	   */
	  persist: function () {
	    this.isPersistent = emptyFunction.thatReturnsTrue;
	  },

	  /**
	   * Checks if this event should be released back into the pool.
	   *
	   * @return {boolean} True if this should not be released, false otherwise.
	   */
	  isPersistent: emptyFunction.thatReturnsFalse,

	  /**
	   * `PooledClass` looks for `destructor` on each instance it releases.
	   */
	  destructor: function () {
	    var Interface = this.constructor.Interface;
	    for (var propName in Interface) {
	      if (false) {
	        Object.defineProperty(this, propName, getPooledWarningPropertyDefinition(propName, Interface[propName]));
	      } else {
	        this[propName] = null;
	      }
	    }
	    for (var i = 0; i < shouldBeReleasedProperties.length; i++) {
	      this[shouldBeReleasedProperties[i]] = null;
	    }
	    if (false) {
	      Object.defineProperty(this, 'nativeEvent', getPooledWarningPropertyDefinition('nativeEvent', null));
	      Object.defineProperty(this, 'preventDefault', getPooledWarningPropertyDefinition('preventDefault', emptyFunction));
	      Object.defineProperty(this, 'stopPropagation', getPooledWarningPropertyDefinition('stopPropagation', emptyFunction));
	    }
	  }

	});

	SyntheticEvent.Interface = EventInterface;

	if (false) {
	  if (isProxySupported) {
	    /*eslint-disable no-func-assign */
	    SyntheticEvent = new Proxy(SyntheticEvent, {
	      construct: function (target, args) {
	        return this.apply(target, Object.create(target.prototype), args);
	      },
	      apply: function (constructor, that, args) {
	        return new Proxy(constructor.apply(that, args), {
	          set: function (target, prop, value) {
	            if (prop !== 'isPersistent' && !target.constructor.Interface.hasOwnProperty(prop) && shouldBeReleasedProperties.indexOf(prop) === -1) {
	              process.env.NODE_ENV !== 'production' ? warning(didWarnForAddedNewProperty || target.isPersistent(), 'This synthetic event is reused for performance reasons. If you\'re ' + 'seeing this, you\'re adding a new property in the synthetic event object. ' + 'The property is never released. See ' + 'https://fb.me/react-event-pooling for more information.') : void 0;
	              didWarnForAddedNewProperty = true;
	            }
	            target[prop] = value;
	            return true;
	          }
	        });
	      }
	    });
	    /*eslint-enable no-func-assign */
	  }
	}
	/**
	 * Helper to reduce boilerplate when creating subclasses.
	 *
	 * @param {function} Class
	 * @param {?object} Interface
	 */
	SyntheticEvent.augmentClass = function (Class, Interface) {
	  var Super = this;

	  var E = function () {};
	  E.prototype = Super.prototype;
	  var prototype = new E();

	  _assign(prototype, Class.prototype);
	  Class.prototype = prototype;
	  Class.prototype.constructor = Class;

	  Class.Interface = _assign({}, Super.Interface, Interface);
	  Class.augmentClass = Super.augmentClass;

	  PooledClass.addPoolingTo(Class, PooledClass.fourArgumentPooler);
	};

	PooledClass.addPoolingTo(SyntheticEvent, PooledClass.fourArgumentPooler);

	module.exports = SyntheticEvent;

	/**
	  * Helper to nullify syntheticEvent instance properties when destructing
	  *
	  * @param {object} SyntheticEvent
	  * @param {String} propName
	  * @return {object} defineProperty object
	  */
	function getPooledWarningPropertyDefinition(propName, getVal) {
	  var isFunction = typeof getVal === 'function';
	  return {
	    configurable: true,
	    set: set,
	    get: get
	  };

	  function set(val) {
	    var action = isFunction ? 'setting the method' : 'setting the property';
	    warn(action, 'This is effectively a no-op');
	    return val;
	  }

	  function get() {
	    var action = isFunction ? 'accessing the method' : 'accessing the property';
	    var result = isFunction ? 'This is a no-op function' : 'This is set to null';
	    warn(action, result);
	    return getVal;
	  }

	  function warn(action, result) {
	    var warningCondition = false;
	     false ? warning(warningCondition, 'This synthetic event is reused for performance reasons. If you\'re seeing this, ' + 'you\'re %s `%s` on a released/nullified synthetic event. %s. ' + 'If you must keep the original synthetic event around, use event.persist(). ' + 'See https://fb.me/react-event-pooling for more information.', action, propName, result) : void 0;
	  }
	}

/***/ },
/* 14 */
/***/ function(module, exports) {

	"use strict";

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	/**
	 * Allows extraction of a minified key. var's the build system minify keys
	 * without losing the ability to dynamically use key strings as values
	 * themselves. Pass in an object with a single key/val pair and it will return
	 * you the string key of that single record. Suppose you want to grab the
	 * value for a key 'className' inside of an object. Key/val minification may
	 * have aliased that key to be 'xa12'. keyOf({className: null}) will return
	 * 'xa12' in that case. Resolve keys you want to use once at startup time, then
	 * reuse those resolutions.
	 */
	var keyOf = function keyOf(oneKeyObj) {
	  var key;
	  for (key in oneKeyObj) {
	    if (!oneKeyObj.hasOwnProperty(key)) {
	      continue;
	    }
	    return key;
	  }
	  return null;
	};

	module.exports = keyOf;

/***/ },
/* 15 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule PooledClass
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(2);

	var invariant = __webpack_require__(1);

	/**
	 * Static poolers. Several custom versions for each potential number of
	 * arguments. A completely generic pooler is easy to implement, but would
	 * require accessing the `arguments` object. In each of these, `this` refers to
	 * the Class itself, not an instance. If any others are needed, simply add them
	 * here, or in their own files.
	 */
	var oneArgumentPooler = function (copyFieldsFrom) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, copyFieldsFrom);
	    return instance;
	  } else {
	    return new Klass(copyFieldsFrom);
	  }
	};

	var twoArgumentPooler = function (a1, a2) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, a1, a2);
	    return instance;
	  } else {
	    return new Klass(a1, a2);
	  }
	};

	var threeArgumentPooler = function (a1, a2, a3) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, a1, a2, a3);
	    return instance;
	  } else {
	    return new Klass(a1, a2, a3);
	  }
	};

	var fourArgumentPooler = function (a1, a2, a3, a4) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, a1, a2, a3, a4);
	    return instance;
	  } else {
	    return new Klass(a1, a2, a3, a4);
	  }
	};

	var fiveArgumentPooler = function (a1, a2, a3, a4, a5) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, a1, a2, a3, a4, a5);
	    return instance;
	  } else {
	    return new Klass(a1, a2, a3, a4, a5);
	  }
	};

	var standardReleaser = function (instance) {
	  var Klass = this;
	  !(instance instanceof Klass) ?  false ? invariant(false, 'Trying to release an instance into a pool of a different type.') : _prodInvariant('25') : void 0;
	  instance.destructor();
	  if (Klass.instancePool.length < Klass.poolSize) {
	    Klass.instancePool.push(instance);
	  }
	};

	var DEFAULT_POOL_SIZE = 10;
	var DEFAULT_POOLER = oneArgumentPooler;

	/**
	 * Augments `CopyConstructor` to be a poolable class, augmenting only the class
	 * itself (statically) not adding any prototypical fields. Any CopyConstructor
	 * you give this may have a `poolSize` property, and will look for a
	 * prototypical `destructor` on instances.
	 *
	 * @param {Function} CopyConstructor Constructor that can be used to reset.
	 * @param {Function} pooler Customizable pooler.
	 */
	var addPoolingTo = function (CopyConstructor, pooler) {
	  var NewKlass = CopyConstructor;
	  NewKlass.instancePool = [];
	  NewKlass.getPooled = pooler || DEFAULT_POOLER;
	  if (!NewKlass.poolSize) {
	    NewKlass.poolSize = DEFAULT_POOL_SIZE;
	  }
	  NewKlass.release = standardReleaser;
	  return NewKlass;
	};

	var PooledClass = {
	  addPoolingTo: addPoolingTo,
	  oneArgumentPooler: oneArgumentPooler,
	  twoArgumentPooler: twoArgumentPooler,
	  threeArgumentPooler: threeArgumentPooler,
	  fourArgumentPooler: fourArgumentPooler,
	  fiveArgumentPooler: fiveArgumentPooler
	};

	module.exports = PooledClass;

/***/ },
/* 16 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactCurrentOwner
	 */

	'use strict';

	/**
	 * Keeps track of the current owner.
	 *
	 * The current owner is the component who should own any components that are
	 * currently being constructed.
	 */

	var ReactCurrentOwner = {

	  /**
	   * @internal
	   * @type {ReactComponent}
	   */
	  current: null

	};

	module.exports = ReactCurrentOwner;

/***/ },
/* 17 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2015-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule DOMLazyTree
	 */

	'use strict';

	var DOMNamespaces = __webpack_require__(37);
	var setInnerHTML = __webpack_require__(31);

	var createMicrosoftUnsafeLocalFunction = __webpack_require__(51);
	var setTextContent = __webpack_require__(95);

	var ELEMENT_NODE_TYPE = 1;
	var DOCUMENT_FRAGMENT_NODE_TYPE = 11;

	/**
	 * In IE (8-11) and Edge, appending nodes with no children is dramatically
	 * faster than appending a full subtree, so we essentially queue up the
	 * .appendChild calls here and apply them so each node is added to its parent
	 * before any children are added.
	 *
	 * In other browsers, doing so is slower or neutral compared to the other order
	 * (in Firefox, twice as slow) so we only do this inversion in IE.
	 *
	 * See https://github.com/spicyj/innerhtml-vs-createelement-vs-clonenode.
	 */
	var enableLazy = typeof document !== 'undefined' && typeof document.documentMode === 'number' || typeof navigator !== 'undefined' && typeof navigator.userAgent === 'string' && /\bEdge\/\d/.test(navigator.userAgent);

	function insertTreeChildren(tree) {
	  if (!enableLazy) {
	    return;
	  }
	  var node = tree.node;
	  var children = tree.children;
	  if (children.length) {
	    for (var i = 0; i < children.length; i++) {
	      insertTreeBefore(node, children[i], null);
	    }
	  } else if (tree.html != null) {
	    setInnerHTML(node, tree.html);
	  } else if (tree.text != null) {
	    setTextContent(node, tree.text);
	  }
	}

	var insertTreeBefore = createMicrosoftUnsafeLocalFunction(function (parentNode, tree, referenceNode) {
	  // DocumentFragments aren't actually part of the DOM after insertion so
	  // appending children won't update the DOM. We need to ensure the fragment
	  // is properly populated first, breaking out of our lazy approach for just
	  // this level. Also, some <object> plugins (like Flash Player) will read
	  // <param> nodes immediately upon insertion into the DOM, so <object>
	  // must also be populated prior to insertion into the DOM.
	  if (tree.node.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE || tree.node.nodeType === ELEMENT_NODE_TYPE && tree.node.nodeName.toLowerCase() === 'object' && (tree.node.namespaceURI == null || tree.node.namespaceURI === DOMNamespaces.html)) {
	    insertTreeChildren(tree);
	    parentNode.insertBefore(tree.node, referenceNode);
	  } else {
	    parentNode.insertBefore(tree.node, referenceNode);
	    insertTreeChildren(tree);
	  }
	});

	function replaceChildWithTree(oldNode, newTree) {
	  oldNode.parentNode.replaceChild(newTree.node, oldNode);
	  insertTreeChildren(newTree);
	}

	function queueChild(parentTree, childTree) {
	  if (enableLazy) {
	    parentTree.children.push(childTree);
	  } else {
	    parentTree.node.appendChild(childTree.node);
	  }
	}

	function queueHTML(tree, html) {
	  if (enableLazy) {
	    tree.html = html;
	  } else {
	    setInnerHTML(tree.node, html);
	  }
	}

	function queueText(tree, text) {
	  if (enableLazy) {
	    tree.text = text;
	  } else {
	    setTextContent(tree.node, text);
	  }
	}

	function toString() {
	  return this.node.nodeName;
	}

	function DOMLazyTree(node) {
	  return {
	    node: node,
	    children: [],
	    html: null,
	    text: null,
	    toString: toString
	  };
	}

	DOMLazyTree.insertTreeBefore = insertTreeBefore;
	DOMLazyTree.replaceChildWithTree = replaceChildWithTree;
	DOMLazyTree.queueChild = queueChild;
	DOMLazyTree.queueHTML = queueHTML;
	DOMLazyTree.queueText = queueText;

	module.exports = DOMLazyTree;

/***/ },
/* 18 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule DOMProperty
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(2);

	var invariant = __webpack_require__(1);

	function checkMask(value, bitmask) {
	  return (value & bitmask) === bitmask;
	}

	var DOMPropertyInjection = {
	  /**
	   * Mapping from normalized, camelcased property names to a configuration that
	   * specifies how the associated DOM property should be accessed or rendered.
	   */
	  MUST_USE_PROPERTY: 0x1,
	  HAS_BOOLEAN_VALUE: 0x4,
	  HAS_NUMERIC_VALUE: 0x8,
	  HAS_POSITIVE_NUMERIC_VALUE: 0x10 | 0x8,
	  HAS_OVERLOADED_BOOLEAN_VALUE: 0x20,

	  /**
	   * Inject some specialized knowledge about the DOM. This takes a config object
	   * with the following properties:
	   *
	   * isCustomAttribute: function that given an attribute name will return true
	   * if it can be inserted into the DOM verbatim. Useful for data-* or aria-*
	   * attributes where it's impossible to enumerate all of the possible
	   * attribute names,
	   *
	   * Properties: object mapping DOM property name to one of the
	   * DOMPropertyInjection constants or null. If your attribute isn't in here,
	   * it won't get written to the DOM.
	   *
	   * DOMAttributeNames: object mapping React attribute name to the DOM
	   * attribute name. Attribute names not specified use the **lowercase**
	   * normalized name.
	   *
	   * DOMAttributeNamespaces: object mapping React attribute name to the DOM
	   * attribute namespace URL. (Attribute names not specified use no namespace.)
	   *
	   * DOMPropertyNames: similar to DOMAttributeNames but for DOM properties.
	   * Property names not specified use the normalized name.
	   *
	   * DOMMutationMethods: Properties that require special mutation methods. If
	   * `value` is undefined, the mutation method should unset the property.
	   *
	   * @param {object} domPropertyConfig the config as described above.
	   */
	  injectDOMPropertyConfig: function (domPropertyConfig) {
	    var Injection = DOMPropertyInjection;
	    var Properties = domPropertyConfig.Properties || {};
	    var DOMAttributeNamespaces = domPropertyConfig.DOMAttributeNamespaces || {};
	    var DOMAttributeNames = domPropertyConfig.DOMAttributeNames || {};
	    var DOMPropertyNames = domPropertyConfig.DOMPropertyNames || {};
	    var DOMMutationMethods = domPropertyConfig.DOMMutationMethods || {};

	    if (domPropertyConfig.isCustomAttribute) {
	      DOMProperty._isCustomAttributeFunctions.push(domPropertyConfig.isCustomAttribute);
	    }

	    for (var propName in Properties) {
	      !!DOMProperty.properties.hasOwnProperty(propName) ?  false ? invariant(false, 'injectDOMPropertyConfig(...): You\'re trying to inject DOM property \'%s\' which has already been injected. You may be accidentally injecting the same DOM property config twice, or you may be injecting two configs that have conflicting property names.', propName) : _prodInvariant('48', propName) : void 0;

	      var lowerCased = propName.toLowerCase();
	      var propConfig = Properties[propName];

	      var propertyInfo = {
	        attributeName: lowerCased,
	        attributeNamespace: null,
	        propertyName: propName,
	        mutationMethod: null,

	        mustUseProperty: checkMask(propConfig, Injection.MUST_USE_PROPERTY),
	        hasBooleanValue: checkMask(propConfig, Injection.HAS_BOOLEAN_VALUE),
	        hasNumericValue: checkMask(propConfig, Injection.HAS_NUMERIC_VALUE),
	        hasPositiveNumericValue: checkMask(propConfig, Injection.HAS_POSITIVE_NUMERIC_VALUE),
	        hasOverloadedBooleanValue: checkMask(propConfig, Injection.HAS_OVERLOADED_BOOLEAN_VALUE)
	      };
	      !(propertyInfo.hasBooleanValue + propertyInfo.hasNumericValue + propertyInfo.hasOverloadedBooleanValue <= 1) ?  false ? invariant(false, 'DOMProperty: Value can be one of boolean, overloaded boolean, or numeric value, but not a combination: %s', propName) : _prodInvariant('50', propName) : void 0;

	      if (false) {
	        DOMProperty.getPossibleStandardName[lowerCased] = propName;
	      }

	      if (DOMAttributeNames.hasOwnProperty(propName)) {
	        var attributeName = DOMAttributeNames[propName];
	        propertyInfo.attributeName = attributeName;
	        if (false) {
	          DOMProperty.getPossibleStandardName[attributeName] = propName;
	        }
	      }

	      if (DOMAttributeNamespaces.hasOwnProperty(propName)) {
	        propertyInfo.attributeNamespace = DOMAttributeNamespaces[propName];
	      }

	      if (DOMPropertyNames.hasOwnProperty(propName)) {
	        propertyInfo.propertyName = DOMPropertyNames[propName];
	      }

	      if (DOMMutationMethods.hasOwnProperty(propName)) {
	        propertyInfo.mutationMethod = DOMMutationMethods[propName];
	      }

	      DOMProperty.properties[propName] = propertyInfo;
	    }
	  }
	};

	/* eslint-disable max-len */
	var ATTRIBUTE_NAME_START_CHAR = ':A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD';
	/* eslint-enable max-len */

	/**
	 * DOMProperty exports lookup objects that can be used like functions:
	 *
	 *   > DOMProperty.isValid['id']
	 *   true
	 *   > DOMProperty.isValid['foobar']
	 *   undefined
	 *
	 * Although this may be confusing, it performs better in general.
	 *
	 * @see http://jsperf.com/key-exists
	 * @see http://jsperf.com/key-missing
	 */
	var DOMProperty = {

	  ID_ATTRIBUTE_NAME: 'data-reactid',
	  ROOT_ATTRIBUTE_NAME: 'data-reactroot',

	  ATTRIBUTE_NAME_START_CHAR: ATTRIBUTE_NAME_START_CHAR,
	  ATTRIBUTE_NAME_CHAR: ATTRIBUTE_NAME_START_CHAR + '\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040',

	  /**
	   * Map from property "standard name" to an object with info about how to set
	   * the property in the DOM. Each object contains:
	   *
	   * attributeName:
	   *   Used when rendering markup or with `*Attribute()`.
	   * attributeNamespace
	   * propertyName:
	   *   Used on DOM node instances. (This includes properties that mutate due to
	   *   external factors.)
	   * mutationMethod:
	   *   If non-null, used instead of the property or `setAttribute()` after
	   *   initial render.
	   * mustUseProperty:
	   *   Whether the property must be accessed and mutated as an object property.
	   * hasBooleanValue:
	   *   Whether the property should be removed when set to a falsey value.
	   * hasNumericValue:
	   *   Whether the property must be numeric or parse as a numeric and should be
	   *   removed when set to a falsey value.
	   * hasPositiveNumericValue:
	   *   Whether the property must be positive numeric or parse as a positive
	   *   numeric and should be removed when set to a falsey value.
	   * hasOverloadedBooleanValue:
	   *   Whether the property can be used as a flag as well as with a value.
	   *   Removed when strictly equal to false; present without a value when
	   *   strictly equal to true; present with a value otherwise.
	   */
	  properties: {},

	  /**
	   * Mapping from lowercase property names to the properly cased version, used
	   * to warn in the case of missing properties. Available only in __DEV__.
	   * @type {Object}
	   */
	  getPossibleStandardName:  false ? {} : null,

	  /**
	   * All of the isCustomAttribute() functions that have been injected.
	   */
	  _isCustomAttributeFunctions: [],

	  /**
	   * Checks whether a property name is a custom attribute.
	   * @method
	   */
	  isCustomAttribute: function (attributeName) {
	    for (var i = 0; i < DOMProperty._isCustomAttributeFunctions.length; i++) {
	      var isCustomAttributeFn = DOMProperty._isCustomAttributeFunctions[i];
	      if (isCustomAttributeFn(attributeName)) {
	        return true;
	      }
	    }
	    return false;
	  },

	  injection: DOMPropertyInjection
	};

	module.exports = DOMProperty;

/***/ },
/* 19 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactReconciler
	 */

	'use strict';

	var ReactRef = __webpack_require__(175);
	var ReactInstrumentation = __webpack_require__(8);

	var warning = __webpack_require__(3);

	/**
	 * Helper to call ReactRef.attachRefs with this composite component, split out
	 * to avoid allocations in the transaction mount-ready queue.
	 */
	function attachRefs() {
	  ReactRef.attachRefs(this, this._currentElement);
	}

	var ReactReconciler = {

	  /**
	   * Initializes the component, renders markup, and registers event listeners.
	   *
	   * @param {ReactComponent} internalInstance
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @param {?object} the containing host component instance
	   * @param {?object} info about the host container
	   * @return {?string} Rendered markup to be inserted into the DOM.
	   * @final
	   * @internal
	   */
	  mountComponent: function (internalInstance, transaction, hostParent, hostContainerInfo, context) {
	    if (false) {
	      if (internalInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onBeforeMountComponent(internalInstance._debugID, internalInstance._currentElement);
	        ReactInstrumentation.debugTool.onBeginReconcilerTimer(internalInstance._debugID, 'mountComponent');
	      }
	    }
	    var markup = internalInstance.mountComponent(transaction, hostParent, hostContainerInfo, context);
	    if (internalInstance._currentElement && internalInstance._currentElement.ref != null) {
	      transaction.getReactMountReady().enqueue(attachRefs, internalInstance);
	    }
	    if (false) {
	      if (internalInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onEndReconcilerTimer(internalInstance._debugID, 'mountComponent');
	        ReactInstrumentation.debugTool.onMountComponent(internalInstance._debugID);
	      }
	    }
	    return markup;
	  },

	  /**
	   * Returns a value that can be passed to
	   * ReactComponentEnvironment.replaceNodeWithMarkup.
	   */
	  getHostNode: function (internalInstance) {
	    return internalInstance.getHostNode();
	  },

	  /**
	   * Releases any resources allocated by `mountComponent`.
	   *
	   * @final
	   * @internal
	   */
	  unmountComponent: function (internalInstance, safely) {
	    if (false) {
	      if (internalInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onBeginReconcilerTimer(internalInstance._debugID, 'unmountComponent');
	      }
	    }
	    ReactRef.detachRefs(internalInstance, internalInstance._currentElement);
	    internalInstance.unmountComponent(safely);
	    if (false) {
	      if (internalInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onEndReconcilerTimer(internalInstance._debugID, 'unmountComponent');
	        ReactInstrumentation.debugTool.onUnmountComponent(internalInstance._debugID);
	      }
	    }
	  },

	  /**
	   * Update a component using a new element.
	   *
	   * @param {ReactComponent} internalInstance
	   * @param {ReactElement} nextElement
	   * @param {ReactReconcileTransaction} transaction
	   * @param {object} context
	   * @internal
	   */
	  receiveComponent: function (internalInstance, nextElement, transaction, context) {
	    var prevElement = internalInstance._currentElement;

	    if (nextElement === prevElement && context === internalInstance._context) {
	      // Since elements are immutable after the owner is rendered,
	      // we can do a cheap identity compare here to determine if this is a
	      // superfluous reconcile. It's possible for state to be mutable but such
	      // change should trigger an update of the owner which would recreate
	      // the element. We explicitly check for the existence of an owner since
	      // it's possible for an element created outside a composite to be
	      // deeply mutated and reused.

	      // TODO: Bailing out early is just a perf optimization right?
	      // TODO: Removing the return statement should affect correctness?
	      return;
	    }

	    if (false) {
	      if (internalInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onBeforeUpdateComponent(internalInstance._debugID, nextElement);
	        ReactInstrumentation.debugTool.onBeginReconcilerTimer(internalInstance._debugID, 'receiveComponent');
	      }
	    }

	    var refsChanged = ReactRef.shouldUpdateRefs(prevElement, nextElement);

	    if (refsChanged) {
	      ReactRef.detachRefs(internalInstance, prevElement);
	    }

	    internalInstance.receiveComponent(nextElement, transaction, context);

	    if (refsChanged && internalInstance._currentElement && internalInstance._currentElement.ref != null) {
	      transaction.getReactMountReady().enqueue(attachRefs, internalInstance);
	    }

	    if (false) {
	      if (internalInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onEndReconcilerTimer(internalInstance._debugID, 'receiveComponent');
	        ReactInstrumentation.debugTool.onUpdateComponent(internalInstance._debugID);
	      }
	    }
	  },

	  /**
	   * Flush any dirty changes in a component.
	   *
	   * @param {ReactComponent} internalInstance
	   * @param {ReactReconcileTransaction} transaction
	   * @internal
	   */
	  performUpdateIfNecessary: function (internalInstance, transaction, updateBatchNumber) {
	    if (internalInstance._updateBatchNumber !== updateBatchNumber) {
	      // The component's enqueued batch number should always be the current
	      // batch or the following one.
	       false ? warning(internalInstance._updateBatchNumber == null || internalInstance._updateBatchNumber === updateBatchNumber + 1, 'performUpdateIfNecessary: Unexpected batch number (current %s, ' + 'pending %s)', updateBatchNumber, internalInstance._updateBatchNumber) : void 0;
	      return;
	    }
	    if (false) {
	      if (internalInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onBeginReconcilerTimer(internalInstance._debugID, 'performUpdateIfNecessary');
	        ReactInstrumentation.debugTool.onBeforeUpdateComponent(internalInstance._debugID, internalInstance._currentElement);
	      }
	    }
	    internalInstance.performUpdateIfNecessary(transaction);
	    if (false) {
	      if (internalInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onEndReconcilerTimer(internalInstance._debugID, 'performUpdateIfNecessary');
	        ReactInstrumentation.debugTool.onUpdateComponent(internalInstance._debugID);
	      }
	    }
	  }

	};

	module.exports = ReactReconciler;

/***/ },
/* 20 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var emptyObject = {};

	if (false) {
	  Object.freeze(emptyObject);
	}

	module.exports = emptyObject;

/***/ },
/* 21 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule EventPluginHub
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(2);

	var EventPluginRegistry = __webpack_require__(38);
	var EventPluginUtils = __webpack_require__(39);
	var ReactErrorUtils = __webpack_require__(45);

	var accumulateInto = __webpack_require__(87);
	var forEachAccumulated = __webpack_require__(89);
	var invariant = __webpack_require__(1);

	/**
	 * Internal store for event listeners
	 */
	var listenerBank = {};

	/**
	 * Internal queue of events that have accumulated their dispatches and are
	 * waiting to have their dispatches executed.
	 */
	var eventQueue = null;

	/**
	 * Dispatches an event and releases it back into the pool, unless persistent.
	 *
	 * @param {?object} event Synthetic event to be dispatched.
	 * @param {boolean} simulated If the event is simulated (changes exn behavior)
	 * @private
	 */
	var executeDispatchesAndRelease = function (event, simulated) {
	  if (event) {
	    EventPluginUtils.executeDispatchesInOrder(event, simulated);

	    if (!event.isPersistent()) {
	      event.constructor.release(event);
	    }
	  }
	};
	var executeDispatchesAndReleaseSimulated = function (e) {
	  return executeDispatchesAndRelease(e, true);
	};
	var executeDispatchesAndReleaseTopLevel = function (e) {
	  return executeDispatchesAndRelease(e, false);
	};

	var getDictionaryKey = function (inst) {
	  return '.' + inst._rootNodeID;
	};

	/**
	 * This is a unified interface for event plugins to be installed and configured.
	 *
	 * Event plugins can implement the following properties:
	 *
	 *   `extractEvents` {function(string, DOMEventTarget, string, object): *}
	 *     Required. When a top-level event is fired, this method is expected to
	 *     extract synthetic events that will in turn be queued and dispatched.
	 *
	 *   `eventTypes` {object}
	 *     Optional, plugins that fire events must publish a mapping of registration
	 *     names that are used to register listeners. Values of this mapping must
	 *     be objects that contain `registrationName` or `phasedRegistrationNames`.
	 *
	 *   `executeDispatch` {function(object, function, string)}
	 *     Optional, allows plugins to override how an event gets dispatched. By
	 *     default, the listener is simply invoked.
	 *
	 * Each plugin that is injected into `EventsPluginHub` is immediately operable.
	 *
	 * @public
	 */
	var EventPluginHub = {

	  /**
	   * Methods for injecting dependencies.
	   */
	  injection: {

	    /**
	     * @param {array} InjectedEventPluginOrder
	     * @public
	     */
	    injectEventPluginOrder: EventPluginRegistry.injectEventPluginOrder,

	    /**
	     * @param {object} injectedNamesToPlugins Map from names to plugin modules.
	     */
	    injectEventPluginsByName: EventPluginRegistry.injectEventPluginsByName

	  },

	  /**
	   * Stores `listener` at `listenerBank[registrationName][key]`. Is idempotent.
	   *
	   * @param {object} inst The instance, which is the source of events.
	   * @param {string} registrationName Name of listener (e.g. `onClick`).
	   * @param {function} listener The callback to store.
	   */
	  putListener: function (inst, registrationName, listener) {
	    !(typeof listener === 'function') ?  false ? invariant(false, 'Expected %s listener to be a function, instead got type %s', registrationName, typeof listener) : _prodInvariant('94', registrationName, typeof listener) : void 0;

	    var key = getDictionaryKey(inst);
	    var bankForRegistrationName = listenerBank[registrationName] || (listenerBank[registrationName] = {});
	    bankForRegistrationName[key] = listener;

	    var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];
	    if (PluginModule && PluginModule.didPutListener) {
	      PluginModule.didPutListener(inst, registrationName, listener);
	    }
	  },

	  /**
	   * @param {object} inst The instance, which is the source of events.
	   * @param {string} registrationName Name of listener (e.g. `onClick`).
	   * @return {?function} The stored callback.
	   */
	  getListener: function (inst, registrationName) {
	    var bankForRegistrationName = listenerBank[registrationName];
	    var key = getDictionaryKey(inst);
	    return bankForRegistrationName && bankForRegistrationName[key];
	  },

	  /**
	   * Deletes a listener from the registration bank.
	   *
	   * @param {object} inst The instance, which is the source of events.
	   * @param {string} registrationName Name of listener (e.g. `onClick`).
	   */
	  deleteListener: function (inst, registrationName) {
	    var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];
	    if (PluginModule && PluginModule.willDeleteListener) {
	      PluginModule.willDeleteListener(inst, registrationName);
	    }

	    var bankForRegistrationName = listenerBank[registrationName];
	    // TODO: This should never be null -- when is it?
	    if (bankForRegistrationName) {
	      var key = getDictionaryKey(inst);
	      delete bankForRegistrationName[key];
	    }
	  },

	  /**
	   * Deletes all listeners for the DOM element with the supplied ID.
	   *
	   * @param {object} inst The instance, which is the source of events.
	   */
	  deleteAllListeners: function (inst) {
	    var key = getDictionaryKey(inst);
	    for (var registrationName in listenerBank) {
	      if (!listenerBank.hasOwnProperty(registrationName)) {
	        continue;
	      }

	      if (!listenerBank[registrationName][key]) {
	        continue;
	      }

	      var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];
	      if (PluginModule && PluginModule.willDeleteListener) {
	        PluginModule.willDeleteListener(inst, registrationName);
	      }

	      delete listenerBank[registrationName][key];
	    }
	  },

	  /**
	   * Allows registered plugins an opportunity to extract events from top-level
	   * native browser events.
	   *
	   * @return {*} An accumulation of synthetic events.
	   * @internal
	   */
	  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	    var events;
	    var plugins = EventPluginRegistry.plugins;
	    for (var i = 0; i < plugins.length; i++) {
	      // Not every plugin in the ordering may be loaded at runtime.
	      var possiblePlugin = plugins[i];
	      if (possiblePlugin) {
	        var extractedEvents = possiblePlugin.extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget);
	        if (extractedEvents) {
	          events = accumulateInto(events, extractedEvents);
	        }
	      }
	    }
	    return events;
	  },

	  /**
	   * Enqueues a synthetic event that should be dispatched when
	   * `processEventQueue` is invoked.
	   *
	   * @param {*} events An accumulation of synthetic events.
	   * @internal
	   */
	  enqueueEvents: function (events) {
	    if (events) {
	      eventQueue = accumulateInto(eventQueue, events);
	    }
	  },

	  /**
	   * Dispatches all synthetic events on the event queue.
	   *
	   * @internal
	   */
	  processEventQueue: function (simulated) {
	    // Set `eventQueue` to null before processing it so that we can tell if more
	    // events get enqueued while processing.
	    var processingEventQueue = eventQueue;
	    eventQueue = null;
	    if (simulated) {
	      forEachAccumulated(processingEventQueue, executeDispatchesAndReleaseSimulated);
	    } else {
	      forEachAccumulated(processingEventQueue, executeDispatchesAndReleaseTopLevel);
	    }
	    !!eventQueue ?  false ? invariant(false, 'processEventQueue(): Additional events were enqueued while processing an event queue. Support for this has not yet been implemented.') : _prodInvariant('95') : void 0;
	    // This would be a good time to rethrow if any of the event handlers threw.
	    ReactErrorUtils.rethrowCaughtError();
	  },

	  /**
	   * These are needed for tests only. Do not use!
	   */
	  __purge: function () {
	    listenerBank = {};
	  },

	  __getListenerBank: function () {
	    return listenerBank;
	  }

	};

	module.exports = EventPluginHub;

/***/ },
/* 22 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule EventPropagators
	 */

	'use strict';

	var EventConstants = __webpack_require__(12);
	var EventPluginHub = __webpack_require__(21);
	var EventPluginUtils = __webpack_require__(39);

	var accumulateInto = __webpack_require__(87);
	var forEachAccumulated = __webpack_require__(89);
	var warning = __webpack_require__(3);

	var PropagationPhases = EventConstants.PropagationPhases;
	var getListener = EventPluginHub.getListener;

	/**
	 * Some event types have a notion of different registration names for different
	 * "phases" of propagation. This finds listeners by a given phase.
	 */
	function listenerAtPhase(inst, event, propagationPhase) {
	  var registrationName = event.dispatchConfig.phasedRegistrationNames[propagationPhase];
	  return getListener(inst, registrationName);
	}

	/**
	 * Tags a `SyntheticEvent` with dispatched listeners. Creating this function
	 * here, allows us to not have to bind or create functions for each event.
	 * Mutating the event's members allows us to not have to create a wrapping
	 * "dispatch" object that pairs the event with the listener.
	 */
	function accumulateDirectionalDispatches(inst, upwards, event) {
	  if (false) {
	    process.env.NODE_ENV !== 'production' ? warning(inst, 'Dispatching inst must not be null') : void 0;
	  }
	  var phase = upwards ? PropagationPhases.bubbled : PropagationPhases.captured;
	  var listener = listenerAtPhase(inst, event, phase);
	  if (listener) {
	    event._dispatchListeners = accumulateInto(event._dispatchListeners, listener);
	    event._dispatchInstances = accumulateInto(event._dispatchInstances, inst);
	  }
	}

	/**
	 * Collect dispatches (must be entirely collected before dispatching - see unit
	 * tests). Lazily allocate the array to conserve memory.  We must loop through
	 * each event and perform the traversal for each one. We cannot perform a
	 * single traversal for the entire collection of events because each event may
	 * have a different target.
	 */
	function accumulateTwoPhaseDispatchesSingle(event) {
	  if (event && event.dispatchConfig.phasedRegistrationNames) {
	    EventPluginUtils.traverseTwoPhase(event._targetInst, accumulateDirectionalDispatches, event);
	  }
	}

	/**
	 * Same as `accumulateTwoPhaseDispatchesSingle`, but skips over the targetID.
	 */
	function accumulateTwoPhaseDispatchesSingleSkipTarget(event) {
	  if (event && event.dispatchConfig.phasedRegistrationNames) {
	    var targetInst = event._targetInst;
	    var parentInst = targetInst ? EventPluginUtils.getParentInstance(targetInst) : null;
	    EventPluginUtils.traverseTwoPhase(parentInst, accumulateDirectionalDispatches, event);
	  }
	}

	/**
	 * Accumulates without regard to direction, does not look for phased
	 * registration names. Same as `accumulateDirectDispatchesSingle` but without
	 * requiring that the `dispatchMarker` be the same as the dispatched ID.
	 */
	function accumulateDispatches(inst, ignoredDirection, event) {
	  if (event && event.dispatchConfig.registrationName) {
	    var registrationName = event.dispatchConfig.registrationName;
	    var listener = getListener(inst, registrationName);
	    if (listener) {
	      event._dispatchListeners = accumulateInto(event._dispatchListeners, listener);
	      event._dispatchInstances = accumulateInto(event._dispatchInstances, inst);
	    }
	  }
	}

	/**
	 * Accumulates dispatches on an `SyntheticEvent`, but only for the
	 * `dispatchMarker`.
	 * @param {SyntheticEvent} event
	 */
	function accumulateDirectDispatchesSingle(event) {
	  if (event && event.dispatchConfig.registrationName) {
	    accumulateDispatches(event._targetInst, null, event);
	  }
	}

	function accumulateTwoPhaseDispatches(events) {
	  forEachAccumulated(events, accumulateTwoPhaseDispatchesSingle);
	}

	function accumulateTwoPhaseDispatchesSkipTarget(events) {
	  forEachAccumulated(events, accumulateTwoPhaseDispatchesSingleSkipTarget);
	}

	function accumulateEnterLeaveDispatches(leave, enter, from, to) {
	  EventPluginUtils.traverseEnterLeave(from, to, accumulateDispatches, leave, enter);
	}

	function accumulateDirectDispatches(events) {
	  forEachAccumulated(events, accumulateDirectDispatchesSingle);
	}

	/**
	 * A small set of propagation patterns, each of which will accept a small amount
	 * of information, and generate a set of "dispatch ready event objects" - which
	 * are sets of events that have already been annotated with a set of dispatched
	 * listener functions/ids. The API is designed this way to discourage these
	 * propagation strategies from actually executing the dispatches, since we
	 * always want to collect the entire set of dispatches before executing event a
	 * single one.
	 *
	 * @constructor EventPropagators
	 */
	var EventPropagators = {
	  accumulateTwoPhaseDispatches: accumulateTwoPhaseDispatches,
	  accumulateTwoPhaseDispatchesSkipTarget: accumulateTwoPhaseDispatchesSkipTarget,
	  accumulateDirectDispatches: accumulateDirectDispatches,
	  accumulateEnterLeaveDispatches: accumulateEnterLeaveDispatches
	};

	module.exports = EventPropagators;

/***/ },
/* 23 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactInstanceMap
	 */

	'use strict';

	/**
	 * `ReactInstanceMap` maintains a mapping from a public facing stateful
	 * instance (key) and the internal representation (value). This allows public
	 * methods to accept the user facing instance as an argument and map them back
	 * to internal methods.
	 */

	// TODO: Replace this with ES6: var ReactInstanceMap = new Map();

	var ReactInstanceMap = {

	  /**
	   * This API should be called `delete` but we'd have to make sure to always
	   * transform these to strings for IE support. When this transform is fully
	   * supported we can rename it.
	   */
	  remove: function (key) {
	    key._reactInternalInstance = undefined;
	  },

	  get: function (key) {
	    return key._reactInternalInstance;
	  },

	  has: function (key) {
	    return key._reactInternalInstance !== undefined;
	  },

	  set: function (key, value) {
	    key._reactInternalInstance = value;
	  }

	};

	module.exports = ReactInstanceMap;

/***/ },
/* 24 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticUIEvent
	 */

	'use strict';

	var SyntheticEvent = __webpack_require__(13);

	var getEventTarget = __webpack_require__(54);

	/**
	 * @interface UIEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var UIEventInterface = {
	  view: function (event) {
	    if (event.view) {
	      return event.view;
	    }

	    var target = getEventTarget(event);
	    if (target.window === target) {
	      // target is a window object
	      return target;
	    }

	    var doc = target.ownerDocument;
	    // TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.
	    if (doc) {
	      return doc.defaultView || doc.parentWindow;
	    } else {
	      return window;
	    }
	  },
	  detail: function (event) {
	    return event.detail || 0;
	  }
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticEvent}
	 */
	function SyntheticUIEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}

	SyntheticEvent.augmentClass(SyntheticUIEvent, UIEventInterface);

	module.exports = SyntheticUIEvent;

/***/ },
/* 25 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule Transaction
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(2);

	var invariant = __webpack_require__(1);

	/**
	 * `Transaction` creates a black box that is able to wrap any method such that
	 * certain invariants are maintained before and after the method is invoked
	 * (Even if an exception is thrown while invoking the wrapped method). Whoever
	 * instantiates a transaction can provide enforcers of the invariants at
	 * creation time. The `Transaction` class itself will supply one additional
	 * automatic invariant for you - the invariant that any transaction instance
	 * should not be run while it is already being run. You would typically create a
	 * single instance of a `Transaction` for reuse multiple times, that potentially
	 * is used to wrap several different methods. Wrappers are extremely simple -
	 * they only require implementing two methods.
	 *
	 * <pre>
	 *                       wrappers (injected at creation time)
	 *                                      +        +
	 *                                      |        |
	 *                    +-----------------|--------|--------------+
	 *                    |                 v        |              |
	 *                    |      +---------------+   |              |
	 *                    |   +--|    wrapper1   |---|----+         |
	 *                    |   |  +---------------+   v    |         |
	 *                    |   |          +-------------+  |         |
	 *                    |   |     +----|   wrapper2  |--------+   |
	 *                    |   |     |    +-------------+  |     |   |
	 *                    |   |     |                     |     |   |
	 *                    |   v     v                     v     v   | wrapper
	 *                    | +---+ +---+   +---------+   +---+ +---+ | invariants
	 * perform(anyMethod) | |   | |   |   |         |   |   | |   | | maintained
	 * +----------------->|-|---|-|---|-->|anyMethod|---|---|-|---|-|-------->
	 *                    | |   | |   |   |         |   |   | |   | |
	 *                    | |   | |   |   |         |   |   | |   | |
	 *                    | |   | |   |   |         |   |   | |   | |
	 *                    | +---+ +---+   +---------+   +---+ +---+ |
	 *                    |  initialize                    close    |
	 *                    +-----------------------------------------+
	 * </pre>
	 *
	 * Use cases:
	 * - Preserving the input selection ranges before/after reconciliation.
	 *   Restoring selection even in the event of an unexpected error.
	 * - Deactivating events while rearranging the DOM, preventing blurs/focuses,
	 *   while guaranteeing that afterwards, the event system is reactivated.
	 * - Flushing a queue of collected DOM mutations to the main UI thread after a
	 *   reconciliation takes place in a worker thread.
	 * - Invoking any collected `componentDidUpdate` callbacks after rendering new
	 *   content.
	 * - (Future use case): Wrapping particular flushes of the `ReactWorker` queue
	 *   to preserve the `scrollTop` (an automatic scroll aware DOM).
	 * - (Future use case): Layout calculations before and after DOM updates.
	 *
	 * Transactional plugin API:
	 * - A module that has an `initialize` method that returns any precomputation.
	 * - and a `close` method that accepts the precomputation. `close` is invoked
	 *   when the wrapped process is completed, or has failed.
	 *
	 * @param {Array<TransactionalWrapper>} transactionWrapper Wrapper modules
	 * that implement `initialize` and `close`.
	 * @return {Transaction} Single transaction for reuse in thread.
	 *
	 * @class Transaction
	 */
	var Mixin = {
	  /**
	   * Sets up this instance so that it is prepared for collecting metrics. Does
	   * so such that this setup method may be used on an instance that is already
	   * initialized, in a way that does not consume additional memory upon reuse.
	   * That can be useful if you decide to make your subclass of this mixin a
	   * "PooledClass".
	   */
	  reinitializeTransaction: function () {
	    this.transactionWrappers = this.getTransactionWrappers();
	    if (this.wrapperInitData) {
	      this.wrapperInitData.length = 0;
	    } else {
	      this.wrapperInitData = [];
	    }
	    this._isInTransaction = false;
	  },

	  _isInTransaction: false,

	  /**
	   * @abstract
	   * @return {Array<TransactionWrapper>} Array of transaction wrappers.
	   */
	  getTransactionWrappers: null,

	  isInTransaction: function () {
	    return !!this._isInTransaction;
	  },

	  /**
	   * Executes the function within a safety window. Use this for the top level
	   * methods that result in large amounts of computation/mutations that would
	   * need to be safety checked. The optional arguments helps prevent the need
	   * to bind in many cases.
	   *
	   * @param {function} method Member of scope to call.
	   * @param {Object} scope Scope to invoke from.
	   * @param {Object?=} a Argument to pass to the method.
	   * @param {Object?=} b Argument to pass to the method.
	   * @param {Object?=} c Argument to pass to the method.
	   * @param {Object?=} d Argument to pass to the method.
	   * @param {Object?=} e Argument to pass to the method.
	   * @param {Object?=} f Argument to pass to the method.
	   *
	   * @return {*} Return value from `method`.
	   */
	  perform: function (method, scope, a, b, c, d, e, f) {
	    !!this.isInTransaction() ?  false ? invariant(false, 'Transaction.perform(...): Cannot initialize a transaction when there is already an outstanding transaction.') : _prodInvariant('27') : void 0;
	    var errorThrown;
	    var ret;
	    try {
	      this._isInTransaction = true;
	      // Catching errors makes debugging more difficult, so we start with
	      // errorThrown set to true before setting it to false after calling
	      // close -- if it's still set to true in the finally block, it means
	      // one of these calls threw.
	      errorThrown = true;
	      this.initializeAll(0);
	      ret = method.call(scope, a, b, c, d, e, f);
	      errorThrown = false;
	    } finally {
	      try {
	        if (errorThrown) {
	          // If `method` throws, prefer to show that stack trace over any thrown
	          // by invoking `closeAll`.
	          try {
	            this.closeAll(0);
	          } catch (err) {}
	        } else {
	          // Since `method` didn't throw, we don't want to silence the exception
	          // here.
	          this.closeAll(0);
	        }
	      } finally {
	        this._isInTransaction = false;
	      }
	    }
	    return ret;
	  },

	  initializeAll: function (startIndex) {
	    var transactionWrappers = this.transactionWrappers;
	    for (var i = startIndex; i < transactionWrappers.length; i++) {
	      var wrapper = transactionWrappers[i];
	      try {
	        // Catching errors makes debugging more difficult, so we start with the
	        // OBSERVED_ERROR state before overwriting it with the real return value
	        // of initialize -- if it's still set to OBSERVED_ERROR in the finally
	        // block, it means wrapper.initialize threw.
	        this.wrapperInitData[i] = Transaction.OBSERVED_ERROR;
	        this.wrapperInitData[i] = wrapper.initialize ? wrapper.initialize.call(this) : null;
	      } finally {
	        if (this.wrapperInitData[i] === Transaction.OBSERVED_ERROR) {
	          // The initializer for wrapper i threw an error; initialize the
	          // remaining wrappers but silence any exceptions from them to ensure
	          // that the first error is the one to bubble up.
	          try {
	            this.initializeAll(i + 1);
	          } catch (err) {}
	        }
	      }
	    }
	  },

	  /**
	   * Invokes each of `this.transactionWrappers.close[i]` functions, passing into
	   * them the respective return values of `this.transactionWrappers.init[i]`
	   * (`close`rs that correspond to initializers that failed will not be
	   * invoked).
	   */
	  closeAll: function (startIndex) {
	    !this.isInTransaction() ?  false ? invariant(false, 'Transaction.closeAll(): Cannot close transaction when none are open.') : _prodInvariant('28') : void 0;
	    var transactionWrappers = this.transactionWrappers;
	    for (var i = startIndex; i < transactionWrappers.length; i++) {
	      var wrapper = transactionWrappers[i];
	      var initData = this.wrapperInitData[i];
	      var errorThrown;
	      try {
	        // Catching errors makes debugging more difficult, so we start with
	        // errorThrown set to true before setting it to false after calling
	        // close -- if it's still set to true in the finally block, it means
	        // wrapper.close threw.
	        errorThrown = true;
	        if (initData !== Transaction.OBSERVED_ERROR && wrapper.close) {
	          wrapper.close.call(this, initData);
	        }
	        errorThrown = false;
	      } finally {
	        if (errorThrown) {
	          // The closer for wrapper i threw an error; close the remaining
	          // wrappers but silence any exceptions from them to ensure that the
	          // first error is the one to bubble up.
	          try {
	            this.closeAll(i + 1);
	          } catch (e) {}
	        }
	      }
	    }
	    this.wrapperInitData.length = 0;
	  }
	};

	var Transaction = {

	  Mixin: Mixin,

	  /**
	   * Token to look for to determine if an error occurred.
	   */
	  OBSERVED_ERROR: {}

	};

	module.exports = Transaction;

/***/ },
/* 26 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks static-only
	 */

	'use strict';

	var invariant = __webpack_require__(1);

	/**
	 * Constructs an enumeration with keys equal to their value.
	 *
	 * For example:
	 *
	 *   var COLORS = keyMirror({blue: null, red: null});
	 *   var myColor = COLORS.blue;
	 *   var isColorValid = !!COLORS[myColor];
	 *
	 * The last line could not be performed if the values of the generated enum were
	 * not equal to their keys.
	 *
	 *   Input:  {key1: val1, key2: val2}
	 *   Output: {key1: key1, key2: key2}
	 *
	 * @param {object} obj
	 * @return {object}
	 */
	var keyMirror = function keyMirror(obj) {
	  var ret = {};
	  var key;
	  !(obj instanceof Object && !Array.isArray(obj)) ?  false ? invariant(false, 'keyMirror(...): Argument must be an object.') : invariant(false) : void 0;
	  for (key in obj) {
	    if (!obj.hasOwnProperty(key)) {
	      continue;
	    }
	    ret[key] = key;
	  }
	  return ret;
	};

	module.exports = keyMirror;

/***/ },
/* 27 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule DisabledInputUtils
	 */

	'use strict';

	var disableableMouseListenerNames = {
	  onClick: true,
	  onDoubleClick: true,
	  onMouseDown: true,
	  onMouseMove: true,
	  onMouseUp: true,

	  onClickCapture: true,
	  onDoubleClickCapture: true,
	  onMouseDownCapture: true,
	  onMouseMoveCapture: true,
	  onMouseUpCapture: true
	};

	/**
	 * Implements a host component that does not receive mouse events
	 * when `disabled` is set.
	 */
	var DisabledInputUtils = {
	  getHostProps: function (inst, props) {
	    if (!props.disabled) {
	      return props;
	    }

	    // Copy the props, except the mouse listeners
	    var hostProps = {};
	    for (var key in props) {
	      if (!disableableMouseListenerNames[key] && props.hasOwnProperty(key)) {
	        hostProps[key] = props[key];
	      }
	    }

	    return hostProps;
	  }
	};

	module.exports = DisabledInputUtils;

/***/ },
/* 28 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactBrowserEventEmitter
	 */

	'use strict';

	var _assign = __webpack_require__(4);

	var EventConstants = __webpack_require__(12);
	var EventPluginRegistry = __webpack_require__(38);
	var ReactEventEmitterMixin = __webpack_require__(167);
	var ViewportMetrics = __webpack_require__(86);

	var getVendorPrefixedEventName = __webpack_require__(198);
	var isEventSupported = __webpack_require__(55);

	/**
	 * Summary of `ReactBrowserEventEmitter` event handling:
	 *
	 *  - Top-level delegation is used to trap most native browser events. This
	 *    may only occur in the main thread and is the responsibility of
	 *    ReactEventListener, which is injected and can therefore support pluggable
	 *    event sources. This is the only work that occurs in the main thread.
	 *
	 *  - We normalize and de-duplicate events to account for browser quirks. This
	 *    may be done in the worker thread.
	 *
	 *  - Forward these native events (with the associated top-level type used to
	 *    trap it) to `EventPluginHub`, which in turn will ask plugins if they want
	 *    to extract any synthetic events.
	 *
	 *  - The `EventPluginHub` will then process each event by annotating them with
	 *    "dispatches", a sequence of listeners and IDs that care about that event.
	 *
	 *  - The `EventPluginHub` then dispatches the events.
	 *
	 * Overview of React and the event system:
	 *
	 * +------------+    .
	 * |    DOM     |    .
	 * +------------+    .
	 *       |           .
	 *       v           .
	 * +------------+    .
	 * | ReactEvent |    .
	 * |  Listener  |    .
	 * +------------+    .                         +-----------+
	 *       |           .               +--------+|SimpleEvent|
	 *       |           .               |         |Plugin     |
	 * +-----|------+    .               v         +-----------+
	 * |     |      |    .    +--------------+                    +------------+
	 * |     +-----------.--->|EventPluginHub|                    |    Event   |
	 * |            |    .    |              |     +-----------+  | Propagators|
	 * | ReactEvent |    .    |              |     |TapEvent   |  |------------|
	 * |  Emitter   |    .    |              |<---+|Plugin     |  |other plugin|
	 * |            |    .    |              |     +-----------+  |  utilities |
	 * |     +-----------.--->|              |                    +------------+
	 * |     |      |    .    +--------------+
	 * +-----|------+    .                ^        +-----------+
	 *       |           .                |        |Enter/Leave|
	 *       +           .                +-------+|Plugin     |
	 * +-------------+   .                         +-----------+
	 * | application |   .
	 * |-------------|   .
	 * |             |   .
	 * |             |   .
	 * +-------------+   .
	 *                   .
	 *    React Core     .  General Purpose Event Plugin System
	 */

	var hasEventPageXY;
	var alreadyListeningTo = {};
	var isMonitoringScrollValue = false;
	var reactTopListenersCounter = 0;

	// For events like 'submit' which don't consistently bubble (which we trap at a
	// lower node than `document`), binding at `document` would cause duplicate
	// events so we don't include them here
	var topEventMapping = {
	  topAbort: 'abort',
	  topAnimationEnd: getVendorPrefixedEventName('animationend') || 'animationend',
	  topAnimationIteration: getVendorPrefixedEventName('animationiteration') || 'animationiteration',
	  topAnimationStart: getVendorPrefixedEventName('animationstart') || 'animationstart',
	  topBlur: 'blur',
	  topCanPlay: 'canplay',
	  topCanPlayThrough: 'canplaythrough',
	  topChange: 'change',
	  topClick: 'click',
	  topCompositionEnd: 'compositionend',
	  topCompositionStart: 'compositionstart',
	  topCompositionUpdate: 'compositionupdate',
	  topContextMenu: 'contextmenu',
	  topCopy: 'copy',
	  topCut: 'cut',
	  topDoubleClick: 'dblclick',
	  topDrag: 'drag',
	  topDragEnd: 'dragend',
	  topDragEnter: 'dragenter',
	  topDragExit: 'dragexit',
	  topDragLeave: 'dragleave',
	  topDragOver: 'dragover',
	  topDragStart: 'dragstart',
	  topDrop: 'drop',
	  topDurationChange: 'durationchange',
	  topEmptied: 'emptied',
	  topEncrypted: 'encrypted',
	  topEnded: 'ended',
	  topError: 'error',
	  topFocus: 'focus',
	  topInput: 'input',
	  topKeyDown: 'keydown',
	  topKeyPress: 'keypress',
	  topKeyUp: 'keyup',
	  topLoadedData: 'loadeddata',
	  topLoadedMetadata: 'loadedmetadata',
	  topLoadStart: 'loadstart',
	  topMouseDown: 'mousedown',
	  topMouseMove: 'mousemove',
	  topMouseOut: 'mouseout',
	  topMouseOver: 'mouseover',
	  topMouseUp: 'mouseup',
	  topPaste: 'paste',
	  topPause: 'pause',
	  topPlay: 'play',
	  topPlaying: 'playing',
	  topProgress: 'progress',
	  topRateChange: 'ratechange',
	  topScroll: 'scroll',
	  topSeeked: 'seeked',
	  topSeeking: 'seeking',
	  topSelectionChange: 'selectionchange',
	  topStalled: 'stalled',
	  topSuspend: 'suspend',
	  topTextInput: 'textInput',
	  topTimeUpdate: 'timeupdate',
	  topTouchCancel: 'touchcancel',
	  topTouchEnd: 'touchend',
	  topTouchMove: 'touchmove',
	  topTouchStart: 'touchstart',
	  topTransitionEnd: getVendorPrefixedEventName('transitionend') || 'transitionend',
	  topVolumeChange: 'volumechange',
	  topWaiting: 'waiting',
	  topWheel: 'wheel'
	};

	/**
	 * To ensure no conflicts with other potential React instances on the page
	 */
	var topListenersIDKey = '_reactListenersID' + String(Math.random()).slice(2);

	function getListeningForDocument(mountAt) {
	  // In IE8, `mountAt` is a host object and doesn't have `hasOwnProperty`
	  // directly.
	  if (!Object.prototype.hasOwnProperty.call(mountAt, topListenersIDKey)) {
	    mountAt[topListenersIDKey] = reactTopListenersCounter++;
	    alreadyListeningTo[mountAt[topListenersIDKey]] = {};
	  }
	  return alreadyListeningTo[mountAt[topListenersIDKey]];
	}

	/**
	 * `ReactBrowserEventEmitter` is used to attach top-level event listeners. For
	 * example:
	 *
	 *   EventPluginHub.putListener('myID', 'onClick', myFunction);
	 *
	 * This would allocate a "registration" of `('onClick', myFunction)` on 'myID'.
	 *
	 * @internal
	 */
	var ReactBrowserEventEmitter = _assign({}, ReactEventEmitterMixin, {

	  /**
	   * Injectable event backend
	   */
	  ReactEventListener: null,

	  injection: {
	    /**
	     * @param {object} ReactEventListener
	     */
	    injectReactEventListener: function (ReactEventListener) {
	      ReactEventListener.setHandleTopLevel(ReactBrowserEventEmitter.handleTopLevel);
	      ReactBrowserEventEmitter.ReactEventListener = ReactEventListener;
	    }
	  },

	  /**
	   * Sets whether or not any created callbacks should be enabled.
	   *
	   * @param {boolean} enabled True if callbacks should be enabled.
	   */
	  setEnabled: function (enabled) {
	    if (ReactBrowserEventEmitter.ReactEventListener) {
	      ReactBrowserEventEmitter.ReactEventListener.setEnabled(enabled);
	    }
	  },

	  /**
	   * @return {boolean} True if callbacks are enabled.
	   */
	  isEnabled: function () {
	    return !!(ReactBrowserEventEmitter.ReactEventListener && ReactBrowserEventEmitter.ReactEventListener.isEnabled());
	  },

	  /**
	   * We listen for bubbled touch events on the document object.
	   *
	   * Firefox v8.01 (and possibly others) exhibited strange behavior when
	   * mounting `onmousemove` events at some node that was not the document
	   * element. The symptoms were that if your mouse is not moving over something
	   * contained within that mount point (for example on the background) the
	   * top-level listeners for `onmousemove` won't be called. However, if you
	   * register the `mousemove` on the document object, then it will of course
	   * catch all `mousemove`s. This along with iOS quirks, justifies restricting
	   * top-level listeners to the document object only, at least for these
	   * movement types of events and possibly all events.
	   *
	   * @see http://www.quirksmode.org/blog/archives/2010/09/click_event_del.html
	   *
	   * Also, `keyup`/`keypress`/`keydown` do not bubble to the window on IE, but
	   * they bubble to document.
	   *
	   * @param {string} registrationName Name of listener (e.g. `onClick`).
	   * @param {object} contentDocumentHandle Document which owns the container
	   */
	  listenTo: function (registrationName, contentDocumentHandle) {
	    var mountAt = contentDocumentHandle;
	    var isListening = getListeningForDocument(mountAt);
	    var dependencies = EventPluginRegistry.registrationNameDependencies[registrationName];

	    var topLevelTypes = EventConstants.topLevelTypes;
	    for (var i = 0; i < dependencies.length; i++) {
	      var dependency = dependencies[i];
	      if (!(isListening.hasOwnProperty(dependency) && isListening[dependency])) {
	        if (dependency === topLevelTypes.topWheel) {
	          if (isEventSupported('wheel')) {
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topWheel, 'wheel', mountAt);
	          } else if (isEventSupported('mousewheel')) {
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topWheel, 'mousewheel', mountAt);
	          } else {
	            // Firefox needs to capture a different mouse scroll event.
	            // @see http://www.quirksmode.org/dom/events/tests/scroll.html
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topWheel, 'DOMMouseScroll', mountAt);
	          }
	        } else if (dependency === topLevelTypes.topScroll) {

	          if (isEventSupported('scroll', true)) {
	            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(topLevelTypes.topScroll, 'scroll', mountAt);
	          } else {
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topScroll, 'scroll', ReactBrowserEventEmitter.ReactEventListener.WINDOW_HANDLE);
	          }
	        } else if (dependency === topLevelTypes.topFocus || dependency === topLevelTypes.topBlur) {

	          if (isEventSupported('focus', true)) {
	            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(topLevelTypes.topFocus, 'focus', mountAt);
	            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(topLevelTypes.topBlur, 'blur', mountAt);
	          } else if (isEventSupported('focusin')) {
	            // IE has `focusin` and `focusout` events which bubble.
	            // @see http://www.quirksmode.org/blog/archives/2008/04/delegating_the.html
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topFocus, 'focusin', mountAt);
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topBlur, 'focusout', mountAt);
	          }

	          // to make sure blur and focus event listeners are only attached once
	          isListening[topLevelTypes.topBlur] = true;
	          isListening[topLevelTypes.topFocus] = true;
	        } else if (topEventMapping.hasOwnProperty(dependency)) {
	          ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(dependency, topEventMapping[dependency], mountAt);
	        }

	        isListening[dependency] = true;
	      }
	    }
	  },

	  trapBubbledEvent: function (topLevelType, handlerBaseName, handle) {
	    return ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelType, handlerBaseName, handle);
	  },

	  trapCapturedEvent: function (topLevelType, handlerBaseName, handle) {
	    return ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(topLevelType, handlerBaseName, handle);
	  },

	  /**
	   * Listens to window scroll and resize events. We cache scroll values so that
	   * application code can access them without triggering reflows.
	   *
	   * ViewportMetrics is only used by SyntheticMouse/TouchEvent and only when
	   * pageX/pageY isn't supported (legacy browsers).
	   *
	   * NOTE: Scroll events do not bubble.
	   *
	   * @see http://www.quirksmode.org/dom/events/scroll.html
	   */
	  ensureScrollValueMonitoring: function () {
	    if (hasEventPageXY === undefined) {
	      hasEventPageXY = document.createEvent && 'pageX' in document.createEvent('MouseEvent');
	    }
	    if (!hasEventPageXY && !isMonitoringScrollValue) {
	      var refresh = ViewportMetrics.refreshScrollValues;
	      ReactBrowserEventEmitter.ReactEventListener.monitorScrollValue(refresh);
	      isMonitoringScrollValue = true;
	    }
	  }

	});

	module.exports = ReactBrowserEventEmitter;

/***/ },
/* 29 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticMouseEvent
	 */

	'use strict';

	var SyntheticUIEvent = __webpack_require__(24);
	var ViewportMetrics = __webpack_require__(86);

	var getEventModifierState = __webpack_require__(53);

	/**
	 * @interface MouseEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var MouseEventInterface = {
	  screenX: null,
	  screenY: null,
	  clientX: null,
	  clientY: null,
	  ctrlKey: null,
	  shiftKey: null,
	  altKey: null,
	  metaKey: null,
	  getModifierState: getEventModifierState,
	  button: function (event) {
	    // Webkit, Firefox, IE9+
	    // which:  1 2 3
	    // button: 0 1 2 (standard)
	    var button = event.button;
	    if ('which' in event) {
	      return button;
	    }
	    // IE<9
	    // which:  undefined
	    // button: 0 0 0
	    // button: 1 4 2 (onmouseup)
	    return button === 2 ? 2 : button === 4 ? 1 : 0;
	  },
	  buttons: null,
	  relatedTarget: function (event) {
	    return event.relatedTarget || (event.fromElement === event.srcElement ? event.toElement : event.fromElement);
	  },
	  // "Proprietary" Interface.
	  pageX: function (event) {
	    return 'pageX' in event ? event.pageX : event.clientX + ViewportMetrics.currentScrollLeft;
	  },
	  pageY: function (event) {
	    return 'pageY' in event ? event.pageY : event.clientY + ViewportMetrics.currentScrollTop;
	  }
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticMouseEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}

	SyntheticUIEvent.augmentClass(SyntheticMouseEvent, MouseEventInterface);

	module.exports = SyntheticMouseEvent;

/***/ },
/* 30 */
/***/ function(module, exports) {

	/**
	 * Copyright 2016-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * Based on the escape-html library, which is used under the MIT License below:
	 *
	 * Copyright (c) 2012-2013 TJ Holowaychuk
	 * Copyright (c) 2015 Andreas Lubbe
	 * Copyright (c) 2015 Tiancheng "Timothy" Gu
	 *
	 * Permission is hereby granted, free of charge, to any person obtaining
	 * a copy of this software and associated documentation files (the
	 * 'Software'), to deal in the Software without restriction, including
	 * without limitation the rights to use, copy, modify, merge, publish,
	 * distribute, sublicense, and/or sell copies of the Software, and to
	 * permit persons to whom the Software is furnished to do so, subject to
	 * the following conditions:
	 *
	 * The above copyright notice and this permission notice shall be
	 * included in all copies or substantial portions of the Software.
	 *
	 * THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,
	 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
	 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
	 * IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
	 * CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
	 * TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
	 * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
	 *
	 * @providesModule escapeTextContentForBrowser
	 */

	'use strict';

	// code copied and modified from escape-html
	/**
	 * Module variables.
	 * @private
	 */

	var matchHtmlRegExp = /["'&<>]/;

	/**
	 * Escape special characters in the given string of html.
	 *
	 * @param  {string} string The string to escape for inserting into HTML
	 * @return {string}
	 * @public
	 */

	function escapeHtml(string) {
	  var str = '' + string;
	  var match = matchHtmlRegExp.exec(str);

	  if (!match) {
	    return str;
	  }

	  var escape;
	  var html = '';
	  var index = 0;
	  var lastIndex = 0;

	  for (index = match.index; index < str.length; index++) {
	    switch (str.charCodeAt(index)) {
	      case 34:
	        // "
	        escape = '&quot;';
	        break;
	      case 38:
	        // &
	        escape = '&amp;';
	        break;
	      case 39:
	        // '
	        escape = '&#x27;'; // modified from escape-html; used to be '&#39'
	        break;
	      case 60:
	        // <
	        escape = '&lt;';
	        break;
	      case 62:
	        // >
	        escape = '&gt;';
	        break;
	      default:
	        continue;
	    }

	    if (lastIndex !== index) {
	      html += str.substring(lastIndex, index);
	    }

	    lastIndex = index + 1;
	    html += escape;
	  }

	  return lastIndex !== index ? html + str.substring(lastIndex, index) : html;
	}
	// end code copied and modified from escape-html

	/**
	 * Escapes text to prevent scripting attacks.
	 *
	 * @param {*} text Text value to escape.
	 * @return {string} An escaped string.
	 */
	function escapeTextContentForBrowser(text) {
	  if (typeof text === 'boolean' || typeof text === 'number') {
	    // this shortcircuit helps perf for types that we know will never have
	    // special characters, especially given that this function is used often
	    // for numeric dom ids.
	    return '' + text;
	  }
	  return escapeHtml(text);
	}

	module.exports = escapeTextContentForBrowser;

/***/ },
/* 31 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule setInnerHTML
	 */

	'use strict';

	var ExecutionEnvironment = __webpack_require__(7);
	var DOMNamespaces = __webpack_require__(37);

	var WHITESPACE_TEST = /^[ \r\n\t\f]/;
	var NONVISIBLE_TEST = /<(!--|link|noscript|meta|script|style)[ \r\n\t\f\/>]/;

	var createMicrosoftUnsafeLocalFunction = __webpack_require__(51);

	// SVG temp container for IE lacking innerHTML
	var reusableSVGContainer;

	/**
	 * Set the innerHTML property of a node, ensuring that whitespace is preserved
	 * even in IE8.
	 *
	 * @param {DOMElement} node
	 * @param {string} html
	 * @internal
	 */
	var setInnerHTML = createMicrosoftUnsafeLocalFunction(function (node, html) {
	  // IE does not have innerHTML for SVG nodes, so instead we inject the
	  // new markup in a temp node and then move the child nodes across into
	  // the target node
	  if (node.namespaceURI === DOMNamespaces.svg && !('innerHTML' in node)) {
	    reusableSVGContainer = reusableSVGContainer || document.createElement('div');
	    reusableSVGContainer.innerHTML = '<svg>' + html + '</svg>';
	    var newNodes = reusableSVGContainer.firstChild.childNodes;
	    for (var i = 0; i < newNodes.length; i++) {
	      node.appendChild(newNodes[i]);
	    }
	  } else {
	    node.innerHTML = html;
	  }
	});

	if (ExecutionEnvironment.canUseDOM) {
	  // IE8: When updating a just created node with innerHTML only leading
	  // whitespace is removed. When updating an existing node with innerHTML
	  // whitespace in root TextNodes is also collapsed.
	  // @see quirksmode.org/bugreports/archives/2004/11/innerhtml_and_t.html

	  // Feature detection; only IE8 is known to behave improperly like this.
	  var testElement = document.createElement('div');
	  testElement.innerHTML = ' ';
	  if (testElement.innerHTML === '') {
	    setInnerHTML = function (node, html) {
	      // Magic theory: IE8 supposedly differentiates between added and updated
	      // nodes when processing innerHTML, innerHTML on updated nodes suffers
	      // from worse whitespace behavior. Re-adding a node like this triggers
	      // the initial and more favorable whitespace behavior.
	      // TODO: What to do on a detached node?
	      if (node.parentNode) {
	        node.parentNode.replaceChild(node, node);
	      }

	      // We also implement a workaround for non-visible tags disappearing into
	      // thin air on IE8, this only happens if there is no visible text
	      // in-front of the non-visible tags. Piggyback on the whitespace fix
	      // and simply check if any non-visible tags appear in the source.
	      if (WHITESPACE_TEST.test(html) || html[0] === '<' && NONVISIBLE_TEST.test(html)) {
	        // Recover leading whitespace by temporarily prepending any character.
	        // \uFEFF has the potential advantage of being zero-width/invisible.
	        // UglifyJS drops U+FEFF chars when parsing, so use String.fromCharCode
	        // in hopes that this is preserved even if "\uFEFF" is transformed to
	        // the actual Unicode character (by Babel, for example).
	        // https://github.com/mishoo/UglifyJS2/blob/v2.4.20/lib/parse.js#L216
	        node.innerHTML = String.fromCharCode(0xFEFF) + html;

	        // deleteData leaves an empty `TextNode` which offsets the index of all
	        // children. Definitely want to avoid this.
	        var textNode = node.firstChild;
	        if (textNode.data.length === 1) {
	          node.removeChild(textNode);
	        } else {
	          textNode.deleteData(0, 1);
	        }
	      } else {
	        node.innerHTML = html;
	      }
	    };
	  }
	  testElement = null;
	}

	module.exports = setInnerHTML;

/***/ },
/* 32 */
/***/ function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 *
	 */

	/*eslint-disable no-self-compare */

	'use strict';

	var hasOwnProperty = Object.prototype.hasOwnProperty;

	/**
	 * inlined Object.is polyfill to avoid requiring consumers ship their own
	 * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
	 */
	function is(x, y) {
	  // SameValue algorithm
	  if (x === y) {
	    // Steps 1-5, 7-10
	    // Steps 6.b-6.e: +0 != -0
	    return x !== 0 || 1 / x === 1 / y;
	  } else {
	    // Step 6.a: NaN == NaN
	    return x !== x && y !== y;
	  }
	}

	/**
	 * Performs equality by iterating through keys on an object and returning false
	 * when any key has values which are not strictly equal between the arguments.
	 * Returns true when the values of all keys are strictly equal.
	 */
	function shallowEqual(objA, objB) {
	  if (is(objA, objB)) {
	    return true;
	  }

	  if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {
	    return false;
	  }

	  var keysA = Object.keys(objA);
	  var keysB = Object.keys(objB);

	  if (keysA.length !== keysB.length) {
	    return false;
	  }

	  // Test for A's keys different from B.
	  for (var i = 0; i < keysA.length; i++) {
	    if (!hasOwnProperty.call(objB, keysA[i]) || !is(objA[keysA[i]], objB[keysA[i]])) {
	      return false;
	    }
	  }

	  return true;
	}

	module.exports = shallowEqual;

/***/ },
/* 33 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	__webpack_require__(67);

	var _react = __webpack_require__(6);

	var _react2 = _interopRequireDefault(_react);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/* jshint esnext: true */

	function BoxH(_ref) {
	  var children = _ref.children;

	  return _react2.default.createElement(
	    'box-h',
	    null,
	    children
	  );
	}

	exports.default = BoxH;

/***/ },
/* 34 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	__webpack_require__(130);

	var _react = __webpack_require__(6);

	var _react2 = _interopRequireDefault(_react);

	var _IconEs6React = __webpack_require__(122);

	var _IconEs6React2 = _interopRequireDefault(_IconEs6React);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* jshint esnext: true */

	var IconContainer = function (_Component) {
	  _inherits(IconContainer, _Component);

	  function IconContainer() {
	    _classCallCheck(this, IconContainer);

	    return _possibleConstructorReturn(this, Object.getPrototypeOf(IconContainer).apply(this, arguments));
	  }

	  _createClass(IconContainer, [{
	    key: 'render',
	    value: function render() {
	      var _props = this.props;
	      var icon = _props.icon;
	      var children = _props.children;
	      var className = _props.className;

	      return _react2.default.createElement(
	        'icon-container',
	        { 'class': className },
	        _react2.default.createElement(
	          'div',
	          { className: 'icon' },
	          _react2.default.createElement(_IconEs6React2.default, { icon: icon })
	        ),
	        _react2.default.createElement(
	          'div',
	          { className: 'box' },
	          children
	        )
	      );
	    }
	  }]);

	  return IconContainer;
	}(_react.Component);

	exports.default = IconContainer;

/***/ },
/* 35 */
/***/ function(module, exports) {

	// shim for using process in browser

	var process = module.exports = {};

	// cached from whatever global is present so that test runners that stub it
	// don't break things.  But we need to wrap it in a try catch in case it is
	// wrapped in strict mode code which doesn't define any globals.  It's inside a
	// function because try/catches deoptimize in certain engines.

	var cachedSetTimeout;
	var cachedClearTimeout;

	(function () {
	  try {
	    cachedSetTimeout = setTimeout;
	  } catch (e) {
	    cachedSetTimeout = function () {
	      throw new Error('setTimeout is not defined');
	    }
	  }
	  try {
	    cachedClearTimeout = clearTimeout;
	  } catch (e) {
	    cachedClearTimeout = function () {
	      throw new Error('clearTimeout is not defined');
	    }
	  }
	} ())
	var queue = [];
	var draining = false;
	var currentQueue;
	var queueIndex = -1;

	function cleanUpNextTick() {
	    if (!draining || !currentQueue) {
	        return;
	    }
	    draining = false;
	    if (currentQueue.length) {
	        queue = currentQueue.concat(queue);
	    } else {
	        queueIndex = -1;
	    }
	    if (queue.length) {
	        drainQueue();
	    }
	}

	function drainQueue() {
	    if (draining) {
	        return;
	    }
	    var timeout = cachedSetTimeout.call(null, cleanUpNextTick);
	    draining = true;

	    var len = queue.length;
	    while(len) {
	        currentQueue = queue;
	        queue = [];
	        while (++queueIndex < len) {
	            if (currentQueue) {
	                currentQueue[queueIndex].run();
	            }
	        }
	        queueIndex = -1;
	        len = queue.length;
	    }
	    currentQueue = null;
	    draining = false;
	    cachedClearTimeout.call(null, timeout);
	}

	process.nextTick = function (fun) {
	    var args = new Array(arguments.length - 1);
	    if (arguments.length > 1) {
	        for (var i = 1; i < arguments.length; i++) {
	            args[i - 1] = arguments[i];
	        }
	    }
	    queue.push(new Item(fun, args));
	    if (queue.length === 1 && !draining) {
	        cachedSetTimeout.call(null, drainQueue, 0);
	    }
	};

	// v8 likes predictible objects
	function Item(fun, array) {
	    this.fun = fun;
	    this.array = array;
	}
	Item.prototype.run = function () {
	    this.fun.apply(null, this.array);
	};
	process.title = 'browser';
	process.browser = true;
	process.env = {};
	process.argv = [];
	process.version = ''; // empty string to avoid regexp issues
	process.versions = {};

	function noop() {}

	process.on = noop;
	process.addListener = noop;
	process.once = noop;
	process.off = noop;
	process.removeListener = noop;
	process.removeAllListeners = noop;
	process.emit = noop;

	process.binding = function (name) {
	    throw new Error('process.binding is not supported');
	};

	process.cwd = function () { return '/' };
	process.chdir = function (dir) {
	    throw new Error('process.chdir is not supported');
	};
	process.umask = function() { return 0; };


/***/ },
/* 36 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule DOMChildrenOperations
	 */

	'use strict';

	var DOMLazyTree = __webpack_require__(17);
	var Danger = __webpack_require__(142);
	var ReactMultiChildUpdateTypes = __webpack_require__(82);
	var ReactDOMComponentTree = __webpack_require__(5);
	var ReactInstrumentation = __webpack_require__(8);

	var createMicrosoftUnsafeLocalFunction = __webpack_require__(51);
	var setInnerHTML = __webpack_require__(31);
	var setTextContent = __webpack_require__(95);

	function getNodeAfter(parentNode, node) {
	  // Special case for text components, which return [open, close] comments
	  // from getHostNode.
	  if (Array.isArray(node)) {
	    node = node[1];
	  }
	  return node ? node.nextSibling : parentNode.firstChild;
	}

	/**
	 * Inserts `childNode` as a child of `parentNode` at the `index`.
	 *
	 * @param {DOMElement} parentNode Parent node in which to insert.
	 * @param {DOMElement} childNode Child node to insert.
	 * @param {number} index Index at which to insert the child.
	 * @internal
	 */
	var insertChildAt = createMicrosoftUnsafeLocalFunction(function (parentNode, childNode, referenceNode) {
	  // We rely exclusively on `insertBefore(node, null)` instead of also using
	  // `appendChild(node)`. (Using `undefined` is not allowed by all browsers so
	  // we are careful to use `null`.)
	  parentNode.insertBefore(childNode, referenceNode);
	});

	function insertLazyTreeChildAt(parentNode, childTree, referenceNode) {
	  DOMLazyTree.insertTreeBefore(parentNode, childTree, referenceNode);
	}

	function moveChild(parentNode, childNode, referenceNode) {
	  if (Array.isArray(childNode)) {
	    moveDelimitedText(parentNode, childNode[0], childNode[1], referenceNode);
	  } else {
	    insertChildAt(parentNode, childNode, referenceNode);
	  }
	}

	function removeChild(parentNode, childNode) {
	  if (Array.isArray(childNode)) {
	    var closingComment = childNode[1];
	    childNode = childNode[0];
	    removeDelimitedText(parentNode, childNode, closingComment);
	    parentNode.removeChild(closingComment);
	  }
	  parentNode.removeChild(childNode);
	}

	function moveDelimitedText(parentNode, openingComment, closingComment, referenceNode) {
	  var node = openingComment;
	  while (true) {
	    var nextNode = node.nextSibling;
	    insertChildAt(parentNode, node, referenceNode);
	    if (node === closingComment) {
	      break;
	    }
	    node = nextNode;
	  }
	}

	function removeDelimitedText(parentNode, startNode, closingComment) {
	  while (true) {
	    var node = startNode.nextSibling;
	    if (node === closingComment) {
	      // The closing comment is removed by ReactMultiChild.
	      break;
	    } else {
	      parentNode.removeChild(node);
	    }
	  }
	}

	function replaceDelimitedText(openingComment, closingComment, stringText) {
	  var parentNode = openingComment.parentNode;
	  var nodeAfterComment = openingComment.nextSibling;
	  if (nodeAfterComment === closingComment) {
	    // There are no text nodes between the opening and closing comments; insert
	    // a new one if stringText isn't empty.
	    if (stringText) {
	      insertChildAt(parentNode, document.createTextNode(stringText), nodeAfterComment);
	    }
	  } else {
	    if (stringText) {
	      // Set the text content of the first node after the opening comment, and
	      // remove all following nodes up until the closing comment.
	      setTextContent(nodeAfterComment, stringText);
	      removeDelimitedText(parentNode, nodeAfterComment, closingComment);
	    } else {
	      removeDelimitedText(parentNode, openingComment, closingComment);
	    }
	  }

	  if (false) {
	    ReactInstrumentation.debugTool.onHostOperation(ReactDOMComponentTree.getInstanceFromNode(openingComment)._debugID, 'replace text', stringText);
	  }
	}

	var dangerouslyReplaceNodeWithMarkup = Danger.dangerouslyReplaceNodeWithMarkup;
	if (false) {
	  dangerouslyReplaceNodeWithMarkup = function (oldChild, markup, prevInstance) {
	    Danger.dangerouslyReplaceNodeWithMarkup(oldChild, markup);
	    if (prevInstance._debugID !== 0) {
	      ReactInstrumentation.debugTool.onHostOperation(prevInstance._debugID, 'replace with', markup.toString());
	    } else {
	      var nextInstance = ReactDOMComponentTree.getInstanceFromNode(markup.node);
	      if (nextInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onHostOperation(nextInstance._debugID, 'mount', markup.toString());
	      }
	    }
	  };
	}

	/**
	 * Operations for updating with DOM children.
	 */
	var DOMChildrenOperations = {

	  dangerouslyReplaceNodeWithMarkup: dangerouslyReplaceNodeWithMarkup,

	  replaceDelimitedText: replaceDelimitedText,

	  /**
	   * Updates a component's children by processing a series of updates. The
	   * update configurations are each expected to have a `parentNode` property.
	   *
	   * @param {array<object>} updates List of update configurations.
	   * @internal
	   */
	  processUpdates: function (parentNode, updates) {
	    if (false) {
	      var parentNodeDebugID = ReactDOMComponentTree.getInstanceFromNode(parentNode)._debugID;
	    }

	    for (var k = 0; k < updates.length; k++) {
	      var update = updates[k];
	      switch (update.type) {
	        case ReactMultiChildUpdateTypes.INSERT_MARKUP:
	          insertLazyTreeChildAt(parentNode, update.content, getNodeAfter(parentNode, update.afterNode));
	          if (false) {
	            ReactInstrumentation.debugTool.onHostOperation(parentNodeDebugID, 'insert child', { toIndex: update.toIndex, content: update.content.toString() });
	          }
	          break;
	        case ReactMultiChildUpdateTypes.MOVE_EXISTING:
	          moveChild(parentNode, update.fromNode, getNodeAfter(parentNode, update.afterNode));
	          if (false) {
	            ReactInstrumentation.debugTool.onHostOperation(parentNodeDebugID, 'move child', { fromIndex: update.fromIndex, toIndex: update.toIndex });
	          }
	          break;
	        case ReactMultiChildUpdateTypes.SET_MARKUP:
	          setInnerHTML(parentNode, update.content);
	          if (false) {
	            ReactInstrumentation.debugTool.onHostOperation(parentNodeDebugID, 'replace children', update.content.toString());
	          }
	          break;
	        case ReactMultiChildUpdateTypes.TEXT_CONTENT:
	          setTextContent(parentNode, update.content);
	          if (false) {
	            ReactInstrumentation.debugTool.onHostOperation(parentNodeDebugID, 'replace text', update.content.toString());
	          }
	          break;
	        case ReactMultiChildUpdateTypes.REMOVE_NODE:
	          removeChild(parentNode, update.fromNode);
	          if (false) {
	            ReactInstrumentation.debugTool.onHostOperation(parentNodeDebugID, 'remove child', { fromIndex: update.fromIndex });
	          }
	          break;
	      }
	    }
	  }

	};

	module.exports = DOMChildrenOperations;

/***/ },
/* 37 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule DOMNamespaces
	 */

	'use strict';

	var DOMNamespaces = {
	  html: 'http://www.w3.org/1999/xhtml',
	  mathml: 'http://www.w3.org/1998/Math/MathML',
	  svg: 'http://www.w3.org/2000/svg'
	};

	module.exports = DOMNamespaces;

/***/ },
/* 38 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule EventPluginRegistry
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(2);

	var invariant = __webpack_require__(1);

	/**
	 * Injectable ordering of event plugins.
	 */
	var EventPluginOrder = null;

	/**
	 * Injectable mapping from names to event plugin modules.
	 */
	var namesToPlugins = {};

	/**
	 * Recomputes the plugin list using the injected plugins and plugin ordering.
	 *
	 * @private
	 */
	function recomputePluginOrdering() {
	  if (!EventPluginOrder) {
	    // Wait until an `EventPluginOrder` is injected.
	    return;
	  }
	  for (var pluginName in namesToPlugins) {
	    var PluginModule = namesToPlugins[pluginName];
	    var pluginIndex = EventPluginOrder.indexOf(pluginName);
	    !(pluginIndex > -1) ?  false ? invariant(false, 'EventPluginRegistry: Cannot inject event plugins that do not exist in the plugin ordering, `%s`.', pluginName) : _prodInvariant('96', pluginName) : void 0;
	    if (EventPluginRegistry.plugins[pluginIndex]) {
	      continue;
	    }
	    !PluginModule.extractEvents ?  false ? invariant(false, 'EventPluginRegistry: Event plugins must implement an `extractEvents` method, but `%s` does not.', pluginName) : _prodInvariant('97', pluginName) : void 0;
	    EventPluginRegistry.plugins[pluginIndex] = PluginModule;
	    var publishedEvents = PluginModule.eventTypes;
	    for (var eventName in publishedEvents) {
	      !publishEventForPlugin(publishedEvents[eventName], PluginModule, eventName) ?  false ? invariant(false, 'EventPluginRegistry: Failed to publish event `%s` for plugin `%s`.', eventName, pluginName) : _prodInvariant('98', eventName, pluginName) : void 0;
	    }
	  }
	}

	/**
	 * Publishes an event so that it can be dispatched by the supplied plugin.
	 *
	 * @param {object} dispatchConfig Dispatch configuration for the event.
	 * @param {object} PluginModule Plugin publishing the event.
	 * @return {boolean} True if the event was successfully published.
	 * @private
	 */
	function publishEventForPlugin(dispatchConfig, PluginModule, eventName) {
	  !!EventPluginRegistry.eventNameDispatchConfigs.hasOwnProperty(eventName) ?  false ? invariant(false, 'EventPluginHub: More than one plugin attempted to publish the same event name, `%s`.', eventName) : _prodInvariant('99', eventName) : void 0;
	  EventPluginRegistry.eventNameDispatchConfigs[eventName] = dispatchConfig;

	  var phasedRegistrationNames = dispatchConfig.phasedRegistrationNames;
	  if (phasedRegistrationNames) {
	    for (var phaseName in phasedRegistrationNames) {
	      if (phasedRegistrationNames.hasOwnProperty(phaseName)) {
	        var phasedRegistrationName = phasedRegistrationNames[phaseName];
	        publishRegistrationName(phasedRegistrationName, PluginModule, eventName);
	      }
	    }
	    return true;
	  } else if (dispatchConfig.registrationName) {
	    publishRegistrationName(dispatchConfig.registrationName, PluginModule, eventName);
	    return true;
	  }
	  return false;
	}

	/**
	 * Publishes a registration name that is used to identify dispatched events and
	 * can be used with `EventPluginHub.putListener` to register listeners.
	 *
	 * @param {string} registrationName Registration name to add.
	 * @param {object} PluginModule Plugin publishing the event.
	 * @private
	 */
	function publishRegistrationName(registrationName, PluginModule, eventName) {
	  !!EventPluginRegistry.registrationNameModules[registrationName] ?  false ? invariant(false, 'EventPluginHub: More than one plugin attempted to publish the same registration name, `%s`.', registrationName) : _prodInvariant('100', registrationName) : void 0;
	  EventPluginRegistry.registrationNameModules[registrationName] = PluginModule;
	  EventPluginRegistry.registrationNameDependencies[registrationName] = PluginModule.eventTypes[eventName].dependencies;

	  if (false) {
	    var lowerCasedName = registrationName.toLowerCase();
	    EventPluginRegistry.possibleRegistrationNames[lowerCasedName] = registrationName;

	    if (registrationName === 'onDoubleClick') {
	      EventPluginRegistry.possibleRegistrationNames.ondblclick = registrationName;
	    }
	  }
	}

	/**
	 * Registers plugins so that they can extract and dispatch events.
	 *
	 * @see {EventPluginHub}
	 */
	var EventPluginRegistry = {

	  /**
	   * Ordered list of injected plugins.
	   */
	  plugins: [],

	  /**
	   * Mapping from event name to dispatch config
	   */
	  eventNameDispatchConfigs: {},

	  /**
	   * Mapping from registration name to plugin module
	   */
	  registrationNameModules: {},

	  /**
	   * Mapping from registration name to event name
	   */
	  registrationNameDependencies: {},

	  /**
	   * Mapping from lowercase registration names to the properly cased version,
	   * used to warn in the case of missing event handlers. Available
	   * only in __DEV__.
	   * @type {Object}
	   */
	  possibleRegistrationNames:  false ? {} : null,

	  /**
	   * Injects an ordering of plugins (by plugin name). This allows the ordering
	   * to be decoupled from injection of the actual plugins so that ordering is
	   * always deterministic regardless of packaging, on-the-fly injection, etc.
	   *
	   * @param {array} InjectedEventPluginOrder
	   * @internal
	   * @see {EventPluginHub.injection.injectEventPluginOrder}
	   */
	  injectEventPluginOrder: function (InjectedEventPluginOrder) {
	    !!EventPluginOrder ?  false ? invariant(false, 'EventPluginRegistry: Cannot inject event plugin ordering more than once. You are likely trying to load more than one copy of React.') : _prodInvariant('101') : void 0;
	    // Clone the ordering so it cannot be dynamically mutated.
	    EventPluginOrder = Array.prototype.slice.call(InjectedEventPluginOrder);
	    recomputePluginOrdering();
	  },

	  /**
	   * Injects plugins to be used by `EventPluginHub`. The plugin names must be
	   * in the ordering injected by `injectEventPluginOrder`.
	   *
	   * Plugins can be injected as part of page initialization or on-the-fly.
	   *
	   * @param {object} injectedNamesToPlugins Map from names to plugin modules.
	   * @internal
	   * @see {EventPluginHub.injection.injectEventPluginsByName}
	   */
	  injectEventPluginsByName: function (injectedNamesToPlugins) {
	    var isOrderingDirty = false;
	    for (var pluginName in injectedNamesToPlugins) {
	      if (!injectedNamesToPlugins.hasOwnProperty(pluginName)) {
	        continue;
	      }
	      var PluginModule = injectedNamesToPlugins[pluginName];
	      if (!namesToPlugins.hasOwnProperty(pluginName) || namesToPlugins[pluginName] !== PluginModule) {
	        !!namesToPlugins[pluginName] ?  false ? invariant(false, 'EventPluginRegistry: Cannot inject two different event plugins using the same name, `%s`.', pluginName) : _prodInvariant('102', pluginName) : void 0;
	        namesToPlugins[pluginName] = PluginModule;
	        isOrderingDirty = true;
	      }
	    }
	    if (isOrderingDirty) {
	      recomputePluginOrdering();
	    }
	  },

	  /**
	   * Looks up the plugin for the supplied event.
	   *
	   * @param {object} event A synthetic event.
	   * @return {?object} The plugin that created the supplied event.
	   * @internal
	   */
	  getPluginModuleForEvent: function (event) {
	    var dispatchConfig = event.dispatchConfig;
	    if (dispatchConfig.registrationName) {
	      return EventPluginRegistry.registrationNameModules[dispatchConfig.registrationName] || null;
	    }
	    for (var phase in dispatchConfig.phasedRegistrationNames) {
	      if (!dispatchConfig.phasedRegistrationNames.hasOwnProperty(phase)) {
	        continue;
	      }
	      var PluginModule = EventPluginRegistry.registrationNameModules[dispatchConfig.phasedRegistrationNames[phase]];
	      if (PluginModule) {
	        return PluginModule;
	      }
	    }
	    return null;
	  },

	  /**
	   * Exposed for unit testing.
	   * @private
	   */
	  _resetEventPlugins: function () {
	    EventPluginOrder = null;
	    for (var pluginName in namesToPlugins) {
	      if (namesToPlugins.hasOwnProperty(pluginName)) {
	        delete namesToPlugins[pluginName];
	      }
	    }
	    EventPluginRegistry.plugins.length = 0;

	    var eventNameDispatchConfigs = EventPluginRegistry.eventNameDispatchConfigs;
	    for (var eventName in eventNameDispatchConfigs) {
	      if (eventNameDispatchConfigs.hasOwnProperty(eventName)) {
	        delete eventNameDispatchConfigs[eventName];
	      }
	    }

	    var registrationNameModules = EventPluginRegistry.registrationNameModules;
	    for (var registrationName in registrationNameModules) {
	      if (registrationNameModules.hasOwnProperty(registrationName)) {
	        delete registrationNameModules[registrationName];
	      }
	    }

	    if (false) {
	      var possibleRegistrationNames = EventPluginRegistry.possibleRegistrationNames;
	      for (var lowerCasedName in possibleRegistrationNames) {
	        if (possibleRegistrationNames.hasOwnProperty(lowerCasedName)) {
	          delete possibleRegistrationNames[lowerCasedName];
	        }
	      }
	    }
	  }

	};

	module.exports = EventPluginRegistry;

/***/ },
/* 39 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule EventPluginUtils
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(2);

	var EventConstants = __webpack_require__(12);
	var ReactErrorUtils = __webpack_require__(45);

	var invariant = __webpack_require__(1);
	var warning = __webpack_require__(3);

	/**
	 * Injected dependencies:
	 */

	/**
	 * - `ComponentTree`: [required] Module that can convert between React instances
	 *   and actual node references.
	 */
	var ComponentTree;
	var TreeTraversal;
	var injection = {
	  injectComponentTree: function (Injected) {
	    ComponentTree = Injected;
	    if (false) {
	      process.env.NODE_ENV !== 'production' ? warning(Injected && Injected.getNodeFromInstance && Injected.getInstanceFromNode, 'EventPluginUtils.injection.injectComponentTree(...): Injected ' + 'module is missing getNodeFromInstance or getInstanceFromNode.') : void 0;
	    }
	  },
	  injectTreeTraversal: function (Injected) {
	    TreeTraversal = Injected;
	    if (false) {
	      process.env.NODE_ENV !== 'production' ? warning(Injected && Injected.isAncestor && Injected.getLowestCommonAncestor, 'EventPluginUtils.injection.injectTreeTraversal(...): Injected ' + 'module is missing isAncestor or getLowestCommonAncestor.') : void 0;
	    }
	  }
	};

	var topLevelTypes = EventConstants.topLevelTypes;

	function isEndish(topLevelType) {
	  return topLevelType === topLevelTypes.topMouseUp || topLevelType === topLevelTypes.topTouchEnd || topLevelType === topLevelTypes.topTouchCancel;
	}

	function isMoveish(topLevelType) {
	  return topLevelType === topLevelTypes.topMouseMove || topLevelType === topLevelTypes.topTouchMove;
	}
	function isStartish(topLevelType) {
	  return topLevelType === topLevelTypes.topMouseDown || topLevelType === topLevelTypes.topTouchStart;
	}

	var validateEventDispatches;
	if (false) {
	  validateEventDispatches = function (event) {
	    var dispatchListeners = event._dispatchListeners;
	    var dispatchInstances = event._dispatchInstances;

	    var listenersIsArr = Array.isArray(dispatchListeners);
	    var listenersLen = listenersIsArr ? dispatchListeners.length : dispatchListeners ? 1 : 0;

	    var instancesIsArr = Array.isArray(dispatchInstances);
	    var instancesLen = instancesIsArr ? dispatchInstances.length : dispatchInstances ? 1 : 0;

	    process.env.NODE_ENV !== 'production' ? warning(instancesIsArr === listenersIsArr && instancesLen === listenersLen, 'EventPluginUtils: Invalid `event`.') : void 0;
	  };
	}

	/**
	 * Dispatch the event to the listener.
	 * @param {SyntheticEvent} event SyntheticEvent to handle
	 * @param {boolean} simulated If the event is simulated (changes exn behavior)
	 * @param {function} listener Application-level callback
	 * @param {*} inst Internal component instance
	 */
	function executeDispatch(event, simulated, listener, inst) {
	  var type = event.type || 'unknown-event';
	  event.currentTarget = EventPluginUtils.getNodeFromInstance(inst);
	  if (simulated) {
	    ReactErrorUtils.invokeGuardedCallbackWithCatch(type, listener, event);
	  } else {
	    ReactErrorUtils.invokeGuardedCallback(type, listener, event);
	  }
	  event.currentTarget = null;
	}

	/**
	 * Standard/simple iteration through an event's collected dispatches.
	 */
	function executeDispatchesInOrder(event, simulated) {
	  var dispatchListeners = event._dispatchListeners;
	  var dispatchInstances = event._dispatchInstances;
	  if (false) {
	    validateEventDispatches(event);
	  }
	  if (Array.isArray(dispatchListeners)) {
	    for (var i = 0; i < dispatchListeners.length; i++) {
	      if (event.isPropagationStopped()) {
	        break;
	      }
	      // Listeners and Instances are two parallel arrays that are always in sync.
	      executeDispatch(event, simulated, dispatchListeners[i], dispatchInstances[i]);
	    }
	  } else if (dispatchListeners) {
	    executeDispatch(event, simulated, dispatchListeners, dispatchInstances);
	  }
	  event._dispatchListeners = null;
	  event._dispatchInstances = null;
	}

	/**
	 * Standard/simple iteration through an event's collected dispatches, but stops
	 * at the first dispatch execution returning true, and returns that id.
	 *
	 * @return {?string} id of the first dispatch execution who's listener returns
	 * true, or null if no listener returned true.
	 */
	function executeDispatchesInOrderStopAtTrueImpl(event) {
	  var dispatchListeners = event._dispatchListeners;
	  var dispatchInstances = event._dispatchInstances;
	  if (false) {
	    validateEventDispatches(event);
	  }
	  if (Array.isArray(dispatchListeners)) {
	    for (var i = 0; i < dispatchListeners.length; i++) {
	      if (event.isPropagationStopped()) {
	        break;
	      }
	      // Listeners and Instances are two parallel arrays that are always in sync.
	      if (dispatchListeners[i](event, dispatchInstances[i])) {
	        return dispatchInstances[i];
	      }
	    }
	  } else if (dispatchListeners) {
	    if (dispatchListeners(event, dispatchInstances)) {
	      return dispatchInstances;
	    }
	  }
	  return null;
	}

	/**
	 * @see executeDispatchesInOrderStopAtTrueImpl
	 */
	function executeDispatchesInOrderStopAtTrue(event) {
	  var ret = executeDispatchesInOrderStopAtTrueImpl(event);
	  event._dispatchInstances = null;
	  event._dispatchListeners = null;
	  return ret;
	}

	/**
	 * Execution of a "direct" dispatch - there must be at most one dispatch
	 * accumulated on the event or it is considered an error. It doesn't really make
	 * sense for an event with multiple dispatches (bubbled) to keep track of the
	 * return values at each dispatch execution, but it does tend to make sense when
	 * dealing with "direct" dispatches.
	 *
	 * @return {*} The return value of executing the single dispatch.
	 */
	function executeDirectDispatch(event) {
	  if (false) {
	    validateEventDispatches(event);
	  }
	  var dispatchListener = event._dispatchListeners;
	  var dispatchInstance = event._dispatchInstances;
	  !!Array.isArray(dispatchListener) ?  false ? invariant(false, 'executeDirectDispatch(...): Invalid `event`.') : _prodInvariant('103') : void 0;
	  event.currentTarget = dispatchListener ? EventPluginUtils.getNodeFromInstance(dispatchInstance) : null;
	  var res = dispatchListener ? dispatchListener(event) : null;
	  event.currentTarget = null;
	  event._dispatchListeners = null;
	  event._dispatchInstances = null;
	  return res;
	}

	/**
	 * @param {SyntheticEvent} event
	 * @return {boolean} True iff number of dispatches accumulated is greater than 0.
	 */
	function hasDispatches(event) {
	  return !!event._dispatchListeners;
	}

	/**
	 * General utilities that are useful in creating custom Event Plugins.
	 */
	var EventPluginUtils = {
	  isEndish: isEndish,
	  isMoveish: isMoveish,
	  isStartish: isStartish,

	  executeDirectDispatch: executeDirectDispatch,
	  executeDispatchesInOrder: executeDispatchesInOrder,
	  executeDispatchesInOrderStopAtTrue: executeDispatchesInOrderStopAtTrue,
	  hasDispatches: hasDispatches,

	  getInstanceFromNode: function (node) {
	    return ComponentTree.getInstanceFromNode(node);
	  },
	  getNodeFromInstance: function (node) {
	    return ComponentTree.getNodeFromInstance(node);
	  },
	  isAncestor: function (a, b) {
	    return TreeTraversal.isAncestor(a, b);
	  },
	  getLowestCommonAncestor: function (a, b) {
	    return TreeTraversal.getLowestCommonAncestor(a, b);
	  },
	  getParentInstance: function (inst) {
	    return TreeTraversal.getParentInstance(inst);
	  },
	  traverseTwoPhase: function (target, fn, arg) {
	    return TreeTraversal.traverseTwoPhase(target, fn, arg);
	  },
	  traverseEnterLeave: function (from, to, fn, argFrom, argTo) {
	    return TreeTraversal.traverseEnterLeave(from, to, fn, argFrom, argTo);
	  },

	  injection: injection
	};

	module.exports = EventPluginUtils;

/***/ },
/* 40 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule KeyEscapeUtils
	 *
	 */

	'use strict';

	/**
	 * Escape and wrap key so it is safe to use as a reactid
	 *
	 * @param {string} key to be escaped.
	 * @return {string} the escaped key.
	 */

	function escape(key) {
	  var escapeRegex = /[=:]/g;
	  var escaperLookup = {
	    '=': '=0',
	    ':': '=2'
	  };
	  var escapedString = ('' + key).replace(escapeRegex, function (match) {
	    return escaperLookup[match];
	  });

	  return '$' + escapedString;
	}

	/**
	 * Unescape and unwrap key for human-readable display
	 *
	 * @param {string} key to unescape.
	 * @return {string} the unescaped key.
	 */
	function unescape(key) {
	  var unescapeRegex = /(=0|=2)/g;
	  var unescaperLookup = {
	    '=0': '=',
	    '=2': ':'
	  };
	  var keySubstring = key[0] === '.' && key[1] === '$' ? key.substring(2) : key.substring(1);

	  return ('' + keySubstring).replace(unescapeRegex, function (match) {
	    return unescaperLookup[match];
	  });
	}

	var KeyEscapeUtils = {
	  escape: escape,
	  unescape: unescape
	};

	module.exports = KeyEscapeUtils;

/***/ },
/* 41 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule LinkedValueUtils
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(2);

	var ReactPropTypes = __webpack_require__(84);
	var ReactPropTypeLocations = __webpack_require__(48);
	var ReactPropTypesSecret = __webpack_require__(49);

	var invariant = __webpack_require__(1);
	var warning = __webpack_require__(3);

	var hasReadOnlyValue = {
	  'button': true,
	  'checkbox': true,
	  'image': true,
	  'hidden': true,
	  'radio': true,
	  'reset': true,
	  'submit': true
	};

	function _assertSingleLink(inputProps) {
	  !(inputProps.checkedLink == null || inputProps.valueLink == null) ?  false ? invariant(false, 'Cannot provide a checkedLink and a valueLink. If you want to use checkedLink, you probably don\'t want to use valueLink and vice versa.') : _prodInvariant('87') : void 0;
	}
	function _assertValueLink(inputProps) {
	  _assertSingleLink(inputProps);
	  !(inputProps.value == null && inputProps.onChange == null) ?  false ? invariant(false, 'Cannot provide a valueLink and a value or onChange event. If you want to use value or onChange, you probably don\'t want to use valueLink.') : _prodInvariant('88') : void 0;
	}

	function _assertCheckedLink(inputProps) {
	  _assertSingleLink(inputProps);
	  !(inputProps.checked == null && inputProps.onChange == null) ?  false ? invariant(false, 'Cannot provide a checkedLink and a checked property or onChange event. If you want to use checked or onChange, you probably don\'t want to use checkedLink') : _prodInvariant('89') : void 0;
	}

	var propTypes = {
	  value: function (props, propName, componentName) {
	    if (!props[propName] || hasReadOnlyValue[props.type] || props.onChange || props.readOnly || props.disabled) {
	      return null;
	    }
	    return new Error('You provided a `value` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultValue`. Otherwise, ' + 'set either `onChange` or `readOnly`.');
	  },
	  checked: function (props, propName, componentName) {
	    if (!props[propName] || props.onChange || props.readOnly || props.disabled) {
	      return null;
	    }
	    return new Error('You provided a `checked` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultChecked`. Otherwise, ' + 'set either `onChange` or `readOnly`.');
	  },
	  onChange: ReactPropTypes.func
	};

	var loggedTypeFailures = {};
	function getDeclarationErrorAddendum(owner) {
	  if (owner) {
	    var name = owner.getName();
	    if (name) {
	      return ' Check the render method of `' + name + '`.';
	    }
	  }
	  return '';
	}

	/**
	 * Provide a linked `value` attribute for controlled forms. You should not use
	 * this outside of the ReactDOM controlled form components.
	 */
	var LinkedValueUtils = {
	  checkPropTypes: function (tagName, props, owner) {
	    for (var propName in propTypes) {
	      if (propTypes.hasOwnProperty(propName)) {
	        var error = propTypes[propName](props, propName, tagName, ReactPropTypeLocations.prop, null, ReactPropTypesSecret);
	      }
	      if (error instanceof Error && !(error.message in loggedTypeFailures)) {
	        // Only monitor this failure once because there tends to be a lot of the
	        // same error.
	        loggedTypeFailures[error.message] = true;

	        var addendum = getDeclarationErrorAddendum(owner);
	         false ? warning(false, 'Failed form propType: %s%s', error.message, addendum) : void 0;
	      }
	    }
	  },

	  /**
	   * @param {object} inputProps Props for form component
	   * @return {*} current value of the input either from value prop or link.
	   */
	  getValue: function (inputProps) {
	    if (inputProps.valueLink) {
	      _assertValueLink(inputProps);
	      return inputProps.valueLink.value;
	    }
	    return inputProps.value;
	  },

	  /**
	   * @param {object} inputProps Props for form component
	   * @return {*} current checked status of the input either from checked prop
	   *             or link.
	   */
	  getChecked: function (inputProps) {
	    if (inputProps.checkedLink) {
	      _assertCheckedLink(inputProps);
	      return inputProps.checkedLink.value;
	    }
	    return inputProps.checked;
	  },

	  /**
	   * @param {object} inputProps Props for form component
	   * @param {SyntheticEvent} event change event to handle
	   */
	  executeOnChange: function (inputProps, event) {
	    if (inputProps.valueLink) {
	      _assertValueLink(inputProps);
	      return inputProps.valueLink.requestChange(event.target.value);
	    } else if (inputProps.checkedLink) {
	      _assertCheckedLink(inputProps);
	      return inputProps.checkedLink.requestChange(event.target.checked);
	    } else if (inputProps.onChange) {
	      return inputProps.onChange.call(undefined, event);
	    }
	  }
	};

	module.exports = LinkedValueUtils;

/***/ },
/* 42 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactComponent
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(2);

	var ReactNoopUpdateQueue = __webpack_require__(46);

	var canDefineProperty = __webpack_require__(88);
	var emptyObject = __webpack_require__(20);
	var invariant = __webpack_require__(1);
	var warning = __webpack_require__(3);

	/**
	 * Base class helpers for the updating state of a component.
	 */
	function ReactComponent(props, context, updater) {
	  this.props = props;
	  this.context = context;
	  this.refs = emptyObject;
	  // We initialize the default updater but the real one gets injected by the
	  // renderer.
	  this.updater = updater || ReactNoopUpdateQueue;
	}

	ReactComponent.prototype.isReactComponent = {};

	/**
	 * Sets a subset of the state. Always use this to mutate
	 * state. You should treat `this.state` as immutable.
	 *
	 * There is no guarantee that `this.state` will be immediately updated, so
	 * accessing `this.state` after calling this method may return the old value.
	 *
	 * There is no guarantee that calls to `setState` will run synchronously,
	 * as they may eventually be batched together.  You can provide an optional
	 * callback that will be executed when the call to setState is actually
	 * completed.
	 *
	 * When a function is provided to setState, it will be called at some point in
	 * the future (not synchronously). It will be called with the up to date
	 * component arguments (state, props, context). These values can be different
	 * from this.* because your function may be called after receiveProps but before
	 * shouldComponentUpdate, and this new state, props, and context will not yet be
	 * assigned to this.
	 *
	 * @param {object|function} partialState Next partial state or function to
	 *        produce next partial state to be merged with current state.
	 * @param {?function} callback Called after state is updated.
	 * @final
	 * @protected
	 */
	ReactComponent.prototype.setState = function (partialState, callback) {
	  !(typeof partialState === 'object' || typeof partialState === 'function' || partialState == null) ?  false ? invariant(false, 'setState(...): takes an object of state variables to update or a function which returns an object of state variables.') : _prodInvariant('85') : void 0;
	  this.updater.enqueueSetState(this, partialState);
	  if (callback) {
	    this.updater.enqueueCallback(this, callback, 'setState');
	  }
	};

	/**
	 * Forces an update. This should only be invoked when it is known with
	 * certainty that we are **not** in a DOM transaction.
	 *
	 * You may want to call this when you know that some deeper aspect of the
	 * component's state has changed but `setState` was not called.
	 *
	 * This will not invoke `shouldComponentUpdate`, but it will invoke
	 * `componentWillUpdate` and `componentDidUpdate`.
	 *
	 * @param {?function} callback Called after update is complete.
	 * @final
	 * @protected
	 */
	ReactComponent.prototype.forceUpdate = function (callback) {
	  this.updater.enqueueForceUpdate(this);
	  if (callback) {
	    this.updater.enqueueCallback(this, callback, 'forceUpdate');
	  }
	};

	/**
	 * Deprecated APIs. These APIs used to exist on classic React classes but since
	 * we would like to deprecate them, we're not going to move them over to this
	 * modern base class. Instead, we define a getter that warns if it's accessed.
	 */
	if (false) {
	  var deprecatedAPIs = {
	    isMounted: ['isMounted', 'Instead, make sure to clean up subscriptions and pending requests in ' + 'componentWillUnmount to prevent memory leaks.'],
	    replaceState: ['replaceState', 'Refactor your code to use setState instead (see ' + 'https://github.com/facebook/react/issues/3236).']
	  };
	  var defineDeprecationWarning = function (methodName, info) {
	    if (canDefineProperty) {
	      Object.defineProperty(ReactComponent.prototype, methodName, {
	        get: function () {
	          process.env.NODE_ENV !== 'production' ? warning(false, '%s(...) is deprecated in plain JavaScript React classes. %s', info[0], info[1]) : void 0;
	          return undefined;
	        }
	      });
	    }
	  };
	  for (var fnName in deprecatedAPIs) {
	    if (deprecatedAPIs.hasOwnProperty(fnName)) {
	      defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);
	    }
	  }
	}

	module.exports = ReactComponent;

/***/ },
/* 43 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2014-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactComponentEnvironment
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(2);

	var invariant = __webpack_require__(1);

	var injected = false;

	var ReactComponentEnvironment = {

	  /**
	   * Optionally injectable environment dependent cleanup hook. (server vs.
	   * browser etc). Example: A browser system caches DOM nodes based on component
	   * ID and must remove that cache entry when this instance is unmounted.
	   */
	  unmountIDFromEnvironment: null,

	  /**
	   * Optionally injectable hook for swapping out mount images in the middle of
	   * the tree.
	   */
	  replaceNodeWithMarkup: null,

	  /**
	   * Optionally injectable hook for processing a queue of child updates. Will
	   * later move into MultiChildComponents.
	   */
	  processChildrenUpdates: null,

	  injection: {
	    injectEnvironment: function (environment) {
	      !!injected ?  false ? invariant(false, 'ReactCompositeComponent: injectEnvironment() can only be called once.') : _prodInvariant('104') : void 0;
	      ReactComponentEnvironment.unmountIDFromEnvironment = environment.unmountIDFromEnvironment;
	      ReactComponentEnvironment.replaceNodeWithMarkup = environment.replaceNodeWithMarkup;
	      ReactComponentEnvironment.processChildrenUpdates = environment.processChildrenUpdates;
	      injected = true;
	    }
	  }

	};

	module.exports = ReactComponentEnvironment;

/***/ },
/* 44 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2016-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactComponentTreeDevtool
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(2);

	var ReactCurrentOwner = __webpack_require__(16);

	var invariant = __webpack_require__(1);
	var warning = __webpack_require__(3);

	var tree = {};
	var unmountedIDs = {};
	var rootIDs = {};

	function updateTree(id, update) {
	  if (!tree[id]) {
	    tree[id] = {
	      element: null,
	      parentID: null,
	      ownerID: null,
	      text: null,
	      childIDs: [],
	      displayName: 'Unknown',
	      isMounted: false,
	      updateCount: 0
	    };
	  }
	  update(tree[id]);
	}

	function purgeDeep(id) {
	  var item = tree[id];
	  if (item) {
	    var childIDs = item.childIDs;

	    delete tree[id];
	    childIDs.forEach(purgeDeep);
	  }
	}

	function describeComponentFrame(name, source, ownerName) {
	  return '\n    in ' + name + (source ? ' (at ' + source.fileName.replace(/^.*[\\\/]/, '') + ':' + source.lineNumber + ')' : ownerName ? ' (created by ' + ownerName + ')' : '');
	}

	function describeID(id) {
	  var name = ReactComponentTreeDevtool.getDisplayName(id);
	  var element = ReactComponentTreeDevtool.getElement(id);
	  var ownerID = ReactComponentTreeDevtool.getOwnerID(id);
	  var ownerName;
	  if (ownerID) {
	    ownerName = ReactComponentTreeDevtool.getDisplayName(ownerID);
	  }
	   false ? warning(element, 'ReactComponentTreeDevtool: Missing React element for debugID %s when ' + 'building stack', id) : void 0;
	  return describeComponentFrame(name, element && element._source, ownerName);
	}

	var ReactComponentTreeDevtool = {
	  onSetDisplayName: function (id, displayName) {
	    updateTree(id, function (item) {
	      return item.displayName = displayName;
	    });
	  },
	  onSetChildren: function (id, nextChildIDs) {
	    updateTree(id, function (item) {
	      item.childIDs = nextChildIDs;

	      nextChildIDs.forEach(function (nextChildID) {
	        var nextChild = tree[nextChildID];
	        !nextChild ?  false ? invariant(false, 'Expected devtool events to fire for the child before its parent includes it in onSetChildren().') : _prodInvariant('68') : void 0;
	        !(nextChild.displayName != null) ?  false ? invariant(false, 'Expected onSetDisplayName() to fire for the child before its parent includes it in onSetChildren().') : _prodInvariant('69') : void 0;
	        !(nextChild.childIDs != null || nextChild.text != null) ?  false ? invariant(false, 'Expected onSetChildren() or onSetText() to fire for the child before its parent includes it in onSetChildren().') : _prodInvariant('70') : void 0;
	        !nextChild.isMounted ?  false ? invariant(false, 'Expected onMountComponent() to fire for the child before its parent includes it in onSetChildren().') : _prodInvariant('71') : void 0;
	        if (nextChild.parentID == null) {
	          nextChild.parentID = id;
	          // TODO: This shouldn't be necessary but mounting a new root during in
	          // componentWillMount currently causes not-yet-mounted components to
	          // be purged from our tree data so their parent ID is missing.
	        }
	        !(nextChild.parentID === id) ?  false ? invariant(false, 'Expected onSetParent() and onSetChildren() to be consistent (%s has parents %s and %s).', nextChildID, nextChild.parentID, id) : _prodInvariant('72', nextChildID, nextChild.parentID, id) : void 0;
	      });
	    });
	  },
	  onSetOwner: function (id, ownerID) {
	    updateTree(id, function (item) {
	      return item.ownerID = ownerID;
	    });
	  },
	  onSetParent: function (id, parentID) {
	    updateTree(id, function (item) {
	      return item.parentID = parentID;
	    });
	  },
	  onSetText: function (id, text) {
	    updateTree(id, function (item) {
	      return item.text = text;
	    });
	  },
	  onBeforeMountComponent: function (id, element) {
	    updateTree(id, function (item) {
	      return item.element = element;
	    });
	  },
	  onBeforeUpdateComponent: function (id, element) {
	    updateTree(id, function (item) {
	      return item.element = element;
	    });
	  },
	  onMountComponent: function (id) {
	    updateTree(id, function (item) {
	      return item.isMounted = true;
	    });
	  },
	  onMountRootComponent: function (id) {
	    rootIDs[id] = true;
	  },
	  onUpdateComponent: function (id) {
	    updateTree(id, function (item) {
	      return item.updateCount++;
	    });
	  },
	  onUnmountComponent: function (id) {
	    updateTree(id, function (item) {
	      return item.isMounted = false;
	    });
	    unmountedIDs[id] = true;
	    delete rootIDs[id];
	  },
	  purgeUnmountedComponents: function () {
	    if (ReactComponentTreeDevtool._preventPurging) {
	      // Should only be used for testing.
	      return;
	    }

	    for (var id in unmountedIDs) {
	      purgeDeep(id);
	    }
	    unmountedIDs = {};
	  },
	  isMounted: function (id) {
	    var item = tree[id];
	    return item ? item.isMounted : false;
	  },
	  getCurrentStackAddendum: function (topElement) {
	    var info = '';
	    if (topElement) {
	      var type = topElement.type;
	      var name = typeof type === 'function' ? type.displayName || type.name : type;
	      var owner = topElement._owner;
	      info += describeComponentFrame(name || 'Unknown', topElement._source, owner && owner.getName());
	    }

	    var currentOwner = ReactCurrentOwner.current;
	    var id = currentOwner && currentOwner._debugID;

	    info += ReactComponentTreeDevtool.getStackAddendumByID(id);
	    return info;
	  },
	  getStackAddendumByID: function (id) {
	    var info = '';
	    while (id) {
	      info += describeID(id);
	      id = ReactComponentTreeDevtool.getParentID(id);
	    }
	    return info;
	  },
	  getChildIDs: function (id) {
	    var item = tree[id];
	    return item ? item.childIDs : [];
	  },
	  getDisplayName: function (id) {
	    var item = tree[id];
	    return item ? item.displayName : 'Unknown';
	  },
	  getElement: function (id) {
	    var item = tree[id];
	    return item ? item.element : null;
	  },
	  getOwnerID: function (id) {
	    var item = tree[id];
	    return item ? item.ownerID : null;
	  },
	  getParentID: function (id) {
	    var item = tree[id];
	    return item ? item.parentID : null;
	  },
	  getSource: function (id) {
	    var item = tree[id];
	    var element = item ? item.element : null;
	    var source = element != null ? element._source : null;
	    return source;
	  },
	  getText: function (id) {
	    var item = tree[id];
	    return item ? item.text : null;
	  },
	  getUpdateCount: function (id) {
	    var item = tree[id];
	    return item ? item.updateCount : 0;
	  },
	  getRootIDs: function () {
	    return Object.keys(rootIDs);
	  },
	  getRegisteredIDs: function () {
	    return Object.keys(tree);
	  }
	};

	module.exports = ReactComponentTreeDevtool;

/***/ },
/* 45 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactErrorUtils
	 */

	'use strict';

	var caughtError = null;

	/**
	 * Call a function while guarding against errors that happens within it.
	 *
	 * @param {?String} name of the guard to use for logging or debugging
	 * @param {Function} func The function to invoke
	 * @param {*} a First argument
	 * @param {*} b Second argument
	 */
	function invokeGuardedCallback(name, func, a, b) {
	  try {
	    return func(a, b);
	  } catch (x) {
	    if (caughtError === null) {
	      caughtError = x;
	    }
	    return undefined;
	  }
	}

	var ReactErrorUtils = {
	  invokeGuardedCallback: invokeGuardedCallback,

	  /**
	   * Invoked by ReactTestUtils.Simulate so that any errors thrown by the event
	   * handler are sure to be rethrown by rethrowCaughtError.
	   */
	  invokeGuardedCallbackWithCatch: invokeGuardedCallback,

	  /**
	   * During execution of guarded functions we will capture the first error which
	   * we will rethrow to be handled by the top level error handler.
	   */
	  rethrowCaughtError: function () {
	    if (caughtError) {
	      var error = caughtError;
	      caughtError = null;
	      throw error;
	    }
	  }
	};

	if (false) {
	  /**
	   * To help development we can get better devtools integration by simulating a
	   * real browser event.
	   */
	  if (typeof window !== 'undefined' && typeof window.dispatchEvent === 'function' && typeof document !== 'undefined' && typeof document.createEvent === 'function') {
	    var fakeNode = document.createElement('react');
	    ReactErrorUtils.invokeGuardedCallback = function (name, func, a, b) {
	      var boundFunc = func.bind(null, a, b);
	      var evtType = 'react-' + name;
	      fakeNode.addEventListener(evtType, boundFunc, false);
	      var evt = document.createEvent('Event');
	      evt.initEvent(evtType, false, false);
	      fakeNode.dispatchEvent(evt);
	      fakeNode.removeEventListener(evtType, boundFunc, false);
	    };
	  }
	}

	module.exports = ReactErrorUtils;

/***/ },
/* 46 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2015-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactNoopUpdateQueue
	 */

	'use strict';

	var warning = __webpack_require__(3);

	function warnNoop(publicInstance, callerName) {
	  if (false) {
	    var constructor = publicInstance.constructor;
	    process.env.NODE_ENV !== 'production' ? warning(false, '%s(...): Can only update a mounted or mounting component. ' + 'This usually means you called %s() on an unmounted component. ' + 'This is a no-op. Please check the code for the %s component.', callerName, callerName, constructor && (constructor.displayName || constructor.name) || 'ReactClass') : void 0;
	  }
	}

	/**
	 * This is the abstract API for an update queue.
	 */
	var ReactNoopUpdateQueue = {

	  /**
	   * Checks whether or not this composite component is mounted.
	   * @param {ReactClass} publicInstance The instance we want to test.
	   * @return {boolean} True if mounted, false otherwise.
	   * @protected
	   * @final
	   */
	  isMounted: function (publicInstance) {
	    return false;
	  },

	  /**
	   * Enqueue a callback that will be executed after all the pending updates
	   * have processed.
	   *
	   * @param {ReactClass} publicInstance The instance to use as `this` context.
	   * @param {?function} callback Called after state is updated.
	   * @internal
	   */
	  enqueueCallback: function (publicInstance, callback) {},

	  /**
	   * Forces an update. This should only be invoked when it is known with
	   * certainty that we are **not** in a DOM transaction.
	   *
	   * You may want to call this when you know that some deeper aspect of the
	   * component's state has changed but `setState` was not called.
	   *
	   * This will not invoke `shouldComponentUpdate`, but it will invoke
	   * `componentWillUpdate` and `componentDidUpdate`.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @internal
	   */
	  enqueueForceUpdate: function (publicInstance) {
	    warnNoop(publicInstance, 'forceUpdate');
	  },

	  /**
	   * Replaces all of the state. Always use this or `setState` to mutate state.
	   * You should treat `this.state` as immutable.
	   *
	   * There is no guarantee that `this.state` will be immediately updated, so
	   * accessing `this.state` after calling this method may return the old value.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object} completeState Next state.
	   * @internal
	   */
	  enqueueReplaceState: function (publicInstance, completeState) {
	    warnNoop(publicInstance, 'replaceState');
	  },

	  /**
	   * Sets a subset of the state. This only exists because _pendingState is
	   * internal. This provides a merging strategy that is not available to deep
	   * properties which is confusing. TODO: Expose pendingState or don't use it
	   * during the merge.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object} partialState Next partial state to be merged with state.
	   * @internal
	   */
	  enqueueSetState: function (publicInstance, partialState) {
	    warnNoop(publicInstance, 'setState');
	  }
	};

	module.exports = ReactNoopUpdateQueue;

/***/ },
/* 47 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactPropTypeLocationNames
	 */

	'use strict';

	var ReactPropTypeLocationNames = {};

	if (false) {
	  ReactPropTypeLocationNames = {
	    prop: 'prop',
	    context: 'context',
	    childContext: 'child context'
	  };
	}

	module.exports = ReactPropTypeLocationNames;

/***/ },
/* 48 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactPropTypeLocations
	 */

	'use strict';

	var keyMirror = __webpack_require__(26);

	var ReactPropTypeLocations = keyMirror({
	  prop: null,
	  context: null,
	  childContext: null
	});

	module.exports = ReactPropTypeLocations;

/***/ },
/* 49 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactPropTypesSecret
	 */

	'use strict';

	var ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';

	module.exports = ReactPropTypesSecret;

/***/ },
/* 50 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2015-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactUpdateQueue
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(2);

	var ReactCurrentOwner = __webpack_require__(16);
	var ReactInstanceMap = __webpack_require__(23);
	var ReactInstrumentation = __webpack_require__(8);
	var ReactUpdates = __webpack_require__(11);

	var invariant = __webpack_require__(1);
	var warning = __webpack_require__(3);

	function enqueueUpdate(internalInstance) {
	  ReactUpdates.enqueueUpdate(internalInstance);
	}

	function formatUnexpectedArgument(arg) {
	  var type = typeof arg;
	  if (type !== 'object') {
	    return type;
	  }
	  var displayName = arg.constructor && arg.constructor.name || type;
	  var keys = Object.keys(arg);
	  if (keys.length > 0 && keys.length < 20) {
	    return displayName + ' (keys: ' + keys.join(', ') + ')';
	  }
	  return displayName;
	}

	function getInternalInstanceReadyForUpdate(publicInstance, callerName) {
	  var internalInstance = ReactInstanceMap.get(publicInstance);
	  if (!internalInstance) {
	    if (false) {
	      var ctor = publicInstance.constructor;
	      // Only warn when we have a callerName. Otherwise we should be silent.
	      // We're probably calling from enqueueCallback. We don't want to warn
	      // there because we already warned for the corresponding lifecycle method.
	      process.env.NODE_ENV !== 'production' ? warning(!callerName, '%s(...): Can only update a mounted or mounting component. ' + 'This usually means you called %s() on an unmounted component. ' + 'This is a no-op. Please check the code for the %s component.', callerName, callerName, ctor && (ctor.displayName || ctor.name) || 'ReactClass') : void 0;
	    }
	    return null;
	  }

	  if (false) {
	    process.env.NODE_ENV !== 'production' ? warning(ReactCurrentOwner.current == null, '%s(...): Cannot update during an existing state transition (such as ' + 'within `render` or another component\'s constructor). Render methods ' + 'should be a pure function of props and state; constructor ' + 'side-effects are an anti-pattern, but can be moved to ' + '`componentWillMount`.', callerName) : void 0;
	  }

	  return internalInstance;
	}

	/**
	 * ReactUpdateQueue allows for state updates to be scheduled into a later
	 * reconciliation step.
	 */
	var ReactUpdateQueue = {

	  /**
	   * Checks whether or not this composite component is mounted.
	   * @param {ReactClass} publicInstance The instance we want to test.
	   * @return {boolean} True if mounted, false otherwise.
	   * @protected
	   * @final
	   */
	  isMounted: function (publicInstance) {
	    if (false) {
	      var owner = ReactCurrentOwner.current;
	      if (owner !== null) {
	        process.env.NODE_ENV !== 'production' ? warning(owner._warnedAboutRefsInRender, '%s is accessing isMounted inside its render() function. ' + 'render() should be a pure function of props and state. It should ' + 'never access something that requires stale data from the previous ' + 'render, such as refs. Move this logic to componentDidMount and ' + 'componentDidUpdate instead.', owner.getName() || 'A component') : void 0;
	        owner._warnedAboutRefsInRender = true;
	      }
	    }
	    var internalInstance = ReactInstanceMap.get(publicInstance);
	    if (internalInstance) {
	      // During componentWillMount and render this will still be null but after
	      // that will always render to something. At least for now. So we can use
	      // this hack.
	      return !!internalInstance._renderedComponent;
	    } else {
	      return false;
	    }
	  },

	  /**
	   * Enqueue a callback that will be executed after all the pending updates
	   * have processed.
	   *
	   * @param {ReactClass} publicInstance The instance to use as `this` context.
	   * @param {?function} callback Called after state is updated.
	   * @param {string} callerName Name of the calling function in the public API.
	   * @internal
	   */
	  enqueueCallback: function (publicInstance, callback, callerName) {
	    ReactUpdateQueue.validateCallback(callback, callerName);
	    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance);

	    // Previously we would throw an error if we didn't have an internal
	    // instance. Since we want to make it a no-op instead, we mirror the same
	    // behavior we have in other enqueue* methods.
	    // We also need to ignore callbacks in componentWillMount. See
	    // enqueueUpdates.
	    if (!internalInstance) {
	      return null;
	    }

	    if (internalInstance._pendingCallbacks) {
	      internalInstance._pendingCallbacks.push(callback);
	    } else {
	      internalInstance._pendingCallbacks = [callback];
	    }
	    // TODO: The callback here is ignored when setState is called from
	    // componentWillMount. Either fix it or disallow doing so completely in
	    // favor of getInitialState. Alternatively, we can disallow
	    // componentWillMount during server-side rendering.
	    enqueueUpdate(internalInstance);
	  },

	  enqueueCallbackInternal: function (internalInstance, callback) {
	    if (internalInstance._pendingCallbacks) {
	      internalInstance._pendingCallbacks.push(callback);
	    } else {
	      internalInstance._pendingCallbacks = [callback];
	    }
	    enqueueUpdate(internalInstance);
	  },

	  /**
	   * Forces an update. This should only be invoked when it is known with
	   * certainty that we are **not** in a DOM transaction.
	   *
	   * You may want to call this when you know that some deeper aspect of the
	   * component's state has changed but `setState` was not called.
	   *
	   * This will not invoke `shouldComponentUpdate`, but it will invoke
	   * `componentWillUpdate` and `componentDidUpdate`.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @internal
	   */
	  enqueueForceUpdate: function (publicInstance) {
	    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'forceUpdate');

	    if (!internalInstance) {
	      return;
	    }

	    internalInstance._pendingForceUpdate = true;

	    enqueueUpdate(internalInstance);
	  },

	  /**
	   * Replaces all of the state. Always use this or `setState` to mutate state.
	   * You should treat `this.state` as immutable.
	   *
	   * There is no guarantee that `this.state` will be immediately updated, so
	   * accessing `this.state` after calling this method may return the old value.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object} completeState Next state.
	   * @internal
	   */
	  enqueueReplaceState: function (publicInstance, completeState) {
	    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'replaceState');

	    if (!internalInstance) {
	      return;
	    }

	    internalInstance._pendingStateQueue = [completeState];
	    internalInstance._pendingReplaceState = true;

	    enqueueUpdate(internalInstance);
	  },

	  /**
	   * Sets a subset of the state. This only exists because _pendingState is
	   * internal. This provides a merging strategy that is not available to deep
	   * properties which is confusing. TODO: Expose pendingState or don't use it
	   * during the merge.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object} partialState Next partial state to be merged with state.
	   * @internal
	   */
	  enqueueSetState: function (publicInstance, partialState) {
	    if (false) {
	      ReactInstrumentation.debugTool.onSetState();
	      process.env.NODE_ENV !== 'production' ? warning(partialState != null, 'setState(...): You passed an undefined or null state object; ' + 'instead, use forceUpdate().') : void 0;
	    }

	    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'setState');

	    if (!internalInstance) {
	      return;
	    }

	    var queue = internalInstance._pendingStateQueue || (internalInstance._pendingStateQueue = []);
	    queue.push(partialState);

	    enqueueUpdate(internalInstance);
	  },

	  enqueueElementInternal: function (internalInstance, nextElement, nextContext) {
	    internalInstance._pendingElement = nextElement;
	    // TODO: introduce _pendingContext instead of setting it directly.
	    internalInstance._context = nextContext;
	    enqueueUpdate(internalInstance);
	  },

	  validateCallback: function (callback, callerName) {
	    !(!callback || typeof callback === 'function') ?  false ? invariant(false, '%s(...): Expected the last optional `callback` argument to be a function. Instead received: %s.', callerName, formatUnexpectedArgument(callback)) : _prodInvariant('122', callerName, formatUnexpectedArgument(callback)) : void 0;
	  }

	};

	module.exports = ReactUpdateQueue;

/***/ },
/* 51 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule createMicrosoftUnsafeLocalFunction
	 */

	/* globals MSApp */

	'use strict';

	/**
	 * Create a function which has 'unsafe' privileges (required by windows8 apps)
	 */

	var createMicrosoftUnsafeLocalFunction = function (func) {
	  if (typeof MSApp !== 'undefined' && MSApp.execUnsafeLocalFunction) {
	    return function (arg0, arg1, arg2, arg3) {
	      MSApp.execUnsafeLocalFunction(function () {
	        return func(arg0, arg1, arg2, arg3);
	      });
	    };
	  } else {
	    return func;
	  }
	};

	module.exports = createMicrosoftUnsafeLocalFunction;

/***/ },
/* 52 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getEventCharCode
	 */

	'use strict';

	/**
	 * `charCode` represents the actual "character code" and is safe to use with
	 * `String.fromCharCode`. As such, only keys that correspond to printable
	 * characters produce a valid `charCode`, the only exception to this is Enter.
	 * The Tab-key is considered non-printable and does not have a `charCode`,
	 * presumably because it does not produce a tab-character in browsers.
	 *
	 * @param {object} nativeEvent Native browser event.
	 * @return {number} Normalized `charCode` property.
	 */

	function getEventCharCode(nativeEvent) {
	  var charCode;
	  var keyCode = nativeEvent.keyCode;

	  if ('charCode' in nativeEvent) {
	    charCode = nativeEvent.charCode;

	    // FF does not set `charCode` for the Enter-key, check against `keyCode`.
	    if (charCode === 0 && keyCode === 13) {
	      charCode = 13;
	    }
	  } else {
	    // IE8 does not implement `charCode`, but `keyCode` has the correct value.
	    charCode = keyCode;
	  }

	  // Some non-printable keys are reported in `charCode`/`keyCode`, discard them.
	  // Must not discard the (non-)printable Enter-key.
	  if (charCode >= 32 || charCode === 13) {
	    return charCode;
	  }

	  return 0;
	}

	module.exports = getEventCharCode;

/***/ },
/* 53 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getEventModifierState
	 */

	'use strict';

	/**
	 * Translation from modifier key to the associated property in the event.
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/#keys-Modifiers
	 */

	var modifierKeyToProp = {
	  'Alt': 'altKey',
	  'Control': 'ctrlKey',
	  'Meta': 'metaKey',
	  'Shift': 'shiftKey'
	};

	// IE8 does not implement getModifierState so we simply map it to the only
	// modifier keys exposed by the event itself, does not support Lock-keys.
	// Currently, all major browsers except Chrome seems to support Lock-keys.
	function modifierStateGetter(keyArg) {
	  var syntheticEvent = this;
	  var nativeEvent = syntheticEvent.nativeEvent;
	  if (nativeEvent.getModifierState) {
	    return nativeEvent.getModifierState(keyArg);
	  }
	  var keyProp = modifierKeyToProp[keyArg];
	  return keyProp ? !!nativeEvent[keyProp] : false;
	}

	function getEventModifierState(nativeEvent) {
	  return modifierStateGetter;
	}

	module.exports = getEventModifierState;

/***/ },
/* 54 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getEventTarget
	 */

	'use strict';

	/**
	 * Gets the target node from a native browser event by accounting for
	 * inconsistencies in browser DOM APIs.
	 *
	 * @param {object} nativeEvent Native browser event.
	 * @return {DOMEventTarget} Target node.
	 */

	function getEventTarget(nativeEvent) {
	  var target = nativeEvent.target || nativeEvent.srcElement || window;

	  // Normalize SVG <use> element events #4963
	  if (target.correspondingUseElement) {
	    target = target.correspondingUseElement;
	  }

	  // Safari may fire events on text nodes (Node.TEXT_NODE is 3).
	  // @see http://www.quirksmode.org/js/events_properties.html
	  return target.nodeType === 3 ? target.parentNode : target;
	}

	module.exports = getEventTarget;

/***/ },
/* 55 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule isEventSupported
	 */

	'use strict';

	var ExecutionEnvironment = __webpack_require__(7);

	var useHasFeature;
	if (ExecutionEnvironment.canUseDOM) {
	  useHasFeature = document.implementation && document.implementation.hasFeature &&
	  // always returns true in newer browsers as per the standard.
	  // @see http://dom.spec.whatwg.org/#dom-domimplementation-hasfeature
	  document.implementation.hasFeature('', '') !== true;
	}

	/**
	 * Checks if an event is supported in the current execution environment.
	 *
	 * NOTE: This will not work correctly for non-generic events such as `change`,
	 * `reset`, `load`, `error`, and `select`.
	 *
	 * Borrows from Modernizr.
	 *
	 * @param {string} eventNameSuffix Event name, e.g. "click".
	 * @param {?boolean} capture Check if the capture phase is supported.
	 * @return {boolean} True if the event is supported.
	 * @internal
	 * @license Modernizr 3.0.0pre (Custom Build) | MIT
	 */
	function isEventSupported(eventNameSuffix, capture) {
	  if (!ExecutionEnvironment.canUseDOM || capture && !('addEventListener' in document)) {
	    return false;
	  }

	  var eventName = 'on' + eventNameSuffix;
	  var isSupported = eventName in document;

	  if (!isSupported) {
	    var element = document.createElement('div');
	    element.setAttribute(eventName, 'return;');
	    isSupported = typeof element[eventName] === 'function';
	  }

	  if (!isSupported && useHasFeature && eventNameSuffix === 'wheel') {
	    // This is the only way to test support for the `wheel` event in IE9+.
	    isSupported = document.implementation.hasFeature('Events.wheel', '3.0');
	  }

	  return isSupported;
	}

	module.exports = isEventSupported;

/***/ },
/* 56 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule shouldUpdateReactComponent
	 */

	'use strict';

	/**
	 * Given a `prevElement` and `nextElement`, determines if the existing
	 * instance should be updated as opposed to being destroyed or replaced by a new
	 * instance. Both arguments are elements. This ensures that this logic can
	 * operate on stateless trees without any backing instance.
	 *
	 * @param {?object} prevElement
	 * @param {?object} nextElement
	 * @return {boolean} True if the existing instance should be updated.
	 * @protected
	 */

	function shouldUpdateReactComponent(prevElement, nextElement) {
	  var prevEmpty = prevElement === null || prevElement === false;
	  var nextEmpty = nextElement === null || nextElement === false;
	  if (prevEmpty || nextEmpty) {
	    return prevEmpty === nextEmpty;
	  }

	  var prevType = typeof prevElement;
	  var nextType = typeof nextElement;
	  if (prevType === 'string' || prevType === 'number') {
	    return nextType === 'string' || nextType === 'number';
	  } else {
	    return nextType === 'object' && prevElement.type === nextElement.type && prevElement.key === nextElement.key;
	  }
	}

	module.exports = shouldUpdateReactComponent;

/***/ },
/* 57 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule traverseAllChildren
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(2);

	var ReactCurrentOwner = __webpack_require__(16);
	var ReactElement = __webpack_require__(10);

	var getIteratorFn = __webpack_require__(91);
	var invariant = __webpack_require__(1);
	var KeyEscapeUtils = __webpack_require__(40);
	var warning = __webpack_require__(3);

	var SEPARATOR = '.';
	var SUBSEPARATOR = ':';

	/**
	 * TODO: Test that a single child and an array with one item have the same key
	 * pattern.
	 */

	var didWarnAboutMaps = false;

	/**
	 * Generate a key string that identifies a component within a set.
	 *
	 * @param {*} component A component that could contain a manual key.
	 * @param {number} index Index that is used if a manual key is not provided.
	 * @return {string}
	 */
	function getComponentKey(component, index) {
	  // Do some typechecking here since we call this blindly. We want to ensure
	  // that we don't block potential future ES APIs.
	  if (component && typeof component === 'object' && component.key != null) {
	    // Explicit key
	    return KeyEscapeUtils.escape(component.key);
	  }
	  // Implicit key determined by the index in the set
	  return index.toString(36);
	}

	/**
	 * @param {?*} children Children tree container.
	 * @param {!string} nameSoFar Name of the key path so far.
	 * @param {!function} callback Callback to invoke with each child found.
	 * @param {?*} traverseContext Used to pass information throughout the traversal
	 * process.
	 * @return {!number} The number of children in this subtree.
	 */
	function traverseAllChildrenImpl(children, nameSoFar, callback, traverseContext) {
	  var type = typeof children;

	  if (type === 'undefined' || type === 'boolean') {
	    // All of the above are perceived as null.
	    children = null;
	  }

	  if (children === null || type === 'string' || type === 'number' || ReactElement.isValidElement(children)) {
	    callback(traverseContext, children,
	    // If it's the only child, treat the name as if it was wrapped in an array
	    // so that it's consistent if the number of children grows.
	    nameSoFar === '' ? SEPARATOR + getComponentKey(children, 0) : nameSoFar);
	    return 1;
	  }

	  var child;
	  var nextName;
	  var subtreeCount = 0; // Count of children found in the current subtree.
	  var nextNamePrefix = nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;

	  if (Array.isArray(children)) {
	    for (var i = 0; i < children.length; i++) {
	      child = children[i];
	      nextName = nextNamePrefix + getComponentKey(child, i);
	      subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
	    }
	  } else {
	    var iteratorFn = getIteratorFn(children);
	    if (iteratorFn) {
	      var iterator = iteratorFn.call(children);
	      var step;
	      if (iteratorFn !== children.entries) {
	        var ii = 0;
	        while (!(step = iterator.next()).done) {
	          child = step.value;
	          nextName = nextNamePrefix + getComponentKey(child, ii++);
	          subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
	        }
	      } else {
	        if (false) {
	          var mapsAsChildrenAddendum = '';
	          if (ReactCurrentOwner.current) {
	            var mapsAsChildrenOwnerName = ReactCurrentOwner.current.getName();
	            if (mapsAsChildrenOwnerName) {
	              mapsAsChildrenAddendum = ' Check the render method of `' + mapsAsChildrenOwnerName + '`.';
	            }
	          }
	          process.env.NODE_ENV !== 'production' ? warning(didWarnAboutMaps, 'Using Maps as children is not yet fully supported. It is an ' + 'experimental feature that might be removed. Convert it to a ' + 'sequence / iterable of keyed ReactElements instead.%s', mapsAsChildrenAddendum) : void 0;
	          didWarnAboutMaps = true;
	        }
	        // Iterator will provide entry [k,v] tuples rather than values.
	        while (!(step = iterator.next()).done) {
	          var entry = step.value;
	          if (entry) {
	            child = entry[1];
	            nextName = nextNamePrefix + KeyEscapeUtils.escape(entry[0]) + SUBSEPARATOR + getComponentKey(child, 0);
	            subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
	          }
	        }
	      }
	    } else if (type === 'object') {
	      var addendum = '';
	      if (false) {
	        addendum = ' If you meant to render a collection of children, use an array ' + 'instead or wrap the object using createFragment(object) from the ' + 'React add-ons.';
	        if (children._isReactElement) {
	          addendum = ' It looks like you\'re using an element created by a different ' + 'version of React. Make sure to use only one copy of React.';
	        }
	        if (ReactCurrentOwner.current) {
	          var name = ReactCurrentOwner.current.getName();
	          if (name) {
	            addendum += ' Check the render method of `' + name + '`.';
	          }
	        }
	      }
	      var childrenString = String(children);
	       true ?  false ? invariant(false, 'Objects are not valid as a React child (found: %s).%s', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum) : _prodInvariant('31', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum) : void 0;
	    }
	  }

	  return subtreeCount;
	}

	/**
	 * Traverses children that are typically specified as `props.children`, but
	 * might also be specified through attributes:
	 *
	 * - `traverseAllChildren(this.props.children, ...)`
	 * - `traverseAllChildren(this.props.leftPanelChildren, ...)`
	 *
	 * The `traverseContext` is an optional argument that is passed through the
	 * entire traversal. It can be used to store accumulations or anything else that
	 * the callback might find relevant.
	 *
	 * @param {?*} children Children tree object.
	 * @param {!function} callback To invoke upon traversing each child.
	 * @param {?*} traverseContext Context for traversal.
	 * @return {!number} The number of children in this subtree.
	 */
	function traverseAllChildren(children, callback, traverseContext) {
	  if (children == null) {
	    return 0;
	  }

	  return traverseAllChildrenImpl(children, '', callback, traverseContext);
	}

	module.exports = traverseAllChildren;

/***/ },
/* 58 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2015-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule validateDOMNesting
	 */

	'use strict';

	var _assign = __webpack_require__(4);

	var emptyFunction = __webpack_require__(9);
	var warning = __webpack_require__(3);

	var validateDOMNesting = emptyFunction;

	if (false) {
	  // This validation code was written based on the HTML5 parsing spec:
	  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope
	  //
	  // Note: this does not catch all invalid nesting, nor does it try to (as it's
	  // not clear what practical benefit doing so provides); instead, we warn only
	  // for cases where the parser will give a parse tree differing from what React
	  // intended. For example, <b><div></div></b> is invalid but we don't warn
	  // because it still parses correctly; we do warn for other cases like nested
	  // <p> tags where the beginning of the second element implicitly closes the
	  // first, causing a confusing mess.

	  // https://html.spec.whatwg.org/multipage/syntax.html#special
	  var specialTags = ['address', 'applet', 'area', 'article', 'aside', 'base', 'basefont', 'bgsound', 'blockquote', 'body', 'br', 'button', 'caption', 'center', 'col', 'colgroup', 'dd', 'details', 'dir', 'div', 'dl', 'dt', 'embed', 'fieldset', 'figcaption', 'figure', 'footer', 'form', 'frame', 'frameset', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'iframe', 'img', 'input', 'isindex', 'li', 'link', 'listing', 'main', 'marquee', 'menu', 'menuitem', 'meta', 'nav', 'noembed', 'noframes', 'noscript', 'object', 'ol', 'p', 'param', 'plaintext', 'pre', 'script', 'section', 'select', 'source', 'style', 'summary', 'table', 'tbody', 'td', 'template', 'textarea', 'tfoot', 'th', 'thead', 'title', 'tr', 'track', 'ul', 'wbr', 'xmp'];

	  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope
	  var inScopeTags = ['applet', 'caption', 'html', 'table', 'td', 'th', 'marquee', 'object', 'template',

	  // https://html.spec.whatwg.org/multipage/syntax.html#html-integration-point
	  // TODO: Distinguish by namespace here -- for <title>, including it here
	  // errs on the side of fewer warnings
	  'foreignObject', 'desc', 'title'];

	  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-button-scope
	  var buttonScopeTags = inScopeTags.concat(['button']);

	  // https://html.spec.whatwg.org/multipage/syntax.html#generate-implied-end-tags
	  var impliedEndTags = ['dd', 'dt', 'li', 'option', 'optgroup', 'p', 'rp', 'rt'];

	  var emptyAncestorInfo = {
	    current: null,

	    formTag: null,
	    aTagInScope: null,
	    buttonTagInScope: null,
	    nobrTagInScope: null,
	    pTagInButtonScope: null,

	    listItemTagAutoclosing: null,
	    dlItemTagAutoclosing: null
	  };

	  var updatedAncestorInfo = function (oldInfo, tag, instance) {
	    var ancestorInfo = _assign({}, oldInfo || emptyAncestorInfo);
	    var info = { tag: tag, instance: instance };

	    if (inScopeTags.indexOf(tag) !== -1) {
	      ancestorInfo.aTagInScope = null;
	      ancestorInfo.buttonTagInScope = null;
	      ancestorInfo.nobrTagInScope = null;
	    }
	    if (buttonScopeTags.indexOf(tag) !== -1) {
	      ancestorInfo.pTagInButtonScope = null;
	    }

	    // See rules for 'li', 'dd', 'dt' start tags in
	    // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody
	    if (specialTags.indexOf(tag) !== -1 && tag !== 'address' && tag !== 'div' && tag !== 'p') {
	      ancestorInfo.listItemTagAutoclosing = null;
	      ancestorInfo.dlItemTagAutoclosing = null;
	    }

	    ancestorInfo.current = info;

	    if (tag === 'form') {
	      ancestorInfo.formTag = info;
	    }
	    if (tag === 'a') {
	      ancestorInfo.aTagInScope = info;
	    }
	    if (tag === 'button') {
	      ancestorInfo.buttonTagInScope = info;
	    }
	    if (tag === 'nobr') {
	      ancestorInfo.nobrTagInScope = info;
	    }
	    if (tag === 'p') {
	      ancestorInfo.pTagInButtonScope = info;
	    }
	    if (tag === 'li') {
	      ancestorInfo.listItemTagAutoclosing = info;
	    }
	    if (tag === 'dd' || tag === 'dt') {
	      ancestorInfo.dlItemTagAutoclosing = info;
	    }

	    return ancestorInfo;
	  };

	  /**
	   * Returns whether
	   */
	  var isTagValidWithParent = function (tag, parentTag) {
	    // First, var's check if we're in an unusual parsing mode...
	    switch (parentTag) {
	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inselect
	      case 'select':
	        return tag === 'option' || tag === 'optgroup' || tag === '#text';
	      case 'optgroup':
	        return tag === 'option' || tag === '#text';
	      // Strictly speaking, seeing an <option> doesn't mean we're in a <select>
	      // but
	      case 'option':
	        return tag === '#text';

	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intd
	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incaption
	      // No special behavior since these rules fall back to "in body" mode for
	      // all except special table nodes which cause bad parsing behavior anyway.

	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intr
	      case 'tr':
	        return tag === 'th' || tag === 'td' || tag === 'style' || tag === 'script' || tag === 'template';

	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intbody
	      case 'tbody':
	      case 'thead':
	      case 'tfoot':
	        return tag === 'tr' || tag === 'style' || tag === 'script' || tag === 'template';

	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incolgroup
	      case 'colgroup':
	        return tag === 'col' || tag === 'template';

	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intable
	      case 'table':
	        return tag === 'caption' || tag === 'colgroup' || tag === 'tbody' || tag === 'tfoot' || tag === 'thead' || tag === 'style' || tag === 'script' || tag === 'template';

	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inhead
	      case 'head':
	        return tag === 'base' || tag === 'basefont' || tag === 'bgsound' || tag === 'link' || tag === 'meta' || tag === 'title' || tag === 'noscript' || tag === 'noframes' || tag === 'style' || tag === 'script' || tag === 'template';

	      // https://html.spec.whatwg.org/multipage/semantics.html#the-html-element
	      case 'html':
	        return tag === 'head' || tag === 'body';
	      case '#document':
	        return tag === 'html';
	    }

	    // Probably in the "in body" parsing mode, so we outlaw only tag combos
	    // where the parsing rules cause implicit opens or closes to be added.
	    // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody
	    switch (tag) {
	      case 'h1':
	      case 'h2':
	      case 'h3':
	      case 'h4':
	      case 'h5':
	      case 'h6':
	        return parentTag !== 'h1' && parentTag !== 'h2' && parentTag !== 'h3' && parentTag !== 'h4' && parentTag !== 'h5' && parentTag !== 'h6';

	      case 'rp':
	      case 'rt':
	        return impliedEndTags.indexOf(parentTag) === -1;

	      case 'body':
	      case 'caption':
	      case 'col':
	      case 'colgroup':
	      case 'frame':
	      case 'head':
	      case 'html':
	      case 'tbody':
	      case 'td':
	      case 'tfoot':
	      case 'th':
	      case 'thead':
	      case 'tr':
	        // These tags are only valid with a few parents that have special child
	        // parsing rules -- if we're down here, then none of those matched and
	        // so we allow it only if we don't know what the parent is, as all other
	        // cases are invalid.
	        return parentTag == null;
	    }

	    return true;
	  };

	  /**
	   * Returns whether
	   */
	  var findInvalidAncestorForTag = function (tag, ancestorInfo) {
	    switch (tag) {
	      case 'address':
	      case 'article':
	      case 'aside':
	      case 'blockquote':
	      case 'center':
	      case 'details':
	      case 'dialog':
	      case 'dir':
	      case 'div':
	      case 'dl':
	      case 'fieldset':
	      case 'figcaption':
	      case 'figure':
	      case 'footer':
	      case 'header':
	      case 'hgroup':
	      case 'main':
	      case 'menu':
	      case 'nav':
	      case 'ol':
	      case 'p':
	      case 'section':
	      case 'summary':
	      case 'ul':

	      case 'pre':
	      case 'listing':

	      case 'table':

	      case 'hr':

	      case 'xmp':

	      case 'h1':
	      case 'h2':
	      case 'h3':
	      case 'h4':
	      case 'h5':
	      case 'h6':
	        return ancestorInfo.pTagInButtonScope;

	      case 'form':
	        return ancestorInfo.formTag || ancestorInfo.pTagInButtonScope;

	      case 'li':
	        return ancestorInfo.listItemTagAutoclosing;

	      case 'dd':
	      case 'dt':
	        return ancestorInfo.dlItemTagAutoclosing;

	      case 'button':
	        return ancestorInfo.buttonTagInScope;

	      case 'a':
	        // Spec says something about storing a list of markers, but it sounds
	        // equivalent to this check.
	        return ancestorInfo.aTagInScope;

	      case 'nobr':
	        return ancestorInfo.nobrTagInScope;
	    }

	    return null;
	  };

	  /**
	   * Given a ReactCompositeComponent instance, return a list of its recursive
	   * owners, starting at the root and ending with the instance itself.
	   */
	  var findOwnerStack = function (instance) {
	    if (!instance) {
	      return [];
	    }

	    var stack = [];
	    do {
	      stack.push(instance);
	    } while (instance = instance._currentElement._owner);
	    stack.reverse();
	    return stack;
	  };

	  var didWarn = {};

	  validateDOMNesting = function (childTag, childInstance, ancestorInfo) {
	    ancestorInfo = ancestorInfo || emptyAncestorInfo;
	    var parentInfo = ancestorInfo.current;
	    var parentTag = parentInfo && parentInfo.tag;

	    var invalidParent = isTagValidWithParent(childTag, parentTag) ? null : parentInfo;
	    var invalidAncestor = invalidParent ? null : findInvalidAncestorForTag(childTag, ancestorInfo);
	    var problematic = invalidParent || invalidAncestor;

	    if (problematic) {
	      var ancestorTag = problematic.tag;
	      var ancestorInstance = problematic.instance;

	      var childOwner = childInstance && childInstance._currentElement._owner;
	      var ancestorOwner = ancestorInstance && ancestorInstance._currentElement._owner;

	      var childOwners = findOwnerStack(childOwner);
	      var ancestorOwners = findOwnerStack(ancestorOwner);

	      var minStackLen = Math.min(childOwners.length, ancestorOwners.length);
	      var i;

	      var deepestCommon = -1;
	      for (i = 0; i < minStackLen; i++) {
	        if (childOwners[i] === ancestorOwners[i]) {
	          deepestCommon = i;
	        } else {
	          break;
	        }
	      }

	      var UNKNOWN = '(unknown)';
	      var childOwnerNames = childOwners.slice(deepestCommon + 1).map(function (inst) {
	        return inst.getName() || UNKNOWN;
	      });
	      var ancestorOwnerNames = ancestorOwners.slice(deepestCommon + 1).map(function (inst) {
	        return inst.getName() || UNKNOWN;
	      });
	      var ownerInfo = [].concat(
	      // If the parent and child instances have a common owner ancestor, start
	      // with that -- otherwise we just start with the parent's owners.
	      deepestCommon !== -1 ? childOwners[deepestCommon].getName() || UNKNOWN : [], ancestorOwnerNames, ancestorTag,
	      // If we're warning about an invalid (non-parent) ancestry, add '...'
	      invalidAncestor ? ['...'] : [], childOwnerNames, childTag).join(' > ');

	      var warnKey = !!invalidParent + '|' + childTag + '|' + ancestorTag + '|' + ownerInfo;
	      if (didWarn[warnKey]) {
	        return;
	      }
	      didWarn[warnKey] = true;

	      var tagDisplayName = childTag;
	      if (childTag !== '#text') {
	        tagDisplayName = '<' + childTag + '>';
	      }

	      if (invalidParent) {
	        var info = '';
	        if (ancestorTag === 'table' && childTag === 'tr') {
	          info += ' Add a <tbody> to your code to match the DOM tree generated by ' + 'the browser.';
	        }
	        process.env.NODE_ENV !== 'production' ? warning(false, 'validateDOMNesting(...): %s cannot appear as a child of <%s>. ' + 'See %s.%s', tagDisplayName, ancestorTag, ownerInfo, info) : void 0;
	      } else {
	        process.env.NODE_ENV !== 'production' ? warning(false, 'validateDOMNesting(...): %s cannot appear as a descendant of ' + '<%s>. See %s.', tagDisplayName, ancestorTag, ownerInfo) : void 0;
	      }
	    }
	  };

	  validateDOMNesting.updatedAncestorInfo = updatedAncestorInfo;

	  // For testing
	  validateDOMNesting.isTagValidInContext = function (tag, ancestorInfo) {
	    ancestorInfo = ancestorInfo || emptyAncestorInfo;
	    var parentInfo = ancestorInfo.current;
	    var parentTag = parentInfo && parentInfo.tag;
	    return isTagValidWithParent(tag, parentTag) && !findInvalidAncestorForTag(tag, ancestorInfo);
	  };
	}

	module.exports = validateDOMNesting;

/***/ },
/* 59 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *
	 * @typechecks
	 */

	var emptyFunction = __webpack_require__(9);

	/**
	 * Upstream version of event listener. Does not take into account specific
	 * nature of platform.
	 */
	var EventListener = {
	  /**
	   * Listen to DOM events during the bubble phase.
	   *
	   * @param {DOMEventTarget} target DOM element to register listener on.
	   * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.
	   * @param {function} callback Callback function.
	   * @return {object} Object with a `remove` method.
	   */
	  listen: function listen(target, eventType, callback) {
	    if (target.addEventListener) {
	      target.addEventListener(eventType, callback, false);
	      return {
	        remove: function remove() {
	          target.removeEventListener(eventType, callback, false);
	        }
	      };
	    } else if (target.attachEvent) {
	      target.attachEvent('on' + eventType, callback);
	      return {
	        remove: function remove() {
	          target.detachEvent('on' + eventType, callback);
	        }
	      };
	    }
	  },

	  /**
	   * Listen to DOM events during the capture phase.
	   *
	   * @param {DOMEventTarget} target DOM element to register listener on.
	   * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.
	   * @param {function} callback Callback function.
	   * @return {object} Object with a `remove` method.
	   */
	  capture: function capture(target, eventType, callback) {
	    if (target.addEventListener) {
	      target.addEventListener(eventType, callback, true);
	      return {
	        remove: function remove() {
	          target.removeEventListener(eventType, callback, true);
	        }
	      };
	    } else {
	      if (false) {
	        console.error('Attempted to listen to events during the capture phase on a ' + 'browser that does not support the capture phase. Your application ' + 'will not receive some events.');
	      }
	      return {
	        remove: emptyFunction
	      };
	    }
	  },

	  registerDefault: function registerDefault() {}
	};

	module.exports = EventListener;

/***/ },
/* 60 */
/***/ function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	/**
	 * @param {DOMElement} node input/textarea to focus
	 */

	function focusNode(node) {
	  // IE8 can throw "Can't move focus to the control because it is invisible,
	  // not enabled, or of a type that does not accept the focus." for all kinds of
	  // reasons that are too expensive and fragile to test.
	  try {
	    node.focus();
	  } catch (e) {}
	}

	module.exports = focusNode;

/***/ },
/* 61 */
/***/ function(module, exports) {

	'use strict';

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */

	/* eslint-disable fb-www/typeof-undefined */

	/**
	 * Same as document.activeElement but wraps in a try-catch block. In IE it is
	 * not safe to call document.activeElement if there is nothing focused.
	 *
	 * The activeElement will be null only if the document or document body is not
	 * yet defined.
	 */
	function getActiveElement() /*?DOMElement*/{
	  if (typeof document === 'undefined') {
	    return null;
	  }
	  try {
	    return document.activeElement || document.body;
	  } catch (e) {
	    return document.body;
	  }
	}

	module.exports = getActiveElement;

/***/ },
/* 62 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	__webpack_require__(67);

	var _react = __webpack_require__(6);

	var _react2 = _interopRequireDefault(_react);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/* jshint esnext: true */

	function BoxV(_ref) {
	  var children = _ref.children;

	  return _react2.default.createElement(
	    'box-v',
	    null,
	    children
	  );
	}

	exports.default = BoxV;

/***/ },
/* 63 */
/***/ function(module, exports) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	/* jshint esnext: true */

	var FN = {};

	FN.percentage = function (value, total) {
	  if (!total || total === 0) {
	    return 0;
	  }
	  if (!value || value === 0) {
	    return 0;
	  }
	  return value / total * 100;
	};

	exports.default = FN;

/***/ },
/* 64 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";

	var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };

	/* jshint esnext: true */

	var FN = {};

	var NON_BREED = ["_ALL-DOGS_", "_ALL-PURE_", "_ALL-CROSS_", "_Unidentified_"];
	var DOG_GROUPS = { "_ALL-DOGS_": "all", "_ALL-PURE_": "pure", "_ALL-CROSS_": "cross" };
	var NUMERIC = 'total,female,male,desexed,chipped,menacing,dangerous'.split(',');

	function rowAsObject(values, fields) {
	  return values.reduce(function (acc, d, i) {
	    var key = fields[i];
	    if (key === undefined) {
	      console.log('[KEYx]', i,key,fields[i], d, values);
	    }
	    acc[fields[i]] = d;
	    return acc;
	  }, {});
	}

	function kv(obj) {
	  if (!obj || (typeof obj === "undefined" ? "undefined" : _typeof(obj)) !== "object") {
	    return [];
	  }
	  return [obj.key, obj.values];
	}

	function pickProperties(object, keys) {
	  if (!keys) {
	    console.log('[ERROR] No keys provided');
	  }
	  return keys.reduce(function (acc, k) {
	    acc[k] = object[k];
	    return acc;
	  }, {});
	}

	FN.loadData = function () {
	  var Nester = __webpack_require__(97);
	  var tsv = __webpack_require__(96);
	  var sep = "\t";
	  var lines = tsv.split('\n');
	  var header = lines.shift();
	  var fields = header.split(sep);

	  var CategoryKeys = {
	    OWN: 'probationary,disqualified,registered,infringements'.split(','),
	    JST: 'prosecutions,destruction'.split(','),
	    ACC: 'injuries,paid_any_yr,paid_this_yr'.split(','),
	    default: 'Breed,total,female,male,desexed,chipped,menacing,dangerous'.split(',')
	  };

	  var nester = new Nester().key({ label: function label(d) {
	      return d.Council;
	    }, sort: undefined }).key({ label: function label(d) {
	      return d.Year;
	    }, sort: undefined }).key({ label: function label(d) {
	      return d.Category;
	    }, sort: undefined }).rollup(function (leaves, i) {
	    return leaves.map(function (d) {
	      var o = pickProperties(d, CategoryKeys[d.Category] || CategoryKeys.default);
	      for (var p in o) {
	        if (NUMERIC.indexOf(p) !== -1 && typeof o[p] === "string") {
	          o[p] = parseFloat(o[p]);
	        }
	      }
	      return o;
	    });
	  });

	  return nester.nest(lines.map(function (d) {
	    return rowAsObject(d.split(sep), fields);
	  }));
	};

	FN.notNewZealand = function (d) {
	  return d.key !== "New Zealand";
	};

	FN.sortBreeds = function (list, key) {
	  return list.sort(function (a, b) {
	    return b[key] - a[key];
	  }).reduce(function (acc, d) {
	    // acc.push(d);
	    if (d.Breed.indexOf("_") !== 0 && d[key] > 0) {
	      acc.push(d);
	    }
	    return acc;
	  }, []);
	};

	function breedRisk(list) {
	  if (!list) {
	    return;
	  }
	  return list.reduce(function (acc, d) {
	    // acc.push(d);
	    var Breed = d.Breed;
	    var menacing = d.menacing;
	    var dangerous = d.dangerous;

	    var breedId = Breed.toLowerCase().replace(/[^a-z]/g, '-');
	    if (NON_BREED.indexOf(Breed) === -1 && (menacing > 0 || dangerous > 0)) {
	      acc.push({ breed: Breed, breedId: breedId, menacing: menacing, dangerous: dangerous });
	    }
	    return acc;
	  }, []);
	}

	function dogGroups(list, key) {
	  if (!list) {
	    return;
	  }
	  return list.reduce(function (acc, d) {
	    // acc.push(d);
	    var gp = DOG_GROUPS[d.Breed];
	    if (gp) {
	      acc[gp] = d;
	    }
	    return acc;
	  }, {});
	}

	function singleLine(data) {
	  if (!Array.isArray(data)) {
	    return;
	  }
	  if (data.length > 1) {
	    console.log('[UHOH]', data);
	  }
	  return data[0];
	}

	function extendObject(o1, o2) {
	  for (var i in o2) {
	    o1[i] = o2[i];
	  }
	  return o1;
	}

	function gpProperty(gp, prop) {
	  var out = {};
	  for (var k in gp) {
	    out[k] = gp[k][prop];
	  }
	  return out;
	}

	function yearData(d) {
	  var _kv = kv(d);

	  var _kv2 = _slicedToArray(_kv, 2);

	  var year = _kv2[0];
	  var categories = _kv2[1];

	  var cats = categories.reduce(function (acc, d) {
	    var _kv3 = kv(d);

	    var _kv4 = _slicedToArray(_kv3, 2);

	    var key = _kv4[0];
	    var values = _kv4[1];

	    acc[key] = values;
	    return acc;
	  }, {});
	  var gps = extendObject({ all: {}, pure: {}, cross: {} }, dogGroups(cats.DOG));
	  var all = gps.all;

	  return {
	    year: year,
	    totalDogs: all.total,
	    dogGroups: gps,
	    threatSummary: { dangerous: gpProperty(gps, "dangerous"), menacing: gpProperty(gps, "menacing") },
	    threateningBreeds: breedRisk(cats.DOG),
	    owners: singleLine(cats.OWN),
	    justice: singleLine(cats.JST),
	    acc: singleLine(cats.ACC)
	  };
	}

	FN.councilItemData = function (data) {
	  var _kv5 = kv(data);

	  var _kv6 = _slicedToArray(_kv5, 2);

	  var council = _kv6[0];
	  var years = _kv6[1];

	  return { council: council, years: years.map(yearData) };
	};

	FN.sortOnProperty = function (key) {
	  return function (a, b) {
	    return b[key] - a[key];
	  };
	};

	module.exports = FN;

/***/ },
/* 65 */
/***/ function(module, exports) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	/* jshint esnext: true */

	var FN = {};

	function polarToCartesian(centerX, centerY, radius, angleInDegrees) {
	  var angleInRadians = (angleInDegrees - 90) * Math.PI / 180.0;

	  return {
	    x: centerX + radius * Math.cos(angleInRadians),
	    y: centerY + radius * Math.sin(angleInRadians)
	  };
	}

	function last(list) {
	  if (!list || !list.length) {
	    return;
	  }
	  return list[list.length - 1];
	}

	function ratios(sum) {
	  return function (d) {
	    if (sum === 0) {
	      return 0;
	    }
	    if (!d) {
	      return 0;
	    }
	    return Math.round(d / sum * 10000) / 10000;
	  };
	}

	FN.describeArc = function (x, y, radius, startAngle, endAngle) {

	  var arcSweep = endAngle - startAngle <= 180 ? "0" : "1";
	  var start = polarToCartesian(x, y, radius, endAngle);
	  var end = polarToCartesian(x, y, radius, startAngle);

	  return ["M", start.x, start.y, "A", radius, radius, 0, arcSweep, 0, end.x, end.y].join(" ");
	};

	FN.describeBar = function (x, y, x1, x2) {
	  return ["M", x + x1, y, "H", x + x2].join(" ");
	};

	function accumulator(acc, d) {
	  var start = last(acc) || 0;
	  var end = start + d;
	  acc.push(end);
	  return acc;
	}

	function segmentize(list) {
	  return function (_ref, end, i) {
	    var merged = _ref.merged;
	    var start = _ref.start;

	    if (i === 0) {
	      start = 0;
	    }
	    merged.push([[start, end], list[i]]);
	    return { merged: merged, start: end };
	  };
	}

	// [[[0,0.434],{"k":"pure","v":23}],[[0.434,1],{"k":"cross","v":30}]]
	// [[0,0.75],{"k":"pure","v":3},[0.75,0.75],{"k":"cross","v":1}]
	FN.segments = function (list, fnValue) {
	  if (typeof fnValue !== "function") {
	    fnValue = function fnValue(d) {
	      return d;
	    };
	  }
	  var accum = list.map(fnValue).reduce(accumulator, []);
	  return accum.map(ratios(last(accum))).reduce(segmentize(list), { merged: [], start: 0 }).merged;
	};

	exports.default = FN;

/***/ },
/* 66 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }(); /* jshint esnext: true */

	__webpack_require__(133);

	var _react = __webpack_require__(6);

	var _react2 = _interopRequireDefault(_react);

	var _MicroChartEs = __webpack_require__(65);

	var _MicroChartEs2 = _interopRequireDefault(_MicroChartEs);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	function renderBar(_ref) {
	  var _ref2 = _slicedToArray(_ref, 2);

	  var _ref2$ = _slicedToArray(_ref2[0], 2);

	  var start = _ref2$[0];
	  var end = _ref2$[1];
	  var kv = _ref2[1];

	  var w = 50; // var sw = 8;
	  return _react2.default.createElement('path', { key: kv.k, className: kv.k, d: _MicroChartEs2.default.describeBar(0, 16, start * w, end * w) });
	}

	var NumberOverBar = function (_Component) {
	  _inherits(NumberOverBar, _Component);

	  function NumberOverBar() {
	    _classCallCheck(this, NumberOverBar);

	    return _possibleConstructorReturn(this, Object.getPrototypeOf(NumberOverBar).apply(this, arguments));
	  }

	  _createClass(NumberOverBar, [{
	    key: 'render',
	    value: function render() {
	      var _props = this.props;
	      var donut = _props.donut;
	      var className = _props.className;
	      var children = _props.children;

	      var segments = _MicroChartEs2.default.segments(donut, function (_ref3) {
	        var v = _ref3.v;
	        return v;
	      });

	      return _react2.default.createElement(
	        'number-over-bar',
	        { 'class': className },
	        _react2.default.createElement(
	          'div',
	          { className: 'label' },
	          children
	        ),
	        _react2.default.createElement(
	          'div',
	          { className: 'bar' },
	          _react2.default.createElement(
	            'svg',
	            { height: '20' },
	            segments.map(renderBar)
	          )
	        )
	      );
	    }
	  }]);

	  return NumberOverBar;
	}(_react.Component);

	exports.default = NumberOverBar;

/***/ },
/* 67 */
/***/ function(module, exports) {

	// removed by extract-text-webpack-plugin

/***/ },
/* 68 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var asap = __webpack_require__(113);

	function noop() {}

	// States:
	//
	// 0 - pending
	// 1 - fulfilled with _value
	// 2 - rejected with _value
	// 3 - adopted the state of another promise, _value
	//
	// once the state is no longer pending (0) it is immutable

	// All `_` prefixed properties will be reduced to `_{random number}`
	// at build time to obfuscate them and discourage their use.
	// We don't use symbols or Object.defineProperty to fully hide them
	// because the performance isn't good enough.


	// to avoid using try/catch inside critical functions, we
	// extract them to here.
	var LAST_ERROR = null;
	var IS_ERROR = {};
	function getThen(obj) {
	  try {
	    return obj.then;
	  } catch (ex) {
	    LAST_ERROR = ex;
	    return IS_ERROR;
	  }
	}

	function tryCallOne(fn, a) {
	  try {
	    return fn(a);
	  } catch (ex) {
	    LAST_ERROR = ex;
	    return IS_ERROR;
	  }
	}
	function tryCallTwo(fn, a, b) {
	  try {
	    fn(a, b);
	  } catch (ex) {
	    LAST_ERROR = ex;
	    return IS_ERROR;
	  }
	}

	module.exports = Promise;

	function Promise(fn) {
	  if (typeof this !== 'object') {
	    throw new TypeError('Promises must be constructed via new');
	  }
	  if (typeof fn !== 'function') {
	    throw new TypeError('not a function');
	  }
	  this._45 = 0;
	  this._81 = 0;
	  this._65 = null;
	  this._54 = null;
	  if (fn === noop) return;
	  doResolve(fn, this);
	}
	Promise._10 = null;
	Promise._97 = null;
	Promise._61 = noop;

	Promise.prototype.then = function(onFulfilled, onRejected) {
	  if (this.constructor !== Promise) {
	    return safeThen(this, onFulfilled, onRejected);
	  }
	  var res = new Promise(noop);
	  handle(this, new Handler(onFulfilled, onRejected, res));
	  return res;
	};

	function safeThen(self, onFulfilled, onRejected) {
	  return new self.constructor(function (resolve, reject) {
	    var res = new Promise(noop);
	    res.then(resolve, reject);
	    handle(self, new Handler(onFulfilled, onRejected, res));
	  });
	};
	function handle(self, deferred) {
	  while (self._81 === 3) {
	    self = self._65;
	  }
	  if (Promise._10) {
	    Promise._10(self);
	  }
	  if (self._81 === 0) {
	    if (self._45 === 0) {
	      self._45 = 1;
	      self._54 = deferred;
	      return;
	    }
	    if (self._45 === 1) {
	      self._45 = 2;
	      self._54 = [self._54, deferred];
	      return;
	    }
	    self._54.push(deferred);
	    return;
	  }
	  handleResolved(self, deferred);
	}

	function handleResolved(self, deferred) {
	  asap(function() {
	    var cb = self._81 === 1 ? deferred.onFulfilled : deferred.onRejected;
	    if (cb === null) {
	      if (self._81 === 1) {
	        resolve(deferred.promise, self._65);
	      } else {
	        reject(deferred.promise, self._65);
	      }
	      return;
	    }
	    var ret = tryCallOne(cb, self._65);
	    if (ret === IS_ERROR) {
	      reject(deferred.promise, LAST_ERROR);
	    } else {
	      resolve(deferred.promise, ret);
	    }
	  });
	}
	function resolve(self, newValue) {
	  // Promise Resolution Procedure: https://github.com/promises-aplus/promises-spec#the-promise-resolution-procedure
	  if (newValue === self) {
	    return reject(
	      self,
	      new TypeError('A promise cannot be resolved with itself.')
	    );
	  }
	  if (
	    newValue &&
	    (typeof newValue === 'object' || typeof newValue === 'function')
	  ) {
	    var then = getThen(newValue);
	    if (then === IS_ERROR) {
	      return reject(self, LAST_ERROR);
	    }
	    if (
	      then === self.then &&
	      newValue instanceof Promise
	    ) {
	      self._81 = 3;
	      self._65 = newValue;
	      finale(self);
	      return;
	    } else if (typeof then === 'function') {
	      doResolve(then.bind(newValue), self);
	      return;
	    }
	  }
	  self._81 = 1;
	  self._65 = newValue;
	  finale(self);
	}

	function reject(self, newValue) {
	  self._81 = 2;
	  self._65 = newValue;
	  if (Promise._97) {
	    Promise._97(self, newValue);
	  }
	  finale(self);
	}
	function finale(self) {
	  if (self._45 === 1) {
	    handle(self, self._54);
	    self._54 = null;
	  }
	  if (self._45 === 2) {
	    for (var i = 0; i < self._54.length; i++) {
	      handle(self, self._54[i]);
	    }
	    self._54 = null;
	  }
	}

	function Handler(onFulfilled, onRejected, promise){
	  this.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null;
	  this.onRejected = typeof onRejected === 'function' ? onRejected : null;
	  this.promise = promise;
	}

	/**
	 * Take a potentially misbehaving resolver function and make sure
	 * onFulfilled and onRejected are only called once.
	 *
	 * Makes no guarantees about asynchrony.
	 */
	function doResolve(fn, promise) {
	  var done = false;
	  var res = tryCallTwo(fn, function (value) {
	    if (done) return;
	    done = true;
	    resolve(promise, value);
	  }, function (reason) {
	    if (done) return;
	    done = true;
	    reject(promise, reason);
	  })
	  if (!done && res === IS_ERROR) {
	    done = true;
	    reject(promise, LAST_ERROR);
	  }
	}


/***/ },
/* 69 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule CSSProperty
	 */

	'use strict';

	/**
	 * CSS properties which accept numbers but are not in units of "px".
	 */

	var isUnitlessNumber = {
	  animationIterationCount: true,
	  borderImageOutset: true,
	  borderImageSlice: true,
	  borderImageWidth: true,
	  boxFlex: true,
	  boxFlexGroup: true,
	  boxOrdinalGroup: true,
	  columnCount: true,
	  flex: true,
	  flexGrow: true,
	  flexPositive: true,
	  flexShrink: true,
	  flexNegative: true,
	  flexOrder: true,
	  gridRow: true,
	  gridColumn: true,
	  fontWeight: true,
	  lineClamp: true,
	  lineHeight: true,
	  opacity: true,
	  order: true,
	  orphans: true,
	  tabSize: true,
	  widows: true,
	  zIndex: true,
	  zoom: true,

	  // SVG-related properties
	  fillOpacity: true,
	  floodOpacity: true,
	  stopOpacity: true,
	  strokeDasharray: true,
	  strokeDashoffset: true,
	  strokeMiterlimit: true,
	  strokeOpacity: true,
	  strokeWidth: true
	};

	/**
	 * @param {string} prefix vendor-specific prefix, eg: Webkit
	 * @param {string} key style name, eg: transitionDuration
	 * @return {string} style name prefixed with `prefix`, properly camelCased, eg:
	 * WebkitTransitionDuration
	 */
	function prefixKey(prefix, key) {
	  return prefix + key.charAt(0).toUpperCase() + key.substring(1);
	}

	/**
	 * Support style names that may come passed in prefixed by adding permutations
	 * of vendor prefixes.
	 */
	var prefixes = ['Webkit', 'ms', 'Moz', 'O'];

	// Using Object.keys here, or else the vanilla for-in loop makes IE8 go into an
	// infinite loop, because it iterates over the newly added props too.
	Object.keys(isUnitlessNumber).forEach(function (prop) {
	  prefixes.forEach(function (prefix) {
	    isUnitlessNumber[prefixKey(prefix, prop)] = isUnitlessNumber[prop];
	  });
	});

	/**
	 * Most style properties can be unset by doing .style[prop] = '' but IE8
	 * doesn't like doing that with shorthand properties so for the properties that
	 * IE8 breaks on, which are listed here, we instead unset each of the
	 * individual properties. See http://bugs.jquery.com/ticket/12385.
	 * The 4-value 'clock' properties like margin, padding, border-width seem to
	 * behave without any problems. Curiously, list-style works too without any
	 * special prodding.
	 */
	var shorthandPropertyExpansions = {
	  background: {
	    backgroundAttachment: true,
	    backgroundColor: true,
	    backgroundImage: true,
	    backgroundPositionX: true,
	    backgroundPositionY: true,
	    backgroundRepeat: true
	  },
	  backgroundPosition: {
	    backgroundPositionX: true,
	    backgroundPositionY: true
	  },
	  border: {
	    borderWidth: true,
	    borderStyle: true,
	    borderColor: true
	  },
	  borderBottom: {
	    borderBottomWidth: true,
	    borderBottomStyle: true,
	    borderBottomColor: true
	  },
	  borderLeft: {
	    borderLeftWidth: true,
	    borderLeftStyle: true,
	    borderLeftColor: true
	  },
	  borderRight: {
	    borderRightWidth: true,
	    borderRightStyle: true,
	    borderRightColor: true
	  },
	  borderTop: {
	    borderTopWidth: true,
	    borderTopStyle: true,
	    borderTopColor: true
	  },
	  font: {
	    fontStyle: true,
	    fontVariant: true,
	    fontWeight: true,
	    fontSize: true,
	    lineHeight: true,
	    fontFamily: true
	  },
	  outline: {
	    outlineWidth: true,
	    outlineStyle: true,
	    outlineColor: true
	  }
	};

	var CSSProperty = {
	  isUnitlessNumber: isUnitlessNumber,
	  shorthandPropertyExpansions: shorthandPropertyExpansions
	};

	module.exports = CSSProperty;

/***/ },
/* 70 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule CallbackQueue
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(2),
	    _assign = __webpack_require__(4);

	var PooledClass = __webpack_require__(15);

	var invariant = __webpack_require__(1);

	/**
	 * A specialized pseudo-event module to help keep track of components waiting to
	 * be notified when their DOM representations are available for use.
	 *
	 * This implements `PooledClass`, so you should never need to instantiate this.
	 * Instead, use `CallbackQueue.getPooled()`.
	 *
	 * @class ReactMountReady
	 * @implements PooledClass
	 * @internal
	 */
	function CallbackQueue() {
	  this._callbacks = null;
	  this._contexts = null;
	}

	_assign(CallbackQueue.prototype, {

	  /**
	   * Enqueues a callback to be invoked when `notifyAll` is invoked.
	   *
	   * @param {function} callback Invoked when `notifyAll` is invoked.
	   * @param {?object} context Context to call `callback` with.
	   * @internal
	   */
	  enqueue: function (callback, context) {
	    this._callbacks = this._callbacks || [];
	    this._contexts = this._contexts || [];
	    this._callbacks.push(callback);
	    this._contexts.push(context);
	  },

	  /**
	   * Invokes all enqueued callbacks and clears the queue. This is invoked after
	   * the DOM representation of a component has been created or updated.
	   *
	   * @internal
	   */
	  notifyAll: function () {
	    var callbacks = this._callbacks;
	    var contexts = this._contexts;
	    if (callbacks) {
	      !(callbacks.length === contexts.length) ?  false ? invariant(false, 'Mismatched list of contexts in callback queue') : _prodInvariant('24') : void 0;
	      this._callbacks = null;
	      this._contexts = null;
	      for (var i = 0; i < callbacks.length; i++) {
	        callbacks[i].call(contexts[i]);
	      }
	      callbacks.length = 0;
	      contexts.length = 0;
	    }
	  },

	  checkpoint: function () {
	    return this._callbacks ? this._callbacks.length : 0;
	  },

	  rollback: function (len) {
	    if (this._callbacks) {
	      this._callbacks.length = len;
	      this._contexts.length = len;
	    }
	  },

	  /**
	   * Resets the internal queue.
	   *
	   * @internal
	   */
	  reset: function () {
	    this._callbacks = null;
	    this._contexts = null;
	  },

	  /**
	   * `PooledClass` looks for this.
	   */
	  destructor: function () {
	    this.reset();
	  }

	});

	PooledClass.addPoolingTo(CallbackQueue);

	module.exports = CallbackQueue;

/***/ },
/* 71 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule DOMPropertyOperations
	 */

	'use strict';

	var DOMProperty = __webpack_require__(18);
	var ReactDOMComponentTree = __webpack_require__(5);
	var ReactDOMInstrumentation = __webpack_require__(159);
	var ReactInstrumentation = __webpack_require__(8);

	var quoteAttributeValueForBrowser = __webpack_require__(200);
	var warning = __webpack_require__(3);

	var VALID_ATTRIBUTE_NAME_REGEX = new RegExp('^[' + DOMProperty.ATTRIBUTE_NAME_START_CHAR + '][' + DOMProperty.ATTRIBUTE_NAME_CHAR + ']*$');
	var illegalAttributeNameCache = {};
	var validatedAttributeNameCache = {};

	function isAttributeNameSafe(attributeName) {
	  if (validatedAttributeNameCache.hasOwnProperty(attributeName)) {
	    return true;
	  }
	  if (illegalAttributeNameCache.hasOwnProperty(attributeName)) {
	    return false;
	  }
	  if (VALID_ATTRIBUTE_NAME_REGEX.test(attributeName)) {
	    validatedAttributeNameCache[attributeName] = true;
	    return true;
	  }
	  illegalAttributeNameCache[attributeName] = true;
	   false ? warning(false, 'Invalid attribute name: `%s`', attributeName) : void 0;
	  return false;
	}

	function shouldIgnoreValue(propertyInfo, value) {
	  return value == null || propertyInfo.hasBooleanValue && !value || propertyInfo.hasNumericValue && isNaN(value) || propertyInfo.hasPositiveNumericValue && value < 1 || propertyInfo.hasOverloadedBooleanValue && value === false;
	}

	/**
	 * Operations for dealing with DOM properties.
	 */
	var DOMPropertyOperations = {

	  /**
	   * Creates markup for the ID property.
	   *
	   * @param {string} id Unescaped ID.
	   * @return {string} Markup string.
	   */
	  createMarkupForID: function (id) {
	    return DOMProperty.ID_ATTRIBUTE_NAME + '=' + quoteAttributeValueForBrowser(id);
	  },

	  setAttributeForID: function (node, id) {
	    node.setAttribute(DOMProperty.ID_ATTRIBUTE_NAME, id);
	  },

	  createMarkupForRoot: function () {
	    return DOMProperty.ROOT_ATTRIBUTE_NAME + '=""';
	  },

	  setAttributeForRoot: function (node) {
	    node.setAttribute(DOMProperty.ROOT_ATTRIBUTE_NAME, '');
	  },

	  /**
	   * Creates markup for a property.
	   *
	   * @param {string} name
	   * @param {*} value
	   * @return {?string} Markup string, or null if the property was invalid.
	   */
	  createMarkupForProperty: function (name, value) {
	    if (false) {
	      ReactDOMInstrumentation.debugTool.onCreateMarkupForProperty(name, value);
	    }
	    var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;
	    if (propertyInfo) {
	      if (shouldIgnoreValue(propertyInfo, value)) {
	        return '';
	      }
	      var attributeName = propertyInfo.attributeName;
	      if (propertyInfo.hasBooleanValue || propertyInfo.hasOverloadedBooleanValue && value === true) {
	        return attributeName + '=""';
	      }
	      return attributeName + '=' + quoteAttributeValueForBrowser(value);
	    } else if (DOMProperty.isCustomAttribute(name)) {
	      if (value == null) {
	        return '';
	      }
	      return name + '=' + quoteAttributeValueForBrowser(value);
	    }
	    return null;
	  },

	  /**
	   * Creates markup for a custom property.
	   *
	   * @param {string} name
	   * @param {*} value
	   * @return {string} Markup string, or empty string if the property was invalid.
	   */
	  createMarkupForCustomAttribute: function (name, value) {
	    if (!isAttributeNameSafe(name) || value == null) {
	      return '';
	    }
	    return name + '=' + quoteAttributeValueForBrowser(value);
	  },

	  /**
	   * Sets the value for a property on a node.
	   *
	   * @param {DOMElement} node
	   * @param {string} name
	   * @param {*} value
	   */
	  setValueForProperty: function (node, name, value) {
	    var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;
	    if (propertyInfo) {
	      var mutationMethod = propertyInfo.mutationMethod;
	      if (mutationMethod) {
	        mutationMethod(node, value);
	      } else if (shouldIgnoreValue(propertyInfo, value)) {
	        this.deleteValueForProperty(node, name);
	        return;
	      } else if (propertyInfo.mustUseProperty) {
	        // Contrary to `setAttribute`, object properties are properly
	        // `toString`ed by IE8/9.
	        node[propertyInfo.propertyName] = value;
	      } else {
	        var attributeName = propertyInfo.attributeName;
	        var namespace = propertyInfo.attributeNamespace;
	        // `setAttribute` with objects becomes only `[object]` in IE8/9,
	        // ('' + value) makes it output the correct toString()-value.
	        if (namespace) {
	          node.setAttributeNS(namespace, attributeName, '' + value);
	        } else if (propertyInfo.hasBooleanValue || propertyInfo.hasOverloadedBooleanValue && value === true) {
	          node.setAttribute(attributeName, '');
	        } else {
	          node.setAttribute(attributeName, '' + value);
	        }
	      }
	    } else if (DOMProperty.isCustomAttribute(name)) {
	      DOMPropertyOperations.setValueForAttribute(node, name, value);
	      return;
	    }

	    if (false) {
	      ReactDOMInstrumentation.debugTool.onSetValueForProperty(node, name, value);
	      var payload = {};
	      payload[name] = value;
	      ReactInstrumentation.debugTool.onHostOperation(ReactDOMComponentTree.getInstanceFromNode(node)._debugID, 'update attribute', payload);
	    }
	  },

	  setValueForAttribute: function (node, name, value) {
	    if (!isAttributeNameSafe(name)) {
	      return;
	    }
	    if (value == null) {
	      node.removeAttribute(name);
	    } else {
	      node.setAttribute(name, '' + value);
	    }

	    if (false) {
	      var payload = {};
	      payload[name] = value;
	      ReactInstrumentation.debugTool.onHostOperation(ReactDOMComponentTree.getInstanceFromNode(node)._debugID, 'update attribute', payload);
	    }
	  },

	  /**
	   * Deletes an attributes from a node.
	   *
	   * @param {DOMElement} node
	   * @param {string} name
	   */
	  deleteValueForAttribute: function (node, name) {
	    node.removeAttribute(name);
	    if (false) {
	      ReactDOMInstrumentation.debugTool.onDeleteValueForProperty(node, name);
	      ReactInstrumentation.debugTool.onHostOperation(ReactDOMComponentTree.getInstanceFromNode(node)._debugID, 'remove attribute', name);
	    }
	  },

	  /**
	   * Deletes the value for a property on a node.
	   *
	   * @param {DOMElement} node
	   * @param {string} name
	   */
	  deleteValueForProperty: function (node, name) {
	    var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;
	    if (propertyInfo) {
	      var mutationMethod = propertyInfo.mutationMethod;
	      if (mutationMethod) {
	        mutationMethod(node, undefined);
	      } else if (propertyInfo.mustUseProperty) {
	        var propName = propertyInfo.propertyName;
	        if (propertyInfo.hasBooleanValue) {
	          node[propName] = false;
	        } else {
	          node[propName] = '';
	        }
	      } else {
	        node.removeAttribute(propertyInfo.attributeName);
	      }
	    } else if (DOMProperty.isCustomAttribute(name)) {
	      node.removeAttribute(name);
	    }

	    if (false) {
	      ReactDOMInstrumentation.debugTool.onDeleteValueForProperty(node, name);
	      ReactInstrumentation.debugTool.onHostOperation(ReactDOMComponentTree.getInstanceFromNode(node)._debugID, 'remove attribute', name);
	    }
	  }

	};

	module.exports = DOMPropertyOperations;

/***/ },
/* 72 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactChildren
	 */

	'use strict';

	var PooledClass = __webpack_require__(15);
	var ReactElement = __webpack_require__(10);

	var emptyFunction = __webpack_require__(9);
	var traverseAllChildren = __webpack_require__(57);

	var twoArgumentPooler = PooledClass.twoArgumentPooler;
	var fourArgumentPooler = PooledClass.fourArgumentPooler;

	var userProvidedKeyEscapeRegex = /\/+/g;
	function escapeUserProvidedKey(text) {
	  return ('' + text).replace(userProvidedKeyEscapeRegex, '$&/');
	}

	/**
	 * PooledClass representing the bookkeeping associated with performing a child
	 * traversal. Allows avoiding binding callbacks.
	 *
	 * @constructor ForEachBookKeeping
	 * @param {!function} forEachFunction Function to perform traversal with.
	 * @param {?*} forEachContext Context to perform context with.
	 */
	function ForEachBookKeeping(forEachFunction, forEachContext) {
	  this.func = forEachFunction;
	  this.context = forEachContext;
	  this.count = 0;
	}
	ForEachBookKeeping.prototype.destructor = function () {
	  this.func = null;
	  this.context = null;
	  this.count = 0;
	};
	PooledClass.addPoolingTo(ForEachBookKeeping, twoArgumentPooler);

	function forEachSingleChild(bookKeeping, child, name) {
	  var func = bookKeeping.func;
	  var context = bookKeeping.context;

	  func.call(context, child, bookKeeping.count++);
	}

	/**
	 * Iterates through children that are typically specified as `props.children`.
	 *
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.children.foreach
	 *
	 * The provided forEachFunc(child, index) will be called for each
	 * leaf child.
	 *
	 * @param {?*} children Children tree container.
	 * @param {function(*, int)} forEachFunc
	 * @param {*} forEachContext Context for forEachContext.
	 */
	function forEachChildren(children, forEachFunc, forEachContext) {
	  if (children == null) {
	    return children;
	  }
	  var traverseContext = ForEachBookKeeping.getPooled(forEachFunc, forEachContext);
	  traverseAllChildren(children, forEachSingleChild, traverseContext);
	  ForEachBookKeeping.release(traverseContext);
	}

	/**
	 * PooledClass representing the bookkeeping associated with performing a child
	 * mapping. Allows avoiding binding callbacks.
	 *
	 * @constructor MapBookKeeping
	 * @param {!*} mapResult Object containing the ordered map of results.
	 * @param {!function} mapFunction Function to perform mapping with.
	 * @param {?*} mapContext Context to perform mapping with.
	 */
	function MapBookKeeping(mapResult, keyPrefix, mapFunction, mapContext) {
	  this.result = mapResult;
	  this.keyPrefix = keyPrefix;
	  this.func = mapFunction;
	  this.context = mapContext;
	  this.count = 0;
	}
	MapBookKeeping.prototype.destructor = function () {
	  this.result = null;
	  this.keyPrefix = null;
	  this.func = null;
	  this.context = null;
	  this.count = 0;
	};
	PooledClass.addPoolingTo(MapBookKeeping, fourArgumentPooler);

	function mapSingleChildIntoContext(bookKeeping, child, childKey) {
	  var result = bookKeeping.result;
	  var keyPrefix = bookKeeping.keyPrefix;
	  var func = bookKeeping.func;
	  var context = bookKeeping.context;


	  var mappedChild = func.call(context, child, bookKeeping.count++);
	  if (Array.isArray(mappedChild)) {
	    mapIntoWithKeyPrefixInternal(mappedChild, result, childKey, emptyFunction.thatReturnsArgument);
	  } else if (mappedChild != null) {
	    if (ReactElement.isValidElement(mappedChild)) {
	      mappedChild = ReactElement.cloneAndReplaceKey(mappedChild,
	      // Keep both the (mapped) and old keys if they differ, just as
	      // traverseAllChildren used to do for objects as children
	      keyPrefix + (mappedChild.key && (!child || child.key !== mappedChild.key) ? escapeUserProvidedKey(mappedChild.key) + '/' : '') + childKey);
	    }
	    result.push(mappedChild);
	  }
	}

	function mapIntoWithKeyPrefixInternal(children, array, prefix, func, context) {
	  var escapedPrefix = '';
	  if (prefix != null) {
	    escapedPrefix = escapeUserProvidedKey(prefix) + '/';
	  }
	  var traverseContext = MapBookKeeping.getPooled(array, escapedPrefix, func, context);
	  traverseAllChildren(children, mapSingleChildIntoContext, traverseContext);
	  MapBookKeeping.release(traverseContext);
	}

	/**
	 * Maps children that are typically specified as `props.children`.
	 *
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.children.map
	 *
	 * The provided mapFunction(child, key, index) will be called for each
	 * leaf child.
	 *
	 * @param {?*} children Children tree container.
	 * @param {function(*, int)} func The map function.
	 * @param {*} context Context for mapFunction.
	 * @return {object} Object containing the ordered map of results.
	 */
	function mapChildren(children, func, context) {
	  if (children == null) {
	    return children;
	  }
	  var result = [];
	  mapIntoWithKeyPrefixInternal(children, result, null, func, context);
	  return result;
	}

	function forEachSingleChildDummy(traverseContext, child, name) {
	  return null;
	}

	/**
	 * Count the number of children that are typically specified as
	 * `props.children`.
	 *
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.children.count
	 *
	 * @param {?*} children Children tree container.
	 * @return {number} The number of children.
	 */
	function countChildren(children, context) {
	  return traverseAllChildren(children, forEachSingleChildDummy, null);
	}

	/**
	 * Flatten a children object (typically specified as `props.children`) and
	 * return an array with appropriately re-keyed children.
	 *
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.children.toarray
	 */
	function toArray(children) {
	  var result = [];
	  mapIntoWithKeyPrefixInternal(children, result, null, emptyFunction.thatReturnsArgument);
	  return result;
	}

	var ReactChildren = {
	  forEach: forEachChildren,
	  map: mapChildren,
	  mapIntoWithKeyPrefixInternal: mapIntoWithKeyPrefixInternal,
	  count: countChildren,
	  toArray: toArray
	};

	module.exports = ReactChildren;

/***/ },
/* 73 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactClass
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(2),
	    _assign = __webpack_require__(4);

	var ReactComponent = __webpack_require__(42);
	var ReactElement = __webpack_require__(10);
	var ReactPropTypeLocations = __webpack_require__(48);
	var ReactPropTypeLocationNames = __webpack_require__(47);
	var ReactNoopUpdateQueue = __webpack_require__(46);

	var emptyObject = __webpack_require__(20);
	var invariant = __webpack_require__(1);
	var keyMirror = __webpack_require__(26);
	var keyOf = __webpack_require__(14);
	var warning = __webpack_require__(3);

	var MIXINS_KEY = keyOf({ mixins: null });

	/**
	 * Policies that describe methods in `ReactClassInterface`.
	 */
	var SpecPolicy = keyMirror({
	  /**
	   * These methods may be defined only once by the class specification or mixin.
	   */
	  DEFINE_ONCE: null,
	  /**
	   * These methods may be defined by both the class specification and mixins.
	   * Subsequent definitions will be chained. These methods must return void.
	   */
	  DEFINE_MANY: null,
	  /**
	   * These methods are overriding the base class.
	   */
	  OVERRIDE_BASE: null,
	  /**
	   * These methods are similar to DEFINE_MANY, except we assume they return
	   * objects. We try to merge the keys of the return values of all the mixed in
	   * functions. If there is a key conflict we throw.
	   */
	  DEFINE_MANY_MERGED: null
	});

	var injectedMixins = [];

	/**
	 * Composite components are higher-level components that compose other composite
	 * or host components.
	 *
	 * To create a new type of `ReactClass`, pass a specification of
	 * your new class to `React.createClass`. The only requirement of your class
	 * specification is that you implement a `render` method.
	 *
	 *   var MyComponent = React.createClass({
	 *     render: function() {
	 *       return <div>Hello World</div>;
	 *     }
	 *   });
	 *
	 * The class specification supports a specific protocol of methods that have
	 * special meaning (e.g. `render`). See `ReactClassInterface` for
	 * more the comprehensive protocol. Any other properties and methods in the
	 * class specification will be available on the prototype.
	 *
	 * @interface ReactClassInterface
	 * @internal
	 */
	var ReactClassInterface = {

	  /**
	   * An array of Mixin objects to include when defining your component.
	   *
	   * @type {array}
	   * @optional
	   */
	  mixins: SpecPolicy.DEFINE_MANY,

	  /**
	   * An object containing properties and methods that should be defined on
	   * the component's constructor instead of its prototype (static methods).
	   *
	   * @type {object}
	   * @optional
	   */
	  statics: SpecPolicy.DEFINE_MANY,

	  /**
	   * Definition of prop types for this component.
	   *
	   * @type {object}
	   * @optional
	   */
	  propTypes: SpecPolicy.DEFINE_MANY,

	  /**
	   * Definition of context types for this component.
	   *
	   * @type {object}
	   * @optional
	   */
	  contextTypes: SpecPolicy.DEFINE_MANY,

	  /**
	   * Definition of context types this component sets for its children.
	   *
	   * @type {object}
	   * @optional
	   */
	  childContextTypes: SpecPolicy.DEFINE_MANY,

	  // ==== Definition methods ====

	  /**
	   * Invoked when the component is mounted. Values in the mapping will be set on
	   * `this.props` if that prop is not specified (i.e. using an `in` check).
	   *
	   * This method is invoked before `getInitialState` and therefore cannot rely
	   * on `this.state` or use `this.setState`.
	   *
	   * @return {object}
	   * @optional
	   */
	  getDefaultProps: SpecPolicy.DEFINE_MANY_MERGED,

	  /**
	   * Invoked once before the component is mounted. The return value will be used
	   * as the initial value of `this.state`.
	   *
	   *   getInitialState: function() {
	   *     return {
	   *       isOn: false,
	   *       fooBaz: new BazFoo()
	   *     }
	   *   }
	   *
	   * @return {object}
	   * @optional
	   */
	  getInitialState: SpecPolicy.DEFINE_MANY_MERGED,

	  /**
	   * @return {object}
	   * @optional
	   */
	  getChildContext: SpecPolicy.DEFINE_MANY_MERGED,

	  /**
	   * Uses props from `this.props` and state from `this.state` to render the
	   * structure of the component.
	   *
	   * No guarantees are made about when or how often this method is invoked, so
	   * it must not have side effects.
	   *
	   *   render: function() {
	   *     var name = this.props.name;
	   *     return <div>Hello, {name}!</div>;
	   *   }
	   *
	   * @return {ReactComponent}
	   * @nosideeffects
	   * @required
	   */
	  render: SpecPolicy.DEFINE_ONCE,

	  // ==== Delegate methods ====

	  /**
	   * Invoked when the component is initially created and about to be mounted.
	   * This may have side effects, but any external subscriptions or data created
	   * by this method must be cleaned up in `componentWillUnmount`.
	   *
	   * @optional
	   */
	  componentWillMount: SpecPolicy.DEFINE_MANY,

	  /**
	   * Invoked when the component has been mounted and has a DOM representation.
	   * However, there is no guarantee that the DOM node is in the document.
	   *
	   * Use this as an opportunity to operate on the DOM when the component has
	   * been mounted (initialized and rendered) for the first time.
	   *
	   * @param {DOMElement} rootNode DOM element representing the component.
	   * @optional
	   */
	  componentDidMount: SpecPolicy.DEFINE_MANY,

	  /**
	   * Invoked before the component receives new props.
	   *
	   * Use this as an opportunity to react to a prop transition by updating the
	   * state using `this.setState`. Current props are accessed via `this.props`.
	   *
	   *   componentWillReceiveProps: function(nextProps, nextContext) {
	   *     this.setState({
	   *       likesIncreasing: nextProps.likeCount > this.props.likeCount
	   *     });
	   *   }
	   *
	   * NOTE: There is no equivalent `componentWillReceiveState`. An incoming prop
	   * transition may cause a state change, but the opposite is not true. If you
	   * need it, you are probably looking for `componentWillUpdate`.
	   *
	   * @param {object} nextProps
	   * @optional
	   */
	  componentWillReceiveProps: SpecPolicy.DEFINE_MANY,

	  /**
	   * Invoked while deciding if the component should be updated as a result of
	   * receiving new props, state and/or context.
	   *
	   * Use this as an opportunity to `return false` when you're certain that the
	   * transition to the new props/state/context will not require a component
	   * update.
	   *
	   *   shouldComponentUpdate: function(nextProps, nextState, nextContext) {
	   *     return !equal(nextProps, this.props) ||
	   *       !equal(nextState, this.state) ||
	   *       !equal(nextContext, this.context);
	   *   }
	   *
	   * @param {object} nextProps
	   * @param {?object} nextState
	   * @param {?object} nextContext
	   * @return {boolean} True if the component should update.
	   * @optional
	   */
	  shouldComponentUpdate: SpecPolicy.DEFINE_ONCE,

	  /**
	   * Invoked when the component is about to update due to a transition from
	   * `this.props`, `this.state` and `this.context` to `nextProps`, `nextState`
	   * and `nextContext`.
	   *
	   * Use this as an opportunity to perform preparation before an update occurs.
	   *
	   * NOTE: You **cannot** use `this.setState()` in this method.
	   *
	   * @param {object} nextProps
	   * @param {?object} nextState
	   * @param {?object} nextContext
	   * @param {ReactReconcileTransaction} transaction
	   * @optional
	   */
	  componentWillUpdate: SpecPolicy.DEFINE_MANY,

	  /**
	   * Invoked when the component's DOM representation has been updated.
	   *
	   * Use this as an opportunity to operate on the DOM when the component has
	   * been updated.
	   *
	   * @param {object} prevProps
	   * @param {?object} prevState
	   * @param {?object} prevContext
	   * @param {DOMElement} rootNode DOM element representing the component.
	   * @optional
	   */
	  componentDidUpdate: SpecPolicy.DEFINE_MANY,

	  /**
	   * Invoked when the component is about to be removed from its parent and have
	   * its DOM representation destroyed.
	   *
	   * Use this as an opportunity to deallocate any external resources.
	   *
	   * NOTE: There is no `componentDidUnmount` since your component will have been
	   * destroyed by that point.
	   *
	   * @optional
	   */
	  componentWillUnmount: SpecPolicy.DEFINE_MANY,

	  // ==== Advanced methods ====

	  /**
	   * Updates the component's currently mounted DOM representation.
	   *
	   * By default, this implements React's rendering and reconciliation algorithm.
	   * Sophisticated clients may wish to override this.
	   *
	   * @param {ReactReconcileTransaction} transaction
	   * @internal
	   * @overridable
	   */
	  updateComponent: SpecPolicy.OVERRIDE_BASE

	};

	/**
	 * Mapping from class specification keys to special processing functions.
	 *
	 * Although these are declared like instance properties in the specification
	 * when defining classes using `React.createClass`, they are actually static
	 * and are accessible on the constructor instead of the prototype. Despite
	 * being static, they must be defined outside of the "statics" key under
	 * which all other static methods are defined.
	 */
	var RESERVED_SPEC_KEYS = {
	  displayName: function (Constructor, displayName) {
	    Constructor.displayName = displayName;
	  },
	  mixins: function (Constructor, mixins) {
	    if (mixins) {
	      for (var i = 0; i < mixins.length; i++) {
	        mixSpecIntoComponent(Constructor, mixins[i]);
	      }
	    }
	  },
	  childContextTypes: function (Constructor, childContextTypes) {
	    if (false) {
	      validateTypeDef(Constructor, childContextTypes, ReactPropTypeLocations.childContext);
	    }
	    Constructor.childContextTypes = _assign({}, Constructor.childContextTypes, childContextTypes);
	  },
	  contextTypes: function (Constructor, contextTypes) {
	    if (false) {
	      validateTypeDef(Constructor, contextTypes, ReactPropTypeLocations.context);
	    }
	    Constructor.contextTypes = _assign({}, Constructor.contextTypes, contextTypes);
	  },
	  /**
	   * Special case getDefaultProps which should move into statics but requires
	   * automatic merging.
	   */
	  getDefaultProps: function (Constructor, getDefaultProps) {
	    if (Constructor.getDefaultProps) {
	      Constructor.getDefaultProps = createMergedResultFunction(Constructor.getDefaultProps, getDefaultProps);
	    } else {
	      Constructor.getDefaultProps = getDefaultProps;
	    }
	  },
	  propTypes: function (Constructor, propTypes) {
	    if (false) {
	      validateTypeDef(Constructor, propTypes, ReactPropTypeLocations.prop);
	    }
	    Constructor.propTypes = _assign({}, Constructor.propTypes, propTypes);
	  },
	  statics: function (Constructor, statics) {
	    mixStaticSpecIntoComponent(Constructor, statics);
	  },
	  autobind: function () {} };

	// noop
	function validateTypeDef(Constructor, typeDef, location) {
	  for (var propName in typeDef) {
	    if (typeDef.hasOwnProperty(propName)) {
	      // use a warning instead of an invariant so components
	      // don't show up in prod but only in __DEV__
	       false ? warning(typeof typeDef[propName] === 'function', '%s: %s type `%s` is invalid; it must be a function, usually from ' + 'React.PropTypes.', Constructor.displayName || 'ReactClass', ReactPropTypeLocationNames[location], propName) : void 0;
	    }
	  }
	}

	function validateMethodOverride(isAlreadyDefined, name) {
	  var specPolicy = ReactClassInterface.hasOwnProperty(name) ? ReactClassInterface[name] : null;

	  // Disallow overriding of base class methods unless explicitly allowed.
	  if (ReactClassMixin.hasOwnProperty(name)) {
	    !(specPolicy === SpecPolicy.OVERRIDE_BASE) ?  false ? invariant(false, 'ReactClassInterface: You are attempting to override `%s` from your class specification. Ensure that your method names do not overlap with React methods.', name) : _prodInvariant('73', name) : void 0;
	  }

	  // Disallow defining methods more than once unless explicitly allowed.
	  if (isAlreadyDefined) {
	    !(specPolicy === SpecPolicy.DEFINE_MANY || specPolicy === SpecPolicy.DEFINE_MANY_MERGED) ?  false ? invariant(false, 'ReactClassInterface: You are attempting to define `%s` on your component more than once. This conflict may be due to a mixin.', name) : _prodInvariant('74', name) : void 0;
	  }
	}

	/**
	 * Mixin helper which handles policy validation and reserved
	 * specification keys when building React classes.
	 */
	function mixSpecIntoComponent(Constructor, spec) {
	  if (!spec) {
	    if (false) {
	      var typeofSpec = typeof spec;
	      var isMixinValid = typeofSpec === 'object' && spec !== null;

	      process.env.NODE_ENV !== 'production' ? warning(isMixinValid, '%s: You\'re attempting to include a mixin that is either null ' + 'or not an object. Check the mixins included by the component, ' + 'as well as any mixins they include themselves. ' + 'Expected object but got %s.', Constructor.displayName || 'ReactClass', spec === null ? null : typeofSpec) : void 0;
	    }

	    return;
	  }

	  !(typeof spec !== 'function') ?  false ? invariant(false, 'ReactClass: You\'re attempting to use a component class or function as a mixin. Instead, just use a regular object.') : _prodInvariant('75') : void 0;
	  !!ReactElement.isValidElement(spec) ?  false ? invariant(false, 'ReactClass: You\'re attempting to use a component as a mixin. Instead, just use a regular object.') : _prodInvariant('76') : void 0;

	  var proto = Constructor.prototype;
	  var autoBindPairs = proto.__reactAutoBindPairs;

	  // By handling mixins before any other properties, we ensure the same
	  // chaining order is applied to methods with DEFINE_MANY policy, whether
	  // mixins are listed before or after these methods in the spec.
	  if (spec.hasOwnProperty(MIXINS_KEY)) {
	    RESERVED_SPEC_KEYS.mixins(Constructor, spec.mixins);
	  }

	  for (var name in spec) {
	    if (!spec.hasOwnProperty(name)) {
	      continue;
	    }

	    if (name === MIXINS_KEY) {
	      // We have already handled mixins in a special case above.
	      continue;
	    }

	    var property = spec[name];
	    var isAlreadyDefined = proto.hasOwnProperty(name);
	    validateMethodOverride(isAlreadyDefined, name);

	    if (RESERVED_SPEC_KEYS.hasOwnProperty(name)) {
	      RESERVED_SPEC_KEYS[name](Constructor, property);
	    } else {
	      // Setup methods on prototype:
	      // The following member methods should not be automatically bound:
	      // 1. Expected ReactClass methods (in the "interface").
	      // 2. Overridden methods (that were mixed in).
	      var isReactClassMethod = ReactClassInterface.hasOwnProperty(name);
	      var isFunction = typeof property === 'function';
	      var shouldAutoBind = isFunction && !isReactClassMethod && !isAlreadyDefined && spec.autobind !== false;

	      if (shouldAutoBind) {
	        autoBindPairs.push(name, property);
	        proto[name] = property;
	      } else {
	        if (isAlreadyDefined) {
	          var specPolicy = ReactClassInterface[name];

	          // These cases should already be caught by validateMethodOverride.
	          !(isReactClassMethod && (specPolicy === SpecPolicy.DEFINE_MANY_MERGED || specPolicy === SpecPolicy.DEFINE_MANY)) ?  false ? invariant(false, 'ReactClass: Unexpected spec policy %s for key %s when mixing in component specs.', specPolicy, name) : _prodInvariant('77', specPolicy, name) : void 0;

	          // For methods which are defined more than once, call the existing
	          // methods before calling the new property, merging if appropriate.
	          if (specPolicy === SpecPolicy.DEFINE_MANY_MERGED) {
	            proto[name] = createMergedResultFunction(proto[name], property);
	          } else if (specPolicy === SpecPolicy.DEFINE_MANY) {
	            proto[name] = createChainedFunction(proto[name], property);
	          }
	        } else {
	          proto[name] = property;
	          if (false) {
	            // Add verbose displayName to the function, which helps when looking
	            // at profiling tools.
	            if (typeof property === 'function' && spec.displayName) {
	              proto[name].displayName = spec.displayName + '_' + name;
	            }
	          }
	        }
	      }
	    }
	  }
	}

	function mixStaticSpecIntoComponent(Constructor, statics) {
	  if (!statics) {
	    return;
	  }
	  for (var name in statics) {
	    var property = statics[name];
	    if (!statics.hasOwnProperty(name)) {
	      continue;
	    }

	    var isReserved = name in RESERVED_SPEC_KEYS;
	    !!isReserved ?  false ? invariant(false, 'ReactClass: You are attempting to define a reserved property, `%s`, that shouldn\'t be on the "statics" key. Define it as an instance property instead; it will still be accessible on the constructor.', name) : _prodInvariant('78', name) : void 0;

	    var isInherited = name in Constructor;
	    !!isInherited ?  false ? invariant(false, 'ReactClass: You are attempting to define `%s` on your component more than once. This conflict may be due to a mixin.', name) : _prodInvariant('79', name) : void 0;
	    Constructor[name] = property;
	  }
	}

	/**
	 * Merge two objects, but throw if both contain the same key.
	 *
	 * @param {object} one The first object, which is mutated.
	 * @param {object} two The second object
	 * @return {object} one after it has been mutated to contain everything in two.
	 */
	function mergeIntoWithNoDuplicateKeys(one, two) {
	  !(one && two && typeof one === 'object' && typeof two === 'object') ?  false ? invariant(false, 'mergeIntoWithNoDuplicateKeys(): Cannot merge non-objects.') : _prodInvariant('80') : void 0;

	  for (var key in two) {
	    if (two.hasOwnProperty(key)) {
	      !(one[key] === undefined) ?  false ? invariant(false, 'mergeIntoWithNoDuplicateKeys(): Tried to merge two objects with the same key: `%s`. This conflict may be due to a mixin; in particular, this may be caused by two getInitialState() or getDefaultProps() methods returning objects with clashing keys.', key) : _prodInvariant('81', key) : void 0;
	      one[key] = two[key];
	    }
	  }
	  return one;
	}

	/**
	 * Creates a function that invokes two functions and merges their return values.
	 *
	 * @param {function} one Function to invoke first.
	 * @param {function} two Function to invoke second.
	 * @return {function} Function that invokes the two argument functions.
	 * @private
	 */
	function createMergedResultFunction(one, two) {
	  return function mergedResult() {
	    var a = one.apply(this, arguments);
	    var b = two.apply(this, arguments);
	    if (a == null) {
	      return b;
	    } else if (b == null) {
	      return a;
	    }
	    var c = {};
	    mergeIntoWithNoDuplicateKeys(c, a);
	    mergeIntoWithNoDuplicateKeys(c, b);
	    return c;
	  };
	}

	/**
	 * Creates a function that invokes two functions and ignores their return vales.
	 *
	 * @param {function} one Function to invoke first.
	 * @param {function} two Function to invoke second.
	 * @return {function} Function that invokes the two argument functions.
	 * @private
	 */
	function createChainedFunction(one, two) {
	  return function chainedFunction() {
	    one.apply(this, arguments);
	    two.apply(this, arguments);
	  };
	}

	/**
	 * Binds a method to the component.
	 *
	 * @param {object} component Component whose method is going to be bound.
	 * @param {function} method Method to be bound.
	 * @return {function} The bound method.
	 */
	function bindAutoBindMethod(component, method) {
	  var boundMethod = method.bind(component);
	  if (false) {
	    boundMethod.__reactBoundContext = component;
	    boundMethod.__reactBoundMethod = method;
	    boundMethod.__reactBoundArguments = null;
	    var componentName = component.constructor.displayName;
	    var _bind = boundMethod.bind;
	    boundMethod.bind = function (newThis) {
	      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
	        args[_key - 1] = arguments[_key];
	      }

	      // User is trying to bind() an autobound method; we effectively will
	      // ignore the value of "this" that the user is trying to use, so
	      // var's warn.
	      if (newThis !== component && newThis !== null) {
	        process.env.NODE_ENV !== 'production' ? warning(false, 'bind(): React component methods may only be bound to the ' + 'component instance. See %s', componentName) : void 0;
	      } else if (!args.length) {
	        process.env.NODE_ENV !== 'production' ? warning(false, 'bind(): You are binding a component method to the component. ' + 'React does this for you automatically in a high-performance ' + 'way, so you can safely remove this call. See %s', componentName) : void 0;
	        return boundMethod;
	      }
	      var reboundMethod = _bind.apply(boundMethod, arguments);
	      reboundMethod.__reactBoundContext = component;
	      reboundMethod.__reactBoundMethod = method;
	      reboundMethod.__reactBoundArguments = args;
	      return reboundMethod;
	    };
	  }
	  return boundMethod;
	}

	/**
	 * Binds all auto-bound methods in a component.
	 *
	 * @param {object} component Component whose method is going to be bound.
	 */
	function bindAutoBindMethods(component) {
	  var pairs = component.__reactAutoBindPairs;
	  for (var i = 0; i < pairs.length; i += 2) {
	    var autoBindKey = pairs[i];
	    var method = pairs[i + 1];
	    component[autoBindKey] = bindAutoBindMethod(component, method);
	  }
	}

	/**
	 * Add more to the ReactClass base class. These are all legacy features and
	 * therefore not already part of the modern ReactComponent.
	 */
	var ReactClassMixin = {

	  /**
	   * TODO: This will be deprecated because state should always keep a consistent
	   * type signature and the only use case for this, is to avoid that.
	   */
	  replaceState: function (newState, callback) {
	    this.updater.enqueueReplaceState(this, newState);
	    if (callback) {
	      this.updater.enqueueCallback(this, callback, 'replaceState');
	    }
	  },

	  /**
	   * Checks whether or not this composite component is mounted.
	   * @return {boolean} True if mounted, false otherwise.
	   * @protected
	   * @final
	   */
	  isMounted: function () {
	    return this.updater.isMounted(this);
	  }
	};

	var ReactClassComponent = function () {};
	_assign(ReactClassComponent.prototype, ReactComponent.prototype, ReactClassMixin);

	/**
	 * Module for creating composite components.
	 *
	 * @class ReactClass
	 */
	var ReactClass = {

	  /**
	   * Creates a composite component class given a class specification.
	   * See https://facebook.github.io/react/docs/top-level-api.html#react.createclass
	   *
	   * @param {object} spec Class specification (which must define `render`).
	   * @return {function} Component constructor function.
	   * @public
	   */
	  createClass: function (spec) {
	    var Constructor = function (props, context, updater) {
	      // This constructor gets overridden by mocks. The argument is used
	      // by mocks to assert on what gets mounted.

	      if (false) {
	        process.env.NODE_ENV !== 'production' ? warning(this instanceof Constructor, 'Something is calling a React component directly. Use a factory or ' + 'JSX instead. See: https://fb.me/react-legacyfactory') : void 0;
	      }

	      // Wire up auto-binding
	      if (this.__reactAutoBindPairs.length) {
	        bindAutoBindMethods(this);
	      }

	      this.props = props;
	      this.context = context;
	      this.refs = emptyObject;
	      this.updater = updater || ReactNoopUpdateQueue;

	      this.state = null;

	      // ReactClasses doesn't have constructors. Instead, they use the
	      // getInitialState and componentWillMount methods for initialization.

	      var initialState = this.getInitialState ? this.getInitialState() : null;
	      if (false) {
	        // We allow auto-mocks to proceed as if they're returning null.
	        if (initialState === undefined && this.getInitialState._isMockFunction) {
	          // This is probably bad practice. Consider warning here and
	          // deprecating this convenience.
	          initialState = null;
	        }
	      }
	      !(typeof initialState === 'object' && !Array.isArray(initialState)) ?  false ? invariant(false, '%s.getInitialState(): must return an object or null', Constructor.displayName || 'ReactCompositeComponent') : _prodInvariant('82', Constructor.displayName || 'ReactCompositeComponent') : void 0;

	      this.state = initialState;
	    };
	    Constructor.prototype = new ReactClassComponent();
	    Constructor.prototype.constructor = Constructor;
	    Constructor.prototype.__reactAutoBindPairs = [];

	    injectedMixins.forEach(mixSpecIntoComponent.bind(null, Constructor));

	    mixSpecIntoComponent(Constructor, spec);

	    // Initialize the defaultProps property after all mixins have been merged.
	    if (Constructor.getDefaultProps) {
	      Constructor.defaultProps = Constructor.getDefaultProps();
	    }

	    if (false) {
	      // This is a tag to indicate that the use of these method names is ok,
	      // since it's used with createClass. If it's not, then it's likely a
	      // mistake so we'll warn you to use the static property, property
	      // initializer or constructor respectively.
	      if (Constructor.getDefaultProps) {
	        Constructor.getDefaultProps.isReactClassApproved = {};
	      }
	      if (Constructor.prototype.getInitialState) {
	        Constructor.prototype.getInitialState.isReactClassApproved = {};
	      }
	    }

	    !Constructor.prototype.render ?  false ? invariant(false, 'createClass(...): Class specification must implement a `render` method.') : _prodInvariant('83') : void 0;

	    if (false) {
	      process.env.NODE_ENV !== 'production' ? warning(!Constructor.prototype.componentShouldUpdate, '%s has a method called ' + 'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' + 'The name is phrased as a question because the function is ' + 'expected to return a value.', spec.displayName || 'A component') : void 0;
	      process.env.NODE_ENV !== 'production' ? warning(!Constructor.prototype.componentWillRecieveProps, '%s has a method called ' + 'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?', spec.displayName || 'A component') : void 0;
	    }

	    // Reduce time spent doing lookups by setting these on the prototype.
	    for (var methodName in ReactClassInterface) {
	      if (!Constructor.prototype[methodName]) {
	        Constructor.prototype[methodName] = null;
	      }
	    }

	    return Constructor;
	  },

	  injection: {
	    injectMixin: function (mixin) {
	      injectedMixins.push(mixin);
	    }
	  }

	};

	module.exports = ReactClass;

/***/ },
/* 74 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactComponentBrowserEnvironment
	 */

	'use strict';

	var DOMChildrenOperations = __webpack_require__(36);
	var ReactDOMIDOperations = __webpack_require__(157);

	/**
	 * Abstracts away all functionality of the reconciler that requires knowledge of
	 * the browser context. TODO: These callers should be refactored to avoid the
	 * need for this injection.
	 */
	var ReactComponentBrowserEnvironment = {

	  processChildrenUpdates: ReactDOMIDOperations.dangerouslyProcessChildrenUpdates,

	  replaceNodeWithMarkup: DOMChildrenOperations.dangerouslyReplaceNodeWithMarkup,

	  /**
	   * If a particular environment requires that some resources be cleaned up,
	   * specify this in the injected Mixin. In the DOM, we would likely want to
	   * purge any cached node ID lookups.
	   *
	   * @private
	   */
	  unmountIDFromEnvironment: function (rootNodeID) {}

	};

	module.exports = ReactComponentBrowserEnvironment;

/***/ },
/* 75 */
/***/ function(module, exports) {

	/**
	 * Copyright 2015-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMComponentFlags
	 */

	'use strict';

	var ReactDOMComponentFlags = {
	  hasCachedChildNodes: 1 << 0
	};

	module.exports = ReactDOMComponentFlags;

/***/ },
/* 76 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMSelect
	 */

	'use strict';

	var _assign = __webpack_require__(4);

	var DisabledInputUtils = __webpack_require__(27);
	var LinkedValueUtils = __webpack_require__(41);
	var ReactDOMComponentTree = __webpack_require__(5);
	var ReactUpdates = __webpack_require__(11);

	var warning = __webpack_require__(3);

	var didWarnValueLink = false;
	var didWarnValueDefaultValue = false;

	function updateOptionsIfPendingUpdateAndMounted() {
	  if (this._rootNodeID && this._wrapperState.pendingUpdate) {
	    this._wrapperState.pendingUpdate = false;

	    var props = this._currentElement.props;
	    var value = LinkedValueUtils.getValue(props);

	    if (value != null) {
	      updateOptions(this, Boolean(props.multiple), value);
	    }
	  }
	}

	function getDeclarationErrorAddendum(owner) {
	  if (owner) {
	    var name = owner.getName();
	    if (name) {
	      return ' Check the render method of `' + name + '`.';
	    }
	  }
	  return '';
	}

	var valuePropNames = ['value', 'defaultValue'];

	/**
	 * Validation function for `value` and `defaultValue`.
	 * @private
	 */
	function checkSelectPropTypes(inst, props) {
	  var owner = inst._currentElement._owner;
	  LinkedValueUtils.checkPropTypes('select', props, owner);

	  if (props.valueLink !== undefined && !didWarnValueLink) {
	     false ? warning(false, '`valueLink` prop on `select` is deprecated; set `value` and `onChange` instead.') : void 0;
	    didWarnValueLink = true;
	  }

	  for (var i = 0; i < valuePropNames.length; i++) {
	    var propName = valuePropNames[i];
	    if (props[propName] == null) {
	      continue;
	    }
	    if (props.multiple) {
	       false ? warning(Array.isArray(props[propName]), 'The `%s` prop supplied to <select> must be an array if ' + '`multiple` is true.%s', propName, getDeclarationErrorAddendum(owner)) : void 0;
	    } else {
	       false ? warning(!Array.isArray(props[propName]), 'The `%s` prop supplied to <select> must be a scalar ' + 'value if `multiple` is false.%s', propName, getDeclarationErrorAddendum(owner)) : void 0;
	    }
	  }
	}

	/**
	 * @param {ReactDOMComponent} inst
	 * @param {boolean} multiple
	 * @param {*} propValue A stringable (with `multiple`, a list of stringables).
	 * @private
	 */
	function updateOptions(inst, multiple, propValue) {
	  var selectedValue, i;
	  var options = ReactDOMComponentTree.getNodeFromInstance(inst).options;

	  if (multiple) {
	    selectedValue = {};
	    for (i = 0; i < propValue.length; i++) {
	      selectedValue['' + propValue[i]] = true;
	    }
	    for (i = 0; i < options.length; i++) {
	      var selected = selectedValue.hasOwnProperty(options[i].value);
	      if (options[i].selected !== selected) {
	        options[i].selected = selected;
	      }
	    }
	  } else {
	    // Do not set `select.value` as exact behavior isn't consistent across all
	    // browsers for all cases.
	    selectedValue = '' + propValue;
	    for (i = 0; i < options.length; i++) {
	      if (options[i].value === selectedValue) {
	        options[i].selected = true;
	        return;
	      }
	    }
	    if (options.length) {
	      options[0].selected = true;
	    }
	  }
	}

	/**
	 * Implements a <select> host component that allows optionally setting the
	 * props `value` and `defaultValue`. If `multiple` is false, the prop must be a
	 * stringable. If `multiple` is true, the prop must be an array of stringables.
	 *
	 * If `value` is not supplied (or null/undefined), user actions that change the
	 * selected option will trigger updates to the rendered options.
	 *
	 * If it is supplied (and not null/undefined), the rendered options will not
	 * update in response to user actions. Instead, the `value` prop must change in
	 * order for the rendered options to update.
	 *
	 * If `defaultValue` is provided, any options with the supplied values will be
	 * selected.
	 */
	var ReactDOMSelect = {
	  getHostProps: function (inst, props) {
	    return _assign({}, DisabledInputUtils.getHostProps(inst, props), {
	      onChange: inst._wrapperState.onChange,
	      value: undefined
	    });
	  },

	  mountWrapper: function (inst, props) {
	    if (false) {
	      checkSelectPropTypes(inst, props);
	    }

	    var value = LinkedValueUtils.getValue(props);
	    inst._wrapperState = {
	      pendingUpdate: false,
	      initialValue: value != null ? value : props.defaultValue,
	      listeners: null,
	      onChange: _handleChange.bind(inst),
	      wasMultiple: Boolean(props.multiple)
	    };

	    if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValueDefaultValue) {
	       false ? warning(false, 'Select elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled select ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components') : void 0;
	      didWarnValueDefaultValue = true;
	    }
	  },

	  getSelectValueContext: function (inst) {
	    // ReactDOMOption looks at this initial value so the initial generated
	    // markup has correct `selected` attributes
	    return inst._wrapperState.initialValue;
	  },

	  postUpdateWrapper: function (inst) {
	    var props = inst._currentElement.props;

	    // After the initial mount, we control selected-ness manually so don't pass
	    // this value down
	    inst._wrapperState.initialValue = undefined;

	    var wasMultiple = inst._wrapperState.wasMultiple;
	    inst._wrapperState.wasMultiple = Boolean(props.multiple);

	    var value = LinkedValueUtils.getValue(props);
	    if (value != null) {
	      inst._wrapperState.pendingUpdate = false;
	      updateOptions(inst, Boolean(props.multiple), value);
	    } else if (wasMultiple !== Boolean(props.multiple)) {
	      // For simplicity, reapply `defaultValue` if `multiple` is toggled.
	      if (props.defaultValue != null) {
	        updateOptions(inst, Boolean(props.multiple), props.defaultValue);
	      } else {
	        // Revert the select back to its default unselected state.
	        updateOptions(inst, Boolean(props.multiple), props.multiple ? [] : '');
	      }
	    }
	  }
	};

	function _handleChange(event) {
	  var props = this._currentElement.props;
	  var returnValue = LinkedValueUtils.executeOnChange(props, event);

	  if (this._rootNodeID) {
	    this._wrapperState.pendingUpdate = true;
	  }
	  ReactUpdates.asap(updateOptionsIfPendingUpdateAndMounted, this);
	  return returnValue;
	}

	module.exports = ReactDOMSelect;

/***/ },
/* 77 */
/***/ function(module, exports) {

	/**
	 * Copyright 2014-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactEmptyComponent
	 */

	'use strict';

	var emptyComponentFactory;

	var ReactEmptyComponentInjection = {
	  injectEmptyComponentFactory: function (factory) {
	    emptyComponentFactory = factory;
	  }
	};

	var ReactEmptyComponent = {
	  create: function (instantiate) {
	    return emptyComponentFactory(instantiate);
	  }
	};

	ReactEmptyComponent.injection = ReactEmptyComponentInjection;

	module.exports = ReactEmptyComponent;

/***/ },
/* 78 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactFeatureFlags
	 *
	 */

	'use strict';

	var ReactFeatureFlags = {
	  // When true, call console.time() before and .timeEnd() after each top-level
	  // render (both initial renders and updates). Useful when looking at prod-mode
	  // timeline profiles in Chrome, for example.
	  logTopLevelRenders: false
	};

	module.exports = ReactFeatureFlags;

/***/ },
/* 79 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2014-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactHostComponent
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(2),
	    _assign = __webpack_require__(4);

	var invariant = __webpack_require__(1);

	var genericComponentClass = null;
	// This registry keeps track of wrapper classes around host tags.
	var tagToComponentClass = {};
	var textComponentClass = null;

	var ReactHostComponentInjection = {
	  // This accepts a class that receives the tag string. This is a catch all
	  // that can render any kind of tag.
	  injectGenericComponentClass: function (componentClass) {
	    genericComponentClass = componentClass;
	  },
	  // This accepts a text component class that takes the text string to be
	  // rendered as props.
	  injectTextComponentClass: function (componentClass) {
	    textComponentClass = componentClass;
	  },
	  // This accepts a keyed object with classes as values. Each key represents a
	  // tag. That particular tag will use this class instead of the generic one.
	  injectComponentClasses: function (componentClasses) {
	    _assign(tagToComponentClass, componentClasses);
	  }
	};

	/**
	 * Get a host internal component class for a specific tag.
	 *
	 * @param {ReactElement} element The element to create.
	 * @return {function} The internal class constructor function.
	 */
	function createInternalComponent(element) {
	  !genericComponentClass ?  false ? invariant(false, 'There is no registered component for the tag %s', element.type) : _prodInvariant('111', element.type) : void 0;
	  return new genericComponentClass(element);
	}

	/**
	 * @param {ReactText} text
	 * @return {ReactComponent}
	 */
	function createInstanceForText(text) {
	  return new textComponentClass(text);
	}

	/**
	 * @param {ReactComponent} component
	 * @return {boolean}
	 */
	function isTextComponent(component) {
	  return component instanceof textComponentClass;
	}

	var ReactHostComponent = {
	  createInternalComponent: createInternalComponent,
	  createInstanceForText: createInstanceForText,
	  isTextComponent: isTextComponent,
	  injection: ReactHostComponentInjection
	};

	module.exports = ReactHostComponent;

/***/ },
/* 80 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactInputSelection
	 */

	'use strict';

	var ReactDOMSelection = __webpack_require__(161);

	var containsNode = __webpack_require__(100);
	var focusNode = __webpack_require__(60);
	var getActiveElement = __webpack_require__(61);

	function isInDocument(node) {
	  return containsNode(document.documentElement, node);
	}

	/**
	 * @ReactInputSelection: React input selection module. Based on Selection.js,
	 * but modified to be suitable for react and has a couple of bug fixes (doesn't
	 * assume buttons have range selections allowed).
	 * Input selection module for React.
	 */
	var ReactInputSelection = {

	  hasSelectionCapabilities: function (elem) {
	    var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();
	    return nodeName && (nodeName === 'input' && elem.type === 'text' || nodeName === 'textarea' || elem.contentEditable === 'true');
	  },

	  getSelectionInformation: function () {
	    var focusedElem = getActiveElement();
	    return {
	      focusedElem: focusedElem,
	      selectionRange: ReactInputSelection.hasSelectionCapabilities(focusedElem) ? ReactInputSelection.getSelection(focusedElem) : null
	    };
	  },

	  /**
	   * @restoreSelection: If any selection information was potentially lost,
	   * restore it. This is useful when performing operations that could remove dom
	   * nodes and place them back in, resulting in focus being lost.
	   */
	  restoreSelection: function (priorSelectionInformation) {
	    var curFocusedElem = getActiveElement();
	    var priorFocusedElem = priorSelectionInformation.focusedElem;
	    var priorSelectionRange = priorSelectionInformation.selectionRange;
	    if (curFocusedElem !== priorFocusedElem && isInDocument(priorFocusedElem)) {
	      if (ReactInputSelection.hasSelectionCapabilities(priorFocusedElem)) {
	        ReactInputSelection.setSelection(priorFocusedElem, priorSelectionRange);
	      }
	      focusNode(priorFocusedElem);
	    }
	  },

	  /**
	   * @getSelection: Gets the selection bounds of a focused textarea, input or
	   * contentEditable node.
	   * -@input: Look up selection bounds of this input
	   * -@return {start: selectionStart, end: selectionEnd}
	   */
	  getSelection: function (input) {
	    var selection;

	    if ('selectionStart' in input) {
	      // Modern browser with input or textarea.
	      selection = {
	        start: input.selectionStart,
	        end: input.selectionEnd
	      };
	    } else if (document.selection && input.nodeName && input.nodeName.toLowerCase() === 'input') {
	      // IE8 input.
	      var range = document.selection.createRange();
	      // There can only be one selection per document in IE, so it must
	      // be in our element.
	      if (range.parentElement() === input) {
	        selection = {
	          start: -range.moveStart('character', -input.value.length),
	          end: -range.moveEnd('character', -input.value.length)
	        };
	      }
	    } else {
	      // Content editable or old IE textarea.
	      selection = ReactDOMSelection.getOffsets(input);
	    }

	    return selection || { start: 0, end: 0 };
	  },

	  /**
	   * @setSelection: Sets the selection bounds of a textarea or input and focuses
	   * the input.
	   * -@input     Set selection bounds of this input or textarea
	   * -@offsets   Object of same form that is returned from get*
	   */
	  setSelection: function (input, offsets) {
	    var start = offsets.start;
	    var end = offsets.end;
	    if (end === undefined) {
	      end = start;
	    }

	    if ('selectionStart' in input) {
	      input.selectionStart = start;
	      input.selectionEnd = Math.min(end, input.value.length);
	    } else if (document.selection && input.nodeName && input.nodeName.toLowerCase() === 'input') {
	      var range = input.createTextRange();
	      range.collapse(true);
	      range.moveStart('character', start);
	      range.moveEnd('character', end - start);
	      range.select();
	    } else {
	      ReactDOMSelection.setOffsets(input, offsets);
	    }
	  }
	};

	module.exports = ReactInputSelection;

/***/ },
/* 81 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactMount
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(2);

	var DOMLazyTree = __webpack_require__(17);
	var DOMProperty = __webpack_require__(18);
	var ReactBrowserEventEmitter = __webpack_require__(28);
	var ReactCurrentOwner = __webpack_require__(16);
	var ReactDOMComponentTree = __webpack_require__(5);
	var ReactDOMContainerInfo = __webpack_require__(153);
	var ReactDOMFeatureFlags = __webpack_require__(156);
	var ReactElement = __webpack_require__(10);
	var ReactFeatureFlags = __webpack_require__(78);
	var ReactInstanceMap = __webpack_require__(23);
	var ReactInstrumentation = __webpack_require__(8);
	var ReactMarkupChecksum = __webpack_require__(170);
	var ReactReconciler = __webpack_require__(19);
	var ReactUpdateQueue = __webpack_require__(50);
	var ReactUpdates = __webpack_require__(11);

	var emptyObject = __webpack_require__(20);
	var instantiateReactComponent = __webpack_require__(93);
	var invariant = __webpack_require__(1);
	var setInnerHTML = __webpack_require__(31);
	var shouldUpdateReactComponent = __webpack_require__(56);
	var warning = __webpack_require__(3);

	var ATTR_NAME = DOMProperty.ID_ATTRIBUTE_NAME;
	var ROOT_ATTR_NAME = DOMProperty.ROOT_ATTRIBUTE_NAME;

	var ELEMENT_NODE_TYPE = 1;
	var DOC_NODE_TYPE = 9;
	var DOCUMENT_FRAGMENT_NODE_TYPE = 11;

	var instancesByReactRootID = {};

	/**
	 * Finds the index of the first character
	 * that's not common between the two given strings.
	 *
	 * @return {number} the index of the character where the strings diverge
	 */
	function firstDifferenceIndex(string1, string2) {
	  var minLen = Math.min(string1.length, string2.length);
	  for (var i = 0; i < minLen; i++) {
	    if (string1.charAt(i) !== string2.charAt(i)) {
	      return i;
	    }
	  }
	  return string1.length === string2.length ? -1 : minLen;
	}

	/**
	 * @param {DOMElement|DOMDocument} container DOM element that may contain
	 * a React component
	 * @return {?*} DOM element that may have the reactRoot ID, or null.
	 */
	function getReactRootElementInContainer(container) {
	  if (!container) {
	    return null;
	  }

	  if (container.nodeType === DOC_NODE_TYPE) {
	    return container.documentElement;
	  } else {
	    return container.firstChild;
	  }
	}

	function internalGetID(node) {
	  // If node is something like a window, document, or text node, none of
	  // which support attributes or a .getAttribute method, gracefully return
	  // the empty string, as if the attribute were missing.
	  return node.getAttribute && node.getAttribute(ATTR_NAME) || '';
	}

	/**
	 * Mounts this component and inserts it into the DOM.
	 *
	 * @param {ReactComponent} componentInstance The instance to mount.
	 * @param {DOMElement} container DOM element to mount into.
	 * @param {ReactReconcileTransaction} transaction
	 * @param {boolean} shouldReuseMarkup If true, do not insert markup
	 */
	function mountComponentIntoNode(wrapperInstance, container, transaction, shouldReuseMarkup, context) {
	  var markerName;
	  if (ReactFeatureFlags.logTopLevelRenders) {
	    var wrappedElement = wrapperInstance._currentElement.props;
	    var type = wrappedElement.type;
	    markerName = 'React mount: ' + (typeof type === 'string' ? type : type.displayName || type.name);
	    console.time(markerName);
	  }

	  var markup = ReactReconciler.mountComponent(wrapperInstance, transaction, null, ReactDOMContainerInfo(wrapperInstance, container), context);

	  if (markerName) {
	    console.timeEnd(markerName);
	  }

	  wrapperInstance._renderedComponent._topLevelWrapper = wrapperInstance;
	  ReactMount._mountImageIntoNode(markup, container, wrapperInstance, shouldReuseMarkup, transaction);
	}

	/**
	 * Batched mount.
	 *
	 * @param {ReactComponent} componentInstance The instance to mount.
	 * @param {DOMElement} container DOM element to mount into.
	 * @param {boolean} shouldReuseMarkup If true, do not insert markup
	 */
	function batchedMountComponentIntoNode(componentInstance, container, shouldReuseMarkup, context) {
	  var transaction = ReactUpdates.ReactReconcileTransaction.getPooled(
	  /* useCreateElement */
	  !shouldReuseMarkup && ReactDOMFeatureFlags.useCreateElement);
	  transaction.perform(mountComponentIntoNode, null, componentInstance, container, transaction, shouldReuseMarkup, context);
	  ReactUpdates.ReactReconcileTransaction.release(transaction);
	}

	/**
	 * Unmounts a component and removes it from the DOM.
	 *
	 * @param {ReactComponent} instance React component instance.
	 * @param {DOMElement} container DOM element to unmount from.
	 * @final
	 * @internal
	 * @see {ReactMount.unmountComponentAtNode}
	 */
	function unmountComponentFromNode(instance, container, safely) {
	  if (false) {
	    ReactInstrumentation.debugTool.onBeginFlush();
	  }
	  ReactReconciler.unmountComponent(instance, safely);
	  if (false) {
	    ReactInstrumentation.debugTool.onEndFlush();
	  }

	  if (container.nodeType === DOC_NODE_TYPE) {
	    container = container.documentElement;
	  }

	  // http://jsperf.com/emptying-a-node
	  while (container.lastChild) {
	    container.removeChild(container.lastChild);
	  }
	}

	/**
	 * True if the supplied DOM node has a direct React-rendered child that is
	 * not a React root element. Useful for warning in `render`,
	 * `unmountComponentAtNode`, etc.
	 *
	 * @param {?DOMElement} node The candidate DOM node.
	 * @return {boolean} True if the DOM element contains a direct child that was
	 * rendered by React but is not a root element.
	 * @internal
	 */
	function hasNonRootReactChild(container) {
	  var rootEl = getReactRootElementInContainer(container);
	  if (rootEl) {
	    var inst = ReactDOMComponentTree.getInstanceFromNode(rootEl);
	    return !!(inst && inst._hostParent);
	  }
	}

	function getHostRootInstanceInContainer(container) {
	  var rootEl = getReactRootElementInContainer(container);
	  var prevHostInstance = rootEl && ReactDOMComponentTree.getInstanceFromNode(rootEl);
	  return prevHostInstance && !prevHostInstance._hostParent ? prevHostInstance : null;
	}

	function getTopLevelWrapperInContainer(container) {
	  var root = getHostRootInstanceInContainer(container);
	  return root ? root._hostContainerInfo._topLevelWrapper : null;
	}

	/**
	 * Temporary (?) hack so that we can store all top-level pending updates on
	 * composites instead of having to worry about different types of components
	 * here.
	 */
	var topLevelRootCounter = 1;
	var TopLevelWrapper = function () {
	  this.rootID = topLevelRootCounter++;
	};
	TopLevelWrapper.prototype.isReactComponent = {};
	if (false) {
	  TopLevelWrapper.displayName = 'TopLevelWrapper';
	}
	TopLevelWrapper.prototype.render = function () {
	  // this.props is actually a ReactElement
	  return this.props;
	};

	/**
	 * Mounting is the process of initializing a React component by creating its
	 * representative DOM elements and inserting them into a supplied `container`.
	 * Any prior content inside `container` is destroyed in the process.
	 *
	 *   ReactMount.render(
	 *     component,
	 *     document.getElementById('container')
	 *   );
	 *
	 *   <div id="container">                   <-- Supplied `container`.
	 *     <div data-reactid=".3">              <-- Rendered reactRoot of React
	 *       // ...                                 component.
	 *     </div>
	 *   </div>
	 *
	 * Inside of `container`, the first element rendered is the "reactRoot".
	 */
	var ReactMount = {

	  TopLevelWrapper: TopLevelWrapper,

	  /**
	   * Used by devtools. The keys are not important.
	   */
	  _instancesByReactRootID: instancesByReactRootID,

	  /**
	   * This is a hook provided to support rendering React components while
	   * ensuring that the apparent scroll position of its `container` does not
	   * change.
	   *
	   * @param {DOMElement} container The `container` being rendered into.
	   * @param {function} renderCallback This must be called once to do the render.
	   */
	  scrollMonitor: function (container, renderCallback) {
	    renderCallback();
	  },

	  /**
	   * Take a component that's already mounted into the DOM and replace its props
	   * @param {ReactComponent} prevComponent component instance already in the DOM
	   * @param {ReactElement} nextElement component instance to render
	   * @param {DOMElement} container container to render into
	   * @param {?function} callback function triggered on completion
	   */
	  _updateRootComponent: function (prevComponent, nextElement, nextContext, container, callback) {
	    ReactMount.scrollMonitor(container, function () {
	      ReactUpdateQueue.enqueueElementInternal(prevComponent, nextElement, nextContext);
	      if (callback) {
	        ReactUpdateQueue.enqueueCallbackInternal(prevComponent, callback);
	      }
	    });

	    return prevComponent;
	  },

	  /**
	   * Render a new component into the DOM. Hooked by devtools!
	   *
	   * @param {ReactElement} nextElement element to render
	   * @param {DOMElement} container container to render into
	   * @param {boolean} shouldReuseMarkup if we should skip the markup insertion
	   * @return {ReactComponent} nextComponent
	   */
	  _renderNewRootComponent: function (nextElement, container, shouldReuseMarkup, context) {
	    // Various parts of our code (such as ReactCompositeComponent's
	    // _renderValidatedComponent) assume that calls to render aren't nested;
	    // verify that that's the case.
	     false ? warning(ReactCurrentOwner.current == null, '_renderNewRootComponent(): Render methods should be a pure function ' + 'of props and state; triggering nested component updates from ' + 'render is not allowed. If necessary, trigger nested updates in ' + 'componentDidUpdate. Check the render method of %s.', ReactCurrentOwner.current && ReactCurrentOwner.current.getName() || 'ReactCompositeComponent') : void 0;

	    !(container && (container.nodeType === ELEMENT_NODE_TYPE || container.nodeType === DOC_NODE_TYPE || container.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE)) ?  false ? invariant(false, '_registerComponent(...): Target container is not a DOM element.') : _prodInvariant('37') : void 0;

	    ReactBrowserEventEmitter.ensureScrollValueMonitoring();
	    var componentInstance = instantiateReactComponent(nextElement, false);

	    // The initial render is synchronous but any updates that happen during
	    // rendering, in componentWillMount or componentDidMount, will be batched
	    // according to the current batching strategy.

	    ReactUpdates.batchedUpdates(batchedMountComponentIntoNode, componentInstance, container, shouldReuseMarkup, context);

	    var wrapperID = componentInstance._instance.rootID;
	    instancesByReactRootID[wrapperID] = componentInstance;

	    if (false) {
	      // The instance here is TopLevelWrapper so we report mount for its child.
	      ReactInstrumentation.debugTool.onMountRootComponent(componentInstance._renderedComponent._debugID);
	    }

	    return componentInstance;
	  },

	  /**
	   * Renders a React component into the DOM in the supplied `container`.
	   *
	   * If the React component was previously rendered into `container`, this will
	   * perform an update on it and only mutate the DOM as necessary to reflect the
	   * latest React component.
	   *
	   * @param {ReactComponent} parentComponent The conceptual parent of this render tree.
	   * @param {ReactElement} nextElement Component element to render.
	   * @param {DOMElement} container DOM element to render into.
	   * @param {?function} callback function triggered on completion
	   * @return {ReactComponent} Component instance rendered in `container`.
	   */
	  renderSubtreeIntoContainer: function (parentComponent, nextElement, container, callback) {
	    !(parentComponent != null && ReactInstanceMap.has(parentComponent)) ?  false ? invariant(false, 'parentComponent must be a valid React Component') : _prodInvariant('38') : void 0;
	    return ReactMount._renderSubtreeIntoContainer(parentComponent, nextElement, container, callback);
	  },

	  _renderSubtreeIntoContainer: function (parentComponent, nextElement, container, callback) {
	    ReactUpdateQueue.validateCallback(callback, 'ReactDOM.render');
	    !ReactElement.isValidElement(nextElement) ?  false ? invariant(false, 'ReactDOM.render(): Invalid component element.%s', typeof nextElement === 'string' ? ' Instead of passing a string like \'div\', pass ' + 'React.createElement(\'div\') or <div />.' : typeof nextElement === 'function' ? ' Instead of passing a class like Foo, pass ' + 'React.createElement(Foo) or <Foo />.' :
	    // Check if it quacks like an element
	    nextElement != null && nextElement.props !== undefined ? ' This may be caused by unintentionally loading two independent ' + 'copies of React.' : '') : _prodInvariant('39', typeof nextElement === 'string' ? ' Instead of passing a string like \'div\', pass ' + 'React.createElement(\'div\') or <div />.' : typeof nextElement === 'function' ? ' Instead of passing a class like Foo, pass ' + 'React.createElement(Foo) or <Foo />.' : nextElement != null && nextElement.props !== undefined ? ' This may be caused by unintentionally loading two independent ' + 'copies of React.' : '') : void 0;

	     false ? warning(!container || !container.tagName || container.tagName.toUpperCase() !== 'BODY', 'render(): Rendering components directly into document.body is ' + 'discouraged, since its children are often manipulated by third-party ' + 'scripts and browser extensions. This may lead to subtle ' + 'reconciliation issues. Try rendering into a container element created ' + 'for your app.') : void 0;

	    var nextWrappedElement = ReactElement(TopLevelWrapper, null, null, null, null, null, nextElement);

	    var nextContext;
	    if (parentComponent) {
	      var parentInst = ReactInstanceMap.get(parentComponent);
	      nextContext = parentInst._processChildContext(parentInst._context);
	    } else {
	      nextContext = emptyObject;
	    }

	    var prevComponent = getTopLevelWrapperInContainer(container);

	    if (prevComponent) {
	      var prevWrappedElement = prevComponent._currentElement;
	      var prevElement = prevWrappedElement.props;
	      if (shouldUpdateReactComponent(prevElement, nextElement)) {
	        var publicInst = prevComponent._renderedComponent.getPublicInstance();
	        var updatedCallback = callback && function () {
	          callback.call(publicInst);
	        };
	        ReactMount._updateRootComponent(prevComponent, nextWrappedElement, nextContext, container, updatedCallback);
	        return publicInst;
	      } else {
	        ReactMount.unmountComponentAtNode(container);
	      }
	    }

	    var reactRootElement = getReactRootElementInContainer(container);
	    var containerHasReactMarkup = reactRootElement && !!internalGetID(reactRootElement);
	    var containerHasNonRootReactChild = hasNonRootReactChild(container);

	    if (false) {
	      process.env.NODE_ENV !== 'production' ? warning(!containerHasNonRootReactChild, 'render(...): Replacing React-rendered children with a new root ' + 'component. If you intended to update the children of this node, ' + 'you should instead have the existing children update their state ' + 'and render the new components instead of calling ReactDOM.render.') : void 0;

	      if (!containerHasReactMarkup || reactRootElement.nextSibling) {
	        var rootElementSibling = reactRootElement;
	        while (rootElementSibling) {
	          if (internalGetID(rootElementSibling)) {
	            process.env.NODE_ENV !== 'production' ? warning(false, 'render(): Target node has markup rendered by React, but there ' + 'are unrelated nodes as well. This is most commonly caused by ' + 'white-space inserted around server-rendered markup.') : void 0;
	            break;
	          }
	          rootElementSibling = rootElementSibling.nextSibling;
	        }
	      }
	    }

	    var shouldReuseMarkup = containerHasReactMarkup && !prevComponent && !containerHasNonRootReactChild;
	    var component = ReactMount._renderNewRootComponent(nextWrappedElement, container, shouldReuseMarkup, nextContext)._renderedComponent.getPublicInstance();
	    if (callback) {
	      callback.call(component);
	    }
	    return component;
	  },

	  /**
	   * Renders a React component into the DOM in the supplied `container`.
	   * See https://facebook.github.io/react/docs/top-level-api.html#reactdom.render
	   *
	   * If the React component was previously rendered into `container`, this will
	   * perform an update on it and only mutate the DOM as necessary to reflect the
	   * latest React component.
	   *
	   * @param {ReactElement} nextElement Component element to render.
	   * @param {DOMElement} container DOM element to render into.
	   * @param {?function} callback function triggered on completion
	   * @return {ReactComponent} Component instance rendered in `container`.
	   */
	  render: function (nextElement, container, callback) {
	    return ReactMount._renderSubtreeIntoContainer(null, nextElement, container, callback);
	  },

	  /**
	   * Unmounts and destroys the React component rendered in the `container`.
	   * See https://facebook.github.io/react/docs/top-level-api.html#reactdom.unmountcomponentatnode
	   *
	   * @param {DOMElement} container DOM element containing a React component.
	   * @return {boolean} True if a component was found in and unmounted from
	   *                   `container`
	   */
	  unmountComponentAtNode: function (container) {
	    // Various parts of our code (such as ReactCompositeComponent's
	    // _renderValidatedComponent) assume that calls to render aren't nested;
	    // verify that that's the case. (Strictly speaking, unmounting won't cause a
	    // render but we still don't expect to be in a render call here.)
	     false ? warning(ReactCurrentOwner.current == null, 'unmountComponentAtNode(): Render methods should be a pure function ' + 'of props and state; triggering nested component updates from render ' + 'is not allowed. If necessary, trigger nested updates in ' + 'componentDidUpdate. Check the render method of %s.', ReactCurrentOwner.current && ReactCurrentOwner.current.getName() || 'ReactCompositeComponent') : void 0;

	    !(container && (container.nodeType === ELEMENT_NODE_TYPE || container.nodeType === DOC_NODE_TYPE || container.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE)) ?  false ? invariant(false, 'unmountComponentAtNode(...): Target container is not a DOM element.') : _prodInvariant('40') : void 0;

	    var prevComponent = getTopLevelWrapperInContainer(container);
	    if (!prevComponent) {
	      // Check if the node being unmounted was rendered by React, but isn't a
	      // root node.
	      var containerHasNonRootReactChild = hasNonRootReactChild(container);

	      // Check if the container itself is a React root node.
	      var isContainerReactRoot = container.nodeType === 1 && container.hasAttribute(ROOT_ATTR_NAME);

	      if (false) {
	        process.env.NODE_ENV !== 'production' ? warning(!containerHasNonRootReactChild, 'unmountComponentAtNode(): The node you\'re attempting to unmount ' + 'was rendered by React and is not a top-level container. %s', isContainerReactRoot ? 'You may have accidentally passed in a React root node instead ' + 'of its container.' : 'Instead, have the parent component update its state and ' + 'rerender in order to remove this component.') : void 0;
	      }

	      return false;
	    }
	    delete instancesByReactRootID[prevComponent._instance.rootID];
	    ReactUpdates.batchedUpdates(unmountComponentFromNode, prevComponent, container, false);
	    return true;
	  },

	  _mountImageIntoNode: function (markup, container, instance, shouldReuseMarkup, transaction) {
	    !(container && (container.nodeType === ELEMENT_NODE_TYPE || container.nodeType === DOC_NODE_TYPE || container.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE)) ?  false ? invariant(false, 'mountComponentIntoNode(...): Target container is not valid.') : _prodInvariant('41') : void 0;

	    if (shouldReuseMarkup) {
	      var rootElement = getReactRootElementInContainer(container);
	      if (ReactMarkupChecksum.canReuseMarkup(markup, rootElement)) {
	        ReactDOMComponentTree.precacheNode(instance, rootElement);
	        return;
	      } else {
	        var checksum = rootElement.getAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);
	        rootElement.removeAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);

	        var rootMarkup = rootElement.outerHTML;
	        rootElement.setAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME, checksum);

	        var normalizedMarkup = markup;
	        if (false) {
	          // because rootMarkup is retrieved from the DOM, various normalizations
	          // will have occurred which will not be present in `markup`. Here,
	          // insert markup into a <div> or <iframe> depending on the container
	          // type to perform the same normalizations before comparing.
	          var normalizer;
	          if (container.nodeType === ELEMENT_NODE_TYPE) {
	            normalizer = document.createElement('div');
	            normalizer.innerHTML = markup;
	            normalizedMarkup = normalizer.innerHTML;
	          } else {
	            normalizer = document.createElement('iframe');
	            document.body.appendChild(normalizer);
	            normalizer.contentDocument.write(markup);
	            normalizedMarkup = normalizer.contentDocument.documentElement.outerHTML;
	            document.body.removeChild(normalizer);
	          }
	        }

	        var diffIndex = firstDifferenceIndex(normalizedMarkup, rootMarkup);
	        var difference = ' (client) ' + normalizedMarkup.substring(diffIndex - 20, diffIndex + 20) + '\n (server) ' + rootMarkup.substring(diffIndex - 20, diffIndex + 20);

	        !(container.nodeType !== DOC_NODE_TYPE) ?  false ? invariant(false, 'You\'re trying to render a component to the document using server rendering but the checksum was invalid. This usually means you rendered a different component type or props on the client from the one on the server, or your render() methods are impure. React cannot handle this case due to cross-browser quirks by rendering at the document root. You should look for environment dependent code in your components and ensure the props are the same client and server side:\n%s', difference) : _prodInvariant('42', difference) : void 0;

	        if (false) {
	          process.env.NODE_ENV !== 'production' ? warning(false, 'React attempted to reuse markup in a container but the ' + 'checksum was invalid. This generally means that you are ' + 'using server rendering and the markup generated on the ' + 'server was not what the client was expecting. React injected ' + 'new markup to compensate which works but you have lost many ' + 'of the benefits of server rendering. Instead, figure out ' + 'why the markup being generated is different on the client ' + 'or server:\n%s', difference) : void 0;
	        }
	      }
	    }

	    !(container.nodeType !== DOC_NODE_TYPE) ?  false ? invariant(false, 'You\'re trying to render a component to the document but you didn\'t use server rendering. We can\'t do this without using server rendering due to cross-browser quirks. See ReactDOMServer.renderToString() for server rendering.') : _prodInvariant('43') : void 0;

	    if (transaction.useCreateElement) {
	      while (container.lastChild) {
	        container.removeChild(container.lastChild);
	      }
	      DOMLazyTree.insertTreeBefore(container, markup, null);
	    } else {
	      setInnerHTML(container, markup);
	      ReactDOMComponentTree.precacheNode(instance, container.firstChild);
	    }

	    if (false) {
	      var hostNode = ReactDOMComponentTree.getInstanceFromNode(container.firstChild);
	      if (hostNode._debugID !== 0) {
	        ReactInstrumentation.debugTool.onHostOperation(hostNode._debugID, 'mount', markup.toString());
	      }
	    }
	  }
	};

	module.exports = ReactMount;

/***/ },
/* 82 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactMultiChildUpdateTypes
	 */

	'use strict';

	var keyMirror = __webpack_require__(26);

	/**
	 * When a component's children are updated, a series of update configuration
	 * objects are created in order to batch and serialize the required changes.
	 *
	 * Enumerates all the possible types of update configurations.
	 *
	 * @internal
	 */
	var ReactMultiChildUpdateTypes = keyMirror({
	  INSERT_MARKUP: null,
	  MOVE_EXISTING: null,
	  REMOVE_NODE: null,
	  SET_MARKUP: null,
	  TEXT_CONTENT: null
	});

	module.exports = ReactMultiChildUpdateTypes;

/***/ },
/* 83 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactNodeTypes
	 *
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(2);

	var ReactElement = __webpack_require__(10);

	var invariant = __webpack_require__(1);

	var ReactNodeTypes = {
	  HOST: 0,
	  COMPOSITE: 1,
	  EMPTY: 2,

	  getType: function (node) {
	    if (node === null || node === false) {
	      return ReactNodeTypes.EMPTY;
	    } else if (ReactElement.isValidElement(node)) {
	      if (typeof node.type === 'function') {
	        return ReactNodeTypes.COMPOSITE;
	      } else {
	        return ReactNodeTypes.HOST;
	      }
	    }
	     true ?  false ? invariant(false, 'Unexpected node: %s', node) : _prodInvariant('26', node) : void 0;
	  }
	};

	module.exports = ReactNodeTypes;

/***/ },
/* 84 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactPropTypes
	 */

	'use strict';

	var ReactElement = __webpack_require__(10);
	var ReactPropTypeLocationNames = __webpack_require__(47);
	var ReactPropTypesSecret = __webpack_require__(49);

	var emptyFunction = __webpack_require__(9);
	var getIteratorFn = __webpack_require__(91);
	var warning = __webpack_require__(3);

	/**
	 * Collection of methods that allow declaration and validation of props that are
	 * supplied to React components. Example usage:
	 *
	 *   var Props = require('ReactPropTypes');
	 *   var MyArticle = React.createClass({
	 *     propTypes: {
	 *       // An optional string prop named "description".
	 *       description: Props.string,
	 *
	 *       // A required enum prop named "category".
	 *       category: Props.oneOf(['News','Photos']).isRequired,
	 *
	 *       // A prop named "dialog" that requires an instance of Dialog.
	 *       dialog: Props.instanceOf(Dialog).isRequired
	 *     },
	 *     render: function() { ... }
	 *   });
	 *
	 * A more formal specification of how these methods are used:
	 *
	 *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)
	 *   decl := ReactPropTypes.{type}(.isRequired)?
	 *
	 * Each and every declaration produces a function with the same signature. This
	 * allows the creation of custom validation functions. For example:
	 *
	 *  var MyLink = React.createClass({
	 *    propTypes: {
	 *      // An optional string or URI prop named "href".
	 *      href: function(props, propName, componentName) {
	 *        var propValue = props[propName];
	 *        if (propValue != null && typeof propValue !== 'string' &&
	 *            !(propValue instanceof URI)) {
	 *          return new Error(
	 *            'Expected a string or an URI for ' + propName + ' in ' +
	 *            componentName
	 *          );
	 *        }
	 *      }
	 *    },
	 *    render: function() {...}
	 *  });
	 *
	 * @internal
	 */

	var ANONYMOUS = '<<anonymous>>';

	var ReactPropTypes = {
	  array: createPrimitiveTypeChecker('array'),
	  bool: createPrimitiveTypeChecker('boolean'),
	  func: createPrimitiveTypeChecker('function'),
	  number: createPrimitiveTypeChecker('number'),
	  object: createPrimitiveTypeChecker('object'),
	  string: createPrimitiveTypeChecker('string'),
	  symbol: createPrimitiveTypeChecker('symbol'),

	  any: createAnyTypeChecker(),
	  arrayOf: createArrayOfTypeChecker,
	  element: createElementTypeChecker(),
	  instanceOf: createInstanceTypeChecker,
	  node: createNodeChecker(),
	  objectOf: createObjectOfTypeChecker,
	  oneOf: createEnumTypeChecker,
	  oneOfType: createUnionTypeChecker,
	  shape: createShapeTypeChecker
	};

	/**
	 * inlined Object.is polyfill to avoid requiring consumers ship their own
	 * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
	 */
	/*eslint-disable no-self-compare*/
	function is(x, y) {
	  // SameValue algorithm
	  if (x === y) {
	    // Steps 1-5, 7-10
	    // Steps 6.b-6.e: +0 != -0
	    return x !== 0 || 1 / x === 1 / y;
	  } else {
	    // Step 6.a: NaN == NaN
	    return x !== x && y !== y;
	  }
	}
	/*eslint-enable no-self-compare*/

	function createChainableTypeChecker(validate) {
	  if (false) {
	    var manualPropTypeCallCache = {};
	  }
	  function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {
	    componentName = componentName || ANONYMOUS;
	    propFullName = propFullName || propName;
	    if (false) {
	      if (secret !== ReactPropTypesSecret && typeof console !== 'undefined') {
	        var cacheKey = componentName + ':' + propName;
	        if (!manualPropTypeCallCache[cacheKey]) {
	          process.env.NODE_ENV !== 'production' ? warning(false, 'You are manually calling a React.PropTypes validation ' + 'function for the `%s` prop on `%s`. This is deprecated ' + 'and will not work in the next major version. You may be ' + 'seeing this warning due to a third-party PropTypes library. ' + 'See https://fb.me/react-warning-dont-call-proptypes for details.', propFullName, componentName) : void 0;
	          manualPropTypeCallCache[cacheKey] = true;
	        }
	      }
	    }
	    if (props[propName] == null) {
	      var locationName = ReactPropTypeLocationNames[location];
	      if (isRequired) {
	        return new Error('Required ' + locationName + ' `' + propFullName + '` was not specified in ' + ('`' + componentName + '`.'));
	      }
	      return null;
	    } else {
	      return validate(props, propName, componentName, location, propFullName);
	    }
	  }

	  var chainedCheckType = checkType.bind(null, false);
	  chainedCheckType.isRequired = checkType.bind(null, true);

	  return chainedCheckType;
	}

	function createPrimitiveTypeChecker(expectedType) {
	  function validate(props, propName, componentName, location, propFullName, secret) {
	    var propValue = props[propName];
	    var propType = getPropType(propValue);
	    if (propType !== expectedType) {
	      var locationName = ReactPropTypeLocationNames[location];
	      // `propValue` being instance of, say, date/regexp, pass the 'object'
	      // check, but we can offer a more precise error message here rather than
	      // 'of type `object`'.
	      var preciseType = getPreciseType(propValue);

	      return new Error('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'));
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}

	function createAnyTypeChecker() {
	  return createChainableTypeChecker(emptyFunction.thatReturns(null));
	}

	function createArrayOfTypeChecker(typeChecker) {
	  function validate(props, propName, componentName, location, propFullName) {
	    if (typeof typeChecker !== 'function') {
	      return new Error('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside arrayOf.');
	    }
	    var propValue = props[propName];
	    if (!Array.isArray(propValue)) {
	      var locationName = ReactPropTypeLocationNames[location];
	      var propType = getPropType(propValue);
	      return new Error('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));
	    }
	    for (var i = 0; i < propValue.length; i++) {
	      var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']', ReactPropTypesSecret);
	      if (error instanceof Error) {
	        return error;
	      }
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}

	function createElementTypeChecker() {
	  function validate(props, propName, componentName, location, propFullName) {
	    var propValue = props[propName];
	    if (!ReactElement.isValidElement(propValue)) {
	      var locationName = ReactPropTypeLocationNames[location];
	      var propType = getPropType(propValue);
	      return new Error('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement.'));
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}

	function createInstanceTypeChecker(expectedClass) {
	  function validate(props, propName, componentName, location, propFullName) {
	    if (!(props[propName] instanceof expectedClass)) {
	      var locationName = ReactPropTypeLocationNames[location];
	      var expectedClassName = expectedClass.name || ANONYMOUS;
	      var actualClassName = getClassName(props[propName]);
	      return new Error('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}

	function createEnumTypeChecker(expectedValues) {
	  if (!Array.isArray(expectedValues)) {
	     false ? warning(false, 'Invalid argument supplied to oneOf, expected an instance of array.') : void 0;
	    return emptyFunction.thatReturnsNull;
	  }

	  function validate(props, propName, componentName, location, propFullName) {
	    var propValue = props[propName];
	    for (var i = 0; i < expectedValues.length; i++) {
	      if (is(propValue, expectedValues[i])) {
	        return null;
	      }
	    }

	    var locationName = ReactPropTypeLocationNames[location];
	    var valuesString = JSON.stringify(expectedValues);
	    return new Error('Invalid ' + locationName + ' `' + propFullName + '` of value `' + propValue + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));
	  }
	  return createChainableTypeChecker(validate);
	}

	function createObjectOfTypeChecker(typeChecker) {
	  function validate(props, propName, componentName, location, propFullName) {
	    if (typeof typeChecker !== 'function') {
	      return new Error('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside objectOf.');
	    }
	    var propValue = props[propName];
	    var propType = getPropType(propValue);
	    if (propType !== 'object') {
	      var locationName = ReactPropTypeLocationNames[location];
	      return new Error('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));
	    }
	    for (var key in propValue) {
	      if (propValue.hasOwnProperty(key)) {
	        var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
	        if (error instanceof Error) {
	          return error;
	        }
	      }
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}

	function createUnionTypeChecker(arrayOfTypeCheckers) {
	  if (!Array.isArray(arrayOfTypeCheckers)) {
	     false ? warning(false, 'Invalid argument supplied to oneOfType, expected an instance of array.') : void 0;
	    return emptyFunction.thatReturnsNull;
	  }

	  function validate(props, propName, componentName, location, propFullName) {
	    for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
	      var checker = arrayOfTypeCheckers[i];
	      if (checker(props, propName, componentName, location, propFullName, ReactPropTypesSecret) == null) {
	        return null;
	      }
	    }

	    var locationName = ReactPropTypeLocationNames[location];
	    return new Error('Invalid ' + locationName + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`.'));
	  }
	  return createChainableTypeChecker(validate);
	}

	function createNodeChecker() {
	  function validate(props, propName, componentName, location, propFullName) {
	    if (!isNode(props[propName])) {
	      var locationName = ReactPropTypeLocationNames[location];
	      return new Error('Invalid ' + locationName + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}

	function createShapeTypeChecker(shapeTypes) {
	  function validate(props, propName, componentName, location, propFullName) {
	    var propValue = props[propName];
	    var propType = getPropType(propValue);
	    if (propType !== 'object') {
	      var locationName = ReactPropTypeLocationNames[location];
	      return new Error('Invalid ' + locationName + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
	    }
	    for (var key in shapeTypes) {
	      var checker = shapeTypes[key];
	      if (!checker) {
	        continue;
	      }
	      var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
	      if (error) {
	        return error;
	      }
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}

	function isNode(propValue) {
	  switch (typeof propValue) {
	    case 'number':
	    case 'string':
	    case 'undefined':
	      return true;
	    case 'boolean':
	      return !propValue;
	    case 'object':
	      if (Array.isArray(propValue)) {
	        return propValue.every(isNode);
	      }
	      if (propValue === null || ReactElement.isValidElement(propValue)) {
	        return true;
	      }

	      var iteratorFn = getIteratorFn(propValue);
	      if (iteratorFn) {
	        var iterator = iteratorFn.call(propValue);
	        var step;
	        if (iteratorFn !== propValue.entries) {
	          while (!(step = iterator.next()).done) {
	            if (!isNode(step.value)) {
	              return false;
	            }
	          }
	        } else {
	          // Iterator will provide entry [k,v] tuples rather than values.
	          while (!(step = iterator.next()).done) {
	            var entry = step.value;
	            if (entry) {
	              if (!isNode(entry[1])) {
	                return false;
	              }
	            }
	          }
	        }
	      } else {
	        return false;
	      }

	      return true;
	    default:
	      return false;
	  }
	}

	function isSymbol(propType, propValue) {
	  // Native Symbol.
	  if (propType === 'symbol') {
	    return true;
	  }

	  // 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'
	  if (propValue['@@toStringTag'] === 'Symbol') {
	    return true;
	  }

	  // Fallback for non-spec compliant Symbols which are polyfilled.
	  if (typeof Symbol === 'function' && propValue instanceof Symbol) {
	    return true;
	  }

	  return false;
	}

	// Equivalent of `typeof` but with special handling for array and regexp.
	function getPropType(propValue) {
	  var propType = typeof propValue;
	  if (Array.isArray(propValue)) {
	    return 'array';
	  }
	  if (propValue instanceof RegExp) {
	    // Old webkits (at least until Android 4.0) return 'function' rather than
	    // 'object' for typeof a RegExp. We'll normalize this here so that /bla/
	    // passes PropTypes.object.
	    return 'object';
	  }
	  if (isSymbol(propType, propValue)) {
	    return 'symbol';
	  }
	  return propType;
	}

	// This handles more types than `getPropType`. Only used for error messages.
	// See `createPrimitiveTypeChecker`.
	function getPreciseType(propValue) {
	  var propType = getPropType(propValue);
	  if (propType === 'object') {
	    if (propValue instanceof Date) {
	      return 'date';
	    } else if (propValue instanceof RegExp) {
	      return 'regexp';
	    }
	  }
	  return propType;
	}

	// Returns class name of the object, if any.
	function getClassName(propValue) {
	  if (!propValue.constructor || !propValue.constructor.name) {
	    return ANONYMOUS;
	  }
	  return propValue.constructor.name;
	}

	module.exports = ReactPropTypes;

/***/ },
/* 85 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactVersion
	 */

	'use strict';

	module.exports = '15.3.0';

/***/ },
/* 86 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ViewportMetrics
	 */

	'use strict';

	var ViewportMetrics = {

	  currentScrollLeft: 0,

	  currentScrollTop: 0,

	  refreshScrollValues: function (scrollPosition) {
	    ViewportMetrics.currentScrollLeft = scrollPosition.x;
	    ViewportMetrics.currentScrollTop = scrollPosition.y;
	  }

	};

	module.exports = ViewportMetrics;

/***/ },
/* 87 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2014-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule accumulateInto
	 *
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(2);

	var invariant = __webpack_require__(1);

	/**
	 * Accumulates items that must not be null or undefined into the first one. This
	 * is used to conserve memory by avoiding array allocations, and thus sacrifices
	 * API cleanness. Since `current` can be null before being passed in and not
	 * null after this function, make sure to assign it back to `current`:
	 *
	 * `a = accumulateInto(a, b);`
	 *
	 * This API should be sparingly used. Try `accumulate` for something cleaner.
	 *
	 * @return {*|array<*>} An accumulation of items.
	 */

	function accumulateInto(current, next) {
	  !(next != null) ?  false ? invariant(false, 'accumulateInto(...): Accumulated items must not be null or undefined.') : _prodInvariant('30') : void 0;

	  if (current == null) {
	    return next;
	  }

	  // Both are not empty. Warning: Never call x.concat(y) when you are not
	  // certain that x is an Array (x could be a string with concat method).
	  if (Array.isArray(current)) {
	    if (Array.isArray(next)) {
	      current.push.apply(current, next);
	      return current;
	    }
	    current.push(next);
	    return current;
	  }

	  if (Array.isArray(next)) {
	    // A bit too dangerous to mutate `next`.
	    return [current].concat(next);
	  }

	  return [current, next];
	}

	module.exports = accumulateInto;

/***/ },
/* 88 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule canDefineProperty
	 */

	'use strict';

	var canDefineProperty = false;
	if (false) {
	  try {
	    Object.defineProperty({}, 'x', { get: function () {} });
	    canDefineProperty = true;
	  } catch (x) {
	    // IE will fail on defineProperty
	  }
	}

	module.exports = canDefineProperty;

/***/ },
/* 89 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule forEachAccumulated
	 *
	 */

	'use strict';

	/**
	 * @param {array} arr an "accumulation" of items which is either an Array or
	 * a single item. Useful when paired with the `accumulate` module. This is a
	 * simple utility that allows us to reason about a collection of items, but
	 * handling the case when there is exactly one item (and we do not need to
	 * allocate an array).
	 */

	function forEachAccumulated(arr, cb, scope) {
	  if (Array.isArray(arr)) {
	    arr.forEach(cb, scope);
	  } else if (arr) {
	    cb.call(scope, arr);
	  }
	}

	module.exports = forEachAccumulated;

/***/ },
/* 90 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getHostComponentFromComposite
	 */

	'use strict';

	var ReactNodeTypes = __webpack_require__(83);

	function getHostComponentFromComposite(inst) {
	  var type;

	  while ((type = inst._renderedNodeType) === ReactNodeTypes.COMPOSITE) {
	    inst = inst._renderedComponent;
	  }

	  if (type === ReactNodeTypes.HOST) {
	    return inst._renderedComponent;
	  } else if (type === ReactNodeTypes.EMPTY) {
	    return null;
	  }
	}

	module.exports = getHostComponentFromComposite;

/***/ },
/* 91 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getIteratorFn
	 *
	 */

	'use strict';

	/* global Symbol */

	var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
	var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.

	/**
	 * Returns the iterator method function contained on the iterable object.
	 *
	 * Be sure to invoke the function with the iterable as context:
	 *
	 *     var iteratorFn = getIteratorFn(myIterable);
	 *     if (iteratorFn) {
	 *       var iterator = iteratorFn.call(myIterable);
	 *       ...
	 *     }
	 *
	 * @param {?object} maybeIterable
	 * @return {?function}
	 */
	function getIteratorFn(maybeIterable) {
	  var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
	  if (typeof iteratorFn === 'function') {
	    return iteratorFn;
	  }
	}

	module.exports = getIteratorFn;

/***/ },
/* 92 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getTextContentAccessor
	 */

	'use strict';

	var ExecutionEnvironment = __webpack_require__(7);

	var contentKey = null;

	/**
	 * Gets the key used to access text content on a DOM node.
	 *
	 * @return {?string} Key used to access text content.
	 * @internal
	 */
	function getTextContentAccessor() {
	  if (!contentKey && ExecutionEnvironment.canUseDOM) {
	    // Prefer textContent to innerText because many browsers support both but
	    // SVG <text> elements don't support innerText even when <div> does.
	    contentKey = 'textContent' in document.documentElement ? 'textContent' : 'innerText';
	  }
	  return contentKey;
	}

	module.exports = getTextContentAccessor;

/***/ },
/* 93 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule instantiateReactComponent
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(2),
	    _assign = __webpack_require__(4);

	var ReactCompositeComponent = __webpack_require__(149);
	var ReactEmptyComponent = __webpack_require__(77);
	var ReactHostComponent = __webpack_require__(79);
	var ReactInstrumentation = __webpack_require__(8);

	var invariant = __webpack_require__(1);
	var warning = __webpack_require__(3);

	// To avoid a cyclic dependency, we create the final class in this module
	var ReactCompositeComponentWrapper = function (element) {
	  this.construct(element);
	};
	_assign(ReactCompositeComponentWrapper.prototype, ReactCompositeComponent.Mixin, {
	  _instantiateReactComponent: instantiateReactComponent
	});

	function getDeclarationErrorAddendum(owner) {
	  if (owner) {
	    var name = owner.getName();
	    if (name) {
	      return ' Check the render method of `' + name + '`.';
	    }
	  }
	  return '';
	}

	function getDisplayName(instance) {
	  var element = instance._currentElement;
	  if (element == null) {
	    return '#empty';
	  } else if (typeof element === 'string' || typeof element === 'number') {
	    return '#text';
	  } else if (typeof element.type === 'string') {
	    return element.type;
	  } else if (instance.getName) {
	    return instance.getName() || 'Unknown';
	  } else {
	    return element.type.displayName || element.type.name || 'Unknown';
	  }
	}

	/**
	 * Check if the type reference is a known internal type. I.e. not a user
	 * provided composite type.
	 *
	 * @param {function} type
	 * @return {boolean} Returns true if this is a valid internal type.
	 */
	function isInternalComponentType(type) {
	  return typeof type === 'function' && typeof type.prototype !== 'undefined' && typeof type.prototype.mountComponent === 'function' && typeof type.prototype.receiveComponent === 'function';
	}

	var nextDebugID = 1;

	/**
	 * Given a ReactNode, create an instance that will actually be mounted.
	 *
	 * @param {ReactNode} node
	 * @param {boolean} shouldHaveDebugID
	 * @return {object} A new instance of the element's constructor.
	 * @protected
	 */
	function instantiateReactComponent(node, shouldHaveDebugID) {
	  var instance;

	  if (node === null || node === false) {
	    instance = ReactEmptyComponent.create(instantiateReactComponent);
	  } else if (typeof node === 'object') {
	    var element = node;
	    !(element && (typeof element.type === 'function' || typeof element.type === 'string')) ?  false ? invariant(false, 'Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: %s.%s', element.type == null ? element.type : typeof element.type, getDeclarationErrorAddendum(element._owner)) : _prodInvariant('130', element.type == null ? element.type : typeof element.type, getDeclarationErrorAddendum(element._owner)) : void 0;

	    // Special case string values
	    if (typeof element.type === 'string') {
	      instance = ReactHostComponent.createInternalComponent(element);
	    } else if (isInternalComponentType(element.type)) {
	      // This is temporarily available for custom components that are not string
	      // representations. I.e. ART. Once those are updated to use the string
	      // representation, we can drop this code path.
	      instance = new element.type(element);

	      // We renamed this. Allow the old name for compat. :(
	      if (!instance.getHostNode) {
	        instance.getHostNode = instance.getNativeNode;
	      }
	    } else {
	      instance = new ReactCompositeComponentWrapper(element);
	    }
	  } else if (typeof node === 'string' || typeof node === 'number') {
	    instance = ReactHostComponent.createInstanceForText(node);
	  } else {
	     true ?  false ? invariant(false, 'Encountered invalid React node of type %s', typeof node) : _prodInvariant('131', typeof node) : void 0;
	  }

	  if (false) {
	    process.env.NODE_ENV !== 'production' ? warning(typeof instance.mountComponent === 'function' && typeof instance.receiveComponent === 'function' && typeof instance.getHostNode === 'function' && typeof instance.unmountComponent === 'function', 'Only React Components can be mounted.') : void 0;
	  }

	  // These two fields are used by the DOM and ART diffing algorithms
	  // respectively. Instead of using expandos on components, we should be
	  // storing the state needed by the diffing algorithms elsewhere.
	  instance._mountIndex = 0;
	  instance._mountImage = null;

	  if (false) {
	    if (shouldHaveDebugID) {
	      var debugID = nextDebugID++;
	      instance._debugID = debugID;
	      var displayName = getDisplayName(instance);
	      ReactInstrumentation.debugTool.onSetDisplayName(debugID, displayName);
	      var owner = node && node._owner;
	      if (owner) {
	        ReactInstrumentation.debugTool.onSetOwner(debugID, owner._debugID);
	      }
	    } else {
	      instance._debugID = 0;
	    }
	  }

	  // Internal instances should fully constructed at this point, so they should
	  // not get any new fields added to them at this point.
	  if (false) {
	    if (Object.preventExtensions) {
	      Object.preventExtensions(instance);
	    }
	  }

	  return instance;
	}

	module.exports = instantiateReactComponent;

/***/ },
/* 94 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule isTextInputElement
	 *
	 */

	'use strict';

	/**
	 * @see http://www.whatwg.org/specs/web-apps/current-work/multipage/the-input-element.html#input-type-attr-summary
	 */

	var supportedInputTypes = {
	  'color': true,
	  'date': true,
	  'datetime': true,
	  'datetime-local': true,
	  'email': true,
	  'month': true,
	  'number': true,
	  'password': true,
	  'range': true,
	  'search': true,
	  'tel': true,
	  'text': true,
	  'time': true,
	  'url': true,
	  'week': true
	};

	function isTextInputElement(elem) {
	  var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();

	  if (nodeName === 'input') {
	    return !!supportedInputTypes[elem.type];
	  }

	  if (nodeName === 'textarea') {
	    return true;
	  }

	  return false;
	}

	module.exports = isTextInputElement;

/***/ },
/* 95 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule setTextContent
	 */

	'use strict';

	var ExecutionEnvironment = __webpack_require__(7);
	var escapeTextContentForBrowser = __webpack_require__(30);
	var setInnerHTML = __webpack_require__(31);

	/**
	 * Set the textContent property of a node, ensuring that whitespace is preserved
	 * even in IE8. innerText is a poor substitute for textContent and, among many
	 * issues, inserts <br> instead of the literal newline chars. innerHTML behaves
	 * as it should.
	 *
	 * @param {DOMElement} node
	 * @param {string} text
	 * @internal
	 */
	var setTextContent = function (node, text) {
	  if (text) {
	    var firstChild = node.firstChild;

	    if (firstChild && firstChild === node.lastChild && firstChild.nodeType === 3) {
	      firstChild.nodeValue = text;
	      return;
	    }
	  }
	  node.textContent = text;
	};

	if (ExecutionEnvironment.canUseDOM) {
	  if (!('textContent' in document.documentElement)) {
	    setTextContent = function (node, text) {
	      setInnerHTML(node, escapeTextContentForBrowser(text));
	    };
	  }
	}

	module.exports = setTextContent;

/***/ },
/* 96 */
/***/ function(module, exports) {

	module.exports = `Council	Year	Category	Breed	total	female	male	desexed	chipped	menacing	dangerous	probationary	disqualified	registered	infringements	prosecutions	destruction	injuries	paid_any_yr	paid_this_yr
Ashburton District	2001	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	34	2402	0
Ashburton District	2002	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	21	3176	0
Ashburton District	2003	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	27	14647	0
Ashburton District	2004	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	35	3765	0
Ashburton District	2005	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	48	6438	0
Ashburton District	2006	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	59	8007	11480
Ashburton District	2007	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	83	7653	8168
Ashburton District	2008	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	66	14612	14654
Ashburton District	2009	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	62	18306	12207
Ashburton District	2010	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	81	14004	17814
Ashburton District	2011	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	87	28256	14311
Ashburton District	2012	JST	_	0	0	0	0	0	0	0	0	0	0	0	3	0	0	0	0
Ashburton District	2012	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	68	116755	36468
Ashburton District	2013	DOG	_ALL-PURE_	5158	2488	2670	1477	2142	20	2	0	0	0	0	0	0	0	0	0
Ashburton District	2013	DOG	_ALL-CROSS_	1865	966	899	831	1137	21	2	0	0	0	0	0	0	0	0	0
Ashburton District	2013	DOG	_ALL-DOGS_	7023	3454	3569	2308	3279	41	4	0	0	0	0	0	0	0	0	0
Ashburton District	2013	DOG	Beagle	46	23	23	20	36	0	0	0	0	0	0	0	0	0	0	0
Ashburton District	2013	DOG	Bichon Frise	161	82	79	59	109	1	0	0	0	0	0	0	0	0	0	0
Ashburton District	2013	DOG	Boxer	54	24	30	25	39	0	0	0	0	0	0	0	0	0	0	0
Ashburton District	2013	DOG	Cattle, Australian	39	14	25	14	15	0	0	0	0	0	0	0	0	0	0	0
Ashburton District	2013	DOG	Chihuahua, Long Coat	11	4	7	2	8	0	0	0	0	0	0	0	0	0	0	0
Ashburton District	2013	DOG	Chihuahua, Smooth Coat	31	20	11	14	27	0	0	0	0	0	0	0	0	0	0	0
Ashburton District	2013	DOG	Collie, Bearded	55	30	25	9	6	0	0	0	0	0	0	0	0	0	0	0
Ashburton District	2013	DOG	Collie, Border	904	430	474	110	99	1	0	0	0	0	0	0	0	0	0	0
Ashburton District	2013	DOG	Collie, Rough	21	8	13	5	9	0	0	0	0	0	0	0	0	0	0	0
Ashburton District	2013	DOG	Collie, Smooth	14	4	10	0	1	0	0	0	0	0	0	0	0	0	0	0
Ashburton District	2013	DOG	Greyhound	165	75	90	2	97	0	0	0	0	0	0	0	0	0	0	0
Ashburton District	2013	DOG	Heading	239	122	117	16	14	0	0	0	0	0	0	0	0	0	0	0
Ashburton District	2013	DOG	Huntaway	492	199	293	57	37	0	0	0	0	0	0	0	0	0	0	0
Ashburton District	2013	DOG	Maltese	45	24	21	19	25	0	0	0	0	0	0	0	0	0	0	0
Ashburton District	2013	DOG	Poodle, Miniature	11	5	6	5	8	0	0	0	0	0	0	0	0	0	0	0
Ashburton District	2013	DOG	Poodle, Toy	29	16	13	10	18	0	0	0	0	0	0	0	0	0	0	0
Ashburton District	2013	DOG	Retriever, Golden	113	57	56	46	65	0	0	0	0	0	0	0	0	0	0	0
Ashburton District	2013	DOG	Retriever, Labrador	677	342	335	248	367	1	1	0	0	0	0	0	0	0	0	0
Ashburton District	2013	DOG	Rottweiler	79	31	48	21	59	3	0	0	0	0	0	0	0	0	0	0
Ashburton District	2013	DOG	Schnauzer, Miniature	67	36	31	22	43	0	0	0	0	0	0	0	0	0	0	0
Ashburton District	2013	DOG	Shepherd, German	112	52	60	40	71	0	0	0	0	0	0	0	0	0	0	0
Ashburton District	2013	DOG	Shih Tzu	29	15	14	14	19	0	0	0	0	0	0	0	0	0	0	0
Ashburton District	2013	DOG	Spaniel, Cavalier King Charles	22	5	17	6	15	0	0	0	0	0	0	0	0	0	0	0
Ashburton District	2013	DOG	Spaniel, Cocker	99	53	46	35	66	0	0	0	0	0	0	0	0	0	0	0
Ashburton District	2013	DOG	Spaniel, English Springer	50	23	27	20	23	0	0	0	0	0	0	0	0	0	0	0
Ashburton District	2013	DOG	Terrier, American Pit Bull	15	4	11	10	14	9	1	0	0	0	0	0	0	0	0	0
Ashburton District	2013	DOG	Terrier, Fox (Smooth)	187	99	88	80	78	0	0	0	0	0	0	0	0	0	0	0
Ashburton District	2013	DOG	Terrier, Jack Russell	376	182	194	162	197	0	0	0	0	0	0	0	0	0	0	0
Ashburton District	2013	DOG	Terrier, Staffordshire Bull	107	57	50	50	67	0	0	0	0	0	0	0	0	0	0	0
Ashburton District	2013	DOG	Terrier, West Highland White	28	11	17	15	14	0	0	0	0	0	0	0	0	0	0	0
Ashburton District	2013	DOG	_Unidentified_	880	441	439	341	496	5	0	0	0	0	0	0	0	0	0	0
Ashburton District	2013	OWN	_	0	0	0	0	0	0	0	0	16	4501	50	0	0	0	0	0
Ashburton District	2013	JST	_	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Ashburton District	2013	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	85	14040	82394
Ashburton District	2014	DOG	_ALL-PURE_	3974	1908	2066	1158	1775	22	1	0	0	0	0	0	0	0	0	0
Ashburton District	2014	DOG	_ALL-CROSS_	1410	726	684	670	858	16	2	0	0	0	0	0	0	0	0	0
Ashburton District	2014	DOG	_ALL-DOGS_	5384	2634	2750	1828	2633	38	3	0	0	0	0	0	0	0	0	0
Ashburton District	2014	DOG	Beagle	33	18	15	15	27	0	0	0	0	0	0	0	0	0	0	0
Ashburton District	2014	DOG	Bichon Frise	123	59	64	54	85	1	0	0	0	0	0	0	0	0	0	0
Ashburton District	2014	DOG	Boxer	43	18	25	18	31	0	0	0	0	0	0	0	0	0	0	0
Ashburton District	2014	DOG	Cattle, Australian	26	8	18	7	8	0	0	0	0	0	0	0	0	0	0	0
Ashburton District	2014	DOG	Chihuahua, Long Coat	12	6	6	3	8	0	0	0	0	0	0	0	0	0	0	0
Ashburton District	2014	DOG	Chihuahua, Smooth Coat	27	14	13	11	23	0	0	0	0	0	0	0	0	0	0	0
Ashburton District	2014	DOG	Collie, Bearded	46	25	21	9	5	0	0	0	0	0	0	0	0	0	0	0
Ashburton District	2014	DOG	Collie, Border	690	339	351	96	83	1	0	0	0	0	0	0	0	0	0	0
Ashburton District	2014	DOG	Collie, Rough	18	5	13	6	10	0	0	0	0	0	0	0	0	0	0	0
Ashburton District	2014	DOG	Collie, Smooth	7	2	5	0	1	0	0	0	0	0	0	0	0	0	0	0
Ashburton District	2014	DOG	Greyhound	152	76	76	2	122	0	0	0	0	0	0	0	0	0	0	0
Ashburton District	2014	DOG	Heading	194	98	96	13	10	0	0	0	0	0	0	0	0	0	0	0
Ashburton District	2014	DOG	Huntaway	415	191	224	57	41	0	0	0	0	0	0	0	0	0	0	0
Ashburton District	2014	DOG	Maltese	34	22	12	14	21	0	0	0	0	0	0	0	0	0	0	0
Ashburton District	2014	DOG	Poodle, Miniature	9	3	6	1	4	0	0	0	0	0	0	0	0	0	0	0
Ashburton District	2014	DOG	Poodle, Toy	24	14	10	11	15	0	0	0	0	0	0	0	0	0	0	0
Ashburton District	2014	DOG	Retriever, Golden	85	39	46	30	55	0	0	0	0	0	0	0	0	0	0	0
Ashburton District	2014	DOG	Retriever, Labrador	493	246	247	187	286	1	0	0	0	0	0	0	0	0	0	0
Ashburton District	2014	DOG	Rottweiler	70	29	41	22	57	0	0	0	0	0	0	0	0	0	0	0
Ashburton District	2014	DOG	Schnauzer, Miniature	54	27	27	27	40	0	0	0	0	0	0	0	0	0	0	0
Ashburton District	2014	DOG	Shepherd, German	81	38	43	32	55	0	0	0	0	0	0	0	0	0	0	0
Ashburton District	2014	DOG	Shih Tzu	20	9	11	9	14	0	0	0	0	0	0	0	0	0	0	0
Ashburton District	2014	DOG	Spaniel, Cavalier King Charles	13	5	8	4	8	0	0	0	0	0	0	0	0	0	0	0
Ashburton District	2014	DOG	Spaniel, Cocker	79	47	32	30	55	0	0	0	0	0	0	0	0	0	0	0
Ashburton District	2014	DOG	Spaniel, English Springer	43	20	23	16	24	0	0	0	0	0	0	0	0	0	0	0
Ashburton District	2014	DOG	Terrier, American Pit Bull	13	4	9	8	11	11	1	0	0	0	0	0	0	0	0	0
Ashburton District	2014	DOG	Terrier, Fox (Smooth)	134	68	66	61	63	0	0	0	0	0	0	0	0	0	0	0
Ashburton District	2014	DOG	Terrier, Jack Russell	259	121	138	106	144	0	0	0	0	0	0	0	0	0	0	0
Ashburton District	2014	DOG	Terrier, Staffordshire Bull	104	53	51	46	70	0	0	0	0	0	0	0	0	0	0	0
Ashburton District	2014	DOG	Terrier, West Highland White	19	9	10	8	11	0	0	0	0	0	0	0	0	0	0	0
Ashburton District	2014	DOG	_Unidentified_	654	295	359	255	388	8	0	0	0	0	0	0	0	0	0	0
Ashburton District	2014	OWN	_	0	0	0	0	0	0	0	0	13	3443	49	0	0	0	0	0
Ashburton District	2014	JST	_	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Ashburton District	2014	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	65	11232	18291
Ashburton District	2015	DOG	_ALL-PURE_	4672	2258	2414	1528	2279	17	3	0	0	0	0	0	0	0	0	0
Ashburton District	2015	DOG	_ALL-CROSS_	1852	947	905	951	1239	19	1	0	0	0	0	0	0	0	0	0
Ashburton District	2015	DOG	_ALL-DOGS_	6524	3205	3319	2479	3518	36	4	0	0	0	0	0	0	0	0	0
Ashburton District	2015	DOG	Beagle	43	19	24	19	34	0	0	0	0	0	0	0	0	0	0	0
Ashburton District	2015	DOG	Bichon Frise	133	70	63	70	98	0	1	0	0	0	0	0	0	0	0	0
Ashburton District	2015	DOG	Boxer	53	26	27	26	41	0	0	0	0	0	0	0	0	0	0	0
Ashburton District	2015	DOG	Cattle, Australian	28	14	14	11	14	0	0	0	0	0	0	0	0	0	0	0
Ashburton District	2015	DOG	Chihuahua, Long Coat	24	9	15	7	16	0	0	0	0	0	0	0	0	0	0	0
Ashburton District	2015	DOG	Chihuahua, Smooth Coat	29	19	10	11	24	0	0	0	0	0	0	0	0	0	0	0
Ashburton District	2015	DOG	Collie, Bearded	51	28	23	11	5	0	0	0	0	0	0	0	0	0	0	0
Ashburton District	2015	DOG	Collie, Border	733	361	372	116	117	1	0	0	0	0	0	0	0	0	0	0
Ashburton District	2015	DOG	Collie, Rough	17	7	10	4	9	0	0	0	0	0	0	0	0	0	0	0
Ashburton District	2015	DOG	Collie, Smooth	22	12	10	0	3	0	0	0	0	0	0	0	0	0	0	0
Ashburton District	2015	DOG	Greyhound	153	64	89	7	136	0	0	0	0	0	0	0	0	0	0	0
Ashburton District	2015	DOG	Heading	215	122	93	19	12	0	0	0	0	0	0	0	0	0	0	0
Ashburton District	2015	DOG	Huntaway	466	194	272	52	40	0	0	0	0	0	0	0	0	0	0	0
Ashburton District	2015	DOG	Maltese	43	26	17	17	30	0	0	0	0	0	0	0	0	0	0	0
Ashburton District	2015	DOG	Poodle, Miniature	14	6	8	5	8	0	0	0	0	0	0	0	0	0	0	0
Ashburton District	2015	DOG	Poodle, Toy	25	16	9	13	17	0	0	0	0	0	0	0	0	0	0	0
Ashburton District	2015	DOG	Retriever, Golden	102	46	56	49	70	0	0	0	0	0	0	0	0	0	0	0
Ashburton District	2015	DOG	Retriever, Labrador	600	303	297	243	378	1	0	0	0	0	0	0	0	0	0	0
Ashburton District	2015	DOG	Rottweiler	81	33	48	31	62	2	0	0	0	0	0	0	0	0	0	0
Ashburton District	2015	DOG	Schnauzer, Miniature	71	40	31	37	53	0	0	0	0	0	0	0	0	0	0	0
Ashburton District	2015	DOG	Shepherd, German	100	46	54	36	75	0	0	0	0	0	0	0	0	0	0	0
Ashburton District	2015	DOG	Shih Tzu	32	14	18	19	24	0	0	0	0	0	0	0	0	0	0	0
Ashburton District	2015	DOG	Spaniel, Cavalier King Charles	22	7	15	9	15	0	0	0	0	0	0	0	0	0	0	0
Ashburton District	2015	DOG	Spaniel, Cocker	87	47	40	40	59	0	0	0	0	0	0	0	0	0	0	0
Ashburton District	2015	DOG	Spaniel, English Springer	54	24	30	23	35	0	0	0	0	0	0	0	0	0	0	0
Ashburton District	2015	DOG	Terrier, American Pit Bull	7	2	5	5	6	6	0	0	0	0	0	0	0	0	0	0
Ashburton District	2015	DOG	Terrier, Fox (Smooth)	167	82	85	76	82	0	0	0	0	0	0	0	0	0	0	0
Ashburton District	2015	DOG	Terrier, Jack Russell	354	172	182	176	207	0	0	0	0	0	0	0	0	0	0	0
Ashburton District	2015	DOG	Terrier, Staffordshire Bull	105	57	48	46	72	0	0	0	0	0	0	0	0	0	0	0
Ashburton District	2015	DOG	Terrier, West Highland White	33	14	19	16	19	0	0	0	0	0	0	0	0	0	0	0
Ashburton District	2015	DOG	_Unidentified_	808	378	430	334	518	7	2	0	0	0	0	0	0	0	0	0
Ashburton District	2015	OWN	_	0	0	0	0	0	0	0	0	10	4335	39	0	0	0	0	0
Ashburton District	2015	JST	_	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Ashburton District	2015	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	78	7699	26507
Ashburton District	2016	DOG	_ALL-PURE_	4631	2233	2398	1542	2439	15	3	0	0	0	0	0	0	0	0	0
Ashburton District	2016	DOG	_ALL-CROSS_	1838	928	910	993	1295	30	7	0	0	0	0	0	0	0	0	0
Ashburton District	2016	DOG	_ALL-DOGS_	6469	3161	3308	2535	3734	45	10	0	0	0	0	0	0	0	0	0
Ashburton District	2016	DOG	Beagle	38	18	20	18	31	0	0	0	0	0	0	0	0	0	0	0
Ashburton District	2016	DOG	Bichon Frise	142	73	69	76	111	0	1	0	0	0	0	0	0	0	0	0
Ashburton District	2016	DOG	Boxer	54	29	25	31	42	0	0	0	0	0	0	0	0	0	0	0
Ashburton District	2016	DOG	Cattle, Australian	26	11	15	10	15	0	0	0	0	0	0	0	0	0	0	0
Ashburton District	2016	DOG	Chihuahua, Long Coat	20	7	13	4	15	0	0	0	0	0	0	0	0	0	0	0
Ashburton District	2016	DOG	Chihuahua, Smooth Coat	27	18	9	13	22	0	0	0	0	0	0	0	0	0	0	0
Ashburton District	2016	DOG	Collie, Bearded	48	23	25	9	6	0	0	0	0	0	0	0	0	0	0	0
Ashburton District	2016	DOG	Collie, Border	667	334	333	114	122	0	0	0	0	0	0	0	0	0	0	0
Ashburton District	2016	DOG	Collie, Rough	23	11	12	5	16	0	0	0	0	0	0	0	0	0	0	0
Ashburton District	2016	DOG	Collie, Smooth	22	11	11	2	1	0	0	0	0	0	0	0	0	0	0	0
Ashburton District	2016	DOG	Greyhound	147	68	79	10	120	0	0	0	0	0	0	0	0	0	0	0
Ashburton District	2016	DOG	Heading	229	125	104	21	14	0	0	0	0	0	0	0	0	0	0	0
Ashburton District	2016	DOG	Huntaway	489	207	282	57	50	0	0	0	0	0	0	0	0	0	0	0
Ashburton District	2016	DOG	Maltese	45	27	18	22	35	0	0	0	0	0	0	0	0	0	0	0
Ashburton District	2016	DOG	Poodle, Miniature	12	5	7	5	8	0	0	0	0	0	0	0	0	0	0	0
Ashburton District	2016	DOG	Poodle, Toy	22	12	10	15	18	0	0	0	0	0	0	0	0	0	0	0
Ashburton District	2016	DOG	Retriever, Golden	102	49	53	47	74	0	0	0	0	0	0	0	0	0	0	0
Ashburton District	2016	DOG	Retriever, Labrador	591	290	301	248	404	1	0	0	0	0	0	0	0	0	0	0
Ashburton District	2016	DOG	Rottweiler	85	34	51	35	71	3	0	0	0	0	0	0	0	0	0	0
Ashburton District	2016	DOG	Schnauzer, Miniature	70	37	33	39	54	0	0	0	0	0	0	0	0	0	0	0
Ashburton District	2016	DOG	Shepherd, German	98	49	49	40	80	0	0	0	0	0	0	0	0	0	0	0
Ashburton District	2016	DOG	Shih Tzu	44	18	26	23	33	0	0	0	0	0	0	0	0	0	0	0
Ashburton District	2016	DOG	Spaniel, Cavalier King Charles	19	4	15	9	14	0	0	0	0	0	0	0	0	0	0	0
Ashburton District	2016	DOG	Spaniel, Cocker	91	48	43	35	65	0	0	0	0	0	0	0	0	0	0	0
Ashburton District	2016	DOG	Spaniel, English Springer	55	23	32	22	35	0	0	0	0	0	0	0	0	0	0	0
Ashburton District	2016	DOG	Terrier, American Pit Bull	9	5	4	6	8	8	0	0	0	0	0	0	0	0	0	0
Ashburton District	2016	DOG	Terrier, Fox (Smooth)	158	78	80	70	89	0	0	0	0	0	0	0	0	0	0	0
Ashburton District	2016	DOG	Terrier, Jack Russell	351	172	179	177	221	0	0	0	0	0	0	0	0	0	0	0
Ashburton District	2016	DOG	Terrier, Staffordshire Bull	106	58	48	50	79	0	0	0	0	0	0	0	0	0	0	0
Ashburton District	2016	DOG	Terrier, West Highland White	28	11	17	16	16	0	0	0	0	0	0	0	0	0	0	0
Ashburton District	2016	DOG	_Unidentified_	813	378	435	313	570	3	2	0	0	0	0	0	0	0	0	0
Ashburton District	2016	OWN	_	0	0	0	0	0	0	0	1	3	4313	21	0	0	0	0	0
Auckland (Group)	2001	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	768	0	332227
Auckland (Group)	2002	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	692	0	216946
Auckland (Group)	2003	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	726	0	340021
Auckland (Group)	2004	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	2586	0	379727
Auckland (Group)	2005	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	2774	0	550087
Auckland (Group)	2006	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	2981	620798	650719
Auckland (Group)	2007	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	3153	691842	797191
Auckland (Group)	2008	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	3006	852626	1202140
Auckland (Group)	2009	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	3057	990003	944030
Auckland (Group)	2010	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	3109	945844	757015
Auckland (Group)	2011	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	3200	846198	1013274
Auckland (Group)	2012	JST	_	0	0	0	0	0	0	0	0	0	0	0	338	27	0	0	0
Auckland (Group)	2012	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	3344	1057372	859595
Auckland (Group)	2013	DOG	_ALL-PURE_	63662	30655	33007	45503	37751	959	33	0	0	0	0	0	0	0	0	0
Auckland (Group)	2013	DOG	_ALL-CROSS_	37786	18876	18910	29261	24711	1229	28	0	0	0	0	0	0	0	0	0
Auckland (Group)	2013	DOG	_ALL-DOGS_	101448	49531	51917	74764	62462	2188	61	0	0	0	0	0	0	0	0	0
Auckland (Group)	2013	DOG	Beagle	743	368	375	616	502	0	0	0	0	0	0	0	0	0	0	0
Auckland (Group)	2013	DOG	Bichon Frise	1778	840	938	1359	1105	0	1	0	0	0	0	0	0	0	0	0
Auckland (Group)	2013	DOG	Boxer	1349	631	718	1039	843	11	2	0	0	0	0	0	0	0	0	0
Auckland (Group)	2013	DOG	Cattle, Australian	724	394	330	527	363	3	0	0	0	0	0	0	0	0	0	0
Auckland (Group)	2013	DOG	Chihuahua, Long Coat	628	298	330	396	379	1	0	0	0	0	0	0	0	0	0	0
Auckland (Group)	2013	DOG	Chihuahua, Smooth Coat	1136	523	613	720	716	1	0	0	0	0	0	0	0	0	0	0
Auckland (Group)	2013	DOG	Collie, Bearded	171	73	98	127	83	0	0	0	0	0	0	0	0	0	0	0
Auckland (Group)	2013	DOG	Collie, Border	3313	1720	1593	2448	1764	19	5	0	0	0	0	0	0	0	0	0
Auckland (Group)	2013	DOG	Collie, Rough	173	81	92	108	85	1	0	0	0	0	0	0	0	0	0	0
Auckland (Group)	2013	DOG	Collie, Smooth	53	22	31	28	18	0	0	0	0	0	0	0	0	0	0	0
Auckland (Group)	2013	DOG	Greyhound	371	178	193	225	228	2	0	0	0	0	0	0	0	0	0	0
Auckland (Group)	2013	DOG	Heading	346	183	163	54	38	0	0	0	0	0	0	0	0	0	0	0
Auckland (Group)	2013	DOG	Huntaway	1232	586	646	573	351	3	0	0	0	0	0	0	0	0	0	0
Auckland (Group)	2013	DOG	Maltese	932	412	520	620	648	1	0	0	0	0	0	0	0	0	0	0
Auckland (Group)	2013	DOG	Poodle, Miniature	856	358	498	711	473	0	0	0	0	0	0	0	0	0	0	0
Auckland (Group)	2013	DOG	Poodle, Toy	1023	487	536	705	686	0	0	0	0	0	0	0	0	0	0	0
Auckland (Group)	2013	DOG	Retriever, Golden	2608	1248	1360	1986	1507	2	0	0	0	0	0	0	0	0	0	0
Auckland (Group)	2013	DOG	Retriever, Labrador	7912	3907	4005	5876	4685	9	2	0	0	0	0	0	0	0	0	0
Auckland (Group)	2013	DOG	Rottweiler	1395	665	730	754	901	15	3	0	0	0	0	0	0	0	0	0
Auckland (Group)	2013	DOG	Schnauzer, Miniature	1635	766	869	1241	1265	0	0	0	0	0	0	0	0	0	0	0
Auckland (Group)	2013	DOG	Shepherd, German	3159	1559	1600	1932	1904	33	4	0	0	0	0	0	0	0	0	0
Auckland (Group)	2013	DOG	Shih Tzu	1407	618	789	1002	1055	0	0	0	0	0	0	0	0	0	0	0
Auckland (Group)	2013	DOG	Spaniel, Cavalier King Charles	514	226	288	405	355	0	0	0	0	0	0	0	0	0	0	0
Auckland (Group)	2013	DOG	Spaniel, Cocker	1285	593	692	1011	733	0	0	0	0	0	0	0	0	0	0	0
Auckland (Group)	2013	DOG	Spaniel, English Springer	356	172	184	282	217	2	0	0	0	0	0	0	0	0	0	0
Auckland (Group)	2013	DOG	Terrier, American Pit Bull	800	323	477	527	613	686	7	0	0	0	0	0	0	0	0	0
Auckland (Group)	2013	DOG	Terrier, Fox (Smooth)	2514	1254	1260	2048	1117	5	0	0	0	0	0	0	0	0	0	0
Auckland (Group)	2013	DOG	Terrier, Jack Russell	3437	1687	1750	2793	1691	8	0	0	0	0	0	0	0	0	0	0
Auckland (Group)	2013	DOG	Terrier, Staffordshire Bull	1668	886	782	1131	1039	16	0	0	0	0	0	0	0	0	0	0
Auckland (Group)	2013	DOG	Terrier, West Highland White	890	423	467	721	566	4	0	0	0	0	0	0	0	0	0	0
Auckland (Group)	2013	DOG	_Unidentified_	19254	9174	10080	13538	11821	137	9	0	0	0	0	0	0	0	0	0
Auckland (Group)	2013	OWN	_	0	0	0	0	0	0	0	64	15	90054	3359	0	0	0	0	0
Auckland (Group)	2013	JST	_	0	0	0	0	0	0	0	0	0	0	0	371	24	0	0	0
Auckland (Group)	2013	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	3750	1063296	1145834
Auckland (Group)	2014	DOG	_ALL-PURE_	62510	30109	32401	45910	40042	914	31	0	0	0	0	0	0	0	0	0
Auckland (Group)	2014	DOG	_ALL-CROSS_	38957	19474	19483	31041	27305	1166	25	0	0	0	0	0	0	0	0	0
Auckland (Group)	2014	DOG	_ALL-DOGS_	101467	49583	51884	76951	67347	2080	56	0	0	0	0	0	0	0	0	0
Auckland (Group)	2014	DOG	Beagle	750	376	374	625	531	0	0	0	0	0	0	0	0	0	0	0
Auckland (Group)	2014	DOG	Bichon Frise	1717	800	917	1358	1124	0	0	0	0	0	0	0	0	0	0	0
Auckland (Group)	2014	DOG	Boxer	1275	600	675	1022	863	9	2	0	0	0	0	0	0	0	0	0
Auckland (Group)	2014	DOG	Cattle, Australian	672	374	298	500	357	4	0	0	0	0	0	0	0	0	0	0
Auckland (Group)	2014	DOG	Chihuahua, Long Coat	615	296	319	433	402	1	0	0	0	0	0	0	0	0	0	0
Auckland (Group)	2014	DOG	Chihuahua, Smooth Coat	1116	520	596	739	737	0	0	0	0	0	0	0	0	0	0	0
Auckland (Group)	2014	DOG	Collie, Bearded	173	66	107	129	87	0	0	0	0	0	0	0	0	0	0	0
Auckland (Group)	2014	DOG	Collie, Border	3259	1705	1554	2438	1878	15	3	0	0	0	0	0	0	0	0	0
Auckland (Group)	2014	DOG	Collie, Rough	169	77	92	107	103	0	0	0	0	0	0	0	0	0	0	0
Auckland (Group)	2014	DOG	Collie, Smooth	51	20	31	28	22	0	0	0	0	0	0	0	0	0	0	0
Auckland (Group)	2014	DOG	Greyhound	389	189	200	259	277	2	0	0	0	0	0	0	0	0	0	0
Auckland (Group)	2014	DOG	Heading	324	178	146	59	40	0	0	0	0	0	0	0	0	0	0	0
Auckland (Group)	2014	DOG	Huntaway	1214	581	633	583	381	3	0	0	0	0	0	0	0	0	0	0
Auckland (Group)	2014	DOG	Maltese	988	438	550	714	723	2	0	0	0	0	0	0	0	0	0	0
Auckland (Group)	2014	DOG	Poodle, Miniature	850	367	483	712	517	0	0	0	0	0	0	0	0	0	0	0
Auckland (Group)	2014	DOG	Poodle, Toy	1081	516	565	785	760	0	0	0	0	0	0	0	0	0	0	0
Auckland (Group)	2014	DOG	Retriever, Golden	2495	1205	1290	1955	1575	1	0	0	0	0	0	0	0	0	0	0
Auckland (Group)	2014	DOG	Retriever, Labrador	7667	3768	3899	5843	4978	10	2	0	0	0	0	0	0	0	0	0
Auckland (Group)	2014	DOG	Rottweiler	1336	633	703	751	904	14	3	0	0	0	0	0	0	0	0	0
Auckland (Group)	2014	DOG	Schnauzer, Miniature	1826	848	978	1454	1465	0	0	0	0	0	0	0	0	0	0	0
Auckland (Group)	2014	DOG	Shepherd, German	3058	1512	1546	1895	2020	33	4	0	0	0	0	0	0	0	0	0
Auckland (Group)	2014	DOG	Shih Tzu	1461	642	819	1091	1120	0	0	0	0	0	0	0	0	0	0	0
Auckland (Group)	2014	DOG	Spaniel, Cavalier King Charles	518	232	286	412	373	0	0	0	0	0	0	0	0	0	0	0
Auckland (Group)	2014	DOG	Spaniel, Cocker	1242	574	668	968	772	0	0	0	0	0	0	0	0	0	0	0
Auckland (Group)	2014	DOG	Spaniel, English Springer	351	173	178	278	221	2	0	0	0	0	0	0	0	0	0	0
Auckland (Group)	2014	DOG	Terrier, American Pit Bull	804	346	458	526	625	679	9	0	0	0	0	0	0	0	0	0
Auckland (Group)	2014	DOG	Terrier, Fox (Smooth)	2361	1179	1182	1952	1181	4	0	0	0	0	0	0	0	0	0	0
Auckland (Group)	2014	DOG	Terrier, Jack Russell	3281	1610	1671	2736	1767	6	0	0	0	0	0	0	0	0	0	0
Auckland (Group)	2014	DOG	Terrier, Staffordshire Bull	1671	882	789	1159	1128	17	0	0	0	0	0	0	0	0	0	0
Auckland (Group)	2014	DOG	Terrier, West Highland White	898	420	478	737	592	3	0	0	0	0	0	0	0	0	0	0
Auckland (Group)	2014	DOG	_Unidentified_	18898	8982	9916	13662	12519	109	8	0	0	0	0	0	0	0	0	0
Auckland (Group)	2014	OWN	_	0	0	0	0	0	0	0	36	11	92209	3710	0	0	0	0	0
Auckland (Group)	2014	JST	_	0	0	0	0	0	0	0	0	0	0	0	398	57	0	0	0
Auckland (Group)	2014	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	3892	1130681	1177839
Auckland (Group)	2015	DOG	_ALL-PURE_	59950	28852	31098	44717	40625	840	27	0	0	0	0	0	0	0	0	0
Auckland (Group)	2015	DOG	_ALL-CROSS_	38739	19381	19358	31687	28553	1225	20	0	0	0	0	0	0	0	0	0
Auckland (Group)	2015	DOG	_ALL-DOGS_	98689	48233	50456	76404	69178	2065	47	0	0	0	0	0	0	0	0	0
Auckland (Group)	2015	DOG	Beagle	703	352	351	595	507	0	0	0	0	0	0	0	0	0	0	0
Auckland (Group)	2015	DOG	Bichon Frise	1669	799	870	1325	1148	0	0	0	0	0	0	0	0	0	0	0
Auckland (Group)	2015	DOG	Boxer	1160	558	602	921	846	5	2	0	0	0	0	0	0	0	0	0
Auckland (Group)	2015	DOG	Cattle, Australian	640	359	281	479	375	5	0	0	0	0	0	0	0	0	0	0
Auckland (Group)	2015	DOG	Chihuahua, Long Coat	549	271	278	403	377	1	0	0	0	0	0	0	0	0	0	0
Auckland (Group)	2015	DOG	Chihuahua, Smooth Coat	1111	520	591	748	747	1	0	0	0	0	0	0	0	0	0	0
Auckland (Group)	2015	DOG	Collie, Bearded	175	70	105	130	103	0	0	0	0	0	0	0	0	0	0	0
Auckland (Group)	2015	DOG	Collie, Border	3117	1618	1499	2354	1948	16	3	0	0	0	0	0	0	0	0	0
Auckland (Group)	2015	DOG	Collie, Rough	146	64	82	99	96	0	0	0	0	0	0	0	0	0	0	0
Auckland (Group)	2015	DOG	Collie, Smooth	45	18	27	24	21	0	0	0	0	0	0	0	0	0	0	0
Auckland (Group)	2015	DOG	Greyhound	436	208	228	279	310	2	0	0	0	0	0	0	0	0	0	0
Auckland (Group)	2015	DOG	Heading	315	172	143	68	48	0	0	0	0	0	0	0	0	0	0	0
Auckland (Group)	2015	DOG	Huntaway	1107	533	574	530	377	2	0	0	0	0	0	0	0	0	0	0
Auckland (Group)	2015	DOG	Maltese	982	428	554	736	722	2	0	0	0	0	0	0	0	0	0	0
Auckland (Group)	2015	DOG	Poodle, Miniature	817	357	460	702	533	0	0	0	0	0	0	0	0	0	0	0
Auckland (Group)	2015	DOG	Poodle, Toy	1060	528	532	780	770	0	0	0	0	0	0	0	0	0	0	0
Auckland (Group)	2015	DOG	Retriever, Golden	2410	1159	1251	1880	1620	1	0	0	0	0	0	0	0	0	0	0
Auckland (Group)	2015	DOG	Retriever, Labrador	7153	3524	3629	5664	4930	7	2	0	0	0	0	0	0	0	0	0
Auckland (Group)	2015	DOG	Rottweiler	1264	594	670	714	911	13	3	0	0	0	0	0	0	0	0	0
Auckland (Group)	2015	DOG	Schnauzer, Miniature	1964	905	1059	1583	1627	0	0	0	0	0	0	0	0	0	0	0
Auckland (Group)	2015	DOG	Shepherd, German	2896	1452	1444	1798	2054	32	4	0	0	0	0	0	0	0	0	0
Auckland (Group)	2015	DOG	Shih Tzu	1438	640	798	1127	1131	0	0	0	0	0	0	0	0	0	0	0
Auckland (Group)	2015	DOG	Spaniel, Cavalier King Charles	494	217	277	391	367	0	0	0	0	0	0	0	0	0	0	0
Auckland (Group)	2015	DOG	Spaniel, Cocker	1179	551	628	925	777	0	0	0	0	0	0	0	0	0	0	0
Auckland (Group)	2015	DOG	Spaniel, English Springer	342	158	184	272	227	2	0	0	0	0	0	0	0	0	0	0
Auckland (Group)	2015	DOG	Terrier, American Pit Bull	705	300	405	475	546	610	7	0	0	0	0	0	0	0	0	0
Auckland (Group)	2015	DOG	Terrier, Fox (Smooth)	2136	1057	1079	1816	1151	4	0	0	0	0	0	0	0	0	0	0
Auckland (Group)	2015	DOG	Terrier, Jack Russell	3110	1506	1604	2601	1801	4	0	0	0	0	0	0	0	0	0	0
Auckland (Group)	2015	DOG	Terrier, Staffordshire Bull	1687	885	802	1189	1202	15	0	0	0	0	0	0	0	0	0	0
Auckland (Group)	2015	DOG	Terrier, West Highland White	904	421	483	741	623	3	0	0	0	0	0	0	0	0	0	0
Auckland (Group)	2015	DOG	_Unidentified_	18236	8628	9608	13368	12730	115	6	0	0	0	0	0	0	0	0	0
Auckland (Group)	2015	OWN	_	0	0	0	0	0	0	0	52	7	94206	3360	0	0	0	0	0
Auckland (Group)	2015	JST	_	0	0	0	0	0	0	0	0	0	0	0	332	42	0	0	0
Auckland (Group)	2015	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	3838	859662	1351453
Auckland (Group)	2016	DOG	_ALL-PURE_	60716	29178	31538	45487	44279	795	17	0	0	0	0	0	0	0	0	0
Auckland (Group)	2016	DOG	_ALL-CROSS_	40842	20339	20503	33639	31681	1380	18	0	0	0	0	0	0	0	0	0
Auckland (Group)	2016	DOG	_ALL-DOGS_	101558	49517	52041	79126	75960	2175	35	0	0	0	0	0	0	0	0	0
Auckland (Group)	2016	DOG	Beagle	725	367	358	606	583	0	0	0	0	0	0	0	0	0	0	0
Auckland (Group)	2016	DOG	Bichon Frise	1620	773	847	1298	1201	0	0	0	0	0	0	0	0	0	0	0
Auckland (Group)	2016	DOG	Boxer	1092	518	574	873	857	6	1	0	0	0	0	0	0	0	0	0
Auckland (Group)	2016	DOG	Cattle, Australian	642	351	291	492	410	4	0	0	0	0	0	0	0	0	0	0
Auckland (Group)	2016	DOG	Chihuahua, Long Coat	524	252	272	402	380	1	0	0	0	0	0	0	0	0	0	0
Auckland (Group)	2016	DOG	Chihuahua, Smooth Coat	1081	507	574	784	772	0	0	0	0	0	0	0	0	0	0	0
Auckland (Group)	2016	DOG	Collie, Bearded	179	74	105	123	109	0	0	0	0	0	0	0	0	0	0	0
Auckland (Group)	2016	DOG	Collie, Border	3114	1626	1488	2368	2144	12	1	0	0	0	0	0	0	0	0	0
Auckland (Group)	2016	DOG	Collie, Rough	131	59	72	91	90	0	0	0	0	0	0	0	0	0	0	0
Auckland (Group)	2016	DOG	Collie, Smooth	56	23	33	31	30	0	0	0	0	0	0	0	0	0	0	0
Auckland (Group)	2016	DOG	Greyhound	490	234	256	346	382	2	0	0	0	0	0	0	0	0	0	0
Auckland (Group)	2016	DOG	Heading	320	179	141	70	52	0	0	0	0	0	0	0	0	0	0	0
Auckland (Group)	2016	DOG	Huntaway	1119	532	587	566	440	3	0	0	0	0	0	0	0	0	0	0
Auckland (Group)	2016	DOG	Maltese	1079	476	603	822	805	2	0	0	0	0	0	0	0	0	0	0
Auckland (Group)	2016	DOG	Poodle, Miniature	804	345	459	681	588	0	0	0	0	0	0	0	0	0	0	0
Auckland (Group)	2016	DOG	Poodle, Toy	1120	542	578	827	861	0	0	0	0	0	0	0	0	0	0	0
Auckland (Group)	2016	DOG	Retriever, Golden	2440	1149	1291	1851	1770	1	0	0	0	0	0	0	0	0	0	0
Auckland (Group)	2016	DOG	Retriever, Labrador	7367	3628	3739	5799	5521	7	2	0	0	0	0	0	0	0	0	0
Auckland (Group)	2016	DOG	Rottweiler	1297	612	685	734	974	8	2	0	0	0	0	0	0	0	0	0
Auckland (Group)	2016	DOG	Schnauzer, Miniature	2151	1007	1144	1731	1826	0	0	0	0	0	0	0	0	0	0	0
Auckland (Group)	2016	DOG	Shepherd, German	2912	1455	1457	1799	2228	27	4	0	0	0	0	0	0	0	0	0
Auckland (Group)	2016	DOG	Shih Tzu	1542	700	842	1218	1253	0	0	0	0	0	0	0	0	0	0	0
Auckland (Group)	2016	DOG	Spaniel, Cavalier King Charles	508	215	293	415	404	0	0	0	0	0	0	0	0	0	0	0
Auckland (Group)	2016	DOG	Spaniel, Cocker	1159	525	634	921	831	0	0	0	0	0	0	0	0	0	0	0
Auckland (Group)	2016	DOG	Spaniel, English Springer	340	155	185	259	246	1	0	0	0	0	0	0	0	0	0	0
Auckland (Group)	2016	DOG	Terrier, American Pit Bull	699	308	391	484	564	588	5	0	0	0	0	0	0	0	0	0
Auckland (Group)	2016	DOG	Terrier, Fox (Smooth)	2003	1013	990	1693	1197	4	0	0	0	0	0	0	0	0	0	0
Auckland (Group)	2016	DOG	Terrier, Jack Russell	2958	1436	1522	2529	1884	3	0	0	0	0	0	0	0	0	0	0
Auckland (Group)	2016	DOG	Terrier, Staffordshire Bull	1739	907	832	1282	1340	17	0	0	0	0	0	0	0	0	0	0
Auckland (Group)	2016	DOG	Terrier, West Highland White	887	419	468	742	656	2	0	0	0	0	0	0	0	0	0	0
Auckland (Group)	2016	DOG	_Unidentified_	18618	8791	9827	13650	13881	107	2	0	0	0	0	0	0	0	0	0
Auckland (Group)	2016	OWN	_	0	0	0	0	0	0	0	15	4	100571	2882	0	0	0	0	0
Auckland City	2001	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	615	195517	0
Auckland City	2002	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	477	171334	0
Auckland City	2003	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	480	272272	0
Auckland City	2004	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	1453	228120	0
Auckland City	2005	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	1547	367711	0
Auckland City	2006	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	1838	401628	417491
Auckland City	2007	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	1879	397375	383384
Auckland City	2008	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	1654	686103	377982
Auckland City	2009	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	1622	479568	432159
Auckland City	2010	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	1558	389948	497199
Auckland City	2011	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	1804	507591	683980
Auckland City	2012	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	2161	685792	533861
Auckland City	2013	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	2602	753352	800881
Auckland City	2014	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	2755	808993	812128
Auckland City	2015	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	2748	609676	998221
Buller District	2001	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	5	2705	0
Buller District	2002	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	9	806	0
Buller District	2003	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	8	307	0
Buller District	2004	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	25	7532	0
Buller District	2005	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	12	4801	0
Buller District	2006	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	12	7519	2118
Buller District	2007	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	21	1687	7079
Buller District	2008	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	22	1116	5481
Buller District	2009	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	29	3000	3059
Buller District	2010	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	28	4756	4809
Buller District	2011	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	38	4535	3676
Buller District	2012	JST	_	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Buller District	2012	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	23	3212	3925
Buller District	2013	DOG	_ALL-PURE_	1422	694	728	828	579	20	8	0	0	0	0	0	0	0	0	0
Buller District	2013	DOG	_ALL-CROSS_	946	496	450	597	394	10	3	0	0	0	0	0	0	0	0	0
Buller District	2013	DOG	_ALL-DOGS_	2368	1190	1178	1425	973	30	11	0	0	0	0	0	0	0	0	0
Buller District	2013	DOG	Beagle	11	8	3	7	9	0	0	0	0	0	0	0	0	0	0	0
Buller District	2013	DOG	Bichon Frise	55	29	26	34	40	0	0	0	0	0	0	0	0	0	0	0
Buller District	2013	DOG	Boxer	14	4	10	9	6	0	0	0	0	0	0	0	0	0	0	0
Buller District	2013	DOG	Cattle, Australian	10	7	3	3	0	0	0	0	0	0	0	0	0	0	0	0
Buller District	2013	DOG	Chihuahua, Long Coat	6	2	4	4	3	0	0	0	0	0	0	0	0	0	0	0
Buller District	2013	DOG	Chihuahua, Smooth Coat	19	9	10	16	11	0	0	0	0	0	0	0	0	0	0	0
Buller District	2013	DOG	Collie, Bearded	22	13	9	11	3	0	0	0	0	0	0	0	0	0	0	0
Buller District	2013	DOG	Collie, Border	189	97	92	87	37	1	0	0	0	0	0	0	0	0	0	0
Buller District	2013	DOG	Collie, Rough	3	3	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Buller District	2013	DOG	Collie, Smooth	1	1	0	1	0	0	0	0	0	0	0	0	0	0	0	0
Buller District	2013	DOG	Greyhound	7	5	2	4	2	0	0	0	0	0	0	0	0	0	0	0
Buller District	2013	DOG	Heading	30	19	11	6	1	0	0	0	0	0	0	0	0	0	0	0
Buller District	2013	DOG	Huntaway	116	57	59	48	14	0	0	0	0	0	0	0	0	0	0	0
Buller District	2013	DOG	Maltese	7	4	3	5	3	0	0	0	0	0	0	0	0	0	0	0
Buller District	2013	DOG	Poodle, Miniature	4	2	2	3	4	0	0	0	0	0	0	0	0	0	0	0
Buller District	2013	DOG	Poodle, Toy	12	4	8	8	7	0	0	0	0	0	0	0	0	0	0	0
Buller District	2013	DOG	Retriever, Golden	22	12	10	14	10	0	0	0	0	0	0	0	0	0	0	0
Buller District	2013	DOG	Retriever, Labrador	173	77	96	110	89	0	0	0	0	0	0	0	0	0	0	0
Buller District	2013	DOG	Rottweiler	35	16	19	19	23	1	4	0	0	0	0	0	0	0	0	0
Buller District	2013	DOG	Schnauzer, Miniature	5	1	4	4	4	0	0	0	0	0	0	0	0	0	0	0
Buller District	2013	DOG	Shepherd, German	44	22	22	24	21	0	1	0	0	0	0	0	0	0	0	0
Buller District	2013	DOG	Shih Tzu	4	1	3	3	1	0	0	0	0	0	0	0	0	0	0	0
Buller District	2013	DOG	Spaniel, Cavalier King Charles	4	1	3	2	1	0	0	0	0	0	0	0	0	0	0	0
Buller District	2013	DOG	Spaniel, Cocker	27	11	16	18	18	0	0	0	0	0	0	0	0	0	0	0
Buller District	2013	DOG	Spaniel, English Springer	14	8	6	8	7	0	0	0	0	0	0	0	0	0	0	0
Buller District	2013	DOG	Terrier, American Pit Bull	18	10	8	8	16	14	2	0	0	0	0	0	0	0	0	0
Buller District	2013	DOG	Terrier, Fox (Smooth)	53	27	26	40	22	0	0	0	0	0	0	0	0	0	0	0
Buller District	2013	DOG	Terrier, Jack Russell	109	51	58	89	41	1	0	0	0	0	0	0	0	0	0	0
Buller District	2013	DOG	Terrier, Staffordshire Bull	15	6	9	13	6	0	0	0	0	0	0	0	0	0	0	0
Buller District	2013	DOG	Terrier, West Highland White	6	2	4	4	3	0	0	0	0	0	0	0	0	0	0	0
Buller District	2013	DOG	_Unidentified_	387	185	202	226	177	3	1	0	0	0	0	0	0	0	0	0
Buller District	2013	OWN	_	0	0	0	0	0	0	0	0	0	1673	25	0	0	0	0	0
Buller District	2013	JST	_	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Buller District	2013	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	33	4723	3428
Buller District	2014	DOG	_ALL-PURE_	1391	667	724	838	614	21	6	0	0	0	0	0	0	0	0	0
Buller District	2014	DOG	_ALL-CROSS_	961	512	449	617	422	9	2	0	0	0	0	0	0	0	0	0
Buller District	2014	DOG	_ALL-DOGS_	2352	1179	1173	1455	1036	30	8	0	0	0	0	0	0	0	0	0
Buller District	2014	DOG	Beagle	10	7	3	7	8	0	0	0	0	0	0	0	0	0	0	0
Buller District	2014	DOG	Bichon Frise	57	29	28	39	39	0	0	0	0	0	0	0	0	0	0	0
Buller District	2014	DOG	Boxer	11	3	8	6	4	0	0	0	0	0	0	0	0	0	0	0
Buller District	2014	DOG	Cattle, Australian	8	5	3	2	0	0	0	0	0	0	0	0	0	0	0	0
Buller District	2014	DOG	Chihuahua, Long Coat	6	2	4	4	3	0	0	0	0	0	0	0	0	0	0	0
Buller District	2014	DOG	Chihuahua, Smooth Coat	21	8	13	18	12	0	0	0	0	0	0	0	0	0	0	0
Buller District	2014	DOG	Collie, Bearded	19	12	7	10	1	0	0	0	0	0	0	0	0	0	0	0
Buller District	2014	DOG	Collie, Border	184	90	94	85	45	0	0	0	0	0	0	0	0	0	0	0
Buller District	2014	DOG	Collie, Rough	2	1	1	1	1	0	0	0	0	0	0	0	0	0	0	0
Buller District	2014	DOG	Collie, Smooth	1	1	0	1	0	0	0	0	0	0	0	0	0	0	0	0
Buller District	2014	DOG	Greyhound	5	3	2	3	1	0	0	0	0	0	0	0	0	0	0	0
Buller District	2014	DOG	Heading	27	18	9	6	1	0	0	0	0	0	0	0	0	0	0	0
Buller District	2014	DOG	Huntaway	114	57	57	47	13	0	0	0	0	0	0	0	0	0	0	0
Buller District	2014	DOG	Maltese	8	5	3	7	4	0	0	0	0	0	0	0	0	0	0	0
Buller District	2014	DOG	Poodle, Miniature	3	2	1	2	3	0	0	0	0	0	0	0	0	0	0	0
Buller District	2014	DOG	Poodle, Toy	11	4	7	7	7	0	0	0	0	0	0	0	0	0	0	0
Buller District	2014	DOG	Retriever, Golden	21	10	11	12	8	0	0	0	0	0	0	0	0	0	0	0
Buller District	2014	DOG	Retriever, Labrador	170	78	92	114	93	0	0	0	0	0	0	0	0	0	0	0
Buller District	2014	DOG	Rottweiler	45	19	26	23	29	2	2	0	0	0	0	0	0	0	0	0
Buller District	2014	DOG	Schnauzer, Miniature	5	1	4	3	3	0	0	0	0	0	0	0	0	0	0	0
Buller District	2014	DOG	Shepherd, German	46	25	21	26	24	0	1	0	0	0	0	0	0	0	0	0
Buller District	2014	DOG	Shih Tzu	4	3	1	3	2	0	0	0	0	0	0	0	0	0	0	0
Buller District	2014	DOG	Spaniel, Cavalier King Charles	4	2	2	3	0	0	0	0	0	0	0	0	0	0	0	0
Buller District	2014	DOG	Spaniel, Cocker	33	12	21	24	24	0	0	0	0	0	0	0	0	0	0	0
Buller District	2014	DOG	Spaniel, English Springer	15	9	6	10	7	0	0	0	0	0	0	0	0	0	0	0
Buller District	2014	DOG	Terrier, American Pit Bull	19	10	9	9	18	14	2	0	0	0	0	0	0	0	0	0
Buller District	2014	DOG	Terrier, Fox (Smooth)	55	26	29	43	26	0	0	0	0	0	0	0	0	0	0	0
Buller District	2014	DOG	Terrier, Jack Russell	97	46	51	84	37	1	0	0	0	0	0	0	0	0	0	0
Buller District	2014	DOG	Terrier, Staffordshire Bull	15	6	9	12	8	0	0	0	0	0	0	0	0	0	0	0
Buller District	2014	DOG	Terrier, West Highland White	5	2	3	3	3	0	0	0	0	0	0	0	0	0	0	0
Buller District	2014	DOG	_Unidentified_	370	171	199	224	190	4	1	0	0	0	0	0	0	0	0	0
Buller District	2014	OWN	_	0	0	0	0	0	0	0	0	0	1667	27	0	0	0	0	0
Buller District	2014	JST	_	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Buller District	2014	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	43	17885	18521
Buller District	2015	DOG	_ALL-PURE_	1329	653	676	783	653	25	5	0	0	0	0	0	0	0	0	0
Buller District	2015	DOG	_ALL-CROSS_	1021	527	494	677	505	13	2	0	0	0	0	0	0	0	0	0
Buller District	2015	DOG	_ALL-DOGS_	2350	1180	1170	1460	1158	38	7	0	0	0	0	0	0	0	0	0
Buller District	2015	DOG	Beagle	9	6	3	5	8	0	0	0	0	0	0	0	0	0	0	0
Buller District	2015	DOG	Bichon Frise	58	30	28	41	42	0	0	0	0	0	0	0	0	0	0	0
Buller District	2015	DOG	Boxer	13	3	10	6	5	0	0	0	0	0	0	0	0	0	0	0
Buller District	2015	DOG	Cattle, Australian	9	6	3	4	2	0	0	0	0	0	0	0	0	0	0	0
Buller District	2015	DOG	Chihuahua, Long Coat	6	2	4	3	4	0	0	0	0	0	0	0	0	0	0	0
Buller District	2015	DOG	Chihuahua, Smooth Coat	15	6	9	12	9	0	0	0	0	0	0	0	0	0	0	0
Buller District	2015	DOG	Collie, Bearded	17	10	7	8	1	0	0	0	0	0	0	0	0	0	0	0
Buller District	2015	DOG	Collie, Border	190	100	90	88	51	0	0	0	0	0	0	0	0	0	0	0
Buller District	2015	DOG	Collie, Rough	2	1	1	1	1	0	0	0	0	0	0	0	0	0	0	0
Buller District	2015	DOG	Collie, Smooth	1	1	0	1	0	0	0	0	0	0	0	0	0	0	0	0
Buller District	2015	DOG	Greyhound	4	2	2	2	2	0	0	0	0	0	0	0	0	0	0	0
Buller District	2015	DOG	Heading	26	19	7	6	4	0	0	0	0	0	0	0	0	0	0	0
Buller District	2015	DOG	Huntaway	98	48	50	39	15	0	0	0	0	0	0	0	0	0	0	0
Buller District	2015	DOG	Maltese	9	5	4	7	5	0	0	0	0	0	0	0	0	0	0	0
Buller District	2015	DOG	Poodle, Miniature	3	2	1	2	3	0	0	0	0	0	0	0	0	0	0	0
Buller District	2015	DOG	Poodle, Toy	11	4	7	6	8	0	0	0	0	0	0	0	0	0	0	0
Buller District	2015	DOG	Retriever, Golden	18	10	8	14	9	0	0	0	0	0	0	0	0	0	0	0
Buller District	2015	DOG	Retriever, Labrador	165	77	88	108	94	0	0	0	0	0	0	0	0	0	0	0
Buller District	2015	DOG	Rottweiler	41	14	27	23	30	1	2	0	0	0	0	0	0	0	0	0
Buller District	2015	DOG	Schnauzer, Miniature	4	1	3	2	3	0	0	0	0	0	0	0	0	0	0	0
Buller District	2015	DOG	Shepherd, German	45	22	23	24	29	0	1	0	0	0	0	0	0	0	0	0
Buller District	2015	DOG	Shih Tzu	6	4	2	4	3	0	0	0	0	0	0	0	0	0	0	0
Buller District	2015	DOG	Spaniel, Cavalier King Charles	7	3	4	6	3	0	0	0	0	0	0	0	0	0	0	0
Buller District	2015	DOG	Spaniel, Cocker	31	11	20	21	25	0	0	0	0	0	0	0	0	0	0	0
Buller District	2015	DOG	Spaniel, English Springer	14	9	5	9	8	0	0	0	0	0	0	0	0	0	0	0
Buller District	2015	DOG	Terrier, American Pit Bull	20	13	7	9	17	18	2	0	0	0	0	0	0	0	0	0
Buller District	2015	DOG	Terrier, Fox (Smooth)	54	27	27	41	26	0	0	0	0	0	0	0	0	0	0	0
Buller District	2015	DOG	Terrier, Jack Russell	82	39	43	68	34	1	0	0	0	0	0	0	0	0	0	0
Buller District	2015	DOG	Terrier, Staffordshire Bull	24	8	16	16	10	0	0	0	0	0	0	0	0	0	0	0
Buller District	2015	DOG	Terrier, West Highland White	4	2	2	3	3	0	0	0	0	0	0	0	0	0	0	0
Buller District	2015	DOG	_Unidentified_	343	168	175	204	199	5	0	0	0	0	0	0	0	0	0	0
Buller District	2015	OWN	_	0	0	0	0	0	0	0	0	0	1660	14	0	0	0	0	0
Buller District	2015	JST	_	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Buller District	2015	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	42	3855	4746
Buller District	2016	DOG	_ALL-PURE_	1225	600	625	742	647	22	6	0	0	0	0	0	0	0	0	0
Buller District	2016	DOG	_ALL-CROSS_	949	491	458	643	510	12	2	0	0	0	0	0	0	0	0	0
Buller District	2016	DOG	_ALL-DOGS_	2174	1091	1083	1385	1157	34	8	0	0	0	0	0	0	0	0	0
Buller District	2016	DOG	Beagle	7	5	2	5	7	0	0	0	0	0	0	0	0	0	0	0
Buller District	2016	DOG	Bichon Frise	57	31	26	43	40	0	0	0	0	0	0	0	0	0	0	0
Buller District	2016	DOG	Boxer	13	4	9	7	8	0	0	0	0	0	0	0	0	0	0	0
Buller District	2016	DOG	Cattle, Australian	8	6	2	4	2	0	0	0	0	0	0	0	0	0	0	0
Buller District	2016	DOG	Chihuahua, Long Coat	5	2	3	3	4	0	0	0	0	0	0	0	0	0	0	0
Buller District	2016	DOG	Chihuahua, Smooth Coat	13	7	6	10	10	0	0	0	0	0	0	0	0	0	0	0
Buller District	2016	DOG	Collie, Bearded	12	7	5	6	2	0	0	0	0	0	0	0	0	0	0	0
Buller District	2016	DOG	Collie, Border	160	87	73	82	44	0	0	0	0	0	0	0	0	0	0	0
Buller District	2016	DOG	Collie, Rough	2	1	1	1	1	0	0	0	0	0	0	0	0	0	0	0
Buller District	2016	DOG	Collie, Smooth	1	1	0	1	0	0	0	0	0	0	0	0	0	0	0	0
Buller District	2016	DOG	Greyhound	2	1	1	1	2	0	0	0	0	0	0	0	0	0	0	0
Buller District	2016	DOG	Heading	27	18	9	5	4	0	0	0	0	0	0	0	0	0	0	0
Buller District	2016	DOG	Huntaway	98	48	50	46	15	0	0	0	0	0	0	0	0	0	0	0
Buller District	2016	DOG	Maltese	10	5	5	8	7	0	0	0	0	0	0	0	0	0	0	0
Buller District	2016	DOG	Poodle, Miniature	2	1	1	1	2	0	0	0	0	0	0	0	0	0	0	0
Buller District	2016	DOG	Poodle, Toy	10	4	6	5	8	0	0	0	0	0	0	0	0	0	0	0
Buller District	2016	DOG	Retriever, Golden	18	9	9	12	8	0	0	0	0	0	0	0	0	0	0	0
Buller District	2016	DOG	Retriever, Labrador	160	77	83	106	95	0	0	0	0	0	0	0	0	0	0	0
Buller District	2016	DOG	Rottweiler	39	14	25	19	29	1	1	0	0	0	0	0	0	0	0	0
Buller District	2016	DOG	Schnauzer, Miniature	4	1	3	2	3	0	0	0	0	0	0	0	0	0	0	0
Buller District	2016	DOG	Shepherd, German	32	15	17	22	24	0	0	0	0	0	0	0	0	0	0	0
Buller District	2016	DOG	Shih Tzu	5	3	2	2	1	0	0	0	0	0	0	0	0	0	0	0
Buller District	2016	DOG	Spaniel, Cavalier King Charles	5	3	2	5	3	0	0	0	0	0	0	0	0	0	0	0
Buller District	2016	DOG	Spaniel, Cocker	25	9	16	18	22	0	0	0	0	0	0	0	0	0	0	0
Buller District	2016	DOG	Spaniel, English Springer	8	4	4	4	5	0	0	0	0	0	0	0	0	0	0	0
Buller District	2016	DOG	Terrier, American Pit Bull	18	10	8	11	14	14	3	0	0	0	0	0	0	0	0	0
Buller District	2016	DOG	Terrier, Fox (Smooth)	55	26	29	42	34	0	0	0	0	0	0	0	0	0	0	0
Buller District	2016	DOG	Terrier, Jack Russell	67	31	36	55	33	1	0	0	0	0	0	0	0	0	0	0
Buller District	2016	DOG	Terrier, Staffordshire Bull	23	8	15	16	13	0	0	0	0	0	0	0	0	0	0	0
Buller District	2016	DOG	Terrier, West Highland White	6	2	4	4	4	0	0	0	0	0	0	0	0	0	0	0
Buller District	2016	DOG	_Unidentified_	333	160	173	196	203	6	2	0	0	0	0	0	0	0	0	0
Buller District	2016	OWN	_	0	0	0	0	0	0	0	0	0	1598	30	0	0	0	0	0
Carterton District	2001	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	13	713	0
Carterton District	2002	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	3	192	0
Carterton District	2003	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	6	1858	0
Carterton District	2004	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	7	2808	0
Carterton District	2005	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	10	15074	0
Carterton District	2006	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	14	1936	8800
Carterton District	2007	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	15	695	793
Carterton District	2008	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	12	395	485
Carterton District	2009	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	11	578	488
Carterton District	2010	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	26	4227	3182
Carterton District	2011	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	18	882	1020
Carterton District	2012	JST	_	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Carterton District	2012	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	20	717	1670
Carterton District	2013	DOG	_ALL-PURE_	1772	931	841	713	669	9	1	0	0	0	0	0	0	0	0	0
Carterton District	2013	DOG	_ALL-CROSS_	865	458	407	540	462	10	2	0	0	0	0	0	0	0	0	0
Carterton District	2013	DOG	_ALL-DOGS_	2637	1389	1248	1253	1131	19	3	0	0	0	0	0	0	0	0	0
Carterton District	2013	DOG	Beagle	7	4	3	4	3	0	0	0	0	0	0	0	0	0	0	0
Carterton District	2013	DOG	Bichon Frise	17	9	8	14	9	0	0	0	0	0	0	0	0	0	0	0
Carterton District	2013	DOG	Boxer	13	7	6	6	8	0	0	0	0	0	0	0	0	0	0	0
Carterton District	2013	DOG	Cattle, Australian	17	7	10	7	3	0	0	0	0	0	0	0	0	0	0	0
Carterton District	2013	DOG	Chihuahua, Long Coat	27	15	12	7	13	0	0	0	0	0	0	0	0	0	0	0
Carterton District	2013	DOG	Chihuahua, Smooth Coat	14	10	4	10	11	0	0	0	0	0	0	0	0	0	0	0
Carterton District	2013	DOG	Collie, Bearded	25	13	12	13	6	0	0	0	0	0	0	0	0	0	0	0
Carterton District	2013	DOG	Collie, Border	76	41	35	32	22	0	0	0	0	0	0	0	0	0	0	0
Carterton District	2013	DOG	Collie, Rough	4	2	2	4	1	0	0	0	0	0	0	0	0	0	0	0
Carterton District	2013	DOG	Collie, Smooth	10	7	3	1	0	0	0	0	0	0	0	0	0	0	0	0
Carterton District	2013	DOG	Greyhound	10	7	3	8	6	0	0	0	0	0	0	0	0	0	0	0
Carterton District	2013	DOG	Heading	220	121	99	14	4	0	0	0	0	0	0	0	0	0	0	0
Carterton District	2013	DOG	Huntaway	331	147	184	31	12	0	0	0	0	0	0	0	0	0	0	0
Carterton District	2013	DOG	Maltese	7	2	5	5	5	0	0	0	0	0	0	0	0	0	0	0
Carterton District	2013	DOG	Poodle, Miniature	15	11	4	13	13	0	0	0	0	0	0	0	0	0	0	0
Carterton District	2013	DOG	Poodle, Toy	7	4	3	5	4	0	0	0	0	0	0	0	0	0	0	0
Carterton District	2013	DOG	Retriever, Golden	15	8	7	9	4	0	0	0	0	0	0	0	0	0	0	0
Carterton District	2013	DOG	Retriever, Labrador	219	115	104	107	126	0	0	0	0	0	0	0	0	0	0	0
Carterton District	2013	DOG	Rottweiler	36	20	16	19	26	0	0	0	0	0	0	0	0	0	0	0
Carterton District	2013	DOG	Schnauzer, Miniature	8	2	6	4	6	0	0	0	0	0	0	0	0	0	0	0
Carterton District	2013	DOG	Shepherd, German	41	25	16	18	25	0	1	0	0	0	0	0	0	0	0	0
Carterton District	2013	DOG	Shih Tzu	7	3	4	7	7	0	0	0	0	0	0	0	0	0	0	0
Carterton District	2013	DOG	Spaniel, Cavalier King Charles	12	7	5	10	11	0	0	0	0	0	0	0	0	0	0	0
Carterton District	2013	DOG	Spaniel, Cocker	24	12	12	9	13	0	0	0	0	0	0	0	0	0	0	0
Carterton District	2013	DOG	Spaniel, English Springer	14	6	8	12	7	0	0	0	0	0	0	0	0	0	0	0
Carterton District	2013	DOG	Terrier, American Pit Bull	9	5	4	8	8	9	0	0	0	0	0	0	0	0	0	0
Carterton District	2013	DOG	Terrier, Fox (Smooth)	143	85	58	85	63	0	0	0	0	0	0	0	0	0	0	0
Carterton District	2013	DOG	Terrier, Jack Russell	87	43	44	53	41	0	0	0	0	0	0	0	0	0	0	0
Carterton District	2013	DOG	Terrier, Staffordshire Bull	40	22	18	21	27	0	0	0	0	0	0	0	0	0	0	0
Carterton District	2013	DOG	Terrier, West Highland White	6	4	2	5	2	0	0	0	0	0	0	0	0	0	0	0
Carterton District	2013	DOG	_Unidentified_	311	167	144	172	183	0	0	0	0	0	0	0	0	0	0	0
Carterton District	2013	OWN	_	0	0	0	0	0	0	0	0	0	1509	29	0	0	0	0	0
Carterton District	2013	JST	_	0	0	0	0	0	0	0	0	0	0	0	1	0	0	0	0
Carterton District	2013	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	18	2086	2086
Carterton District	2014	DOG	_ALL-PURE_	1716	897	819	720	752	8	1	0	0	0	0	0	0	0	0	0
Carterton District	2014	DOG	_ALL-CROSS_	879	473	406	588	561	6	0	0	0	0	0	0	0	0	0	0
Carterton District	2014	DOG	_ALL-DOGS_	2595	1370	1225	1308	1313	14	1	0	0	0	0	0	0	0	0	0
Carterton District	2014	DOG	Beagle	6	4	2	5	3	0	0	0	0	0	0	0	0	0	0	0
Carterton District	2014	DOG	Bichon Frise	16	7	9	13	9	0	0	0	0	0	0	0	0	0	0	0
Carterton District	2014	DOG	Boxer	15	10	5	7	9	0	0	0	0	0	0	0	0	0	0	0
Carterton District	2014	DOG	Cattle, Australian	16	7	9	6	3	0	0	0	0	0	0	0	0	0	0	0
Carterton District	2014	DOG	Chihuahua, Long Coat	22	13	9	5	17	0	0	0	0	0	0	0	0	0	0	0
Carterton District	2014	DOG	Chihuahua, Smooth Coat	12	9	3	10	10	0	0	0	0	0	0	0	0	0	0	0
Carterton District	2014	DOG	Collie, Bearded	24	10	14	11	7	0	0	0	0	0	0	0	0	0	0	0
Carterton District	2014	DOG	Collie, Border	70	37	33	36	26	0	0	0	0	0	0	0	0	0	0	0
Carterton District	2014	DOG	Collie, Rough	4	2	2	4	1	0	0	0	0	0	0	0	0	0	0	0
Carterton District	2014	DOG	Collie, Smooth	7	4	3	1	0	0	0	0	0	0	0	0	0	0	0	0
Carterton District	2014	DOG	Greyhound	12	6	6	10	9	0	0	0	0	0	0	0	0	0	0	0
Carterton District	2014	DOG	Heading	214	113	101	17	5	0	0	0	0	0	0	0	0	0	0	0
Carterton District	2014	DOG	Huntaway	317	138	179	33	17	0	0	0	0	0	0	0	0	0	0	0
Carterton District	2014	DOG	Maltese	7	2	5	5	7	0	0	0	0	0	0	0	0	0	0	0
Carterton District	2014	DOG	Poodle, Miniature	14	12	2	13	12	0	0	0	0	0	0	0	0	0	0	0
Carterton District	2014	DOG	Poodle, Toy	7	4	3	5	4	0	0	0	0	0	0	0	0	0	0	0
Carterton District	2014	DOG	Retriever, Golden	12	8	4	9	4	0	0	0	0	0	0	0	0	0	0	0
Carterton District	2014	DOG	Retriever, Labrador	208	110	98	105	131	0	0	0	0	0	0	0	0	0	0	0
Carterton District	2014	DOG	Rottweiler	45	26	19	20	40	0	0	0	0	0	0	0	0	0	0	0
Carterton District	2014	DOG	Schnauzer, Miniature	6	1	5	5	6	0	0	0	0	0	0	0	0	0	0	0
Carterton District	2014	DOG	Shepherd, German	47	29	18	21	29	0	1	0	0	0	0	0	0	0	0	0
Carterton District	2014	DOG	Shih Tzu	10	5	5	10	9	0	0	0	0	0	0	0	0	0	0	0
Carterton District	2014	DOG	Spaniel, Cavalier King Charles	12	7	5	11	11	0	0	0	0	0	0	0	0	0	0	0
Carterton District	2014	DOG	Spaniel, Cocker	25	14	11	11	14	0	0	0	0	0	0	0	0	0	0	0
Carterton District	2014	DOG	Spaniel, English Springer	15	6	9	9	8	0	0	0	0	0	0	0	0	0	0	0
Carterton District	2014	DOG	Terrier, American Pit Bull	5	4	1	4	4	5	0	0	0	0	0	0	0	0	0	0
Carterton District	2014	DOG	Terrier, Fox (Smooth)	122	74	48	75	64	0	0	0	0	0	0	0	0	0	0	0
Carterton District	2014	DOG	Terrier, Jack Russell	84	42	42	56	46	2	0	0	0	0	0	0	0	0	0	0
Carterton District	2014	DOG	Terrier, Staffordshire Bull	36	20	16	20	27	0	0	0	0	0	0	0	0	0	0	0
Carterton District	2014	DOG	Terrier, West Highland White	9	4	5	8	6	0	0	0	0	0	0	0	0	0	0	0
Carterton District	2014	DOG	_Unidentified_	317	169	148	175	214	1	0	0	0	0	0	0	0	0	0	0
Carterton District	2014	OWN	_	0	0	0	0	0	0	0	0	0	1507	41	0	0	0	0	0
Carterton District	2014	JST	_	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Carterton District	2014	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	27	2532	2296
Carterton District	2015	DOG	_ALL-PURE_	1693	873	820	732	851	6	2	0	0	0	0	0	0	0	0	0
Carterton District	2015	DOG	_ALL-CROSS_	905	492	413	614	652	10	0	0	0	0	0	0	0	0	0	0
Carterton District	2015	DOG	_ALL-DOGS_	2598	1365	1233	1346	1503	16	2	0	0	0	0	0	0	0	0	0
Carterton District	2015	DOG	Beagle	7	4	3	6	5	0	0	0	0	0	0	0	0	0	0	0
Carterton District	2015	DOG	Bichon Frise	15	7	8	13	7	0	0	0	0	0	0	0	0	0	0	0
Carterton District	2015	DOG	Boxer	15	12	3	9	11	0	0	0	0	0	0	0	0	0	0	0
Carterton District	2015	DOG	Cattle, Australian	14	7	7	7	4	0	0	0	0	0	0	0	0	0	0	0
Carterton District	2015	DOG	Chihuahua, Long Coat	20	12	8	3	16	0	0	0	0	0	0	0	0	0	0	0
Carterton District	2015	DOG	Chihuahua, Smooth Coat	11	8	3	10	10	0	0	0	0	0	0	0	0	0	0	0
Carterton District	2015	DOG	Collie, Bearded	22	10	12	9	9	0	0	0	0	0	0	0	0	0	0	0
Carterton District	2015	DOG	Collie, Border	73	37	36	35	31	0	0	0	0	0	0	0	0	0	0	0
Carterton District	2015	DOG	Collie, Rough	3	2	1	3	1	0	0	0	0	0	0	0	0	0	0	0
Carterton District	2015	DOG	Collie, Smooth	4	2	2	0	0	0	0	0	0	0	0	0	0	0	0	0
Carterton District	2015	DOG	Greyhound	14	6	8	14	12	0	0	0	0	0	0	0	0	0	0	0
Carterton District	2015	DOG	Heading	211	105	106	14	8	0	0	0	0	0	0	0	0	0	0	0
Carterton District	2015	DOG	Huntaway	307	138	169	32	18	0	0	0	0	0	0	0	0	0	0	0
Carterton District	2015	DOG	Maltese	8	2	6	6	8	0	0	0	0	0	0	0	0	0	0	0
Carterton District	2015	DOG	Poodle, Miniature	19	12	7	15	17	0	0	0	0	0	0	0	0	0	0	0
Carterton District	2015	DOG	Poodle, Toy	8	5	3	6	4	0	0	0	0	0	0	0	0	0	0	0
Carterton District	2015	DOG	Retriever, Golden	9	5	4	7	4	0	0	0	0	0	0	0	0	0	0	0
Carterton District	2015	DOG	Retriever, Labrador	194	101	93	108	137	0	0	0	0	0	0	0	0	0	0	0
Carterton District	2015	DOG	Rottweiler	46	26	20	19	43	0	0	0	0	0	0	0	0	0	0	0
Carterton District	2015	DOG	Schnauzer, Miniature	7	1	6	6	7	0	0	0	0	0	0	0	0	0	0	0
Carterton District	2015	DOG	Shepherd, German	48	27	21	22	39	0	1	0	0	0	0	0	0	0	0	0
Carterton District	2015	DOG	Shih Tzu	10	4	6	10	10	0	0	0	0	0	0	0	0	0	0	0
Carterton District	2015	DOG	Spaniel, Cavalier King Charles	12	6	6	11	12	0	0	0	0	0	0	0	0	0	0	0
Carterton District	2015	DOG	Spaniel, Cocker	30	16	14	17	20	0	0	0	0	0	0	0	0	0	0	0
Carterton District	2015	DOG	Spaniel, English Springer	14	6	8	8	9	0	0	0	0	0	0	0	0	0	0	0
Carterton District	2015	DOG	Terrier, American Pit Bull	5	4	1	4	4	4	1	0	0	0	0	0	0	0	0	0
Carterton District	2015	DOG	Terrier, Fox (Smooth)	115	68	47	71	79	0	0	0	0	0	0	0	0	0	0	0
Carterton District	2015	DOG	Terrier, Jack Russell	79	38	41	58	46	0	0	0	0	0	0	0	0	0	0	0
Carterton District	2015	DOG	Terrier, Staffordshire Bull	36	18	18	21	29	0	0	0	0	0	0	0	0	0	0	0
Carterton District	2015	DOG	Terrier, West Highland White	8	4	4	7	6	0	0	0	0	0	0	0	0	0	0	0
Carterton District	2015	DOG	_Unidentified_	329	180	149	181	245	2	0	0	0	0	0	0	0	0	0	0
Carterton District	2015	OWN	_	0	0	0	0	0	0	0	0	0	1527	31	0	0	0	0	0
Carterton District	2015	JST	_	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Carterton District	2015	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	20	2065	2270
Carterton District	2016	DOG	_ALL-PURE_	1665	862	803	720	921	9	1	0	0	0	0	0	0	0	0	0
Carterton District	2016	DOG	_ALL-CROSS_	902	481	421	609	687	16	0	0	0	0	0	0	0	0	0	0
Carterton District	2016	DOG	_ALL-DOGS_	2567	1343	1224	1329	1608	25	1	0	0	0	0	0	0	0	0	0
Carterton District	2016	DOG	Beagle	10	4	6	10	7	0	0	0	0	0	0	0	0	0	0	0
Carterton District	2016	DOG	Bichon Frise	17	8	9	15	11	0	0	0	0	0	0	0	0	0	0	0
Carterton District	2016	DOG	Boxer	14	10	4	12	12	0	0	0	0	0	0	0	0	0	0	0
Carterton District	2016	DOG	Cattle, Australian	17	7	10	7	6	0	0	0	0	0	0	0	0	0	0	0
Carterton District	2016	DOG	Chihuahua, Long Coat	17	11	6	5	13	0	0	0	0	0	0	0	0	0	0	0
Carterton District	2016	DOG	Chihuahua, Smooth Coat	10	7	3	9	8	0	0	0	0	0	0	0	0	0	0	0
Carterton District	2016	DOG	Collie, Bearded	18	7	11	7	8	0	0	0	0	0	0	0	0	0	0	0
Carterton District	2016	DOG	Collie, Border	68	35	33	31	31	0	0	0	0	0	0	0	0	0	0	0
Carterton District	2016	DOG	Collie, Rough	4	3	1	3	2	0	0	0	0	0	0	0	0	0	0	0
Carterton District	2016	DOG	Collie, Smooth	4	2	2	1	0	0	0	0	0	0	0	0	0	0	0	0
Carterton District	2016	DOG	Greyhound	9	3	6	9	9	0	0	0	0	0	0	0	0	0	0	0
Carterton District	2016	DOG	Heading	221	114	107	13	9	0	0	0	0	0	0	0	0	0	0	0
Carterton District	2016	DOG	Huntaway	282	140	142	30	19	0	0	0	0	0	0	0	0	0	0	0
Carterton District	2016	DOG	Maltese	6	2	4	4	6	0	0	0	0	0	0	0	0	0	0	0
Carterton District	2016	DOG	Poodle, Miniature	17	10	7	13	17	0	0	0	0	0	0	0	0	0	0	0
Carterton District	2016	DOG	Poodle, Toy	9	6	3	7	6	0	0	0	0	0	0	0	0	0	0	0
Carterton District	2016	DOG	Retriever, Golden	9	4	5	5	6	0	0	0	0	0	0	0	0	0	0	0
Carterton District	2016	DOG	Retriever, Labrador	196	95	101	106	156	0	0	0	0	0	0	0	0	0	0	0
Carterton District	2016	DOG	Rottweiler	40	25	15	20	39	0	0	0	0	0	0	0	0	0	0	0
Carterton District	2016	DOG	Schnauzer, Miniature	9	3	6	7	9	0	0	0	0	0	0	0	0	0	0	0
Carterton District	2016	DOG	Shepherd, German	43	25	18	16	37	0	0	0	0	0	0	0	0	0	0	0
Carterton District	2016	DOG	Shih Tzu	11	4	7	10	11	0	0	0	0	0	0	0	0	0	0	0
Carterton District	2016	DOG	Spaniel, Cavalier King Charles	14	7	7	13	14	0	0	0	0	0	0	0	0	0	0	0
Carterton District	2016	DOG	Spaniel, Cocker	27	16	11	19	19	0	0	0	0	0	0	0	0	0	0	0
Carterton District	2016	DOG	Spaniel, English Springer	14	6	8	7	10	0	0	0	0	0	0	0	0	0	0	0
Carterton District	2016	DOG	Terrier, American Pit Bull	7	5	2	6	5	6	1	0	0	0	0	0	0	0	0	0
Carterton District	2016	DOG	Terrier, Fox (Smooth)	120	67	53	73	89	0	0	0	0	0	0	0	0	0	0	0
Carterton District	2016	DOG	Terrier, Jack Russell	79	38	41	54	54	0	0	0	0	0	0	0	0	0	0	0
Carterton District	2016	DOG	Terrier, Staffordshire Bull	36	17	19	21	32	0	0	0	0	0	0	0	0	0	0	0
Carterton District	2016	DOG	Terrier, West Highland White	9	5	4	8	7	0	0	0	0	0	0	0	0	0	0	0
Carterton District	2016	DOG	_Unidentified_	328	176	152	179	269	3	0	0	0	0	0	0	0	0	0	0
Carterton District	2016	OWN	_	0	0	0	0	0	0	0	0	0	1545	17	0	0	0	0	0
Central Hawke's Bay District	2001	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	10	3245	0
Central Hawke's Bay District	2002	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	19	1123	0
Central Hawke's Bay District	2003	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	16	897	0
Central Hawke's Bay District	2004	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	22	1518	0
Central Hawke's Bay District	2005	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	22	1862	0
Central Hawke's Bay District	2006	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	28	2967	3257
Central Hawke's Bay District	2007	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	35	22254	20402
Central Hawke's Bay District	2008	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	39	3527	5361
Central Hawke's Bay District	2009	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	51	18728	9408
Central Hawke's Bay District	2010	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	60	28798	32977
Central Hawke's Bay District	2011	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	58	13928	16397
Central Hawke's Bay District	2012	JST	_	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Central Hawke's Bay District	2012	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	45	10155	12390
Central Hawke's Bay District	2013	DOG	_ALL-PURE_	4449	2167	2282	660	497	8	0	0	0	0	0	0	0	0	0	0
Central Hawke's Bay District	2013	DOG	_ALL-CROSS_	759	425	334	346	235	9	0	0	0	0	0	0	0	0	0	0
Central Hawke's Bay District	2013	DOG	_ALL-DOGS_	5208	2592	2616	1006	732	17	0	0	0	0	0	0	0	0	0	0
Central Hawke's Bay District	2013	DOG	Beagle	14	8	6	6	5	0	0	0	0	0	0	0	0	0	0	0
Central Hawke's Bay District	2013	DOG	Bichon Frise	12	6	6	5	6	0	0	0	0	0	0	0	0	0	0	0
Central Hawke's Bay District	2013	DOG	Boxer	16	6	10	6	6	0	0	0	0	0	0	0	0	0	0	0
Central Hawke's Bay District	2013	DOG	Cattle, Australian	57	32	25	12	7	1	0	0	0	0	0	0	0	0	0	0
Central Hawke's Bay District	2013	DOG	Chihuahua, Long Coat	8	5	3	2	1	0	0	0	0	0	0	0	0	0	0	0
Central Hawke's Bay District	2013	DOG	Chihuahua, Smooth Coat	30	15	15	5	7	0	0	0	0	0	0	0	0	0	0	0
Central Hawke's Bay District	2013	DOG	Collie, Bearded	49	17	32	3	2	0	0	0	0	0	0	0	0	0	0	0
Central Hawke's Bay District	2013	DOG	Collie, Border	84	36	48	16	14	0	0	0	0	0	0	0	0	0	0	0
Central Hawke's Bay District	2013	DOG	Collie, Rough	19	9	10	0	2	0	0	0	0	0	0	0	0	0	0	0
Central Hawke's Bay District	2013	DOG	Collie, Smooth	1051	458	593	29	3	0	0	0	0	0	0	0	0	0	0	0
Central Hawke's Bay District	2013	DOG	Greyhound	7	4	3	6	5	0	0	0	0	0	0	0	0	0	0	0
Central Hawke's Bay District	2013	DOG	Heading	643	315	328	24	4	0	0	0	0	0	0	0	0	0	0	0
Central Hawke's Bay District	2013	DOG	Huntaway	815	375	440	38	10	0	0	0	0	0	0	0	0	0	0	0
Central Hawke's Bay District	2013	DOG	Maltese	8	3	5	0	3	0	0	0	0	0	0	0	0	0	0	0
Central Hawke's Bay District	2013	DOG	Poodle, Miniature	9	5	4	6	2	0	0	0	0	0	0	0	0	0	0	0
Central Hawke's Bay District	2013	DOG	Poodle, Toy	14	8	6	8	2	0	0	0	0	0	0	0	0	0	0	0
Central Hawke's Bay District	2013	DOG	Retriever, Golden	26	12	14	5	9	0	0	0	0	0	0	0	0	0	0	0
Central Hawke's Bay District	2013	DOG	Retriever, Labrador	419	206	213	117	97	0	0	0	0	0	0	0	0	0	0	0
Central Hawke's Bay District	2013	DOG	Rottweiler	41	21	20	16	17	0	0	0	0	0	0	0	0	0	0	0
Central Hawke's Bay District	2013	DOG	Schnauzer, Miniature	14	10	4	4	7	0	0	0	0	0	0	0	0	0	0	0
Central Hawke's Bay District	2013	DOG	Shepherd, German	53	35	18	19	20	0	0	0	0	0	0	0	0	0	0	0
Central Hawke's Bay District	2013	DOG	Shih Tzu	6	2	4	3	3	0	0	0	0	0	0	0	0	0	0	0
Central Hawke's Bay District	2013	DOG	Spaniel, Cavalier King Charles	10	3	7	4	4	0	0	0	0	0	0	0	0	0	0	0
Central Hawke's Bay District	2013	DOG	Spaniel, Cocker	16	8	8	7	7	0	0	0	0	0	0	0	0	0	0	0
Central Hawke's Bay District	2013	DOG	Spaniel, English Springer	24	13	11	5	5	0	0	0	0	0	0	0	0	0	0	0
Central Hawke's Bay District	2013	DOG	Terrier, American Pit Bull	9	6	3	3	5	6	0	0	0	0	0	0	0	0	0	0
Central Hawke's Bay District	2013	DOG	Terrier, Fox (Smooth)	260	147	113	73	37	0	0	0	0	0	0	0	0	0	0	0
Central Hawke's Bay District	2013	DOG	Terrier, Jack Russell	254	135	119	76	62	0	0	0	0	0	0	0	0	0	0	0
Central Hawke's Bay District	2013	DOG	Terrier, Staffordshire Bull	22	10	12	8	8	0	0	0	0	0	0	0	0	0	0	0
Central Hawke's Bay District	2013	DOG	Terrier, West Highland White	14	5	9	5	3	0	0	0	0	0	0	0	0	0	0	0
Central Hawke's Bay District	2013	DOG	_Unidentified_	445	252	193	149	134	1	0	0	0	0	0	0	0	0	0	0
Central Hawke's Bay District	2013	OWN	_	0	0	0	0	0	0	0	0	0	2256	43	0	0	0	0	0
Central Hawke's Bay District	2013	JST	_	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Central Hawke's Bay District	2013	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	46	8762	5224
Central Hawke's Bay District	2014	DOG	_ALL-PURE_	4422	2139	2283	728	578	14	0	0	0	0	0	0	0	0	0	0
Central Hawke's Bay District	2014	DOG	_ALL-CROSS_	723	406	317	351	262	7	0	0	0	0	0	0	0	0	0	0
Central Hawke's Bay District	2014	DOG	_ALL-DOGS_	5145	2545	2600	1079	840	21	0	0	0	0	0	0	0	0	0	0
Central Hawke's Bay District	2014	DOG	Beagle	14	7	7	6	6	0	0	0	0	0	0	0	0	0	0	0
Central Hawke's Bay District	2014	DOG	Bichon Frise	12	7	5	7	4	0	0	0	0	0	0	0	0	0	0	0
Central Hawke's Bay District	2014	DOG	Boxer	22	11	11	11	10	0	0	0	0	0	0	0	0	0	0	0
Central Hawke's Bay District	2014	DOG	Cattle, Australian	50	28	22	11	9	1	0	0	0	0	0	0	0	0	0	0
Central Hawke's Bay District	2014	DOG	Chihuahua, Long Coat	10	7	3	3	3	0	0	0	0	0	0	0	0	0	0	0
Central Hawke's Bay District	2014	DOG	Chihuahua, Smooth Coat	28	14	14	8	6	0	0	0	0	0	0	0	0	0	0	0
Central Hawke's Bay District	2014	DOG	Collie, Bearded	50	16	34	2	1	0	0	0	0	0	0	0	0	0	0	0
Central Hawke's Bay District	2014	DOG	Collie, Border	82	29	53	18	15	0	0	0	0	0	0	0	0	0	0	0
Central Hawke's Bay District	2014	DOG	Collie, Rough	19	7	12	1	2	0	0	0	0	0	0	0	0	0	0	0
Central Hawke's Bay District	2014	DOG	Collie, Smooth	991	438	553	34	5	0	0	0	0	0	0	0	0	0	0	0
Central Hawke's Bay District	2014	DOG	Greyhound	9	5	4	5	4	0	0	0	0	0	0	0	0	0	0	0
Central Hawke's Bay District	2014	DOG	Heading	665	327	338	28	8	0	0	0	0	0	0	0	0	0	0	0
Central Hawke's Bay District	2014	DOG	Huntaway	829	362	467	42	11	0	0	0	0	0	0	0	0	0	0	0
Central Hawke's Bay District	2014	DOG	Maltese	8	2	6	2	4	0	0	0	0	0	0	0	0	0	0	0
Central Hawke's Bay District	2014	DOG	Poodle, Miniature	9	4	5	6	3	0	0	0	0	0	0	0	0	0	0	0
Central Hawke's Bay District	2014	DOG	Poodle, Toy	12	6	6	6	1	0	0	0	0	0	0	0	0	0	0	0
Central Hawke's Bay District	2014	DOG	Retriever, Golden	24	13	11	5	8	0	0	0	0	0	0	0	0	0	0	0
Central Hawke's Bay District	2014	DOG	Retriever, Labrador	414	195	219	121	108	0	0	0	0	0	0	0	0	0	0	0
Central Hawke's Bay District	2014	DOG	Rottweiler	44	24	20	16	20	2	0	0	0	0	0	0	0	0	0	0
Central Hawke's Bay District	2014	DOG	Schnauzer, Miniature	15	10	5	3	10	0	0	0	0	0	0	0	0	0	0	0
Central Hawke's Bay District	2014	DOG	Shepherd, German	55	37	18	26	24	0	0	0	0	0	0	0	0	0	0	0
Central Hawke's Bay District	2014	DOG	Shih Tzu	7	3	4	5	4	0	0	0	0	0	0	0	0	0	0	0
Central Hawke's Bay District	2014	DOG	Spaniel, Cavalier King Charles	10	4	6	4	3	0	0	0	0	0	0	0	0	0	0	0
Central Hawke's Bay District	2014	DOG	Spaniel, Cocker	18	11	7	5	7	0	0	0	0	0	0	0	0	0	0	0
Central Hawke's Bay District	2014	DOG	Spaniel, English Springer	23	12	11	6	5	0	0	0	0	0	0	0	0	0	0	0
Central Hawke's Bay District	2014	DOG	Terrier, American Pit Bull	12	6	6	5	9	10	0	0	0	0	0	0	0	0	0	0
Central Hawke's Bay District	2014	DOG	Terrier, Fox (Smooth)	252	147	105	83	44	0	0	0	0	0	0	0	0	0	0	0
Central Hawke's Bay District	2014	DOG	Terrier, Jack Russell	245	132	113	78	67	0	0	0	0	0	0	0	0	0	0	0
Central Hawke's Bay District	2014	DOG	Terrier, Staffordshire Bull	26	13	13	7	14	0	0	0	0	0	0	0	0	0	0	0
Central Hawke's Bay District	2014	DOG	Terrier, West Highland White	13	5	8	4	3	0	0	0	0	0	0	0	0	0	0	0
Central Hawke's Bay District	2014	DOG	_Unidentified_	454	257	197	170	160	1	0	0	0	0	0	0	0	0	0	0
Central Hawke's Bay District	2014	OWN	_	0	0	0	0	0	0	0	0	0	2251	37	0	0	0	0	0
Central Hawke's Bay District	2014	JST	_	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Central Hawke's Bay District	2014	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	62	18948	19936
Central Hawke's Bay District	2015	DOG	_ALL-PURE_	4362	2125	2237	745	671	16	0	0	0	0	0	0	0	0	0	0
Central Hawke's Bay District	2015	DOG	_ALL-CROSS_	747	415	332	387	309	8	0	0	0	0	0	0	0	0	0	0
Central Hawke's Bay District	2015	DOG	_ALL-DOGS_	5109	2540	2569	1132	980	24	0	0	0	0	0	0	0	0	0	0
Central Hawke's Bay District	2015	DOG	Beagle	14	6	8	4	7	0	0	0	0	0	0	0	0	0	0	0
Central Hawke's Bay District	2015	DOG	Bichon Frise	10	6	4	6	5	0	0	0	0	0	0	0	0	0	0	0
Central Hawke's Bay District	2015	DOG	Boxer	26	12	14	14	13	0	0	0	0	0	0	0	0	0	0	0
Central Hawke's Bay District	2015	DOG	Cattle, Australian	49	30	19	13	10	1	0	0	0	0	0	0	0	0	0	0
Central Hawke's Bay District	2015	DOG	Chihuahua, Long Coat	8	3	5	2	5	0	0	0	0	0	0	0	0	0	0	0
Central Hawke's Bay District	2015	DOG	Chihuahua, Smooth Coat	26	14	12	9	7	0	0	0	0	0	0	0	0	0	0	0
Central Hawke's Bay District	2015	DOG	Collie, Bearded	48	13	35	0	2	0	0	0	0	0	0	0	0	0	0	0
Central Hawke's Bay District	2015	DOG	Collie, Border	84	35	49	17	19	0	0	0	0	0	0	0	0	0	0	0
Central Hawke's Bay District	2015	DOG	Collie, Rough	20	7	13	1	3	0	0	0	0	0	0	0	0	0	0	0
Central Hawke's Bay District	2015	DOG	Collie, Smooth	884	399	485	29	2	0	0	0	0	0	0	0	0	0	0	0
Central Hawke's Bay District	2015	DOG	Greyhound	8	4	4	5	5	0	0	0	0	0	0	0	0	0	0	0
Central Hawke's Bay District	2015	DOG	Heading	692	342	350	29	9	0	0	0	0	0	0	0	0	0	0	0
Central Hawke's Bay District	2015	DOG	Huntaway	875	376	499	43	12	0	0	0	0	0	0	0	0	0	0	0
Central Hawke's Bay District	2015	DOG	Maltese	12	5	7	3	6	0	0	0	0	0	0	0	0	0	0	0
Central Hawke's Bay District	2015	DOG	Poodle, Miniature	7	2	5	5	3	0	0	0	0	0	0	0	0	0	0	0
Central Hawke's Bay District	2015	DOG	Poodle, Toy	13	6	7	7	1	0	0	0	0	0	0	0	0	0	0	0
Central Hawke's Bay District	2015	DOG	Retriever, Golden	28	15	13	9	10	0	0	0	0	0	0	0	0	0	0	0
Central Hawke's Bay District	2015	DOG	Retriever, Labrador	412	201	211	125	126	0	0	0	0	0	0	0	0	0	0	0
Central Hawke's Bay District	2015	DOG	Rottweiler	43	22	21	13	22	2	0	0	0	0	0	0	0	0	0	0
Central Hawke's Bay District	2015	DOG	Schnauzer, Miniature	14	11	3	3	9	0	0	0	0	0	0	0	0	0	0	0
Central Hawke's Bay District	2015	DOG	Shepherd, German	56	36	20	25	30	1	0	0	0	0	0	0	0	0	0	0
Central Hawke's Bay District	2015	DOG	Shih Tzu	13	9	4	9	5	0	0	0	0	0	0	0	0	0	0	0
Central Hawke's Bay District	2015	DOG	Spaniel, Cavalier King Charles	7	2	5	2	2	0	0	0	0	0	0	0	0	0	0	0
Central Hawke's Bay District	2015	DOG	Spaniel, Cocker	19	12	7	7	11	0	0	0	0	0	0	0	0	0	0	0
Central Hawke's Bay District	2015	DOG	Spaniel, English Springer	21	10	11	5	7	0	0	0	0	0	0	0	0	0	0	0
Central Hawke's Bay District	2015	DOG	Terrier, American Pit Bull	10	4	6	4	7	8	0	0	0	0	0	0	0	0	0	0
Central Hawke's Bay District	2015	DOG	Terrier, Fox (Smooth)	222	125	97	80	46	0	0	0	0	0	0	0	0	0	0	0
Central Hawke's Bay District	2015	DOG	Terrier, Jack Russell	229	126	103	81	70	0	0	0	0	0	0	0	0	0	0	0
Central Hawke's Bay District	2015	DOG	Terrier, Staffordshire Bull	24	11	13	7	14	0	0	0	0	0	0	0	0	0	0	0
Central Hawke's Bay District	2015	DOG	Terrier, West Highland White	13	5	8	4	3	0	0	0	0	0	0	0	0	0	0	0
Central Hawke's Bay District	2015	DOG	_Unidentified_	475	276	199	184	200	4	0	0	0	0	0	0	0	0	0	0
Central Hawke's Bay District	2015	OWN	_	0	0	0	0	0	0	0	0	0	2271	26	0	0	0	0	0
Central Hawke's Bay District	2015	JST	_	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Central Hawke's Bay District	2015	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	45	7089	9699
Central Hawke's Bay District	2016	DOG	_ALL-PURE_	4264	2078	2186	744	765	15	0	0	0	0	0	0	0	0	0	0
Central Hawke's Bay District	2016	DOG	_ALL-CROSS_	780	425	355	415	365	8	0	0	0	0	0	0	0	0	0	0
Central Hawke's Bay District	2016	DOG	_ALL-DOGS_	5044	2503	2541	1159	1130	23	0	0	0	0	0	0	0	0	0	0
Central Hawke's Bay District	2016	DOG	Beagle	12	5	7	4	7	0	0	0	0	0	0	0	0	0	0	0
Central Hawke's Bay District	2016	DOG	Bichon Frise	10	6	4	6	5	0	0	0	0	0	0	0	0	0	0	0
Central Hawke's Bay District	2016	DOG	Boxer	21	9	12	13	12	0	0	0	0	0	0	0	0	0	0	0
Central Hawke's Bay District	2016	DOG	Cattle, Australian	37	17	20	12	12	1	0	0	0	0	0	0	0	0	0	0
Central Hawke's Bay District	2016	DOG	Chihuahua, Long Coat	7	3	4	1	4	0	0	0	0	0	0	0	0	0	0	0
Central Hawke's Bay District	2016	DOG	Chihuahua, Smooth Coat	25	14	11	9	7	0	0	0	0	0	0	0	0	0	0	0
Central Hawke's Bay District	2016	DOG	Collie, Bearded	45	12	33	0	2	0	0	0	0	0	0	0	0	0	0	0
Central Hawke's Bay District	2016	DOG	Collie, Border	80	37	43	19	21	0	0	0	0	0	0	0	0	0	0	0
Central Hawke's Bay District	2016	DOG	Collie, Rough	20	6	14	2	3	0	0	0	0	0	0	0	0	0	0	0
Central Hawke's Bay District	2016	DOG	Collie, Smooth	809	374	435	25	4	0	0	0	0	0	0	0	0	0	0	0
Central Hawke's Bay District	2016	DOG	Greyhound	7	3	4	5	4	0	0	0	0	0	0	0	0	0	0	0
Central Hawke's Bay District	2016	DOG	Heading	718	351	367	30	12	0	0	0	0	0	0	0	0	0	0	0
Central Hawke's Bay District	2016	DOG	Huntaway	901	378	523	45	13	0	0	0	0	0	0	0	0	0	0	0
Central Hawke's Bay District	2016	DOG	Maltese	12	4	8	6	8	0	0	0	0	0	0	0	0	0	0	0
Central Hawke's Bay District	2016	DOG	Poodle, Miniature	7	3	4	4	2	0	0	0	0	0	0	0	0	0	0	0
Central Hawke's Bay District	2016	DOG	Poodle, Toy	16	7	9	9	5	0	0	0	0	0	0	0	0	0	0	0
Central Hawke's Bay District	2016	DOG	Retriever, Golden	34	20	14	15	17	0	0	0	0	0	0	0	0	0	0	0
Central Hawke's Bay District	2016	DOG	Retriever, Labrador	378	186	192	119	137	0	0	0	0	0	0	0	0	0	0	0
Central Hawke's Bay District	2016	DOG	Rottweiler	42	25	17	14	21	1	0	0	0	0	0	0	0	0	0	0
Central Hawke's Bay District	2016	DOG	Schnauzer, Miniature	15	12	3	4	10	0	0	0	0	0	0	0	0	0	0	0
Central Hawke's Bay District	2016	DOG	Shepherd, German	56	37	19	23	31	3	0	0	0	0	0	0	0	0	0	0
Central Hawke's Bay District	2016	DOG	Shih Tzu	13	9	4	9	7	0	0	0	0	0	0	0	0	0	0	0
Central Hawke's Bay District	2016	DOG	Spaniel, Cavalier King Charles	5	2	3	0	1	0	0	0	0	0	0	0	0	0	0	0
Central Hawke's Bay District	2016	DOG	Spaniel, Cocker	21	10	11	8	12	0	0	0	0	0	0	0	0	0	0	0
Central Hawke's Bay District	2016	DOG	Spaniel, English Springer	19	10	9	4	10	0	0	0	0	0	0	0	0	0	0	0
Central Hawke's Bay District	2016	DOG	Terrier, American Pit Bull	9	4	5	5	6	7	0	0	0	0	0	0	0	0	0	0
Central Hawke's Bay District	2016	DOG	Terrier, Fox (Smooth)	199	110	89	71	55	0	0	0	0	0	0	0	0	0	0	0
Central Hawke's Bay District	2016	DOG	Terrier, Jack Russell	223	122	101	81	83	0	0	0	0	0	0	0	0	0	0	0
Central Hawke's Bay District	2016	DOG	Terrier, Staffordshire Bull	35	16	19	11	23	0	0	0	0	0	0	0	0	0	0	0
Central Hawke's Bay District	2016	DOG	Terrier, West Highland White	11	5	6	3	2	0	0	0	0	0	0	0	0	0	0	0
Central Hawke's Bay District	2016	DOG	_Unidentified_	477	281	196	187	229	3	0	0	0	0	0	0	0	0	0	0
Central Hawke's Bay District	2016	OWN	_	0	0	0	0	0	0	0	0	0	2262	25	0	0	0	0	0
Central Otago District	2001	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	27	3338	0
Central Otago District	2002	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	23	3942	0
Central Otago District	2003	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	14	10417	0
Central Otago District	2004	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	25	3812	0
Central Otago District	2005	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	40	4480	0
Central Otago District	2006	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	38	7353	5642
Central Otago District	2007	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	47	5892	7647
Central Otago District	2008	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	60	8312	6243
Central Otago District	2009	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	48	20355	11604
Central Otago District	2010	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	64	14383	19340
Central Otago District	2011	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	69	16413	20733
Central Otago District	2012	JST	_	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Central Otago District	2012	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	66	24132	16113
Central Otago District	2013	DOG	_ALL-PURE_	4631	2172	2459	1	1177	0	0	0	0	0	0	0	0	0	0	0
Central Otago District	2013	DOG	_ALL-CROSS_	941	464	477	0	580	0	3	0	0	0	0	0	0	0	0	0
Central Otago District	2013	DOG	_ALL-DOGS_	5572	2636	2936	1	1757	0	3	0	0	0	0	0	0	0	0	0
Central Otago District	2013	DOG	Beagle	12	6	6	0	8	0	0	0	0	0	0	0	0	0	0	0
Central Otago District	2013	DOG	Bichon Frise	68	31	37	0	37	0	0	0	0	0	0	0	0	0	0	0
Central Otago District	2013	DOG	Boxer	30	16	14	0	18	0	0	0	0	0	0	0	0	0	0	0
Central Otago District	2013	DOG	Cattle, Australian	11	8	3	0	1	0	0	0	0	0	0	0	0	0	0	0
Central Otago District	2013	DOG	Chihuahua, Long Coat	1	1	0	0	1	0	0	0	0	0	0	0	0	0	0	0
Central Otago District	2013	DOG	Chihuahua, Smooth Coat	28	13	15	0	13	0	0	0	0	0	0	0	0	0	0	0
Central Otago District	2013	DOG	Collie, Bearded	31	9	22	0	1	0	0	0	0	0	0	0	0	0	0	0
Central Otago District	2013	DOG	Collie, Border	1278	555	723	0	72	0	0	0	0	0	0	0	0	0	0	0
Central Otago District	2013	DOG	Collie, Rough	511	241	270	0	6	0	0	0	0	0	0	0	0	0	0	0
Central Otago District	2013	DOG	Collie, Smooth	15	6	9	0	1	0	0	0	0	0	0	0	0	0	0	0
Central Otago District	2013	DOG	Greyhound	7	2	5	0	3	0	0	0	0	0	0	0	0	0	0	0
Central Otago District	2013	DOG	Heading	217	99	118	0	13	0	0	0	0	0	0	0	0	0	0	0
Central Otago District	2013	DOG	Huntaway	404	177	227	0	18	0	0	0	0	0	0	0	0	0	0	0
Central Otago District	2013	DOG	Maltese	25	10	15	0	17	0	0	0	0	0	0	0	0	0	0	0
Central Otago District	2013	DOG	Poodle, Miniature	21	14	7	0	7	0	0	0	0	0	0	0	0	0	0	0
Central Otago District	2013	DOG	Poodle, Toy	25	12	13	0	8	0	0	0	0	0	0	0	0	0	0	0
Central Otago District	2013	DOG	Retriever, Golden	87	43	44	0	53	0	0	0	0	0	0	0	0	0	0	0
Central Otago District	2013	DOG	Retriever, Labrador	457	219	238	0	233	0	0	0	0	0	0	0	0	0	0	0
Central Otago District	2013	DOG	Rottweiler	24	7	17	0	13	0	0	0	0	0	0	0	0	0	0	0
Central Otago District	2013	DOG	Schnauzer, Miniature	29	17	12	0	27	0	0	0	0	0	0	0	0	0	0	0
Central Otago District	2013	DOG	Shepherd, German	42	17	25	0	26	0	0	0	0	0	0	0	0	0	0	0
Central Otago District	2013	DOG	Shih Tzu	17	9	8	0	12	0	0	0	0	0	0	0	0	0	0	0
Central Otago District	2013	DOG	Spaniel, Cavalier King Charles	25	15	10	0	14	0	0	0	0	0	0	0	0	0	0	0
Central Otago District	2013	DOG	Spaniel, Cocker	41	21	20	0	23	0	0	0	0	0	0	0	0	0	0	0
Central Otago District	2013	DOG	Spaniel, English Springer	79	38	41	0	41	0	0	0	0	0	0	0	0	0	0	0
Central Otago District	2013	DOG	Terrier, American Pit Bull	2	1	1	0	2	0	0	0	0	0	0	0	0	0	0	0
Central Otago District	2013	DOG	Terrier, Fox (Smooth)	134	73	61	1	45	0	0	0	0	0	0	0	0	0	0	0
Central Otago District	2013	DOG	Terrier, Jack Russell	343	170	173	0	128	0	0	0	0	0	0	0	0	0	0	0
Central Otago District	2013	DOG	Terrier, Staffordshire Bull	63	36	27	0	40	0	0	0	0	0	0	0	0	0	0	0
Central Otago District	2013	DOG	Terrier, West Highland White	30	19	11	0	17	0	0	0	0	0	0	0	0	0	0	0
Central Otago District	2013	DOG	_Unidentified_	574	287	287	0	279	0	0	0	0	0	0	0	0	0	0	0
Central Otago District	2013	OWN	_	0	0	0	0	0	0	0	0	0	2880	32	0	0	0	0	0
Central Otago District	2013	JST	_	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Central Otago District	2013	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	66	19573	22293
Central Otago District	2014	DOG	_ALL-PURE_	4658	2165	2493	1	1283	0	0	0	0	0	0	0	0	0	0	0
Central Otago District	2014	DOG	_ALL-CROSS_	1020	482	538	0	672	0	2	0	0	0	0	0	0	0	0	0
Central Otago District	2014	DOG	_ALL-DOGS_	5678	2647	3031	1	1955	0	2	0	0	0	0	0	0	0	0	0
Central Otago District	2014	DOG	Beagle	11	5	6	0	7	0	0	0	0	0	0	0	0	0	0	0
Central Otago District	2014	DOG	Bichon Frise	69	29	40	0	40	0	0	0	0	0	0	0	0	0	0	0
Central Otago District	2014	DOG	Boxer	28	14	14	0	20	0	0	0	0	0	0	0	0	0	0	0
Central Otago District	2014	DOG	Cattle, Australian	9	7	2	0	0	0	0	0	0	0	0	0	0	0	0	0
Central Otago District	2014	DOG	Chihuahua, Long Coat	1	1	0	0	1	0	0	0	0	0	0	0	0	0	0	0
Central Otago District	2014	DOG	Chihuahua, Smooth Coat	31	15	16	0	17	0	0	0	0	0	0	0	0	0	0	0
Central Otago District	2014	DOG	Collie, Bearded	42	14	28	0	3	0	0	0	0	0	0	0	0	0	0	0
Central Otago District	2014	DOG	Collie, Border	1342	597	745	0	72	0	0	0	0	0	0	0	0	0	0	0
Central Otago District	2014	DOG	Collie, Rough	409	190	219	0	6	0	0	0	0	0	0	0	0	0	0	0
Central Otago District	2014	DOG	Collie, Smooth	15	4	11	0	2	0	0	0	0	0	0	0	0	0	0	0
Central Otago District	2014	DOG	Greyhound	6	1	5	0	2	0	0	0	0	0	0	0	0	0	0	0
Central Otago District	2014	DOG	Heading	248	110	138	0	10	0	0	0	0	0	0	0	0	0	0	0
Central Otago District	2014	DOG	Huntaway	441	181	260	0	18	0	0	0	0	0	0	0	0	0	0	0
Central Otago District	2014	DOG	Maltese	25	11	14	0	17	0	0	0	0	0	0	0	0	0	0	0
Central Otago District	2014	DOG	Poodle, Miniature	20	14	6	0	8	0	0	0	0	0	0	0	0	0	0	0
Central Otago District	2014	DOG	Poodle, Toy	21	9	12	0	8	0	0	0	0	0	0	0	0	0	0	0
Central Otago District	2014	DOG	Retriever, Golden	81	38	43	0	54	0	0	0	0	0	0	0	0	0	0	0
Central Otago District	2014	DOG	Retriever, Labrador	443	212	231	0	242	0	0	0	0	0	0	0	0	0	0	0
Central Otago District	2014	DOG	Rottweiler	26	10	16	0	17	0	0	0	0	0	0	0	0	0	0	0
Central Otago District	2014	DOG	Schnauzer, Miniature	32	17	15	0	30	0	0	0	0	0	0	0	0	0	0	0
Central Otago District	2014	DOG	Shepherd, German	43	17	26	0	30	0	0	0	0	0	0	0	0	0	0	0
Central Otago District	2014	DOG	Shih Tzu	15	8	7	0	12	0	0	0	0	0	0	0	0	0	0	0
Central Otago District	2014	DOG	Spaniel, Cavalier King Charles	24	15	9	0	14	0	0	0	0	0	0	0	0	0	0	0
Central Otago District	2014	DOG	Spaniel, Cocker	43	22	21	0	28	0	0	0	0	0	0	0	0	0	0	0
Central Otago District	2014	DOG	Spaniel, English Springer	78	35	43	0	43	0	0	0	0	0	0	0	0	0	0	0
Central Otago District	2014	DOG	Terrier, American Pit Bull	3	1	2	0	3	0	0	0	0	0	0	0	0	0	0	0
Central Otago District	2014	DOG	Terrier, Fox (Smooth)	126	65	61	1	49	0	0	0	0	0	0	0	0	0	0	0
Central Otago District	2014	DOG	Terrier, Jack Russell	327	172	155	0	136	0	0	0	0	0	0	0	0	0	0	0
Central Otago District	2014	DOG	Terrier, Staffordshire Bull	74	40	34	0	49	0	0	0	0	0	0	0	0	0	0	0
Central Otago District	2014	DOG	Terrier, West Highland White	30	14	16	0	20	0	0	0	0	0	0	0	0	0	0	0
Central Otago District	2014	DOG	_Unidentified_	595	297	298	0	325	0	0	0	0	0	0	0	0	0	0	0
Central Otago District	2014	OWN	_	0	0	0	0	0	0	0	0	0	2925	43	0	0	0	0	0
Central Otago District	2014	JST	_	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Central Otago District	2014	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	83	40203	42992
Central Otago District	2015	DOG	_ALL-PURE_	4666	2173	2493	1	1396	0	0	0	0	0	0	0	0	0	0	0
Central Otago District	2015	DOG	_ALL-CROSS_	1116	526	590	0	757	0	2	0	0	0	0	0	0	0	0	0
Central Otago District	2015	DOG	_ALL-DOGS_	5782	2699	3083	1	2153	0	2	0	0	0	0	0	0	0	0	0
Central Otago District	2015	DOG	Beagle	14	5	9	0	10	0	0	0	0	0	0	0	0	0	0	0
Central Otago District	2015	DOG	Bichon Frise	71	31	40	0	43	0	0	0	0	0	0	0	0	0	0	0
Central Otago District	2015	DOG	Boxer	28	11	17	0	19	0	0	0	0	0	0	0	0	0	0	0
Central Otago District	2015	DOG	Cattle, Australian	7	5	2	0	0	0	0	0	0	0	0	0	0	0	0	0
Central Otago District	2015	DOG	Chihuahua, Long Coat	1	1	0	0	1	0	0	0	0	0	0	0	0	0	0	0
Central Otago District	2015	DOG	Chihuahua, Smooth Coat	28	13	15	0	17	0	0	0	0	0	0	0	0	0	0	0
Central Otago District	2015	DOG	Collie, Bearded	37	16	21	0	3	0	0	0	0	0	0	0	0	0	0	0
Central Otago District	2015	DOG	Collie, Border	1340	613	727	0	76	0	0	0	0	0	0	0	0	0	0	0
Central Otago District	2015	DOG	Collie, Rough	311	148	163	0	6	0	0	0	0	0	0	0	0	0	0	0
Central Otago District	2015	DOG	Collie, Smooth	13	4	9	0	2	0	0	0	0	0	0	0	0	0	0	0
Central Otago District	2015	DOG	Greyhound	9	3	6	0	1	0	0	0	0	0	0	0	0	0	0	0
Central Otago District	2015	DOG	Heading	288	123	165	0	13	0	0	0	0	0	0	0	0	0	0	0
Central Otago District	2015	DOG	Huntaway	490	200	290	0	18	0	0	0	0	0	0	0	0	0	0	0
Central Otago District	2015	DOG	Maltese	26	11	15	0	18	0	0	0	0	0	0	0	0	0	0	0
Central Otago District	2015	DOG	Poodle, Miniature	17	10	7	0	9	0	0	0	0	0	0	0	0	0	0	0
Central Otago District	2015	DOG	Poodle, Toy	25	12	13	0	14	0	0	0	0	0	0	0	0	0	0	0
Central Otago District	2015	DOG	Retriever, Golden	80	37	43	0	55	0	0	0	0	0	0	0	0	0	0	0
Central Otago District	2015	DOG	Retriever, Labrador	427	209	218	0	247	0	0	0	0	0	0	0	0	0	0	0
Central Otago District	2015	DOG	Rottweiler	30	9	21	0	26	0	0	0	0	0	0	0	0	0	0	0
Central Otago District	2015	DOG	Schnauzer, Miniature	35	18	17	0	31	0	0	0	0	0	0	0	0	0	0	0
Central Otago District	2015	DOG	Shepherd, German	47	17	30	0	37	0	0	0	0	0	0	0	0	0	0	0
Central Otago District	2015	DOG	Shih Tzu	16	8	8	0	12	0	0	0	0	0	0	0	0	0	0	0
Central Otago District	2015	DOG	Spaniel, Cavalier King Charles	25	14	11	0	16	0	0	0	0	0	0	0	0	0	0	0
Central Otago District	2015	DOG	Spaniel, Cocker	44	21	23	0	29	0	0	0	0	0	0	0	0	0	0	0
Central Otago District	2015	DOG	Spaniel, English Springer	80	35	45	0	48	0	0	0	0	0	0	0	0	0	0	0
Central Otago District	2015	DOG	Terrier, American Pit Bull	3	1	2	0	3	0	0	0	0	0	0	0	0	0	0	0
Central Otago District	2015	DOG	Terrier, Fox (Smooth)	112	55	57	1	49	0	0	0	0	0	0	0	0	0	0	0
Central Otago District	2015	DOG	Terrier, Jack Russell	316	164	152	0	143	0	0	0	0	0	0	0	0	0	0	0
Central Otago District	2015	DOG	Terrier, Staffordshire Bull	78	41	37	0	54	0	0	0	0	0	0	0	0	0	0	0
Central Otago District	2015	DOG	Terrier, West Highland White	33	15	18	0	24	0	0	0	0	0	0	0	0	0	0	0
Central Otago District	2015	DOG	_Unidentified_	635	323	312	0	372	0	0	0	0	0	0	0	0	0	0	0
Central Otago District	2015	OWN	_	0	0	0	0	0	0	0	0	0	2955	46	0	0	0	0	0
Central Otago District	2015	JST	_	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Central Otago District	2015	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	81	15797	20315
Central Otago District	2016	DOG	_ALL-PURE_	4403	2079	2324	493	1365	1	0	0	0	0	0	0	0	0	0	0
Central Otago District	2016	DOG	_ALL-CROSS_	1119	557	562	280	751	4	2	0	0	0	0	0	0	0	0	0
Central Otago District	2016	DOG	_ALL-DOGS_	5522	2636	2886	773	2116	5	2	0	0	0	0	0	0	0	0	0
Central Otago District	2016	DOG	Beagle	10	4	6	4	9	0	0	0	0	0	0	0	0	0	0	0
Central Otago District	2016	DOG	Bichon Frise	67	27	40	17	44	0	0	0	0	0	0	0	0	0	0	0
Central Otago District	2016	DOG	Boxer	27	13	14	1	21	0	0	0	0	0	0	0	0	0	0	0
Central Otago District	2016	DOG	Cattle, Australian	10	5	5	3	0	0	0	0	0	0	0	0	0	0	0	0
Central Otago District	2016	DOG	Chihuahua, Long Coat	4	4	0	2	2	0	0	0	0	0	0	0	0	0	0	0
Central Otago District	2016	DOG	Chihuahua, Smooth Coat	25	12	13	3	12	0	0	0	0	0	0	0	0	0	0	0
Central Otago District	2016	DOG	Collie, Bearded	33	14	19	1	2	0	0	0	0	0	0	0	0	0	0	0
Central Otago District	2016	DOG	Collie, Border	1206	557	649	41	77	0	0	0	0	0	0	0	0	0	0	0
Central Otago District	2016	DOG	Collie, Rough	226	110	116	5	7	0	0	0	0	0	0	0	0	0	0	0
Central Otago District	2016	DOG	Collie, Smooth	9	3	6	1	1	0	0	0	0	0	0	0	0	0	0	0
Central Otago District	2016	DOG	Greyhound	7	5	2	2	2	0	0	0	0	0	0	0	0	0	0	0
Central Otago District	2016	DOG	Heading	308	132	176	9	7	0	0	0	0	0	0	0	0	0	0	0
Central Otago District	2016	DOG	Huntaway	493	202	291	16	18	0	0	0	0	0	0	0	0	0	0	0
Central Otago District	2016	DOG	Maltese	22	7	15	4	15	0	0	0	0	0	0	0	0	0	0	0
Central Otago District	2016	DOG	Poodle, Miniature	20	12	8	5	10	0	0	0	0	0	0	0	0	0	0	0
Central Otago District	2016	DOG	Poodle, Toy	27	14	13	4	15	0	0	0	0	0	0	0	0	0	0	0
Central Otago District	2016	DOG	Retriever, Golden	71	38	33	14	47	0	0	0	0	0	0	0	0	0	0	0
Central Otago District	2016	DOG	Retriever, Labrador	439	218	221	79	264	0	0	0	0	0	0	0	0	0	0	0
Central Otago District	2016	DOG	Rottweiler	22	6	16	5	20	0	0	0	0	0	0	0	0	0	0	0
Central Otago District	2016	DOG	Schnauzer, Miniature	40	22	18	10	33	0	0	0	0	0	0	0	0	0	0	0
Central Otago District	2016	DOG	Shepherd, German	45	20	25	10	40	0	0	0	0	0	0	0	0	0	0	0
Central Otago District	2016	DOG	Shih Tzu	20	9	11	6	12	0	0	0	0	0	0	0	0	0	0	0
Central Otago District	2016	DOG	Spaniel, Cavalier King Charles	20	12	8	2	14	0	0	0	0	0	0	0	0	0	0	0
Central Otago District	2016	DOG	Spaniel, Cocker	47	23	24	10	31	0	0	0	0	0	0	0	0	0	0	0
Central Otago District	2016	DOG	Spaniel, English Springer	85	37	48	16	51	0	0	0	0	0	0	0	0	0	0	0
Central Otago District	2016	DOG	Terrier, American Pit Bull	2	1	1	0	2	0	0	0	0	0	0	0	0	0	0	0
Central Otago District	2016	DOG	Terrier, Fox (Smooth)	104	51	53	16	48	0	0	0	0	0	0	0	0	0	0	0
Central Otago District	2016	DOG	Terrier, Jack Russell	281	150	131	47	130	0	0	0	0	0	0	0	0	0	0	0
Central Otago District	2016	DOG	Terrier, Staffordshire Bull	74	38	36	18	48	0	0	0	0	0	0	0	0	0	0	0
Central Otago District	2016	DOG	Terrier, West Highland White	33	16	17	17	23	0	0	0	0	0	0	0	0	0	0	0
Central Otago District	2016	DOG	_Unidentified_	626	317	309	125	360	1	0	0	0	0	0	0	0	0	0	0
Central Otago District	2016	OWN	_	0	0	0	0	0	0	0	0	0	2903	37	0	0	0	0	0
Chatham Islands	2001	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	0	43	0
Chatham Islands	2002	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	4	220	0
Chatham Islands	2005	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	0	45	0
Chatham Islands	2006	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	0	467	467
Chatham Islands	2009	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Chatham Islands	2010	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	4	390	390
Chatham Islands	2011	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	0	14	14
Chatham Islands	2012	JST	_	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Chatham Islands	2012	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	0	14	0
Chatham Islands	2013	DOG	_ALL-PURE_	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Chatham Islands	2013	DOG	_ALL-CROSS_	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Chatham Islands	2013	DOG	_ALL-DOGS_	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Chatham Islands	2013	DOG	Beagle	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Chatham Islands	2013	DOG	Bichon Frise	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Chatham Islands	2013	DOG	Boxer	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Chatham Islands	2013	DOG	Cattle, Australian	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Chatham Islands	2013	DOG	Chihuahua, Long Coat	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Chatham Islands	2013	DOG	Chihuahua, Smooth Coat	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Chatham Islands	2013	DOG	Collie, Bearded	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Chatham Islands	2013	DOG	Collie, Border	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Chatham Islands	2013	DOG	Collie, Rough	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Chatham Islands	2013	DOG	Collie, Smooth	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Chatham Islands	2013	DOG	Greyhound	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Chatham Islands	2013	DOG	Heading	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Chatham Islands	2013	DOG	Huntaway	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Chatham Islands	2013	DOG	Maltese	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Chatham Islands	2013	DOG	Poodle, Miniature	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Chatham Islands	2013	DOG	Poodle, Toy	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Chatham Islands	2013	DOG	Retriever, Golden	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Chatham Islands	2013	DOG	Retriever, Labrador	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Chatham Islands	2013	DOG	Rottweiler	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Chatham Islands	2013	DOG	Schnauzer, Miniature	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Chatham Islands	2013	DOG	Shepherd, German	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Chatham Islands	2013	DOG	Shih Tzu	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Chatham Islands	2013	DOG	Spaniel, Cavalier King Charles	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Chatham Islands	2013	DOG	Spaniel, Cocker	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Chatham Islands	2013	DOG	Spaniel, English Springer	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Chatham Islands	2013	DOG	Terrier, American Pit Bull	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Chatham Islands	2013	DOG	Terrier, Fox (Smooth)	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Chatham Islands	2013	DOG	Terrier, Jack Russell	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Chatham Islands	2013	DOG	Terrier, Staffordshire Bull	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Chatham Islands	2013	DOG	Terrier, West Highland White	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Chatham Islands	2013	DOG	_Unidentified_	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Chatham Islands	2013	OWN	_	0	0	0	0	0	0	0	0	0	0	2	0	0	0	0	0
Chatham Islands	2013	JST	_	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Chatham Islands	2013	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	0	75	89
Chatham Islands	2014	DOG	_ALL-PURE_	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Chatham Islands	2014	DOG	_ALL-CROSS_	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Chatham Islands	2014	DOG	_ALL-DOGS_	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Chatham Islands	2014	DOG	Beagle	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Chatham Islands	2014	DOG	Bichon Frise	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Chatham Islands	2014	DOG	Boxer	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Chatham Islands	2014	DOG	Cattle, Australian	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Chatham Islands	2014	DOG	Chihuahua, Long Coat	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Chatham Islands	2014	DOG	Chihuahua, Smooth Coat	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Chatham Islands	2014	DOG	Collie, Bearded	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Chatham Islands	2014	DOG	Collie, Border	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Chatham Islands	2014	DOG	Collie, Rough	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Chatham Islands	2014	DOG	Collie, Smooth	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Chatham Islands	2014	DOG	Greyhound	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Chatham Islands	2014	DOG	Heading	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Chatham Islands	2014	DOG	Huntaway	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Chatham Islands	2014	DOG	Maltese	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Chatham Islands	2014	DOG	Poodle, Miniature	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Chatham Islands	2014	DOG	Poodle, Toy	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Chatham Islands	2014	DOG	Retriever, Golden	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Chatham Islands	2014	DOG	Retriever, Labrador	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Chatham Islands	2014	DOG	Rottweiler	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Chatham Islands	2014	DOG	Schnauzer, Miniature	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Chatham Islands	2014	DOG	Shepherd, German	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Chatham Islands	2014	DOG	Shih Tzu	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Chatham Islands	2014	DOG	Spaniel, Cavalier King Charles	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Chatham Islands	2014	DOG	Spaniel, Cocker	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Chatham Islands	2014	DOG	Spaniel, English Springer	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Chatham Islands	2014	DOG	Terrier, American Pit Bull	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Chatham Islands	2014	DOG	Terrier, Fox (Smooth)	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Chatham Islands	2014	DOG	Terrier, Jack Russell	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Chatham Islands	2014	DOG	Terrier, Staffordshire Bull	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Chatham Islands	2014	DOG	Terrier, West Highland White	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Chatham Islands	2014	DOG	_Unidentified_	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Chatham Islands	2014	OWN	_	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Chatham Islands	2014	JST	_	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Chatham Islands	2014	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	3	79	65
Chatham Islands	2015	DOG	_ALL-PURE_	279	104	175	2	1	0	0	0	0	0	0	0	0	0	0	0
Chatham Islands	2015	DOG	_ALL-CROSS_	141	52	89	2	4	0	0	0	0	0	0	0	0	0	0	0
Chatham Islands	2015	DOG	_ALL-DOGS_	420	156	264	4	5	0	0	0	0	0	0	0	0	0	0	0
Chatham Islands	2015	DOG	Beagle	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Chatham Islands	2015	DOG	Bichon Frise	1	1	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Chatham Islands	2015	DOG	Boxer	1	1	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Chatham Islands	2015	DOG	Cattle, Australian	14	4	10	0	0	0	0	0	0	0	0	0	0	0	0	0
Chatham Islands	2015	DOG	Chihuahua, Long Coat	5	2	3	0	0	0	0	0	0	0	0	0	0	0	0	0
Chatham Islands	2015	DOG	Chihuahua, Smooth Coat	4	3	1	0	0	0	0	0	0	0	0	0	0	0	0	0
Chatham Islands	2015	DOG	Collie, Bearded	10	4	6	0	0	0	0	0	0	0	0	0	0	0	0	0
Chatham Islands	2015	DOG	Collie, Border	54	18	36	0	0	0	0	0	0	0	0	0	0	0	0	0
Chatham Islands	2015	DOG	Collie, Rough	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Chatham Islands	2015	DOG	Collie, Smooth	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Chatham Islands	2015	DOG	Greyhound	8	4	4	0	0	0	0	0	0	0	0	0	0	0	0	0
Chatham Islands	2015	DOG	Heading	28	8	20	0	0	0	0	0	0	0	0	0	0	0	0	0
Chatham Islands	2015	DOG	Huntaway	57	23	34	0	0	0	0	0	0	0	0	0	0	0	0	0
Chatham Islands	2015	DOG	Maltese	1	0	1	0	0	0	0	0	0	0	0	0	0	0	0	0
Chatham Islands	2015	DOG	Poodle, Miniature	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Chatham Islands	2015	DOG	Poodle, Toy	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Chatham Islands	2015	DOG	Retriever, Golden	1	0	1	0	0	0	0	0	0	0	0	0	0	0	0	0
Chatham Islands	2015	DOG	Retriever, Labrador	41	15	26	0	0	0	0	0	0	0	0	0	0	0	0	0
Chatham Islands	2015	DOG	Rottweiler	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Chatham Islands	2015	DOG	Schnauzer, Miniature	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Chatham Islands	2015	DOG	Shepherd, German	1	0	1	1	0	0	0	0	0	0	0	0	0	0	0	0
Chatham Islands	2015	DOG	Shih Tzu	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Chatham Islands	2015	DOG	Spaniel, Cavalier King Charles	1	0	1	0	1	0	0	0	0	0	0	0	0	0	0	0
Chatham Islands	2015	DOG	Spaniel, Cocker	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Chatham Islands	2015	DOG	Spaniel, English Springer	1	1	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Chatham Islands	2015	DOG	Terrier, American Pit Bull	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Chatham Islands	2015	DOG	Terrier, Fox (Smooth)	14	5	9	0	0	0	0	0	0	0	0	0	0	0	0	0
Chatham Islands	2015	DOG	Terrier, Jack Russell	2	1	1	0	0	0	0	0	0	0	0	0	0	0	0	0
Chatham Islands	2015	DOG	Terrier, Staffordshire Bull	3	3	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Chatham Islands	2015	DOG	Terrier, West Highland White	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Chatham Islands	2015	DOG	_Unidentified_	32	11	21	1	0	0	0	0	0	0	0	0	0	0	0	0
Chatham Islands	2015	OWN	_	0	0	0	0	0	0	0	0	0	155	1	0	0	0	0	0
Chatham Islands	2015	JST	_	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Chatham Islands	2015	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	14
Chatham Islands	2016	DOG	_ALL-PURE_	270	102	168	1	3	0	0	0	0	0	0	0	0	0	0	0
Chatham Islands	2016	DOG	_ALL-CROSS_	144	52	92	2	4	0	0	0	0	0	0	0	0	0	0	0
Chatham Islands	2016	DOG	_ALL-DOGS_	414	154	260	3	7	0	0	0	0	0	0	0	0	0	0	0
Chatham Islands	2016	DOG	Beagle	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Chatham Islands	2016	DOG	Bichon Frise	1	1	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Chatham Islands	2016	DOG	Boxer	1	1	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Chatham Islands	2016	DOG	Cattle, Australian	11	3	8	0	0	0	0	0	0	0	0	0	0	0	0	0
Chatham Islands	2016	DOG	Chihuahua, Long Coat	5	2	3	0	0	0	0	0	0	0	0	0	0	0	0	0
Chatham Islands	2016	DOG	Chihuahua, Smooth Coat	4	3	1	0	0	0	0	0	0	0	0	0	0	0	0	0
Chatham Islands	2016	DOG	Collie, Bearded	10	3	7	0	0	0	0	0	0	0	0	0	0	0	0	0
Chatham Islands	2016	DOG	Collie, Border	44	15	29	0	0	0	0	0	0	0	0	0	0	0	0	0
Chatham Islands	2016	DOG	Collie, Rough	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Chatham Islands	2016	DOG	Collie, Smooth	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Chatham Islands	2016	DOG	Greyhound	7	4	3	0	0	0	0	0	0	0	0	0	0	0	0	0
Chatham Islands	2016	DOG	Heading	35	11	24	0	0	0	0	0	0	0	0	0	0	0	0	0
Chatham Islands	2016	DOG	Huntaway	55	21	34	0	0	0	0	0	0	0	0	0	0	0	0	0
Chatham Islands	2016	DOG	Maltese	1	0	1	0	0	0	0	0	0	0	0	0	0	0	0	0
Chatham Islands	2016	DOG	Poodle, Miniature	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Chatham Islands	2016	DOG	Poodle, Toy	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Chatham Islands	2016	DOG	Retriever, Golden	1	0	1	0	0	0	0	0	0	0	0	0	0	0	0	0
Chatham Islands	2016	DOG	Retriever, Labrador	40	15	25	0	1	0	0	0	0	0	0	0	0	0	0	0
Chatham Islands	2016	DOG	Rottweiler	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Chatham Islands	2016	DOG	Schnauzer, Miniature	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Chatham Islands	2016	DOG	Shepherd, German	1	0	1	1	0	0	0	0	0	0	0	0	0	0	0	0
Chatham Islands	2016	DOG	Shih Tzu	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Chatham Islands	2016	DOG	Spaniel, Cavalier King Charles	1	0	1	0	1	0	0	0	0	0	0	0	0	0	0	0
Chatham Islands	2016	DOG	Spaniel, Cocker	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Chatham Islands	2016	DOG	Spaniel, English Springer	1	1	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Chatham Islands	2016	DOG	Terrier, American Pit Bull	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Chatham Islands	2016	DOG	Terrier, Fox (Smooth)	12	4	8	0	0	0	0	0	0	0	0	0	0	0	0	0
Chatham Islands	2016	DOG	Terrier, Jack Russell	6	4	2	0	0	0	0	0	0	0	0	0	0	0	0	0
Chatham Islands	2016	DOG	Terrier, Staffordshire Bull	3	2	1	0	0	0	0	0	0	0	0	0	0	0	0	0
Chatham Islands	2016	DOG	Terrier, West Highland White	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Chatham Islands	2016	DOG	_Unidentified_	31	12	19	0	1	0	0	0	0	0	0	0	0	0	0	0
Chatham Islands	2016	OWN	_	0	0	0	0	0	0	0	0	0	152	0	0	0	0	0	0
Christchurch City	2001	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	223	165652	0
Christchurch City	2002	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	265	143875	0
Christchurch City	2003	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	237	108757	0
Christchurch City	2004	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	434	94477	0
Christchurch City	2005	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	599	129385	0
Christchurch City	2006	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	730	205343	180477
Christchurch City	2007	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	915	245463	247637
Christchurch City	2008	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	855	291832	276674
Christchurch City	2009	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	1004	294355	397490
Christchurch City	2010	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	1065	298594	337550
Christchurch City	2011	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	1257	355725	326227
Christchurch City	2012	JST	_	0	0	0	0	0	0	0	0	0	0	0	13	4	0	0	0
Christchurch City	2012	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	1146	353307	332166
Christchurch City	2013	DOG	_ALL-PURE_	22335	10630	11705	13800	13519	206	33	0	0	0	0	0	0	0	0	0
Christchurch City	2013	DOG	_ALL-CROSS_	13381	6474	6907	8802	9120	195	23	0	0	0	0	0	0	0	0	0
Christchurch City	2013	DOG	_ALL-DOGS_	35716	17104	18612	22602	22639	401	56	0	0	0	0	0	0	0	0	0
Christchurch City	2013	DOG	Beagle	276	135	141	186	169	0	0	0	0	0	0	0	0	0	0	0
Christchurch City	2013	DOG	Bichon Frise	1407	669	738	922	879	1	0	0	0	0	0	0	0	0	0	0
Christchurch City	2013	DOG	Boxer	454	220	234	286	302	3	2	0	0	0	0	0	0	0	0	0
Christchurch City	2013	DOG	Cattle, Australian	113	62	51	74	54	4	0	0	0	0	0	0	0	0	0	0
Christchurch City	2013	DOG	Chihuahua, Long Coat	376	190	186	173	245	0	0	0	0	0	0	0	0	0	0	0
Christchurch City	2013	DOG	Chihuahua, Smooth Coat	115	60	55	60	72	0	0	0	0	0	0	0	0	0	0	0
Christchurch City	2013	DOG	Collie, Bearded	138	65	73	83	61	1	0	0	0	0	0	0	0	0	0	0
Christchurch City	2013	DOG	Collie, Border	1153	566	587	707	647	4	0	0	0	0	0	0	0	0	0	0
Christchurch City	2013	DOG	Collie, Rough	62	29	33	28	23	0	0	0	0	0	0	0	0	0	0	0
Christchurch City	2013	DOG	Collie, Smooth	58	33	25	6	2	0	0	0	0	0	0	0	0	0	0	0
Christchurch City	2013	DOG	Greyhound	151	68	83	101	93	2	0	0	0	0	0	0	0	0	0	0
Christchurch City	2013	DOG	Heading	100	52	48	13	6	0	0	0	0	0	0	0	0	0	0	0
Christchurch City	2013	DOG	Huntaway	380	167	213	136	121	0	0	0	0	0	0	0	0	0	0	0
Christchurch City	2013	DOG	Maltese	268	115	153	156	170	0	0	0	0	0	0	0	0	0	0	0
Christchurch City	2013	DOG	Poodle, Miniature	291	129	162	192	181	0	0	0	0	0	0	0	0	0	0	0
Christchurch City	2013	DOG	Poodle, Toy	333	152	181	228	185	0	0	0	0	0	0	0	0	0	0	0
Christchurch City	2013	DOG	Retriever, Golden	910	431	479	533	541	1	0	0	0	0	0	0	0	0	0	0
Christchurch City	2013	DOG	Retriever, Labrador	2584	1215	1369	1694	1616	4	2	0	0	0	0	0	0	0	0	0
Christchurch City	2013	DOG	Rottweiler	386	200	186	182	269	5	3	0	0	0	0	0	0	0	0	0
Christchurch City	2013	DOG	Schnauzer, Miniature	593	302	291	374	453	0	0	0	0	0	0	0	0	0	0	0
Christchurch City	2013	DOG	Shepherd, German	868	413	455	442	521	13	9	0	0	0	0	0	0	0	0	0
Christchurch City	2013	DOG	Shih Tzu	193	92	101	120	129	0	0	0	0	0	0	0	0	0	0	0
Christchurch City	2013	DOG	Spaniel, Cavalier King Charles	328	161	167	205	206	0	0	0	0	0	0	0	0	0	0	0
Christchurch City	2013	DOG	Spaniel, Cocker	694	358	336	474	447	0	0	0	0	0	0	0	0	0	0	0
Christchurch City	2013	DOG	Spaniel, English Springer	236	108	128	158	161	0	0	0	0	0	0	0	0	0	0	0
Christchurch City	2013	DOG	Terrier, American Pit Bull	147	68	79	129	139	128	5	0	0	0	0	0	0	0	0	0
Christchurch City	2013	DOG	Terrier, Fox (Smooth)	812	368	444	610	360	1	0	0	0	0	0	0	0	0	0	0
Christchurch City	2013	DOG	Terrier, Jack Russell	1378	656	722	988	712	2	1	0	0	0	0	0	0	0	0	0
Christchurch City	2013	DOG	Terrier, Staffordshire Bull	888	444	444	498	627	9	4	0	0	0	0	0	0	0	0	0
Christchurch City	2013	DOG	Terrier, West Highland White	413	198	215	265	245	0	0	0	0	0	0	0	0	0	0	0
Christchurch City	2013	DOG	_Unidentified_	6230	2904	3326	3777	3883	28	7	0	0	0	0	0	0	0	0	0
Christchurch City	2013	OWN	_	0	0	0	0	0	0	0	0	0	28880	0	0	0	0	0	0
Christchurch City	2013	JST	_	0	0	0	0	0	0	0	0	0	0	0	3	1	0	0	0
Christchurch City	2013	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	1118	289229	296292
Christchurch City	2014	DOG	_ALL-PURE_	21689	10325	11364	13718	14115	186	29	0	0	0	0	0	0	0	0	0
Christchurch City	2014	DOG	_ALL-CROSS_	13793	6702	7091	9359	10002	200	23	0	0	0	0	0	0	0	0	0
Christchurch City	2014	DOG	_ALL-DOGS_	35482	17027	18455	23077	24117	386	52	0	0	0	0	0	0	0	0	0
Christchurch City	2014	DOG	Beagle	260	130	130	189	166	0	0	0	0	0	0	0	0	0	0	0
Christchurch City	2014	DOG	Bichon Frise	1331	637	694	874	900	0	0	0	0	0	0	0	0	0	0	0
Christchurch City	2014	DOG	Boxer	421	202	219	281	304	3	1	0	0	0	0	0	0	0	0	0
Christchurch City	2014	DOG	Cattle, Australian	105	61	44	71	55	5	0	0	0	0	0	0	0	0	0	0
Christchurch City	2014	DOG	Chihuahua, Long Coat	394	192	202	195	280	0	0	0	0	0	0	0	0	0	0	0
Christchurch City	2014	DOG	Chihuahua, Smooth Coat	122	65	57	62	80	0	0	0	0	0	0	0	0	0	0	0
Christchurch City	2014	DOG	Collie, Bearded	126	58	68	72	58	1	0	0	0	0	0	0	0	0	0	0
Christchurch City	2014	DOG	Collie, Border	1129	567	562	704	678	3	0	0	0	0	0	0	0	0	0	0
Christchurch City	2014	DOG	Collie, Rough	56	26	30	29	25	0	0	0	0	0	0	0	0	0	0	0
Christchurch City	2014	DOG	Collie, Smooth	53	30	23	5	2	0	0	0	0	0	0	0	0	0	0	0
Christchurch City	2014	DOG	Greyhound	165	75	90	121	109	0	0	0	0	0	0	0	0	0	0	0
Christchurch City	2014	DOG	Heading	113	59	54	15	8	0	0	0	0	0	0	0	0	0	0	0
Christchurch City	2014	DOG	Huntaway	374	171	203	136	117	0	0	0	0	0	0	0	0	0	0	0
Christchurch City	2014	DOG	Maltese	266	114	152	172	174	0	0	0	0	0	0	0	0	0	0	0
Christchurch City	2014	DOG	Poodle, Miniature	266	121	145	181	176	0	0	0	0	0	0	0	0	0	0	0
Christchurch City	2014	DOG	Poodle, Toy	310	141	169	212	191	0	0	0	0	0	0	0	0	0	0	0
Christchurch City	2014	DOG	Retriever, Golden	837	388	449	501	552	1	0	0	0	0	0	0	0	0	0	0
Christchurch City	2014	DOG	Retriever, Labrador	2521	1195	1326	1683	1693	4	2	0	0	0	0	0	0	0	0	0
Christchurch City	2014	DOG	Rottweiler	376	191	185	177	281	5	1	0	0	0	0	0	0	0	0	0
Christchurch City	2014	DOG	Schnauzer, Miniature	639	321	318	414	505	0	0	0	0	0	0	0	0	0	0	0
Christchurch City	2014	DOG	Shepherd, German	835	403	432	429	535	10	8	0	0	0	0	0	0	0	0	0
Christchurch City	2014	DOG	Shih Tzu	204	95	109	129	144	0	0	0	0	0	0	0	0	0	0	0
Christchurch City	2014	DOG	Spaniel, Cavalier King Charles	301	150	151	201	203	0	0	0	0	0	0	0	0	0	0	0
Christchurch City	2014	DOG	Spaniel, Cocker	674	356	318	485	450	0	0	0	0	0	0	0	0	0	0	0
Christchurch City	2014	DOG	Spaniel, English Springer	237	101	136	165	174	0	0	0	0	0	0	0	0	0	0	0
Christchurch City	2014	DOG	Terrier, American Pit Bull	140	68	72	130	135	115	5	0	0	0	0	0	0	0	0	0
Christchurch City	2014	DOG	Terrier, Fox (Smooth)	736	342	394	561	373	1	0	0	0	0	0	0	0	0	0	0
Christchurch City	2014	DOG	Terrier, Jack Russell	1267	586	681	917	745	2	0	0	0	0	0	0	0	0	0	0
Christchurch City	2014	DOG	Terrier, Staffordshire Bull	864	422	442	532	644	7	3	0	0	0	0	0	0	0	0	0
Christchurch City	2014	DOG	Terrier, West Highland White	400	193	207	257	247	0	0	0	0	0	0	0	0	0	0	0
Christchurch City	2014	DOG	_Unidentified_	6167	2865	3302	3818	4111	29	9	0	0	0	0	0	0	0	0	0
Christchurch City	2014	OWN	_	0	0	0	0	0	0	0	0	0	28877	0	0	0	0	0	0
Christchurch City	2014	JST	_	0	0	0	0	0	0	0	0	0	0	0	13	1	0	0	0
Christchurch City	2014	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	1074	301675	310148
Christchurch City	2015	DOG	_ALL-PURE_	18238	8676	9562	11576	12143	172	26	0	0	0	0	0	0	0	0	0
Christchurch City	2015	DOG	_ALL-CROSS_	12266	5964	6302	8548	9085	174	26	0	0	0	0	0	0	0	0	0
Christchurch City	2015	DOG	_ALL-DOGS_	30504	14640	15864	20124	21228	346	52	0	0	0	0	0	0	0	0	0
Christchurch City	2015	DOG	Beagle	231	117	114	170	151	0	0	0	0	0	0	0	0	0	0	0
Christchurch City	2015	DOG	Bichon Frise	1110	549	561	728	753	1	0	0	0	0	0	0	0	0	0	0
Christchurch City	2015	DOG	Boxer	356	164	192	227	242	3	0	0	0	0	0	0	0	0	0	0
Christchurch City	2015	DOG	Cattle, Australian	91	51	40	57	49	3	0	0	0	0	0	0	0	0	0	0
Christchurch City	2015	DOG	Chihuahua, Long Coat	366	172	194	187	248	0	0	0	0	0	0	0	0	0	0	0
Christchurch City	2015	DOG	Chihuahua, Smooth Coat	98	56	42	60	64	0	0	0	0	0	0	0	0	0	0	0
Christchurch City	2015	DOG	Collie, Bearded	97	39	58	58	45	0	0	0	0	0	0	0	0	0	0	0
Christchurch City	2015	DOG	Collie, Border	928	461	467	573	564	2	0	0	0	0	0	0	0	0	0	0
Christchurch City	2015	DOG	Collie, Rough	49	19	30	24	24	0	0	0	0	0	0	0	0	0	0	0
Christchurch City	2015	DOG	Collie, Smooth	45	26	19	4	2	0	0	0	0	0	0	0	0	0	0	0
Christchurch City	2015	DOG	Greyhound	155	79	76	123	107	0	0	0	0	0	0	0	0	0	0	0
Christchurch City	2015	DOG	Heading	96	42	54	9	6	0	0	0	0	0	0	0	0	0	0	0
Christchurch City	2015	DOG	Huntaway	319	145	174	112	100	0	0	0	0	0	0	0	0	0	0	0
Christchurch City	2015	DOG	Maltese	217	98	119	141	154	0	0	0	0	0	0	0	0	0	0	0
Christchurch City	2015	DOG	Poodle, Miniature	218	99	119	154	150	0	0	0	0	0	0	0	0	0	0	0
Christchurch City	2015	DOG	Poodle, Toy	259	121	138	180	174	0	0	0	0	0	0	0	0	0	0	0
Christchurch City	2015	DOG	Retriever, Golden	655	317	338	390	444	2	0	0	0	0	0	0	0	0	0	0
Christchurch City	2015	DOG	Retriever, Labrador	2112	1005	1107	1440	1445	3	1	0	0	0	0	0	0	0	0	0
Christchurch City	2015	DOG	Rottweiler	319	158	161	150	243	6	3	0	0	0	0	0	0	0	0	0
Christchurch City	2015	DOG	Schnauzer, Miniature	565	275	290	370	447	0	0	0	0	0	0	0	0	0	0	0
Christchurch City	2015	DOG	Shepherd, German	681	332	349	372	466	12	6	0	0	0	0	0	0	0	0	0
Christchurch City	2015	DOG	Shih Tzu	184	81	103	112	129	0	0	0	0	0	0	0	0	0	0	0
Christchurch City	2015	DOG	Spaniel, Cavalier King Charles	243	121	122	154	165	0	0	0	0	0	0	0	0	0	0	0
Christchurch City	2015	DOG	Spaniel, Cocker	565	292	273	396	391	0	0	0	0	0	0	0	0	0	0	0
Christchurch City	2015	DOG	Spaniel, English Springer	194	82	112	134	143	0	0	0	0	0	0	0	0	0	0	0
Christchurch City	2015	DOG	Terrier, American Pit Bull	126	63	63	104	114	98	4	0	0	0	0	0	0	0	0	0
Christchurch City	2015	DOG	Terrier, Fox (Smooth)	589	263	326	449	323	1	0	0	0	0	0	0	0	0	0	0
Christchurch City	2015	DOG	Terrier, Jack Russell	1052	482	570	756	638	1	0	0	0	0	0	0	0	0	0	0
Christchurch City	2015	DOG	Terrier, Staffordshire Bull	773	383	390	491	572	9	3	0	0	0	0	0	0	0	0	0
Christchurch City	2015	DOG	Terrier, West Highland White	338	159	179	216	218	0	0	0	0	0	0	0	0	0	0	0
Christchurch City	2015	DOG	_Unidentified_	5207	2425	2782	3235	3572	31	9	0	0	0	0	0	0	0	0	0
Christchurch City	2015	OWN	_	0	0	0	0	0	0	0	0	0	24603	0	0	0	0	0	0
Christchurch City	2015	JST	_	0	0	0	0	0	0	0	0	0	0	0	27	2	0	0	0
Christchurch City	2015	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	1151	280099	423791
Christchurch City	2016	DOG	_ALL-PURE_	21407	10137	11270	13747	15441	163	25	0	0	0	0	0	0	0	0	0
Christchurch City	2016	DOG	_ALL-CROSS_	15100	7323	7777	10710	11734	210	26	0	0	0	0	0	0	0	0	0
Christchurch City	2016	DOG	_ALL-DOGS_	36507	17460	19047	24457	27175	373	51	0	0	0	0	0	0	0	0	0
Christchurch City	2016	DOG	Beagle	258	122	136	185	184	0	0	0	0	0	0	0	0	0	0	0
Christchurch City	2016	DOG	Bichon Frise	1241	598	643	869	910	1	0	0	0	0	0	0	0	0	0	0
Christchurch City	2016	DOG	Boxer	399	189	210	261	309	0	1	0	0	0	0	0	0	0	0	0
Christchurch City	2016	DOG	Cattle, Australian	98	57	41	59	59	3	0	0	0	0	0	0	0	0	0	0
Christchurch City	2016	DOG	Chihuahua, Long Coat	457	218	239	255	353	0	0	0	0	0	0	0	0	0	0	0
Christchurch City	2016	DOG	Chihuahua, Smooth Coat	121	62	59	77	84	0	0	0	0	0	0	0	0	0	0	0
Christchurch City	2016	DOG	Collie, Bearded	124	55	69	78	70	0	0	0	0	0	0	0	0	0	0	0
Christchurch City	2016	DOG	Collie, Border	1134	573	561	726	745	2	0	0	0	0	0	0	0	0	0	0
Christchurch City	2016	DOG	Collie, Rough	56	23	33	31	32	0	0	0	0	0	0	0	0	0	0	0
Christchurch City	2016	DOG	Collie, Smooth	46	24	22	4	3	0	0	0	0	0	0	0	0	0	0	0
Christchurch City	2016	DOG	Greyhound	200	99	101	163	150	0	0	0	0	0	0	0	0	0	0	0
Christchurch City	2016	DOG	Heading	125	62	63	14	12	0	0	0	0	0	0	0	0	0	0	0
Christchurch City	2016	DOG	Huntaway	362	166	196	135	137	0	0	0	0	0	0	0	0	0	0	0
Christchurch City	2016	DOG	Maltese	268	124	144	174	204	0	0	0	0	0	0	0	0	0	0	0
Christchurch City	2016	DOG	Poodle, Miniature	245	113	132	179	179	0	0	0	0	0	0	0	0	0	0	0
Christchurch City	2016	DOG	Poodle, Toy	277	125	152	194	192	0	0	0	0	0	0	0	0	0	0	0
Christchurch City	2016	DOG	Retriever, Golden	775	377	398	450	580	2	0	0	0	0	0	0	0	0	0	0
Christchurch City	2016	DOG	Retriever, Labrador	2477	1155	1322	1680	1837	3	1	0	0	0	0	0	0	0	0	0
Christchurch City	2016	DOG	Rottweiler	363	177	186	180	275	7	2	0	0	0	0	0	0	0	0	0
Christchurch City	2016	DOG	Schnauzer, Miniature	759	377	382	485	629	0	0	0	0	0	0	0	0	0	0	0
Christchurch City	2016	DOG	Shepherd, German	799	371	428	415	590	7	6	0	0	0	0	0	0	0	0	0
Christchurch City	2016	DOG	Shih Tzu	254	118	136	161	187	0	0	0	0	0	0	0	0	0	0	0
Christchurch City	2016	DOG	Spaniel, Cavalier King Charles	278	140	138	177	214	0	0	0	0	0	0	0	0	0	0	0
Christchurch City	2016	DOG	Spaniel, Cocker	627	322	305	447	466	0	0	0	0	0	0	0	0	0	0	0
Christchurch City	2016	DOG	Spaniel, English Springer	255	111	144	175	200	0	0	0	0	0	0	0	0	0	0	0
Christchurch City	2016	DOG	Terrier, American Pit Bull	113	56	57	104	104	91	3	0	0	0	0	0	0	0	0	0
Christchurch City	2016	DOG	Terrier, Fox (Smooth)	633	287	346	493	377	0	0	0	0	0	0	0	0	0	0	0
Christchurch City	2016	DOG	Terrier, Jack Russell	1155	525	630	846	772	3	0	0	0	0	0	0	0	0	0	0
Christchurch City	2016	DOG	Terrier, Staffordshire Bull	907	430	477	593	732	12	3	0	0	0	0	0	0	0	0	0
Christchurch City	2016	DOG	Terrier, West Highland White	376	182	194	251	270	0	0	0	0	0	0	0	0	0	0	0
Christchurch City	2016	DOG	_Unidentified_	6225	2899	3326	3886	4585	32	9	0	0	0	0	0	0	0	0	0
Christchurch City	2016	OWN	_	0	0	0	0	0	0	0	0	0	29466	0	0	0	0	0	0
Clutha District	2001	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	13	1527	0
Clutha District	2002	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	15	5116	0
Clutha District	2003	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	18	17793	0
Clutha District	2004	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	42	8207	0
Clutha District	2005	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	41	3789	0
Clutha District	2006	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	36	9667	7524
Clutha District	2007	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	40	7453	9579
Clutha District	2008	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	43	3370	5093
Clutha District	2009	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	48	18747	15029
Clutha District	2010	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	46	13277	16459
Clutha District	2011	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	47	8987	5896
Clutha District	2012	JST	_	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Clutha District	2012	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	50	40207	18002
Clutha District	2013	DOG	_ALL-PURE_	5176	2554	2622	0	628	14	0	0	0	0	0	0	0	0	0	0
Clutha District	2013	DOG	_ALL-CROSS_	1283	630	653	0	334	16	0	0	0	0	0	0	0	0	0	0
Clutha District	2013	DOG	_ALL-DOGS_	6459	3184	3275	0	962	30	0	0	0	0	0	0	0	0	0	0
Clutha District	2013	DOG	Beagle	13	6	7	0	7	0	0	0	0	0	0	0	0	0	0	0
Clutha District	2013	DOG	Bichon Frise	53	25	28	0	17	0	0	0	0	0	0	0	0	0	0	0
Clutha District	2013	DOG	Boxer	27	13	14	0	11	0	0	0	0	0	0	0	0	0	0	0
Clutha District	2013	DOG	Cattle, Australian	18	14	4	0	5	1	0	0	0	0	0	0	0	0	0	0
Clutha District	2013	DOG	Chihuahua, Long Coat	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Clutha District	2013	DOG	Chihuahua, Smooth Coat	25	13	12	0	12	0	0	0	0	0	0	0	0	0	0	0
Clutha District	2013	DOG	Collie, Bearded	84	42	42	0	1	0	0	0	0	0	0	0	0	0	0	0
Clutha District	2013	DOG	Collie, Border	134	89	45	0	21	0	0	0	0	0	0	0	0	0	0	0
Clutha District	2013	DOG	Collie, Rough	2	2	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Clutha District	2013	DOG	Collie, Smooth	2214	1025	1189	0	14	1	0	0	0	0	0	0	0	0	0	0
Clutha District	2013	DOG	Greyhound	5	4	1	0	3	0	0	0	0	0	0	0	0	0	0	0
Clutha District	2013	DOG	Heading	280	149	131	0	8	0	0	0	0	0	0	0	0	0	0	0
Clutha District	2013	DOG	Huntaway	568	275	293	0	16	0	0	0	0	0	0	0	0	0	0	0
Clutha District	2013	DOG	Maltese	26	18	8	0	10	0	0	0	0	0	0	0	0	0	0	0
Clutha District	2013	DOG	Poodle, Miniature	3	2	1	0	0	0	0	0	0	0	0	0	0	0	0	0
Clutha District	2013	DOG	Poodle, Toy	6	4	2	0	3	0	0	0	0	0	0	0	0	0	0	0
Clutha District	2013	DOG	Retriever, Golden	49	21	28	0	16	0	0	0	0	0	0	0	0	0	0	0
Clutha District	2013	DOG	Retriever, Labrador	477	248	229	0	109	2	0	0	0	0	0	0	0	0	0	0
Clutha District	2013	DOG	Rottweiler	38	20	18	0	18	3	0	0	0	0	0	0	0	0	0	0
Clutha District	2013	DOG	Schnauzer, Miniature	15	5	10	0	10	0	0	0	0	0	0	0	0	0	0	0
Clutha District	2013	DOG	Shepherd, German	53	27	26	0	22	0	0	0	0	0	0	0	0	0	0	0
Clutha District	2013	DOG	Shih Tzu	35	24	11	0	3	0	0	0	0	0	0	0	0	0	0	0
Clutha District	2013	DOG	Spaniel, Cavalier King Charles	21	11	10	0	7	0	0	0	0	0	0	0	0	0	0	0
Clutha District	2013	DOG	Spaniel, Cocker	34	22	12	0	14	0	0	0	0	0	0	0	0	0	0	0
Clutha District	2013	DOG	Spaniel, English Springer	34	19	15	0	15	0	0	0	0	0	0	0	0	0	0	0
Clutha District	2013	DOG	Terrier, American Pit Bull	3	2	1	0	3	3	0	0	0	0	0	0	0	0	0	0
Clutha District	2013	DOG	Terrier, Fox (Smooth)	213	107	106	0	50	1	0	0	0	0	0	0	0	0	0	0
Clutha District	2013	DOG	Terrier, Jack Russell	174	96	78	0	51	0	0	0	0	0	0	0	0	0	0	0
Clutha District	2013	DOG	Terrier, Staffordshire Bull	57	26	31	0	32	0	0	0	0	0	0	0	0	0	0	0
Clutha District	2013	DOG	Terrier, West Highland White	19	7	12	0	3	0	0	0	0	0	0	0	0	0	0	0
Clutha District	2013	DOG	_Unidentified_	496	238	258	0	147	3	0	0	0	0	0	0	0	0	0	0
Clutha District	2013	OWN	_	0	0	0	0	0	0	0	0	0	2924	47	0	0	0	0	0
Clutha District	2013	JST	_	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Clutha District	2013	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	43	19829	36414
Clutha District	2014	DOG	_ALL-PURE_	5194	2565	2629	0	687	12	0	0	0	0	0	0	0	0	0	0
Clutha District	2014	DOG	_ALL-CROSS_	1354	682	672	0	372	12	0	0	0	0	0	0	0	0	0	0
Clutha District	2014	DOG	_ALL-DOGS_	6548	3247	3301	0	1059	24	0	0	0	0	0	0	0	0	0	0
Clutha District	2014	DOG	Beagle	11	5	6	0	6	0	0	0	0	0	0	0	0	0	0	0
Clutha District	2014	DOG	Bichon Frise	48	21	27	0	18	0	0	0	0	0	0	0	0	0	0	0
Clutha District	2014	DOG	Boxer	28	14	14	0	12	0	0	0	0	0	0	0	0	0	0	0
Clutha District	2014	DOG	Cattle, Australian	18	12	6	0	5	1	0	0	0	0	0	0	0	0	0	0
Clutha District	2014	DOG	Chihuahua, Long Coat	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Clutha District	2014	DOG	Chihuahua, Smooth Coat	32	17	15	0	13	0	0	0	0	0	0	0	0	0	0	0
Clutha District	2014	DOG	Collie, Bearded	74	36	38	0	1	0	0	0	0	0	0	0	0	0	0	0
Clutha District	2014	DOG	Collie, Border	133	90	43	0	26	0	0	0	0	0	0	0	0	0	0	0
Clutha District	2014	DOG	Collie, Rough	5	3	2	0	0	0	0	0	0	0	0	0	0	0	0	0
Clutha District	2014	DOG	Collie, Smooth	2122	974	1148	0	16	1	0	0	0	0	0	0	0	0	0	0
Clutha District	2014	DOG	Greyhound	10	7	3	0	5	0	0	0	0	0	0	0	0	0	0	0
Clutha District	2014	DOG	Heading	309	162	147	0	9	0	0	0	0	0	0	0	0	0	0	0
Clutha District	2014	DOG	Huntaway	626	299	327	0	14	1	0	0	0	0	0	0	0	0	0	0
Clutha District	2014	DOG	Maltese	26	17	9	0	9	0	0	0	0	0	0	0	0	0	0	0
Clutha District	2014	DOG	Poodle, Miniature	3	1	2	0	1	0	0	0	0	0	0	0	0	0	0	0
Clutha District	2014	DOG	Poodle, Toy	5	3	2	0	3	0	0	0	0	0	0	0	0	0	0	0
Clutha District	2014	DOG	Retriever, Golden	45	23	22	0	17	0	0	0	0	0	0	0	0	0	0	0
Clutha District	2014	DOG	Retriever, Labrador	483	247	236	0	116	1	0	0	0	0	0	0	0	0	0	0
Clutha District	2014	DOG	Rottweiler	45	22	23	0	20	2	0	0	0	0	0	0	0	0	0	0
Clutha District	2014	DOG	Schnauzer, Miniature	16	7	9	0	11	0	0	0	0	0	0	0	0	0	0	0
Clutha District	2014	DOG	Shepherd, German	55	29	26	0	27	0	0	0	0	0	0	0	0	0	0	0
Clutha District	2014	DOG	Shih Tzu	37	27	10	0	7	0	0	0	0	0	0	0	0	0	0	0
Clutha District	2014	DOG	Spaniel, Cavalier King Charles	16	6	10	0	10	0	0	0	0	0	0	0	0	0	0	0
Clutha District	2014	DOG	Spaniel, Cocker	36	24	12	0	12	0	0	0	0	0	0	0	0	0	0	0
Clutha District	2014	DOG	Spaniel, English Springer	41	21	20	0	19	0	0	0	0	0	0	0	0	0	0	0
Clutha District	2014	DOG	Terrier, American Pit Bull	2	1	1	0	2	2	0	0	0	0	0	0	0	0	0	0
Clutha District	2014	DOG	Terrier, Fox (Smooth)	217	112	105	0	52	1	0	0	0	0	0	0	0	0	0	0
Clutha District	2014	DOG	Terrier, Jack Russell	179	97	82	0	54	0	0	0	0	0	0	0	0	0	0	0
Clutha District	2014	DOG	Terrier, Staffordshire Bull	57	29	28	0	30	1	0	0	0	0	0	0	0	0	0	0
Clutha District	2014	DOG	Terrier, West Highland White	15	4	11	0	3	0	0	0	0	0	0	0	0	0	0	0
Clutha District	2014	DOG	_Unidentified_	500	255	245	0	169	2	0	0	0	0	0	0	0	0	0	0
Clutha District	2014	OWN	_	0	0	0	0	0	0	0	0	0	2924	49	0	0	0	0	0
Clutha District	2014	JST	_	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Clutha District	2014	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	45	23269	31107
Clutha District	2015	DOG	_ALL-PURE_	5087	2504	2583	0	720	8	0	0	0	0	0	0	0	0	0	0
Clutha District	2015	DOG	_ALL-CROSS_	1364	661	703	0	445	19	0	0	0	0	0	0	0	0	0	0
Clutha District	2015	DOG	_ALL-DOGS_	6451	3165	3286	0	1165	27	0	0	0	0	0	0	0	0	0	0
Clutha District	2015	DOG	Beagle	12	6	6	0	6	0	0	0	0	0	0	0	0	0	0	0
Clutha District	2015	DOG	Bichon Frise	45	23	22	0	18	0	0	0	0	0	0	0	0	0	0	0
Clutha District	2015	DOG	Boxer	24	11	13	0	10	0	0	0	0	0	0	0	0	0	0	0
Clutha District	2015	DOG	Cattle, Australian	14	10	4	0	4	1	0	0	0	0	0	0	0	0	0	0
Clutha District	2015	DOG	Chihuahua, Long Coat	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Clutha District	2015	DOG	Chihuahua, Smooth Coat	37	19	18	0	13	0	0	0	0	0	0	0	0	0	0	0
Clutha District	2015	DOG	Collie, Bearded	73	38	35	0	0	0	0	0	0	0	0	0	0	0	0	0
Clutha District	2015	DOG	Collie, Border	132	85	47	0	31	0	0	0	0	0	0	0	0	0	0	0
Clutha District	2015	DOG	Collie, Rough	2	0	2	0	0	0	0	0	0	0	0	0	0	0	0	0
Clutha District	2015	DOG	Collie, Smooth	1997	914	1083	0	13	0	0	0	0	0	0	0	0	0	0	0
Clutha District	2015	DOG	Greyhound	13	8	5	0	6	0	0	0	0	0	0	0	0	0	0	0
Clutha District	2015	DOG	Heading	344	187	157	0	8	0	0	0	0	0	0	0	0	0	0	0
Clutha District	2015	DOG	Huntaway	648	295	353	0	11	0	0	0	0	0	0	0	0	0	0	0
Clutha District	2015	DOG	Maltese	26	16	10	0	7	0	0	0	0	0	0	0	0	0	0	0
Clutha District	2015	DOG	Poodle, Miniature	3	1	2	0	1	0	0	0	0	0	0	0	0	0	0	0
Clutha District	2015	DOG	Poodle, Toy	4	3	1	0	3	0	0	0	0	0	0	0	0	0	0	0
Clutha District	2015	DOG	Retriever, Golden	43	22	21	0	17	0	0	0	0	0	0	0	0	0	0	0
Clutha District	2015	DOG	Retriever, Labrador	482	245	237	0	129	1	0	0	0	0	0	0	0	0	0	0
Clutha District	2015	DOG	Rottweiler	37	16	21	0	16	1	0	0	0	0	0	0	0	0	0	0
Clutha District	2015	DOG	Schnauzer, Miniature	18	8	10	0	11	0	0	0	0	0	0	0	0	0	0	0
Clutha District	2015	DOG	Shepherd, German	54	30	24	0	33	0	0	0	0	0	0	0	0	0	0	0
Clutha District	2015	DOG	Shih Tzu	40	29	11	0	11	0	0	0	0	0	0	0	0	0	0	0
Clutha District	2015	DOG	Spaniel, Cavalier King Charles	14	5	9	0	9	0	0	0	0	0	0	0	0	0	0	0
Clutha District	2015	DOG	Spaniel, Cocker	39	26	13	0	15	0	0	0	0	0	0	0	0	0	0	0
Clutha District	2015	DOG	Spaniel, English Springer	41	19	22	0	20	0	0	0	0	0	0	0	0	0	0	0
Clutha District	2015	DOG	Terrier, American Pit Bull	4	3	1	0	4	2	0	0	0	0	0	0	0	0	0	0
Clutha District	2015	DOG	Terrier, Fox (Smooth)	209	105	104	0	55	1	0	0	0	0	0	0	0	0	0	0
Clutha District	2015	DOG	Terrier, Jack Russell	165	93	72	0	50	0	0	0	0	0	0	0	0	0	0	0
Clutha District	2015	DOG	Terrier, Staffordshire Bull	48	22	26	0	26	0	0	0	0	0	0	0	0	0	0	0
Clutha District	2015	DOG	Terrier, West Highland White	17	7	10	0	6	0	0	0	0	0	0	0	0	0	0	0
Clutha District	2015	DOG	_Unidentified_	502	258	244	0	187	2	0	0	0	0	0	0	0	0	0	0
Clutha District	2015	OWN	_	0	0	0	0	0	0	0	0	0	2899	39	0	0	0	0	0
Clutha District	2015	JST	_	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Clutha District	2015	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	47	8089	9495
Clutha District	2016	DOG	_ALL-PURE_	5105	2559	2546	0	804	11	0	0	0	0	0	0	0	0	0	0
Clutha District	2016	DOG	_ALL-CROSS_	1452	695	757	0	489	21	0	0	0	0	0	0	0	0	0	0
Clutha District	2016	DOG	_ALL-DOGS_	6557	3254	3303	0	1293	32	0	0	0	0	0	0	0	0	0	0
Clutha District	2016	DOG	Beagle	12	5	7	0	7	0	0	0	0	0	0	0	0	0	0	0
Clutha District	2016	DOG	Bichon Frise	38	17	21	0	17	0	0	0	0	0	0	0	0	0	0	0
Clutha District	2016	DOG	Boxer	29	17	12	0	12	0	0	0	0	0	0	0	0	0	0	0
Clutha District	2016	DOG	Cattle, Australian	16	9	7	0	5	1	0	0	0	0	0	0	0	0	0	0
Clutha District	2016	DOG	Chihuahua, Long Coat	1	1	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Clutha District	2016	DOG	Chihuahua, Smooth Coat	48	20	28	0	20	0	0	0	0	0	0	0	0	0	0	0
Clutha District	2016	DOG	Collie, Bearded	70	34	36	0	1	0	0	0	0	0	0	0	0	0	0	0
Clutha District	2016	DOG	Collie, Border	137	92	45	0	32	0	0	0	0	0	0	0	0	0	0	0
Clutha District	2016	DOG	Collie, Rough	4	1	3	0	0	0	0	0	0	0	0	0	0	0	0	0
Clutha District	2016	DOG	Collie, Smooth	1862	867	995	0	17	0	0	0	0	0	0	0	0	0	0	0
Clutha District	2016	DOG	Greyhound	10	7	3	0	5	0	0	0	0	0	0	0	0	0	0	0
Clutha District	2016	DOG	Heading	389	208	181	0	7	0	0	0	0	0	0	0	0	0	0	0
Clutha District	2016	DOG	Huntaway	695	329	366	0	13	0	0	0	0	0	0	0	0	0	0	0
Clutha District	2016	DOG	Maltese	28	18	10	0	8	0	0	0	0	0	0	0	0	0	0	0
Clutha District	2016	DOG	Poodle, Miniature	3	2	1	0	1	0	0	0	0	0	0	0	0	0	0	0
Clutha District	2016	DOG	Poodle, Toy	5	3	2	0	3	0	0	0	0	0	0	0	0	0	0	0
Clutha District	2016	DOG	Retriever, Golden	44	23	21	0	19	0	0	0	0	0	0	0	0	0	0	0
Clutha District	2016	DOG	Retriever, Labrador	506	271	235	0	157	1	0	0	0	0	0	0	0	0	0	0
Clutha District	2016	DOG	Rottweiler	46	23	23	0	18	2	0	0	0	0	0	0	0	0	0	0
Clutha District	2016	DOG	Schnauzer, Miniature	18	8	10	0	10	0	0	0	0	0	0	0	0	0	0	0
Clutha District	2016	DOG	Shepherd, German	61	34	27	0	37	1	0	0	0	0	0	0	0	0	0	0
Clutha District	2016	DOG	Shih Tzu	43	31	12	0	11	0	0	0	0	0	0	0	0	0	0	0
Clutha District	2016	DOG	Spaniel, Cavalier King Charles	16	7	9	0	10	0	0	0	0	0	0	0	0	0	0	0
Clutha District	2016	DOG	Spaniel, Cocker	33	21	12	0	14	0	0	0	0	0	0	0	0	0	0	0
Clutha District	2016	DOG	Spaniel, English Springer	39	19	20	0	18	0	0	0	0	0	0	0	0	0	0	0
Clutha District	2016	DOG	Terrier, American Pit Bull	4	2	2	0	3	3	0	0	0	0	0	0	0	0	0	0
Clutha District	2016	DOG	Terrier, Fox (Smooth)	196	98	98	0	56	1	0	0	0	0	0	0	0	0	0	0
Clutha District	2016	DOG	Terrier, Jack Russell	171	96	75	0	58	0	0	0	0	0	0	0	0	0	0	0
Clutha District	2016	DOG	Terrier, Staffordshire Bull	60	27	33	0	33	0	0	0	0	0	0	0	0	0	0	0
Clutha District	2016	DOG	Terrier, West Highland White	11	6	5	0	2	0	0	0	0	0	0	0	0	0	0	0
Clutha District	2016	DOG	_Unidentified_	510	263	247	0	210	2	0	0	0	0	0	0	0	0	0	0
Clutha District	2016	OWN	_	0	0	0	0	0	0	0	0	0	3000	28	0	0	0	0	0
Dunedin City	2001	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	68	15188	0
Dunedin City	2002	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	62	21444	0
Dunedin City	2003	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	52	10698	0
Dunedin City	2004	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	93	57315	0
Dunedin City	2005	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	125	25450	0
Dunedin City	2006	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	191	22669	85410
Dunedin City	2007	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	180	48730	72466
Dunedin City	2008	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	204	62542	80486
Dunedin City	2009	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	250	31544	101942
Dunedin City	2010	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	263	32796	77427
Dunedin City	2011	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	277	45801	93368
Dunedin City	2012	JST	_	0	0	0	0	0	0	0	0	0	0	0	2	0	0	0	0
Dunedin City	2012	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	276	59432	114995
Dunedin City	2013	DOG	_ALL-PURE_	10161	5000	5161	4761	6120	122	5	0	0	0	0	0	0	0	0	0
Dunedin City	2013	DOG	_ALL-CROSS_	6158	3120	3038	3421	4823	95	2	0	0	0	0	0	0	0	0	0
Dunedin City	2013	DOG	_ALL-DOGS_	16319	8120	8199	8182	10943	217	7	0	0	0	0	0	0	0	0	0
Dunedin City	2013	DOG	Beagle	72	39	33	40	56	0	0	0	0	0	0	0	0	0	0	0
Dunedin City	2013	DOG	Bichon Frise	364	166	198	227	253	2	0	0	0	0	0	0	0	0	0	0
Dunedin City	2013	DOG	Boxer	187	90	97	84	127	2	0	0	0	0	0	0	0	0	0	0
Dunedin City	2013	DOG	Cattle, Australian	79	41	38	46	41	0	1	0	0	0	0	0	0	0	0	0
Dunedin City	2013	DOG	Chihuahua, Long Coat	32	14	18	10	31	0	0	0	0	0	0	0	0	0	0	0
Dunedin City	2013	DOG	Chihuahua, Smooth Coat	170	88	82	74	118	0	0	0	0	0	0	0	0	0	0	0
Dunedin City	2013	DOG	Collie, Bearded	71	30	41	29	34	0	1	0	0	0	0	0	0	0	0	0
Dunedin City	2013	DOG	Collie, Border	1238	575	663	320	341	6	1	0	0	0	0	0	0	0	0	0
Dunedin City	2013	DOG	Collie, Rough	31	11	20	11	15	0	0	0	0	0	0	0	0	0	0	0
Dunedin City	2013	DOG	Collie, Smooth	28	12	16	4	10	0	0	0	0	0	0	0	0	0	0	0
Dunedin City	2013	DOG	Greyhound	45	24	21	15	40	0	0	0	0	0	0	0	0	0	0	0
Dunedin City	2013	DOG	Heading	131	74	57	13	11	0	0	0	0	0	0	0	0	0	0	0
Dunedin City	2013	DOG	Huntaway	306	141	165	71	72	0	0	0	0	0	0	0	0	0	0	0
Dunedin City	2013	DOG	Maltese	122	62	60	77	89	1	0	0	0	0	0	0	0	0	0	0
Dunedin City	2013	DOG	Poodle, Miniature	88	46	42	56	70	0	0	0	0	0	0	0	0	0	0	0
Dunedin City	2013	DOG	Poodle, Toy	88	38	50	45	66	0	0	0	0	0	0	0	0	0	0	0
Dunedin City	2013	DOG	Retriever, Golden	310	148	162	151	183	1	0	0	0	0	0	0	0	0	0	0
Dunedin City	2013	DOG	Retriever, Labrador	1378	709	669	689	930	3	0	0	0	0	0	0	0	0	0	0
Dunedin City	2013	DOG	Rottweiler	109	59	50	42	87	1	0	0	0	0	0	0	0	0	0	0
Dunedin City	2013	DOG	Schnauzer, Miniature	229	123	106	118	176	0	0	0	0	0	0	0	0	0	0	0
Dunedin City	2013	DOG	Shepherd, German	311	173	138	138	239	1	0	0	0	0	0	0	0	0	0	0
Dunedin City	2013	DOG	Shih Tzu	98	42	56	47	80	0	0	0	0	0	0	0	0	0	0	0
Dunedin City	2013	DOG	Spaniel, Cavalier King Charles	97	46	51	40	66	0	0	0	0	0	0	0	0	0	0	0
Dunedin City	2013	DOG	Spaniel, Cocker	210	107	103	115	130	1	0	0	0	0	0	0	0	0	0	0
Dunedin City	2013	DOG	Spaniel, English Springer	172	83	89	78	108	0	0	0	0	0	0	0	0	0	0	0
Dunedin City	2013	DOG	Terrier, American Pit Bull	87	41	46	71	82	87	0	0	0	0	0	0	0	0	0	0
Dunedin City	2013	DOG	Terrier, Fox (Smooth)	424	210	214	242	247	0	0	0	0	0	0	0	0	0	0	0
Dunedin City	2013	DOG	Terrier, Jack Russell	662	320	342	387	403	3	0	0	0	0	0	0	0	0	0	0
Dunedin City	2013	DOG	Terrier, Staffordshire Bull	449	228	221	227	332	4	0	0	0	0	0	0	0	0	0	0
Dunedin City	2013	DOG	Terrier, West Highland White	127	60	67	71	67	0	0	0	0	0	0	0	0	0	0	0
Dunedin City	2013	DOG	_Unidentified_	2446	1200	1246	1223	1616	10	2	0	0	0	0	0	0	0	0	0
Dunedin City	2013	OWN	_	0	0	0	0	0	0	0	0	1	12755	190	0	0	0	0	0
Dunedin City	2013	JST	_	0	0	0	0	0	0	0	0	0	0	0	1	0	0	0	0
Dunedin City	2013	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	279	80321	114950
Dunedin City	2014	DOG	_ALL-PURE_	10024	4943	5081	4927	6556	115	3	0	0	0	0	0	0	0	0	0
Dunedin City	2014	DOG	_ALL-CROSS_	6627	3353	3274	3852	5434	103	2	0	0	0	0	0	0	0	0	0
Dunedin City	2014	DOG	_ALL-DOGS_	16651	8296	8355	8779	11990	218	5	0	0	0	0	0	0	0	0	0
Dunedin City	2014	DOG	Beagle	75	43	32	47	64	0	0	0	0	0	0	0	0	0	0	0
Dunedin City	2014	DOG	Bichon Frise	357	165	192	228	262	2	0	0	0	0	0	0	0	0	0	0
Dunedin City	2014	DOG	Boxer	175	84	91	89	129	3	0	0	0	0	0	0	0	0	0	0
Dunedin City	2014	DOG	Cattle, Australian	74	39	35	49	42	0	0	0	0	0	0	0	0	0	0	0
Dunedin City	2014	DOG	Chihuahua, Long Coat	29	13	16	10	29	0	0	0	0	0	0	0	0	0	0	0
Dunedin City	2014	DOG	Chihuahua, Smooth Coat	172	76	96	76	136	0	0	0	0	0	0	0	0	0	0	0
Dunedin City	2014	DOG	Collie, Bearded	72	28	44	28	39	0	1	0	0	0	0	0	0	0	0	0
Dunedin City	2014	DOG	Collie, Border	1207	556	651	331	383	6	0	0	0	0	0	0	0	0	0	0
Dunedin City	2014	DOG	Collie, Rough	30	12	18	14	15	0	0	0	0	0	0	0	0	0	0	0
Dunedin City	2014	DOG	Collie, Smooth	30	11	19	7	12	0	0	0	0	0	0	0	0	0	0	0
Dunedin City	2014	DOG	Greyhound	51	30	21	23	46	0	0	0	0	0	0	0	0	0	0	0
Dunedin City	2014	DOG	Heading	155	77	78	17	17	0	0	0	0	0	0	0	0	0	0	0
Dunedin City	2014	DOG	Huntaway	304	139	165	77	78	0	0	0	0	0	0	0	0	0	0	0
Dunedin City	2014	DOG	Maltese	119	59	60	75	90	1	0	0	0	0	0	0	0	0	0	0
Dunedin City	2014	DOG	Poodle, Miniature	91	50	41	60	74	0	0	0	0	0	0	0	0	0	0	0
Dunedin City	2014	DOG	Poodle, Toy	83	39	44	43	63	0	0	0	0	0	0	0	0	0	0	0
Dunedin City	2014	DOG	Retriever, Golden	278	137	141	141	182	1	0	0	0	0	0	0	0	0	0	0
Dunedin City	2014	DOG	Retriever, Labrador	1339	705	634	710	975	4	0	0	0	0	0	0	0	0	0	0
Dunedin City	2014	DOG	Rottweiler	118	62	56	51	103	2	0	0	0	0	0	0	0	0	0	0
Dunedin City	2014	DOG	Schnauzer, Miniature	235	124	111	137	186	0	0	0	0	0	0	0	0	0	0	0
Dunedin City	2014	DOG	Shepherd, German	299	167	132	152	247	0	1	0	0	0	0	0	0	0	0	0
Dunedin City	2014	DOG	Shih Tzu	116	50	66	58	99	0	0	0	0	0	0	0	0	0	0	0
Dunedin City	2014	DOG	Spaniel, Cavalier King Charles	103	47	56	49	73	0	0	0	0	0	0	0	0	0	0	0
Dunedin City	2014	DOG	Spaniel, Cocker	221	112	109	120	154	1	0	0	0	0	0	0	0	0	0	0
Dunedin City	2014	DOG	Spaniel, English Springer	175	85	90	82	125	0	0	0	0	0	0	0	0	0	0	0
Dunedin City	2014	DOG	Terrier, American Pit Bull	78	37	41	65	74	78	0	0	0	0	0	0	0	0	0	0
Dunedin City	2014	DOG	Terrier, Fox (Smooth)	389	195	194	232	250	0	0	0	0	0	0	0	0	0	0	0
Dunedin City	2014	DOG	Terrier, Jack Russell	630	306	324	379	409	3	0	0	0	0	0	0	0	0	0	0
Dunedin City	2014	DOG	Terrier, Staffordshire Bull	459	238	221	249	355	4	0	0	0	0	0	0	0	0	0	0
Dunedin City	2014	DOG	Terrier, West Highland White	126	59	67	73	71	0	0	0	0	0	0	0	0	0	0	0
Dunedin City	2014	DOG	_Unidentified_	2434	1198	1236	1255	1774	10	1	0	0	0	0	0	0	0	0	0
Dunedin City	2014	OWN	_	0	0	0	0	0	0	0	1	1	13018	151	0	0	0	0	0
Dunedin City	2014	JST	_	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Dunedin City	2014	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	292	44834	101738
Dunedin City	2015	DOG	_ALL-PURE_	9852	4874	4978	4998	6942	109	4	0	0	0	0	0	0	0	0	0
Dunedin City	2015	DOG	_ALL-CROSS_	6836	3435	3401	4195	5891	97	0	0	0	0	0	0	0	0	0	0
Dunedin City	2015	DOG	_ALL-DOGS_	16688	8309	8379	9193	12833	206	4	0	0	0	0	0	0	0	0	0
Dunedin City	2015	DOG	Beagle	69	37	32	39	62	0	0	0	0	0	0	0	0	0	0	0
Dunedin City	2015	DOG	Bichon Frise	338	159	179	227	256	2	0	0	0	0	0	0	0	0	0	0
Dunedin City	2015	DOG	Boxer	165	76	89	90	132	4	1	0	0	0	0	0	0	0	0	0
Dunedin City	2015	DOG	Cattle, Australian	70	39	31	42	45	0	0	0	0	0	0	0	0	0	0	0
Dunedin City	2015	DOG	Chihuahua, Long Coat	32	14	18	15	32	0	0	0	0	0	0	0	0	0	0	0
Dunedin City	2015	DOG	Chihuahua, Smooth Coat	183	81	102	88	155	0	0	0	0	0	0	0	0	0	0	0
Dunedin City	2015	DOG	Collie, Bearded	70	29	41	33	39	0	1	0	0	0	0	0	0	0	0	0
Dunedin City	2015	DOG	Collie, Border	1168	547	621	348	437	6	0	0	0	0	0	0	0	0	0	0
Dunedin City	2015	DOG	Collie, Rough	30	13	17	14	15	0	0	0	0	0	0	0	0	0	0	0
Dunedin City	2015	DOG	Collie, Smooth	34	13	21	8	14	0	0	0	0	0	0	0	0	0	0	0
Dunedin City	2015	DOG	Greyhound	60	33	27	30	55	0	0	0	0	0	0	0	0	0	0	0
Dunedin City	2015	DOG	Heading	145	68	77	18	15	0	0	0	0	0	0	0	0	0	0	0
Dunedin City	2015	DOG	Huntaway	312	136	176	80	87	0	0	0	0	0	0	0	0	0	0	0
Dunedin City	2015	DOG	Maltese	101	49	52	67	81	0	0	0	0	0	0	0	0	0	0	0
Dunedin City	2015	DOG	Poodle, Miniature	86	45	41	60	72	0	0	0	0	0	0	0	0	0	0	0
Dunedin City	2015	DOG	Poodle, Toy	83	41	42	45	67	0	0	0	0	0	0	0	0	0	0	0
Dunedin City	2015	DOG	Retriever, Golden	257	120	137	135	188	1	0	0	0	0	0	0	0	0	0	0
Dunedin City	2015	DOG	Retriever, Labrador	1352	724	628	728	1058	4	0	0	0	0	0	0	0	0	0	0
Dunedin City	2015	DOG	Rottweiler	126	67	59	52	115	2	0	0	0	0	0	0	0	0	0	0
Dunedin City	2015	DOG	Schnauzer, Miniature	230	121	109	140	196	0	0	0	0	0	0	0	0	0	0	0
Dunedin City	2015	DOG	Shepherd, German	299	167	132	149	262	0	1	0	0	0	0	0	0	0	0	0
Dunedin City	2015	DOG	Shih Tzu	129	48	81	68	118	0	0	0	0	0	0	0	0	0	0	0
Dunedin City	2015	DOG	Spaniel, Cavalier King Charles	96	44	52	50	77	0	0	0	0	0	0	0	0	0	0	0
Dunedin City	2015	DOG	Spaniel, Cocker	214	107	107	124	154	1	0	0	0	0	0	0	0	0	0	0
Dunedin City	2015	DOG	Spaniel, English Springer	171	84	87	79	137	0	0	0	0	0	0	0	0	0	0	0
Dunedin City	2015	DOG	Terrier, American Pit Bull	70	37	33	61	69	69	0	0	0	0	0	0	0	0	0	0
Dunedin City	2015	DOG	Terrier, Fox (Smooth)	378	189	189	236	258	0	0	0	0	0	0	0	0	0	0	0
Dunedin City	2015	DOG	Terrier, Jack Russell	609	295	314	376	422	2	0	0	0	0	0	0	0	0	0	0
Dunedin City	2015	DOG	Terrier, Staffordshire Bull	447	234	213	255	360	7	0	0	0	0	0	0	0	0	0	0
Dunedin City	2015	DOG	Terrier, West Highland White	114	53	61	71	72	0	0	0	0	0	0	0	0	0	0	0
Dunedin City	2015	DOG	_Unidentified_	2414	1204	1210	1270	1892	11	1	0	0	0	0	0	0	0	0	0
Dunedin City	2015	OWN	_	0	0	0	0	0	0	0	2	3	13044	168	0	0	0	0	0
Dunedin City	2015	JST	_	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Dunedin City	2015	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	302	60094	112479
Dunedin City	2016	DOG	_ALL-PURE_	9929	4842	5087	5155	7408	94	6	0	0	0	0	0	0	0	0	0
Dunedin City	2016	DOG	_ALL-CROSS_	7153	3567	3586	4583	6383	97	3	0	0	0	0	0	0	0	0	0
Dunedin City	2016	DOG	_ALL-DOGS_	17082	8409	8673	9738	13791	191	9	0	0	0	0	0	0	0	0	0
Dunedin City	2016	DOG	Beagle	81	40	41	41	73	0	0	0	0	0	0	0	0	0	0	0
Dunedin City	2016	DOG	Bichon Frise	326	154	172	224	260	1	0	0	0	0	0	0	0	0	0	0
Dunedin City	2016	DOG	Boxer	160	74	86	94	134	3	1	0	0	0	0	0	0	0	0	0
Dunedin City	2016	DOG	Cattle, Australian	67	33	34	47	48	0	0	0	0	0	0	0	0	0	0	0
Dunedin City	2016	DOG	Chihuahua, Long Coat	37	18	19	17	37	0	0	0	0	0	0	0	0	0	0	0
Dunedin City	2016	DOG	Chihuahua, Smooth Coat	189	87	102	102	165	0	0	0	0	0	0	0	0	0	0	0
Dunedin City	2016	DOG	Collie, Bearded	81	33	48	37	47	0	1	0	0	0	0	0	0	0	0	0
Dunedin City	2016	DOG	Collie, Border	1161	541	620	362	458	5	0	0	0	0	0	0	0	0	0	0
Dunedin City	2016	DOG	Collie, Rough	25	9	16	9	15	0	0	0	0	0	0	0	0	0	0	0
Dunedin City	2016	DOG	Collie, Smooth	33	16	17	9	14	0	0	0	0	0	0	0	0	0	0	0
Dunedin City	2016	DOG	Greyhound	78	39	39	43	74	0	0	0	0	0	0	0	0	0	0	0
Dunedin City	2016	DOG	Heading	163	77	86	22	19	0	0	0	0	0	0	0	0	0	0	0
Dunedin City	2016	DOG	Huntaway	331	150	181	85	100	0	0	0	0	0	0	0	0	0	0	0
Dunedin City	2016	DOG	Maltese	100	45	55	68	86	0	0	0	0	0	0	0	0	0	0	0
Dunedin City	2016	DOG	Poodle, Miniature	94	51	43	66	78	0	0	0	0	0	0	0	0	0	0	0
Dunedin City	2016	DOG	Poodle, Toy	77	35	42	44	67	0	0	0	0	0	0	0	0	0	0	0
Dunedin City	2016	DOG	Retriever, Golden	271	129	142	143	213	0	0	0	0	0	0	0	0	0	0	0
Dunedin City	2016	DOG	Retriever, Labrador	1346	702	644	740	1112	3	0	0	0	0	0	0	0	0	0	0
Dunedin City	2016	DOG	Rottweiler	131	67	64	55	125	2	0	0	0	0	0	0	0	0	0	0
Dunedin City	2016	DOG	Schnauzer, Miniature	250	127	123	147	225	0	0	0	0	0	0	0	0	0	0	0
Dunedin City	2016	DOG	Shepherd, German	294	164	130	152	272	0	1	0	0	0	0	0	0	0	0	0
Dunedin City	2016	DOG	Shih Tzu	145	58	87	80	137	0	0	0	0	0	0	0	0	0	0	0
Dunedin City	2016	DOG	Spaniel, Cavalier King Charles	91	42	49	49	77	0	0	0	0	0	0	0	0	0	0	0
Dunedin City	2016	DOG	Spaniel, Cocker	211	104	107	130	165	0	0	0	0	0	0	0	0	0	0	0
Dunedin City	2016	DOG	Spaniel, English Springer	174	81	93	93	148	0	0	0	0	0	0	0	0	0	0	0
Dunedin City	2016	DOG	Terrier, American Pit Bull	60	33	27	54	60	60	0	0	0	0	0	0	0	0	0	0
Dunedin City	2016	DOG	Terrier, Fox (Smooth)	364	184	180	233	262	0	0	0	0	0	0	0	0	0	0	0
Dunedin City	2016	DOG	Terrier, Jack Russell	594	287	307	388	442	3	0	0	0	0	0	0	0	0	0	0
Dunedin City	2016	DOG	Terrier, Staffordshire Bull	442	231	211	250	373	6	0	0	0	0	0	0	0	0	0	0
Dunedin City	2016	DOG	Terrier, West Highland White	108	51	57	75	76	0	0	0	0	0	0	0	0	0	0	0
Dunedin City	2016	DOG	_Unidentified_	2445	1180	1265	1296	2046	11	3	0	0	0	0	0	0	0	0	0
Dunedin City	2016	OWN	_	0	0	0	0	0	0	0	6	2	13266	188	0	0	0	0	0
Far North District	2001	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	44	16357	0
Far North District	2002	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	62	8021	0
Far North District	2003	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	46	23443	0
Far North District	2004	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	166	14903	0
Far North District	2005	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	214	25848	0
Far North District	2006	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	253	65772	47745
Far North District	2007	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	243	33172	34529
Far North District	2008	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	295	62457	58253
Far North District	2009	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	287	95307	94199
Far North District	2010	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	291	41981	67078
Far North District	2011	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	317	61196	63619
Far North District	2012	JST	_	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Far North District	2012	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	304	44009	41815
Far North District	2013	DOG	_ALL-PURE_	5766	2827	2939	2317	2170	47	0	0	0	0	0	0	0	0	0	0
Far North District	2013	DOG	_ALL-CROSS_	3165	1591	1574	1641	1492	58	0	0	0	0	0	0	0	0	0	0
Far North District	2013	DOG	_ALL-DOGS_	8931	4418	4513	3958	3662	105	0	0	0	0	0	0	0	0	0	0
Far North District	2013	DOG	Beagle	16	10	6	12	7	0	0	0	0	0	0	0	0	0	0	0
Far North District	2013	DOG	Bichon Frise	76	33	43	54	50	0	0	0	0	0	0	0	0	0	0	0
Far North District	2013	DOG	Boxer	80	42	38	47	40	0	0	0	0	0	0	0	0	0	0	0
Far North District	2013	DOG	Cattle, Australian	95	43	52	41	33	0	0	0	0	0	0	0	0	0	0	0
Far North District	2013	DOG	Chihuahua, Long Coat	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Far North District	2013	DOG	Chihuahua, Smooth Coat	57	32	25	26	35	0	0	0	0	0	0	0	0	0	0	0
Far North District	2013	DOG	Collie, Bearded	42	16	26	7	10	0	0	0	0	0	0	0	0	0	0	0
Far North District	2013	DOG	Collie, Border	757	392	365	192	127	0	0	0	0	0	0	0	0	0	0	0
Far North District	2013	DOG	Collie, Rough	1	1	0	1	0	0	0	0	0	0	0	0	0	0	0	0
Far North District	2013	DOG	Collie, Smooth	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Far North District	2013	DOG	Greyhound	16	9	7	12	8	0	0	0	0	0	0	0	0	0	0	0
Far North District	2013	DOG	Heading	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Far North District	2013	DOG	Huntaway	1109	463	646	135	89	0	0	0	0	0	0	0	0	0	0	0
Far North District	2013	DOG	Maltese	15	11	4	10	10	0	0	0	0	0	0	0	0	0	0	0
Far North District	2013	DOG	Poodle, Miniature	20	11	9	12	10	0	0	0	0	0	0	0	0	0	0	0
Far North District	2013	DOG	Poodle, Toy	37	20	17	20	22	0	0	0	0	0	0	0	0	0	0	0
Far North District	2013	DOG	Retriever, Golden	84	37	47	54	42	0	0	0	0	0	0	0	0	0	0	0
Far North District	2013	DOG	Retriever, Labrador	529	276	253	265	258	0	0	0	0	0	0	0	0	0	0	0
Far North District	2013	DOG	Rottweiler	139	71	68	57	90	0	0	0	0	0	0	0	0	0	0	0
Far North District	2013	DOG	Schnauzer, Miniature	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Far North District	2013	DOG	Shepherd, German	243	118	125	116	126	0	0	0	0	0	0	0	0	0	0	0
Far North District	2013	DOG	Shih Tzu	35	21	14	18	22	0	0	0	0	0	0	0	0	0	0	0
Far North District	2013	DOG	Spaniel, Cavalier King Charles	23	10	13	19	13	0	0	0	0	0	0	0	0	0	0	0
Far North District	2013	DOG	Spaniel, Cocker	40	19	21	27	21	0	0	0	0	0	0	0	0	0	0	0
Far North District	2013	DOG	Spaniel, English Springer	40	23	17	23	19	0	0	0	0	0	0	0	0	0	0	0
Far North District	2013	DOG	Terrier, American Pit Bull	48	25	23	19	34	46	0	0	0	0	0	0	0	0	0	0
Far North District	2013	DOG	Terrier, Fox (Smooth)	359	188	171	201	165	0	0	0	0	0	0	0	0	0	0	0
Far North District	2013	DOG	Terrier, Jack Russell	310	158	152	187	144	0	0	0	0	0	0	0	0	0	0	0
Far North District	2013	DOG	Terrier, Staffordshire Bull	99	60	39	64	50	0	0	0	0	0	0	0	0	0	0	0
Far North District	2013	DOG	Terrier, West Highland White	27	18	9	22	15	0	0	0	0	0	0	0	0	0	0	0
Far North District	2013	DOG	_Unidentified_	1469	720	749	676	730	1	0	0	0	0	0	0	0	0	0	0
Far North District	2013	OWN	_	0	0	0	0	0	0	0	0	0	6322	119	0	0	0	0	0
Far North District	2013	JST	_	0	0	0	0	0	0	0	0	0	0	0	3	1	0	0	0
Far North District	2013	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	327	72907	66513
Far North District	2014	DOG	_ALL-PURE_	5646	2777	2869	2410	2319	43	0	0	0	0	0	0	0	0	0	0
Far North District	2014	DOG	_ALL-CROSS_	3239	1624	1615	1716	1687	61	0	0	0	0	0	0	0	0	0	0
Far North District	2014	DOG	_ALL-DOGS_	8885	4401	4484	4126	4006	104	0	0	0	0	0	0	0	0	0	0
Far North District	2014	DOG	Beagle	16	11	5	14	7	0	0	0	0	0	0	0	0	0	0	0
Far North District	2014	DOG	Bichon Frise	84	35	49	59	57	0	0	0	0	0	0	0	0	0	0	0
Far North District	2014	DOG	Boxer	72	36	36	44	40	0	0	0	0	0	0	0	0	0	0	0
Far North District	2014	DOG	Cattle, Australian	94	42	52	42	37	0	0	0	0	0	0	0	0	0	0	0
Far North District	2014	DOG	Chihuahua, Long Coat	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Far North District	2014	DOG	Chihuahua, Smooth Coat	54	32	22	30	35	0	0	0	0	0	0	0	0	0	0	0
Far North District	2014	DOG	Collie, Bearded	36	14	22	9	7	0	0	0	0	0	0	0	0	0	0	0
Far North District	2014	DOG	Collie, Border	745	382	363	187	146	0	0	0	0	0	0	0	0	0	0	0
Far North District	2014	DOG	Collie, Rough	1	1	0	1	0	0	0	0	0	0	0	0	0	0	0	0
Far North District	2014	DOG	Collie, Smooth	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Far North District	2014	DOG	Greyhound	19	10	9	13	9	0	0	0	0	0	0	0	0	0	0	0
Far North District	2014	DOG	Heading	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Far North District	2014	DOG	Huntaway	1063	444	619	153	90	0	0	0	0	0	0	0	0	0	0	0
Far North District	2014	DOG	Maltese	18	12	6	10	10	0	0	0	0	0	0	0	0	0	0	0
Far North District	2014	DOG	Poodle, Miniature	21	13	8	13	12	0	0	0	0	0	0	0	0	0	0	0
Far North District	2014	DOG	Poodle, Toy	37	21	16	21	23	0	0	0	0	0	0	0	0	0	0	0
Far North District	2014	DOG	Retriever, Golden	77	34	43	59	47	0	0	0	0	0	0	0	0	0	0	0
Far North District	2014	DOG	Retriever, Labrador	523	274	249	268	265	0	0	0	0	0	0	0	0	0	0	0
Far North District	2014	DOG	Rottweiler	147	80	67	61	103	0	0	0	0	0	0	0	0	0	0	0
Far North District	2014	DOG	Schnauzer, Miniature	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Far North District	2014	DOG	Shepherd, German	240	114	126	110	138	0	0	0	0	0	0	0	0	0	0	0
Far North District	2014	DOG	Shih Tzu	33	18	15	17	20	0	0	0	0	0	0	0	0	0	0	0
Far North District	2014	DOG	Spaniel, Cavalier King Charles	23	9	14	20	13	0	0	0	0	0	0	0	0	0	0	0
Far North District	2014	DOG	Spaniel, Cocker	46	21	25	32	28	0	0	0	0	0	0	0	0	0	0	0
Far North District	2014	DOG	Spaniel, English Springer	30	14	16	17	13	0	0	0	0	0	0	0	0	0	0	0
Far North District	2014	DOG	Terrier, American Pit Bull	43	19	24	16	28	43	0	0	0	0	0	0	0	0	0	0
Far North District	2014	DOG	Terrier, Fox (Smooth)	347	174	173	208	174	0	0	0	0	0	0	0	0	0	0	0
Far North District	2014	DOG	Terrier, Jack Russell	294	158	136	194	153	0	0	0	0	0	0	0	0	0	0	0
Far North District	2014	DOG	Terrier, Staffordshire Bull	112	67	45	74	67	0	0	0	0	0	0	0	0	0	0	0
Far North District	2014	DOG	Terrier, West Highland White	29	20	9	25	20	0	0	0	0	0	0	0	0	0	0	0
Far North District	2014	DOG	_Unidentified_	1442	722	720	713	777	0	0	0	0	0	0	0	0	0	0	0
Far North District	2014	OWN	_	0	0	0	0	0	0	0	0	0	6279	95	0	0	0	0	0
Far North District	2014	JST	_	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Far North District	2014	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	319	72117	85949
Far North District	2015	DOG	_ALL-PURE_	5314	2626	2688	2392	2379	28	0	0	0	0	0	0	0	0	0	0
Far North District	2015	DOG	_ALL-CROSS_	3126	1565	1561	1731	1741	48	1	0	0	0	0	0	0	0	0	0
Far North District	2015	DOG	_ALL-DOGS_	8440	4191	4249	4123	4120	76	1	0	0	0	0	0	0	0	0	0
Far North District	2015	DOG	Beagle	20	12	8	18	10	0	0	0	0	0	0	0	0	0	0	0
Far North District	2015	DOG	Bichon Frise	67	29	38	51	53	0	0	0	0	0	0	0	0	0	0	0
Far North District	2015	DOG	Boxer	61	30	31	41	39	0	0	0	0	0	0	0	0	0	0	0
Far North District	2015	DOG	Cattle, Australian	85	36	49	41	34	0	0	0	0	0	0	0	0	0	0	0
Far North District	2015	DOG	Chihuahua, Long Coat	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Far North District	2015	DOG	Chihuahua, Smooth Coat	46	26	20	28	33	0	0	0	0	0	0	0	0	0	0	0
Far North District	2015	DOG	Collie, Bearded	35	12	23	10	6	0	0	0	0	0	0	0	0	0	0	0
Far North District	2015	DOG	Collie, Border	683	360	323	188	148	0	0	0	0	0	0	0	0	0	0	0
Far North District	2015	DOG	Collie, Rough	1	1	0	1	0	0	0	0	0	0	0	0	0	0	0	0
Far North District	2015	DOG	Collie, Smooth	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Far North District	2015	DOG	Greyhound	20	10	10	11	9	0	0	0	0	0	0	0	0	0	0	0
Far North District	2015	DOG	Heading	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Far North District	2015	DOG	Huntaway	981	411	570	158	88	0	0	0	0	0	0	0	0	0	0	0
Far North District	2015	DOG	Maltese	17	9	8	11	11	0	0	0	0	0	0	0	0	0	0	0
Far North District	2015	DOG	Poodle, Miniature	21	13	8	14	13	0	0	0	0	0	0	0	0	0	0	0
Far North District	2015	DOG	Poodle, Toy	34	19	15	20	23	0	0	0	0	0	0	0	0	0	0	0
Far North District	2015	DOG	Retriever, Golden	74	34	40	59	48	0	0	0	0	0	0	0	0	0	0	0
Far North District	2015	DOG	Retriever, Labrador	488	246	242	251	283	0	0	0	0	0	0	0	0	0	0	0
Far North District	2015	DOG	Rottweiler	147	76	71	63	110	0	0	0	0	0	0	0	0	0	0	0
Far North District	2015	DOG	Schnauzer, Miniature	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Far North District	2015	DOG	Shepherd, German	210	110	100	110	137	0	0	0	0	0	0	0	0	0	0	0
Far North District	2015	DOG	Shih Tzu	33	19	14	18	20	0	0	0	0	0	0	0	0	0	0	0
Far North District	2015	DOG	Spaniel, Cavalier King Charles	23	9	14	19	14	0	0	0	0	0	0	0	0	0	0	0
Far North District	2015	DOG	Spaniel, Cocker	42	20	22	30	28	0	0	0	0	0	0	0	0	0	0	0
Far North District	2015	DOG	Spaniel, English Springer	24	14	10	17	14	0	0	0	0	0	0	0	0	0	0	0
Far North District	2015	DOG	Terrier, American Pit Bull	32	16	16	14	22	27	0	0	0	0	0	0	0	0	0	0
Far North District	2015	DOG	Terrier, Fox (Smooth)	326	164	162	191	171	0	0	0	0	0	0	0	0	0	0	0
Far North District	2015	DOG	Terrier, Jack Russell	288	155	133	199	159	0	0	0	0	0	0	0	0	0	0	0
Far North District	2015	DOG	Terrier, Staffordshire Bull	100	61	39	67	63	0	0	0	0	0	0	0	0	0	0	0
Far North District	2015	DOG	Terrier, West Highland White	34	22	12	28	25	0	0	0	0	0	0	0	0	0	0	0
Far North District	2015	DOG	_Unidentified_	1422	712	710	734	818	1	0	0	0	0	0	0	0	0	0	0
Far North District	2015	OWN	_	0	0	0	0	0	0	0	0	0	6031	118	0	0	0	0	0
Far North District	2015	JST	_	0	0	0	0	0	0	0	0	0	0	0	1	1	0	0	0
Far North District	2015	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	356	120293	127378
Far North District	2016	DOG	_ALL-PURE_	5485	2705	2780	2378	2482	23	0	0	0	0	0	0	0	0	0	0
Far North District	2016	DOG	_ALL-CROSS_	3438	1715	1723	1789	1985	36	1	0	0	0	0	0	0	0	0	0
Far North District	2016	DOG	_ALL-DOGS_	8923	4420	4503	4167	4467	59	1	0	0	0	0	0	0	0	0	0
Far North District	2016	DOG	Beagle	25	13	12	21	15	0	0	0	0	0	0	0	0	0	0	0
Far North District	2016	DOG	Bichon Frise	72	30	42	52	57	0	0	0	0	0	0	0	0	0	0	0
Far North District	2016	DOG	Boxer	62	35	27	38	40	0	0	0	0	0	0	0	0	0	0	0
Far North District	2016	DOG	Cattle, Australian	84	39	45	41	35	0	0	0	0	0	0	0	0	0	0	0
Far North District	2016	DOG	Chihuahua, Long Coat	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Far North District	2016	DOG	Chihuahua, Smooth Coat	55	32	23	29	38	0	0	0	0	0	0	0	0	0	0	0
Far North District	2016	DOG	Collie, Bearded	35	13	22	11	7	0	0	0	0	0	0	0	0	0	0	0
Far North District	2016	DOG	Collie, Border	689	358	331	197	162	0	0	0	0	0	0	0	0	0	0	0
Far North District	2016	DOG	Collie, Rough	1	1	0	1	0	0	0	0	0	0	0	0	0	0	0	0
Far North District	2016	DOG	Collie, Smooth	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Far North District	2016	DOG	Greyhound	25	11	14	12	13	0	0	0	0	0	0	0	0	0	0	0
Far North District	2016	DOG	Heading	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Far North District	2016	DOG	Huntaway	932	413	519	141	86	0	0	0	0	0	0	0	0	0	0	0
Far North District	2016	DOG	Maltese	22	13	9	14	15	0	0	0	0	0	0	0	0	0	0	0
Far North District	2016	DOG	Poodle, Miniature	20	12	8	14	14	0	0	0	0	0	0	0	0	0	0	0
Far North District	2016	DOG	Poodle, Toy	30	16	14	18	21	0	0	0	0	0	0	0	0	0	0	0
Far North District	2016	DOG	Retriever, Golden	76	41	35	62	47	0	0	0	0	0	0	0	0	0	0	0
Far North District	2016	DOG	Retriever, Labrador	486	246	240	253	292	0	0	0	0	0	0	0	0	0	0	0
Far North District	2016	DOG	Rottweiler	154	76	78	64	107	0	0	0	0	0	0	0	0	0	0	0
Far North District	2016	DOG	Schnauzer, Miniature	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Far North District	2016	DOG	Shepherd, German	226	109	117	111	143	0	0	0	0	0	0	0	0	0	0	0
Far North District	2016	DOG	Shih Tzu	39	19	20	23	27	0	0	0	0	0	0	0	0	0	0	0
Far North District	2016	DOG	Spaniel, Cavalier King Charles	22	10	12	18	14	0	0	0	0	0	0	0	0	0	0	0
Far North District	2016	DOG	Spaniel, Cocker	45	21	24	34	28	0	0	0	0	0	0	0	0	0	0	0
Far North District	2016	DOG	Spaniel, English Springer	24	14	10	16	14	0	0	0	0	0	0	0	0	0	0	0
Far North District	2016	DOG	Terrier, American Pit Bull	38	19	19	13	26	23	0	0	0	0	0	0	0	0	0	0
Far North District	2016	DOG	Terrier, Fox (Smooth)	312	163	149	193	165	0	0	0	0	0	0	0	0	0	0	0
Far North District	2016	DOG	Terrier, Jack Russell	314	170	144	210	182	0	0	0	0	0	0	0	0	0	0	0
Far North District	2016	DOG	Terrier, Staffordshire Bull	102	65	37	60	72	0	0	0	0	0	0	0	0	0	0	0
Far North District	2016	DOG	Terrier, West Highland White	35	21	14	27	25	0	0	0	0	0	0	0	0	0	0	0
Far North District	2016	DOG	_Unidentified_	1560	745	815	705	837	0	0	0	0	0	0	0	0	0	0	0
Far North District	2016	OWN	_	0	0	0	0	0	0	0	0	0	6379	109	0	0	0	0	0
Franklin District	2001	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	36	2958	0
Franklin District	2002	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	40	5923	0
Franklin District	2003	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	38	27130	0
Franklin District	2004	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	122	15090	0
Franklin District	2005	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	123	26196	0
Franklin District	2006	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	140	20538	18575
Franklin District	2007	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	162	34122	35574
Franklin District	2008	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	150	28036	26220
Franklin District	2009	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	148	165528	86807
Franklin District	2010	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	128	35911	80690
Franklin District	2011	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	141	31066	64590
Franklin District	2012	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	149	57154	43813
Franklin District	2013	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	151	38013	34591
Franklin District	2014	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	162	50365	58067
Franklin District	2015	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	170	59455	73782
Gisborne District	2001	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	38	6091	0
Gisborne District	2002	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	28	15322	0
Gisborne District	2003	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	31	5631	0
Gisborne District	2004	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	86	7049	0
Gisborne District	2005	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	86	8058	0
Gisborne District	2006	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	130	17371	14258
Gisborne District	2007	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	150	63088	51957
Gisborne District	2008	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	155	27847	33854
Gisborne District	2009	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	156	45536	46164
Gisborne District	2010	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	178	34571	30428
Gisborne District	2011	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	177	28208	27715
Gisborne District	2012	JST	_	0	0	0	0	0	0	0	0	0	0	0	1	1	0	0	0
Gisborne District	2012	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	170	25651	31257
Gisborne District	2013	DOG	_ALL-PURE_	7219	3497	3722	360	2110	79	5	0	0	0	0	0	0	0	0	0
Gisborne District	2013	DOG	_ALL-CROSS_	2984	1513	1471	438	1840	124	15	0	0	0	0	0	0	0	0	0
Gisborne District	2013	DOG	_ALL-DOGS_	10203	5010	5193	798	3950	203	20	0	0	0	0	0	0	0	0	0
Gisborne District	2013	DOG	Beagle	18	11	7	2	16	0	0	0	0	0	0	0	0	0	0	0
Gisborne District	2013	DOG	Bichon Frise	59	30	29	13	36	0	0	0	0	0	0	0	0	0	0	0
Gisborne District	2013	DOG	Boxer	76	36	40	5	53	1	1	0	0	0	0	0	0	0	0	0
Gisborne District	2013	DOG	Cattle, Australian	102	47	55	5	45	0	0	0	0	0	0	0	0	0	0	0
Gisborne District	2013	DOG	Chihuahua, Long Coat	32	19	13	3	24	0	0	0	0	0	0	0	0	0	0	0
Gisborne District	2013	DOG	Chihuahua, Smooth Coat	21	14	7	4	11	0	0	0	0	0	0	0	0	0	0	0
Gisborne District	2013	DOG	Collie, Bearded	2	1	1	0	1	0	0	0	0	0	0	0	0	0	0	0
Gisborne District	2013	DOG	Collie, Border	142	76	66	8	66	0	0	0	0	0	0	0	0	0	0	0
Gisborne District	2013	DOG	Collie, Rough	14	10	4	0	12	0	0	0	0	0	0	0	0	0	0	0
Gisborne District	2013	DOG	Collie, Smooth	1	0	1	0	1	0	0	0	0	0	0	0	0	0	0	0
Gisborne District	2013	DOG	Greyhound	8	2	6	1	2	0	0	0	0	0	0	0	0	0	0	0
Gisborne District	2013	DOG	Heading	1614	778	836	3	22	0	0	0	0	0	0	0	0	0	0	0
Gisborne District	2013	DOG	Huntaway	2213	895	1318	3	26	0	0	0	0	0	0	0	0	0	0	0
Gisborne District	2013	DOG	Maltese	55	35	20	6	48	0	0	0	0	0	0	0	0	0	0	0
Gisborne District	2013	DOG	Poodle, Miniature	31	16	15	1	23	0	0	0	0	0	0	0	0	0	0	0
Gisborne District	2013	DOG	Poodle, Toy	26	15	11	4	23	0	0	0	0	0	0	0	0	0	0	0
Gisborne District	2013	DOG	Retriever, Golden	56	31	25	2	25	0	0	0	0	0	0	0	0	0	0	0
Gisborne District	2013	DOG	Retriever, Labrador	589	307	282	44	339	3	0	0	0	0	0	0	0	0	0	0
Gisborne District	2013	DOG	Rottweiler	89	51	38	7	70	4	0	0	0	0	0	0	0	0	0	0
Gisborne District	2013	DOG	Schnauzer, Miniature	20	15	5	3	14	0	0	0	0	0	0	0	0	0	0	0
Gisborne District	2013	DOG	Shepherd, German	146	69	77	16	102	4	1	0	0	0	0	0	0	0	0	0
Gisborne District	2013	DOG	Shih Tzu	29	18	11	2	23	0	0	0	0	0	0	0	0	0	0	0
Gisborne District	2013	DOG	Spaniel, Cavalier King Charles	33	22	11	4	26	0	0	0	0	0	0	0	0	0	0	0
Gisborne District	2013	DOG	Spaniel, Cocker	31	14	17	6	19	0	0	0	0	0	0	0	0	0	0	0
Gisborne District	2013	DOG	Spaniel, English Springer	24	13	11	3	17	0	0	0	0	0	0	0	0	0	0	0
Gisborne District	2013	DOG	Terrier, American Pit Bull	32	13	19	25	30	29	1	0	0	0	0	0	0	0	0	0
Gisborne District	2013	DOG	Terrier, Fox (Smooth)	430	256	174	51	208	3	0	0	0	0	0	0	0	0	0	0
Gisborne District	2013	DOG	Terrier, Jack Russell	287	146	141	26	141	0	0	0	0	0	0	0	0	0	0	0
Gisborne District	2013	DOG	Terrier, Staffordshire Bull	77	37	40	8	59	2	0	0	0	0	0	0	0	0	0	0
Gisborne District	2013	DOG	Terrier, West Highland White	13	11	2	0	7	0	0	0	0	0	0	0	0	0	0	0
Gisborne District	2013	DOG	_Unidentified_	949	509	440	105	621	33	2	0	0	0	0	0	0	0	0	0
Gisborne District	2013	OWN	_	0	0	0	0	0	0	0	0	13	5366	124	0	0	0	0	0
Gisborne District	2013	JST	_	0	0	0	0	0	0	0	0	0	0	0	3	1	0	0	0
Gisborne District	2013	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	168	32141	19002
Gisborne District	2014	DOG	_ALL-PURE_	7289	3557	3732	377	2299	70	2	0	0	0	0	0	0	0	0	0
Gisborne District	2014	DOG	_ALL-CROSS_	3045	1543	1502	489	2035	128	12	0	0	0	0	0	0	0	0	0
Gisborne District	2014	DOG	_ALL-DOGS_	10334	5100	5234	866	4334	198	14	0	0	0	0	0	0	0	0	0
Gisborne District	2014	DOG	Beagle	18	11	7	3	17	0	0	0	0	0	0	0	0	0	0	0
Gisborne District	2014	DOG	Bichon Frise	60	31	29	11	41	0	0	0	0	0	0	0	0	0	0	0
Gisborne District	2014	DOG	Boxer	65	32	33	5	50	1	0	0	0	0	0	0	0	0	0	0
Gisborne District	2014	DOG	Cattle, Australian	100	43	57	7	49	1	0	0	0	0	0	0	0	0	0	0
Gisborne District	2014	DOG	Chihuahua, Long Coat	31	15	16	5	24	0	0	0	0	0	0	0	0	0	0	0
Gisborne District	2014	DOG	Chihuahua, Smooth Coat	20	13	7	4	12	0	0	0	0	0	0	0	0	0	0	0
Gisborne District	2014	DOG	Collie, Bearded	4	1	3	0	1	0	0	0	0	0	0	0	0	0	0	0
Gisborne District	2014	DOG	Collie, Border	135	68	67	11	76	0	0	0	0	0	0	0	0	0	0	0
Gisborne District	2014	DOG	Collie, Rough	14	11	3	0	12	0	0	0	0	0	0	0	0	0	0	0
Gisborne District	2014	DOG	Collie, Smooth	1	0	1	0	1	0	0	0	0	0	0	0	0	0	0	0
Gisborne District	2014	DOG	Greyhound	7	2	5	1	2	0	0	0	0	0	0	0	0	0	0	0
Gisborne District	2014	DOG	Heading	1643	795	848	2	24	0	0	0	0	0	0	0	0	0	0	0
Gisborne District	2014	DOG	Huntaway	2298	977	1321	4	25	0	0	0	0	0	0	0	0	0	0	0
Gisborne District	2014	DOG	Maltese	56	37	19	8	53	0	0	0	0	0	0	0	0	0	0	0
Gisborne District	2014	DOG	Poodle, Miniature	30	17	13	1	24	0	0	0	0	0	0	0	0	0	0	0
Gisborne District	2014	DOG	Poodle, Toy	28	17	11	6	24	0	0	0	0	0	0	0	0	0	0	0
Gisborne District	2014	DOG	Retriever, Golden	55	27	28	5	27	0	0	0	0	0	0	0	0	0	0	0
Gisborne District	2014	DOG	Retriever, Labrador	554	284	270	47	360	2	0	0	0	0	0	0	0	0	0	0
Gisborne District	2014	DOG	Rottweiler	92	53	39	11	78	2	1	0	0	0	0	0	0	0	0	0
Gisborne District	2014	DOG	Schnauzer, Miniature	25	19	6	3	21	0	0	0	0	0	0	0	0	0	0	0
Gisborne District	2014	DOG	Shepherd, German	128	62	66	14	102	4	0	0	0	0	0	0	0	0	0	0
Gisborne District	2014	DOG	Shih Tzu	29	19	10	4	23	0	0	0	0	0	0	0	0	0	0	0
Gisborne District	2014	DOG	Spaniel, Cavalier King Charles	31	20	11	4	24	0	0	0	0	0	0	0	0	0	0	0
Gisborne District	2014	DOG	Spaniel, Cocker	33	17	16	6	22	0	0	0	0	0	0	0	0	0	0	0
Gisborne District	2014	DOG	Spaniel, English Springer	30	14	16	2	23	0	0	0	0	0	0	0	0	0	0	0
Gisborne District	2014	DOG	Terrier, American Pit Bull	31	9	22	23	27	30	0	0	0	0	0	0	0	0	0	0
Gisborne District	2014	DOG	Terrier, Fox (Smooth)	439	253	186	55	233	3	0	0	0	0	0	0	0	0	0	0
Gisborne District	2014	DOG	Terrier, Jack Russell	270	134	136	28	157	0	0	0	0	0	0	0	0	0	0	0
Gisborne District	2014	DOG	Terrier, Staffordshire Bull	83	38	45	6	69	0	0	0	0	0	0	0	0	0	0	0
Gisborne District	2014	DOG	Terrier, West Highland White	14	11	3	0	9	0	0	0	0	0	0	0	0	0	0	0
Gisborne District	2014	DOG	_Unidentified_	965	527	438	101	689	27	1	0	0	0	0	0	0	0	0	0
Gisborne District	2014	OWN	_	0	0	0	0	0	0	0	0	13	5388	93	0	0	0	0	0
Gisborne District	2014	JST	_	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Gisborne District	2014	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	184	43454	47021
Gisborne District	2015	DOG	_ALL-PURE_	7471	3595	3876	424	2370	70	2	0	0	0	0	0	0	0	0	0
Gisborne District	2015	DOG	_ALL-CROSS_	2932	1466	1466	523	2078	119	8	0	0	0	0	0	0	0	0	0
Gisborne District	2015	DOG	_ALL-DOGS_	10403	5061	5342	947	4448	189	10	0	0	0	0	0	0	0	0	0
Gisborne District	2015	DOG	Beagle	19	12	7	4	18	0	0	0	0	0	0	0	0	0	0	0
Gisborne District	2015	DOG	Bichon Frise	53	26	27	13	42	0	0	0	0	0	0	0	0	0	0	0
Gisborne District	2015	DOG	Boxer	60	28	32	7	48	1	0	0	0	0	0	0	0	0	0	0
Gisborne District	2015	DOG	Cattle, Australian	99	42	57	9	48	1	0	0	0	0	0	0	0	0	0	0
Gisborne District	2015	DOG	Chihuahua, Long Coat	35	20	15	8	30	0	0	0	0	0	0	0	0	0	0	0
Gisborne District	2015	DOG	Chihuahua, Smooth Coat	19	11	8	5	15	0	0	0	0	0	0	0	0	0	0	0
Gisborne District	2015	DOG	Collie, Bearded	3	1	2	0	1	0	0	0	0	0	0	0	0	0	0	0
Gisborne District	2015	DOG	Collie, Border	127	65	62	13	81	0	0	0	0	0	0	0	0	0	0	0
Gisborne District	2015	DOG	Collie, Rough	14	11	3	0	12	0	0	0	0	0	0	0	0	0	0	0
Gisborne District	2015	DOG	Collie, Smooth	1	0	1	0	1	0	0	0	0	0	0	0	0	0	0	0
Gisborne District	2015	DOG	Greyhound	8	4	4	1	2	0	0	0	0	0	0	0	0	0	0	0
Gisborne District	2015	DOG	Heading	1778	845	933	4	29	0	0	0	0	0	0	0	0	0	0	0
Gisborne District	2015	DOG	Huntaway	2423	1022	1401	3	24	0	0	0	0	0	0	0	0	0	0	0
Gisborne District	2015	DOG	Maltese	47	30	17	8	43	0	0	0	0	0	0	0	0	0	0	0
Gisborne District	2015	DOG	Poodle, Miniature	28	16	12	1	23	0	0	0	0	0	0	0	0	0	0	0
Gisborne District	2015	DOG	Poodle, Toy	21	13	8	5	17	0	0	0	0	0	0	0	0	0	0	0
Gisborne District	2015	DOG	Retriever, Golden	48	23	25	5	27	0	0	0	0	0	0	0	0	0	0	0
Gisborne District	2015	DOG	Retriever, Labrador	567	288	279	56	394	2	0	0	0	0	0	0	0	0	0	0
Gisborne District	2015	DOG	Rottweiler	88	49	39	9	74	3	1	0	0	0	0	0	0	0	0	0
Gisborne District	2015	DOG	Schnauzer, Miniature	21	15	6	3	20	0	0	0	0	0	0	0	0	0	0	0
Gisborne District	2015	DOG	Shepherd, German	122	57	65	16	102	2	1	0	0	0	0	0	0	0	0	0
Gisborne District	2015	DOG	Shih Tzu	34	21	13	8	27	0	0	0	0	0	0	0	0	0	0	0
Gisborne District	2015	DOG	Spaniel, Cavalier King Charles	31	19	12	4	26	0	0	0	0	0	0	0	0	0	0	0
Gisborne District	2015	DOG	Spaniel, Cocker	32	16	16	7	21	0	0	0	0	0	0	0	0	0	0	0
Gisborne District	2015	DOG	Spaniel, English Springer	25	12	13	1	18	0	0	0	0	0	0	0	0	0	0	0
Gisborne District	2015	DOG	Terrier, American Pit Bull	29	8	21	22	22	27	0	0	0	0	0	0	0	0	0	0
Gisborne District	2015	DOG	Terrier, Fox (Smooth)	432	249	183	56	242	3	0	0	0	0	0	0	0	0	0	0
Gisborne District	2015	DOG	Terrier, Jack Russell	262	132	130	30	164	0	0	0	0	0	0	0	0	0	0	0
Gisborne District	2015	DOG	Terrier, Staffordshire Bull	77	41	36	6	65	0	0	0	0	0	0	0	0	0	0	0
Gisborne District	2015	DOG	Terrier, West Highland White	13	9	4	0	12	0	0	0	0	0	0	0	0	0	0	0
Gisborne District	2015	DOG	_Unidentified_	955	510	445	120	722	31	0	0	0	0	0	0	0	0	0	0
Gisborne District	2015	OWN	_	0	0	0	0	0	0	0	0	10	5318	103	0	0	0	0	0
Gisborne District	2015	JST	_	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Gisborne District	2015	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	176	36545	54592
Gisborne District	2016	DOG	_ALL-PURE_	7149	3443	3706	440	2470	65	4	0	0	0	0	0	0	0	0	0
Gisborne District	2016	DOG	_ALL-CROSS_	2922	1458	1464	516	2148	95	9	0	0	0	0	0	0	0	0	0
Gisborne District	2016	DOG	_ALL-DOGS_	10071	4901	5170	956	4618	160	13	0	0	0	0	0	0	0	0	0
Gisborne District	2016	DOG	Beagle	19	12	7	3	18	0	0	0	0	0	0	0	0	0	0	0
Gisborne District	2016	DOG	Bichon Frise	50	26	24	13	40	0	0	0	0	0	0	0	0	0	0	0
Gisborne District	2016	DOG	Boxer	57	25	32	8	45	1	0	0	0	0	0	0	0	0	0	0
Gisborne District	2016	DOG	Cattle, Australian	96	38	58	9	54	1	0	0	0	0	0	0	0	0	0	0
Gisborne District	2016	DOG	Chihuahua, Long Coat	34	18	16	8	28	0	0	0	0	0	0	0	0	0	0	0
Gisborne District	2016	DOG	Chihuahua, Smooth Coat	23	12	11	6	19	0	0	0	0	0	0	0	0	0	0	0
Gisborne District	2016	DOG	Collie, Bearded	9	5	4	0	3	0	0	0	0	0	0	0	0	0	0	0
Gisborne District	2016	DOG	Collie, Border	115	56	59	12	77	0	0	0	0	0	0	0	0	0	0	0
Gisborne District	2016	DOG	Collie, Rough	14	10	4	0	12	0	0	0	0	0	0	0	0	0	0	0
Gisborne District	2016	DOG	Collie, Smooth	1	0	1	0	1	0	0	0	0	0	0	0	0	0	0	0
Gisborne District	2016	DOG	Greyhound	7	4	3	2	3	0	0	0	0	0	0	0	0	0	0	0
Gisborne District	2016	DOG	Heading	1677	812	865	5	34	0	0	0	0	0	0	0	0	0	0	0
Gisborne District	2016	DOG	Huntaway	2269	968	1301	1	30	0	0	0	0	0	0	0	0	0	0	0
Gisborne District	2016	DOG	Maltese	43	27	16	10	38	0	0	0	0	0	0	0	0	0	0	0
Gisborne District	2016	DOG	Poodle, Miniature	27	16	11	3	24	0	0	0	0	0	0	0	0	0	0	0
Gisborne District	2016	DOG	Poodle, Toy	19	10	9	3	16	0	0	0	0	0	0	0	0	0	0	0
Gisborne District	2016	DOG	Retriever, Golden	48	17	31	6	29	0	0	0	0	0	0	0	0	0	0	0
Gisborne District	2016	DOG	Retriever, Labrador	549	275	274	57	410	2	0	0	0	0	0	0	0	0	0	0
Gisborne District	2016	DOG	Rottweiler	94	42	52	9	78	4	1	0	0	0	0	0	0	0	0	0
Gisborne District	2016	DOG	Schnauzer, Miniature	26	17	9	5	25	0	0	0	0	0	0	0	0	0	0	0
Gisborne District	2016	DOG	Shepherd, German	116	54	62	17	103	2	1	0	0	0	0	0	0	0	0	0
Gisborne District	2016	DOG	Shih Tzu	32	21	11	9	26	0	0	0	0	0	0	0	0	0	0	0
Gisborne District	2016	DOG	Spaniel, Cavalier King Charles	36	21	15	5	30	0	0	0	0	0	0	0	0	0	0	0
Gisborne District	2016	DOG	Spaniel, Cocker	34	19	15	9	25	0	0	0	0	0	0	0	0	0	0	0
Gisborne District	2016	DOG	Spaniel, English Springer	18	10	8	1	13	0	0	0	0	0	0	0	0	0	0	0
Gisborne District	2016	DOG	Terrier, American Pit Bull	27	8	19	19	25	25	0	0	0	0	0	0	0	0	0	0
Gisborne District	2016	DOG	Terrier, Fox (Smooth)	412	237	175	54	253	1	0	0	0	0	0	0	0	0	0	0
Gisborne District	2016	DOG	Terrier, Jack Russell	242	123	119	30	164	0	0	0	0	0	0	0	0	0	0	0
Gisborne District	2016	DOG	Terrier, Staffordshire Bull	87	51	36	8	75	0	0	0	0	0	0	0	0	0	0	0
Gisborne District	2016	DOG	Terrier, West Highland White	17	11	6	2	15	0	0	0	0	0	0	0	0	0	0	0
Gisborne District	2016	DOG	_Unidentified_	951	498	453	126	757	29	2	0	0	0	0	0	0	0	0	0
Gisborne District	2016	OWN	_	0	0	0	0	0	0	0	0	9	5264	106	0	0	0	0	0
Gore District	2001	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	11	1160	0
Gore District	2002	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	18	3321	0
Gore District	2003	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	10	6790	0
Gore District	2004	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	12	374	0
Gore District	2005	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	19	1158	0
Gore District	2006	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	12	5367	976
Gore District	2007	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	25	4432	7588
Gore District	2008	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	27	1325	1499
Gore District	2009	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	29	2590	3439
Gore District	2010	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	25	2273	2823
Gore District	2011	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	33	4156	3014
Gore District	2012	JST	_	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Gore District	2012	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	18	2582	2610
Gore District	2013	DOG	_ALL-PURE_	2691	1343	1348	398	609	11	2	0	0	0	0	0	0	0	0	0
Gore District	2013	DOG	_ALL-CROSS_	626	302	324	190	295	7	1	0	0	0	0	0	0	0	0	0
Gore District	2013	DOG	_ALL-DOGS_	3317	1645	1672	588	904	18	3	0	0	0	0	0	0	0	0	0
Gore District	2013	DOG	Beagle	11	9	2	4	6	0	0	0	0	0	0	0	0	0	0	0
Gore District	2013	DOG	Bichon Frise	60	27	33	34	34	0	0	0	0	0	0	0	0	0	0	0
Gore District	2013	DOG	Boxer	31	13	18	11	14	0	0	0	0	0	0	0	0	0	0	0
Gore District	2013	DOG	Cattle, Australian	2	1	1	1	0	0	0	0	0	0	0	0	0	0	0	0
Gore District	2013	DOG	Chihuahua, Long Coat	6	4	2	3	5	0	0	0	0	0	0	0	0	0	0	0
Gore District	2013	DOG	Chihuahua, Smooth Coat	32	16	16	10	18	0	0	0	0	0	0	0	0	0	0	0
Gore District	2013	DOG	Collie, Bearded	34	18	16	1	1	0	0	0	0	0	0	0	0	0	0	0
Gore District	2013	DOG	Collie, Border	104	52	52	15	17	0	0	0	0	0	0	0	0	0	0	0
Gore District	2013	DOG	Collie, Rough	582	262	320	4	7	0	0	0	0	0	0	0	0	0	0	0
Gore District	2013	DOG	Collie, Smooth	95	47	48	0	2	0	0	0	0	0	0	0	0	0	0	0
Gore District	2013	DOG	Greyhound	1	0	1	0	0	0	0	0	0	0	0	0	0	0	0	0
Gore District	2013	DOG	Heading	168	86	82	1	3	0	0	0	0	0	0	0	0	0	0	0
Gore District	2013	DOG	Huntaway	305	146	159	2	4	0	0	0	0	0	0	0	0	0	0	0
Gore District	2013	DOG	Maltese	17	8	9	12	8	0	0	0	0	0	0	0	0	0	0	0
Gore District	2013	DOG	Poodle, Miniature	12	6	6	5	3	0	0	0	0	0	0	0	0	0	0	0
Gore District	2013	DOG	Poodle, Toy	7	2	5	3	7	0	0	0	0	0	0	0	0	0	0	0
Gore District	2013	DOG	Retriever, Golden	21	12	9	3	11	0	0	0	0	0	0	0	0	0	0	0
Gore District	2013	DOG	Retriever, Labrador	328	174	154	75	115	2	0	0	0	0	0	0	0	0	0	0
Gore District	2013	DOG	Rottweiler	47	23	24	5	32	1	0	0	0	0	0	0	0	0	0	0
Gore District	2013	DOG	Schnauzer, Miniature	10	6	4	2	6	0	0	0	0	0	0	0	0	0	0	0
Gore District	2013	DOG	Shepherd, German	34	23	11	9	14	1	0	0	0	0	0	0	0	0	0	0
Gore District	2013	DOG	Shih Tzu	13	5	8	1	10	0	0	0	0	0	0	0	0	0	0	0
Gore District	2013	DOG	Spaniel, Cavalier King Charles	7	5	2	0	3	0	0	0	0	0	0	0	0	0	0	0
Gore District	2013	DOG	Spaniel, Cocker	32	13	19	12	19	0	0	0	0	0	0	0	0	0	0	0
Gore District	2013	DOG	Spaniel, English Springer	31	16	15	12	15	0	0	0	0	0	0	0	0	0	0	0
Gore District	2013	DOG	Terrier, American Pit Bull	9	4	5	3	5	6	0	0	0	0	0	0	0	0	0	0
Gore District	2013	DOG	Terrier, Fox (Smooth)	103	67	36	31	32	0	0	0	0	0	0	0	0	0	0	0
Gore District	2013	DOG	Terrier, Jack Russell	131	63	68	33	49	0	0	0	0	0	0	0	0	0	0	0
Gore District	2013	DOG	Terrier, Staffordshire Bull	40	18	22	10	13	0	1	0	0	0	0	0	0	0	0	0
Gore District	2013	DOG	Terrier, West Highland White	16	9	7	5	7	1	0	0	0	0	0	0	0	0	0	0
Gore District	2013	DOG	_Unidentified_	402	208	194	91	149	0	1	0	0	0	0	0	0	0	0	0
Gore District	2013	OWN	_	0	0	0	0	0	0	0	0	0	1833	8	0	0	0	0	0
Gore District	2013	JST	_	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Gore District	2013	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	38	3692	3382
Gore District	2014	DOG	_ALL-PURE_	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Gore District	2014	DOG	_ALL-CROSS_	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Gore District	2014	DOG	_ALL-DOGS_	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Gore District	2014	DOG	Beagle	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Gore District	2014	DOG	Bichon Frise	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Gore District	2014	DOG	Boxer	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Gore District	2014	DOG	Cattle, Australian	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Gore District	2014	DOG	Chihuahua, Long Coat	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Gore District	2014	DOG	Chihuahua, Smooth Coat	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Gore District	2014	DOG	Collie, Bearded	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Gore District	2014	DOG	Collie, Border	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Gore District	2014	DOG	Collie, Rough	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Gore District	2014	DOG	Collie, Smooth	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Gore District	2014	DOG	Greyhound	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Gore District	2014	DOG	Heading	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Gore District	2014	DOG	Huntaway	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Gore District	2014	DOG	Maltese	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Gore District	2014	DOG	Poodle, Miniature	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Gore District	2014	DOG	Poodle, Toy	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Gore District	2014	DOG	Retriever, Golden	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Gore District	2014	DOG	Retriever, Labrador	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Gore District	2014	DOG	Rottweiler	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Gore District	2014	DOG	Schnauzer, Miniature	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Gore District	2014	DOG	Shepherd, German	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Gore District	2014	DOG	Shih Tzu	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Gore District	2014	DOG	Spaniel, Cavalier King Charles	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Gore District	2014	DOG	Spaniel, Cocker	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Gore District	2014	DOG	Spaniel, English Springer	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Gore District	2014	DOG	Terrier, American Pit Bull	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Gore District	2014	DOG	Terrier, Fox (Smooth)	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Gore District	2014	DOG	Terrier, Jack Russell	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Gore District	2014	DOG	Terrier, Staffordshire Bull	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Gore District	2014	DOG	Terrier, West Highland White	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Gore District	2014	DOG	_Unidentified_	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Gore District	2014	OWN	_	0	0	0	0	0	0	0	0	0	0	8	0	0	0	0	0
Gore District	2014	JST	_	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Gore District	2014	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	40	4893	6139
Gore District	2015	DOG	_ALL-PURE_	2523	1236	1287	465	744	4	4	0	0	0	0	0	0	0	0	0
Gore District	2015	DOG	_ALL-CROSS_	675	330	345	259	381	1	2	0	0	0	0	0	0	0	0	0
Gore District	2015	DOG	_ALL-DOGS_	3198	1566	1632	724	1125	5	6	0	0	0	0	0	0	0	0	0
Gore District	2015	DOG	Beagle	11	9	2	4	6	0	0	0	0	0	0	0	0	0	0	0
Gore District	2015	DOG	Bichon Frise	58	28	30	38	40	0	0	0	0	0	0	0	0	0	0	0
Gore District	2015	DOG	Boxer	27	13	14	9	14	0	0	0	0	0	0	0	0	0	0	0
Gore District	2015	DOG	Cattle, Australian	2	1	1	1	0	0	0	0	0	0	0	0	0	0	0	0
Gore District	2015	DOG	Chihuahua, Long Coat	10	5	5	4	8	0	0	0	0	0	0	0	0	0	0	0
Gore District	2015	DOG	Chihuahua, Smooth Coat	28	16	12	7	21	0	0	0	0	0	0	0	0	0	0	0
Gore District	2015	DOG	Collie, Bearded	37	21	16	2	2	0	0	0	0	0	0	0	0	0	0	0
Gore District	2015	DOG	Collie, Border	93	47	46	14	23	0	0	0	0	0	0	0	0	0	0	0
Gore District	2015	DOG	Collie, Rough	509	221	288	10	6	0	0	0	0	0	0	0	0	0	0	0
Gore District	2015	DOG	Collie, Smooth	84	41	43	0	2	0	0	0	0	0	0	0	0	0	0	0
Gore District	2015	DOG	Greyhound	3	2	1	0	0	0	0	0	0	0	0	0	0	0	0	0
Gore District	2015	DOG	Heading	178	95	83	2	4	0	0	0	0	0	0	0	0	0	0	0
Gore District	2015	DOG	Huntaway	287	114	173	4	9	0	0	0	0	0	0	0	0	0	0	0
Gore District	2015	DOG	Maltese	15	7	8	8	11	0	0	0	0	0	0	0	0	0	0	0
Gore District	2015	DOG	Poodle, Miniature	14	6	8	7	5	0	0	0	0	0	0	0	0	0	0	0
Gore District	2015	DOG	Poodle, Toy	9	4	5	4	8	0	0	0	0	0	0	0	0	0	0	0
Gore District	2015	DOG	Retriever, Golden	17	12	5	3	12	0	0	0	0	0	0	0	0	0	0	0
Gore District	2015	DOG	Retriever, Labrador	317	168	149	92	151	2	0	0	0	0	0	0	0	0	0	0
Gore District	2015	DOG	Rottweiler	48	24	24	7	36	0	3	0	0	0	0	0	0	0	0	0
Gore District	2015	DOG	Schnauzer, Miniature	12	6	6	4	10	0	0	0	0	0	0	0	0	0	0	0
Gore District	2015	DOG	Shepherd, German	28	14	14	7	13	1	0	0	0	0	0	0	0	0	0	0
Gore District	2015	DOG	Shih Tzu	24	13	11	7	19	0	0	0	0	0	0	0	0	0	0	0
Gore District	2015	DOG	Spaniel, Cavalier King Charles	6	5	1	2	3	0	0	0	0	0	0	0	0	0	0	0
Gore District	2015	DOG	Spaniel, Cocker	31	13	18	13	18	0	0	0	0	0	0	0	0	0	0	0
Gore District	2015	DOG	Spaniel, English Springer	35	13	22	13	21	0	0	0	0	0	0	0	0	0	0	0
Gore District	2015	DOG	Terrier, American Pit Bull	5	2	3	3	3	0	0	0	0	0	0	0	0	0	0	0
Gore District	2015	DOG	Terrier, Fox (Smooth)	78	51	27	30	30	0	0	0	0	0	0	0	0	0	0	0
Gore District	2015	DOG	Terrier, Jack Russell	125	58	67	37	61	0	0	0	0	0	0	0	0	0	0	0
Gore District	2015	DOG	Terrier, Staffordshire Bull	28	13	15	13	12	0	0	0	0	0	0	0	0	0	0	0
Gore District	2015	DOG	Terrier, West Highland White	14	6	8	7	4	1	0	0	0	0	0	0	0	0	0	0
Gore District	2015	DOG	_Unidentified_	390	208	182	113	192	0	1	0	0	0	0	0	0	0	0	0
Gore District	2015	OWN	_	0	0	0	0	0	0	0	0	0	1859	26	0	0	0	0	0
Gore District	2015	JST	_	0	0	0	0	0	0	0	0	0	0	0	2	0	0	0	0
Gore District	2015	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	41	11988	12302
Gore District	2016	DOG	_ALL-PURE_	1907	937	970	378	666	5	3	0	0	0	0	0	0	0	0	0
Gore District	2016	DOG	_ALL-CROSS_	590	289	301	223	338	2	3	0	0	0	0	0	0	0	0	0
Gore District	2016	DOG	_ALL-DOGS_	2497	1226	1271	601	1004	7	6	0	0	0	0	0	0	0	0	0
Gore District	2016	DOG	Beagle	11	7	4	3	6	0	0	0	0	0	0	0	0	0	0	0
Gore District	2016	DOG	Bichon Frise	46	26	20	29	32	0	0	0	0	0	0	0	0	0	0	0
Gore District	2016	DOG	Boxer	24	9	15	7	11	0	0	0	0	0	0	0	0	0	0	0
Gore District	2016	DOG	Cattle, Australian	3	2	1	2	0	0	0	0	0	0	0	0	0	0	0	0
Gore District	2016	DOG	Chihuahua, Long Coat	14	8	6	6	10	0	0	0	0	0	0	0	0	0	0	0
Gore District	2016	DOG	Chihuahua, Smooth Coat	23	14	9	5	20	0	0	0	0	0	0	0	0	0	0	0
Gore District	2016	DOG	Collie, Bearded	32	22	10	2	2	0	0	0	0	0	0	0	0	0	0	0
Gore District	2016	DOG	Collie, Border	68	38	30	11	25	0	0	0	0	0	0	0	0	0	0	0
Gore District	2016	DOG	Collie, Rough	332	152	180	6	5	0	0	0	0	0	0	0	0	0	0	0
Gore District	2016	DOG	Collie, Smooth	64	30	34	0	2	0	0	0	0	0	0	0	0	0	0	0
Gore District	2016	DOG	Greyhound	5	3	2	0	3	0	0	0	0	0	0	0	0	0	0	0
Gore District	2016	DOG	Heading	130	63	67	0	4	0	0	0	0	0	0	0	0	0	0	0
Gore District	2016	DOG	Huntaway	192	78	114	2	8	0	0	0	0	0	0	0	0	0	0	0
Gore District	2016	DOG	Maltese	15	8	7	7	11	0	0	0	0	0	0	0	0	0	0	0
Gore District	2016	DOG	Poodle, Miniature	9	4	5	4	2	0	0	0	0	0	0	0	0	0	0	0
Gore District	2016	DOG	Poodle, Toy	6	2	4	3	6	0	0	0	0	0	0	0	0	0	0	0
Gore District	2016	DOG	Retriever, Golden	9	6	3	3	8	0	0	0	0	0	0	0	0	0	0	0
Gore District	2016	DOG	Retriever, Labrador	244	119	125	71	122	2	0	0	0	0	0	0	0	0	0	0
Gore District	2016	DOG	Rottweiler	49	22	27	8	35	1	2	0	0	0	0	0	0	0	0	0
Gore District	2016	DOG	Schnauzer, Miniature	11	6	5	3	10	0	0	0	0	0	0	0	0	0	0	0
Gore District	2016	DOG	Shepherd, German	22	14	8	5	13	1	0	0	0	0	0	0	0	0	0	0
Gore District	2016	DOG	Shih Tzu	23	12	11	7	18	0	0	0	0	0	0	0	0	0	0	0
Gore District	2016	DOG	Spaniel, Cavalier King Charles	4	3	1	1	2	0	0	0	0	0	0	0	0	0	0	0
Gore District	2016	DOG	Spaniel, Cocker	22	8	14	11	14	0	0	0	0	0	0	0	0	0	0	0
Gore District	2016	DOG	Spaniel, English Springer	27	10	17	10	15	0	0	0	0	0	0	0	0	0	0	0
Gore District	2016	DOG	Terrier, American Pit Bull	4	2	2	3	2	0	0	0	0	0	0	0	0	0	0	0
Gore District	2016	DOG	Terrier, Fox (Smooth)	61	38	23	29	29	0	0	0	0	0	0	0	0	0	0	0
Gore District	2016	DOG	Terrier, Jack Russell	101	52	49	27	56	0	0	0	0	0	0	0	0	0	0	0
Gore District	2016	DOG	Terrier, Staffordshire Bull	19	10	9	9	9	0	0	0	0	0	0	0	0	0	0	0
Gore District	2016	DOG	Terrier, West Highland White	10	4	6	6	4	0	0	0	0	0	0	0	0	0	0	0
Gore District	2016	DOG	_Unidentified_	327	165	162	98	182	1	1	0	0	0	0	0	0	0	0	0
Gore District	2016	OWN	_	0	0	0	0	0	0	0	0	0	1541	16	0	0	0	0	0
Grey District	2001	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	13	3041	0
Grey District	2002	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	8	2649	0
Grey District	2003	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	6	10312	0
Grey District	2004	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	18	1123	0
Grey District	2005	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	15	277	0
Grey District	2006	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	20	2938	2866
Grey District	2007	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	22	985	1227
Grey District	2008	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	24	2094	1328
Grey District	2009	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	25	2750	9786
Grey District	2010	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	17	1135	1044
Grey District	2011	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	19	6543	5606
Grey District	2012	JST	_	0	0	0	0	0	0	0	0	0	0	0	1	1	0	0	0
Grey District	2012	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	31	9520	7351
Grey District	2013	DOG	_ALL-PURE_	1541	771	770	890	689	7	5	0	0	0	0	0	0	0	0	0
Grey District	2013	DOG	_ALL-CROSS_	883	430	453	552	376	13	6	0	0	0	0	0	0	0	0	0
Grey District	2013	DOG	_ALL-DOGS_	2424	1201	1223	1442	1065	20	11	0	0	0	0	0	0	0	0	0
Grey District	2013	DOG	Beagle	13	6	7	9	8	0	0	0	0	0	0	0	0	0	0	0
Grey District	2013	DOG	Bichon Frise	57	33	24	42	31	0	0	0	0	0	0	0	0	0	0	0
Grey District	2013	DOG	Boxer	24	16	8	19	11	0	0	0	0	0	0	0	0	0	0	0
Grey District	2013	DOG	Cattle, Australian	29	13	16	12	9	0	0	0	0	0	0	0	0	0	0	0
Grey District	2013	DOG	Chihuahua, Long Coat	15	6	9	5	6	0	0	0	0	0	0	0	0	0	0	0
Grey District	2013	DOG	Chihuahua, Smooth Coat	17	5	12	10	11	0	0	0	0	0	0	0	0	0	0	0
Grey District	2013	DOG	Collie, Bearded	28	18	10	11	5	0	0	0	0	0	0	0	0	0	0	0
Grey District	2013	DOG	Collie, Border	155	96	59	57	46	0	0	0	0	0	0	0	0	0	0	0
Grey District	2013	DOG	Collie, Rough	7	1	6	4	1	0	0	0	0	0	0	0	0	0	0	0
Grey District	2013	DOG	Collie, Smooth	5	4	1	1	1	0	0	0	0	0	0	0	0	0	0	0
Grey District	2013	DOG	Greyhound	3	2	1	2	1	0	0	0	0	0	0	0	0	0	0	0
Grey District	2013	DOG	Heading	18	10	8	1	3	0	0	0	0	0	0	0	0	0	0	0
Grey District	2013	DOG	Huntaway	94	47	47	16	12	0	0	0	0	0	0	0	0	0	0	0
Grey District	2013	DOG	Maltese	18	8	10	16	12	0	0	0	0	0	0	0	0	0	0	0
Grey District	2013	DOG	Poodle, Miniature	15	9	6	14	7	0	0	0	0	0	0	0	0	0	0	0
Grey District	2013	DOG	Poodle, Toy	9	5	4	7	3	0	0	0	0	0	0	0	0	0	0	0
Grey District	2013	DOG	Retriever, Golden	41	15	26	31	19	0	0	0	0	0	0	0	0	0	0	0
Grey District	2013	DOG	Retriever, Labrador	205	93	112	135	111	0	0	0	0	0	0	0	0	0	0	0
Grey District	2013	DOG	Rottweiler	55	20	35	30	41	0	2	0	0	0	0	0	0	0	0	0
Grey District	2013	DOG	Schnauzer, Miniature	7	1	6	1	6	0	0	0	0	0	0	0	0	0	0	0
Grey District	2013	DOG	Shepherd, German	44	20	24	25	17	2	0	0	0	0	0	0	0	0	0	0
Grey District	2013	DOG	Shih Tzu	6	3	3	5	6	0	0	0	0	0	0	0	0	0	0	0
Grey District	2013	DOG	Spaniel, Cavalier King Charles	12	7	5	8	4	0	0	0	0	0	0	0	0	0	0	0
Grey District	2013	DOG	Spaniel, Cocker	20	11	9	17	6	0	0	0	0	0	0	0	0	0	0	0
Grey District	2013	DOG	Spaniel, English Springer	20	11	9	11	9	0	0	0	0	0	0	0	0	0	0	0
Grey District	2013	DOG	Terrier, American Pit Bull	3	1	2	1	0	1	0	0	0	0	0	0	0	0	0	0
Grey District	2013	DOG	Terrier, Fox (Smooth)	115	63	52	82	47	1	0	0	0	0	0	0	0	0	0	0
Grey District	2013	DOG	Terrier, Jack Russell	95	44	51	68	49	0	0	0	0	0	0	0	0	0	0	0
Grey District	2013	DOG	Terrier, Staffordshire Bull	70	35	35	38	36	1	0	0	0	0	0	0	0	0	0	0
Grey District	2013	DOG	Terrier, West Highland White	4	2	2	2	1	0	0	0	0	0	0	0	0	0	0	0
Grey District	2013	DOG	_Unidentified_	337	166	171	210	170	2	3	0	0	0	0	0	0	0	0	0
Grey District	2013	OWN	_	0	0	0	0	0	0	0	0	0	1857	11	0	0	0	0	0
Grey District	2013	JST	_	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Grey District	2013	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	35	5622	5919
Grey District	2014	DOG	_ALL-PURE_	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Grey District	2014	DOG	_ALL-CROSS_	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Grey District	2014	DOG	_ALL-DOGS_	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Grey District	2014	DOG	Beagle	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Grey District	2014	DOG	Bichon Frise	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Grey District	2014	DOG	Boxer	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Grey District	2014	DOG	Cattle, Australian	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Grey District	2014	DOG	Chihuahua, Long Coat	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Grey District	2014	DOG	Chihuahua, Smooth Coat	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Grey District	2014	DOG	Collie, Bearded	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Grey District	2014	DOG	Collie, Border	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Grey District	2014	DOG	Collie, Rough	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Grey District	2014	DOG	Collie, Smooth	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Grey District	2014	DOG	Greyhound	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Grey District	2014	DOG	Heading	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Grey District	2014	DOG	Huntaway	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Grey District	2014	DOG	Maltese	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Grey District	2014	DOG	Poodle, Miniature	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Grey District	2014	DOG	Poodle, Toy	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Grey District	2014	DOG	Retriever, Golden	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Grey District	2014	DOG	Retriever, Labrador	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Grey District	2014	DOG	Rottweiler	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Grey District	2014	DOG	Schnauzer, Miniature	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Grey District	2014	DOG	Shepherd, German	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Grey District	2014	DOG	Shih Tzu	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Grey District	2014	DOG	Spaniel, Cavalier King Charles	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Grey District	2014	DOG	Spaniel, Cocker	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Grey District	2014	DOG	Spaniel, English Springer	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Grey District	2014	DOG	Terrier, American Pit Bull	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Grey District	2014	DOG	Terrier, Fox (Smooth)	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Grey District	2014	DOG	Terrier, Jack Russell	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Grey District	2014	DOG	Terrier, Staffordshire Bull	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Grey District	2014	DOG	Terrier, West Highland White	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Grey District	2014	DOG	_Unidentified_	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Grey District	2014	OWN	_	0	0	0	0	0	0	0	0	0	0	12	0	0	0	0	0
Grey District	2014	JST	_	0	0	0	0	0	0	0	0	0	0	0	3	2	0	0	0
Grey District	2014	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	32	5786	13279
Grey District	2015	DOG	_ALL-PURE_	1706	872	834	961	979	13	3	0	0	0	0	0	0	0	0	0
Grey District	2015	DOG	_ALL-CROSS_	1002	503	499	657	592	31	5	0	0	0	0	0	0	0	0	0
Grey District	2015	DOG	_ALL-DOGS_	2708	1375	1333	1618	1571	44	8	0	0	0	0	0	0	0	0	0
Grey District	2015	DOG	Beagle	12	5	7	9	7	0	0	0	0	0	0	0	0	0	0	0
Grey District	2015	DOG	Bichon Frise	67	36	31	48	45	0	0	0	0	0	0	0	0	0	0	0
Grey District	2015	DOG	Boxer	24	15	9	17	19	0	0	0	0	0	0	0	0	0	0	0
Grey District	2015	DOG	Cattle, Australian	28	15	13	13	12	0	0	0	0	0	0	0	0	0	0	0
Grey District	2015	DOG	Chihuahua, Long Coat	12	6	6	7	4	0	0	0	0	0	0	0	0	0	0	0
Grey District	2015	DOG	Chihuahua, Smooth Coat	33	16	17	17	22	0	0	0	0	0	0	0	0	0	0	0
Grey District	2015	DOG	Collie, Bearded	31	19	12	13	6	0	0	0	0	0	0	0	0	0	0	0
Grey District	2015	DOG	Collie, Border	176	102	74	63	68	0	0	0	0	0	0	0	0	0	0	0
Grey District	2015	DOG	Collie, Rough	3	1	2	2	1	0	0	0	0	0	0	0	0	0	0	0
Grey District	2015	DOG	Collie, Smooth	5	3	2	2	1	0	0	0	0	0	0	0	0	0	0	0
Grey District	2015	DOG	Greyhound	4	3	1	3	2	0	0	0	0	0	0	0	0	0	0	0
Grey District	2015	DOG	Heading	32	19	13	2	6	0	0	0	0	0	0	0	0	0	0	0
Grey District	2015	DOG	Huntaway	100	53	47	20	20	0	0	0	0	0	0	0	0	0	0	0
Grey District	2015	DOG	Maltese	21	10	11	17	15	0	0	0	0	0	0	0	0	0	0	0
Grey District	2015	DOG	Poodle, Miniature	16	10	6	14	11	0	0	0	0	0	0	0	0	0	0	0
Grey District	2015	DOG	Poodle, Toy	10	5	5	7	6	0	0	0	0	0	0	0	0	0	0	0
Grey District	2015	DOG	Retriever, Golden	35	13	22	24	21	0	0	0	0	0	0	0	0	0	0	0
Grey District	2015	DOG	Retriever, Labrador	252	122	130	171	163	0	0	0	0	0	0	0	0	0	0	0
Grey District	2015	DOG	Rottweiler	42	13	29	24	34	0	0	0	0	0	0	0	0	0	0	0
Grey District	2015	DOG	Schnauzer, Miniature	14	7	7	7	12	0	0	0	0	0	0	0	0	0	0	0
Grey District	2015	DOG	Shepherd, German	47	21	26	22	28	0	0	0	0	0	0	0	0	0	0	0
Grey District	2015	DOG	Shih Tzu	13	10	3	11	13	0	0	0	0	0	0	0	0	0	0	0
Grey District	2015	DOG	Spaniel, Cavalier King Charles	9	5	4	8	7	0	0	0	0	0	0	0	0	0	0	0
Grey District	2015	DOG	Spaniel, Cocker	15	8	7	11	6	0	0	0	0	0	0	0	0	0	0	0
Grey District	2015	DOG	Spaniel, English Springer	22	11	11	9	17	0	0	0	0	0	0	0	0	0	0	0
Grey District	2015	DOG	Terrier, American Pit Bull	4	2	2	2	2	2	1	0	0	0	0	0	0	0	0	0
Grey District	2015	DOG	Terrier, Fox (Smooth)	114	67	47	82	59	3	0	0	0	0	0	0	0	0	0	0
Grey District	2015	DOG	Terrier, Jack Russell	94	39	55	68	57	0	0	0	0	0	0	0	0	0	0	0
Grey District	2015	DOG	Terrier, Staffordshire Bull	94	46	48	47	65	1	0	0	0	0	0	0	0	0	0	0
Grey District	2015	DOG	Terrier, West Highland White	4	2	2	2	3	0	0	0	0	0	0	0	0	0	0	0
Grey District	2015	DOG	_Unidentified_	373	188	185	219	247	7	2	0	0	0	0	0	0	0	0	0
Grey District	2015	OWN	_	0	0	0	0	0	0	0	0	0	2051	13	0	0	0	0	0
Grey District	2015	JST	_	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Grey District	2015	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	46	6474	7471
Grey District	2016	DOG	_ALL-PURE_	1669	849	820	982	1026	13	0	0	0	0	0	0	0	0	0	0
Grey District	2016	DOG	_ALL-CROSS_	1024	523	501	664	629	27	2	0	0	0	0	0	0	0	0	0
Grey District	2016	DOG	_ALL-DOGS_	2693	1372	1321	1646	1655	40	2	0	0	0	0	0	0	0	0	0
Grey District	2016	DOG	Beagle	11	4	7	8	9	0	0	0	0	0	0	0	0	0	0	0
Grey District	2016	DOG	Bichon Frise	74	40	34	55	52	1	0	0	0	0	0	0	0	0	0	0
Grey District	2016	DOG	Boxer	27	15	12	17	19	0	0	0	0	0	0	0	0	0	0	0
Grey District	2016	DOG	Cattle, Australian	26	13	13	11	12	0	0	0	0	0	0	0	0	0	0	0
Grey District	2016	DOG	Chihuahua, Long Coat	12	6	6	7	5	0	0	0	0	0	0	0	0	0	0	0
Grey District	2016	DOG	Chihuahua, Smooth Coat	31	17	14	18	25	0	0	0	0	0	0	0	0	0	0	0
Grey District	2016	DOG	Collie, Bearded	34	18	16	13	8	0	0	0	0	0	0	0	0	0	0	0
Grey District	2016	DOG	Collie, Border	159	90	69	64	73	0	0	0	0	0	0	0	0	0	0	0
Grey District	2016	DOG	Collie, Rough	2	1	1	2	1	0	0	0	0	0	0	0	0	0	0	0
Grey District	2016	DOG	Collie, Smooth	1	1	0	1	1	0	0	0	0	0	0	0	0	0	0	0
Grey District	2016	DOG	Greyhound	3	3	0	2	2	0	0	0	0	0	0	0	0	0	0	0
Grey District	2016	DOG	Heading	35	19	16	3	6	0	0	0	0	0	0	0	0	0	0	0
Grey District	2016	DOG	Huntaway	87	43	44	19	17	0	0	0	0	0	0	0	0	0	0	0
Grey District	2016	DOG	Maltese	25	9	16	23	17	0	0	0	0	0	0	0	0	0	0	0
Grey District	2016	DOG	Poodle, Miniature	15	10	5	12	11	0	0	0	0	0	0	0	0	0	0	0
Grey District	2016	DOG	Poodle, Toy	11	6	5	8	6	0	0	0	0	0	0	0	0	0	0	0
Grey District	2016	DOG	Retriever, Golden	34	14	20	22	22	0	0	0	0	0	0	0	0	0	0	0
Grey District	2016	DOG	Retriever, Labrador	241	115	126	164	168	0	0	0	0	0	0	0	0	0	0	0
Grey District	2016	DOG	Rottweiler	35	10	25	22	32	0	0	0	0	0	0	0	0	0	0	0
Grey District	2016	DOG	Schnauzer, Miniature	14	6	8	6	12	0	0	0	0	0	0	0	0	0	0	0
Grey District	2016	DOG	Shepherd, German	44	21	23	17	30	0	0	0	0	0	0	0	0	0	0	0
Grey District	2016	DOG	Shih Tzu	16	11	5	13	14	0	0	0	0	0	0	0	0	0	0	0
Grey District	2016	DOG	Spaniel, Cavalier King Charles	7	6	1	5	6	0	0	0	0	0	0	0	0	0	0	0
Grey District	2016	DOG	Spaniel, Cocker	18	10	8	11	9	0	0	0	0	0	0	0	0	0	0	0
Grey District	2016	DOG	Spaniel, English Springer	22	11	11	10	17	0	0	0	0	0	0	0	0	0	0	0
Grey District	2016	DOG	Terrier, American Pit Bull	2	1	1	1	1	2	0	0	0	0	0	0	0	0	0	0
Grey District	2016	DOG	Terrier, Fox (Smooth)	107	65	42	80	53	3	0	0	0	0	0	0	0	0	0	0
Grey District	2016	DOG	Terrier, Jack Russell	99	44	55	75	65	0	0	0	0	0	0	0	0	0	0	0
Grey District	2016	DOG	Terrier, Staffordshire Bull	96	51	45	54	64	1	0	0	0	0	0	0	0	0	0	0
Grey District	2016	DOG	Terrier, West Highland White	5	2	3	3	4	0	0	0	0	0	0	0	0	0	0	0
Grey District	2016	DOG	_Unidentified_	376	187	189	236	265	6	0	0	0	0	0	0	0	0	0	0
Grey District	2016	OWN	_	0	0	0	0	0	0	0	0	0	2024	12	0	0	0	0	0
Hamilton City	2001	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	95	23663	0
Hamilton City	2002	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	71	18289	0
Hamilton City	2003	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	84	25798	0
Hamilton City	2004	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	293	41736	0
Hamilton City	2005	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	294	56770	0
Hamilton City	2006	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	304	73589	61654
Hamilton City	2007	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	348	60144	78653
Hamilton City	2008	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	291	48488	49742
Hamilton City	2009	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	322	57845	73072
Hamilton City	2010	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	343	99269	75640
Hamilton City	2011	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	357	88231	86517
Hamilton City	2012	JST	_	0	0	0	0	0	0	0	0	0	0	0	2	1	0	0	0
Hamilton City	2012	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	396	82541	90297
Hamilton City	2013	DOG	_ALL-PURE_	6020	2870	3150	3067	4838	93	2	0	0	0	0	0	0	0	0	0
Hamilton City	2013	DOG	_ALL-CROSS_	4690	2341	2349	2366	3998	172	0	0	0	0	0	0	0	0	0	0
Hamilton City	2013	DOG	_ALL-DOGS_	10710	5211	5499	5433	8836	265	2	0	0	0	0	0	0	0	0	0
Hamilton City	2013	DOG	Beagle	93	42	51	56	81	0	0	0	0	0	0	0	0	0	0	0
Hamilton City	2013	DOG	Bichon Frise	190	78	112	100	173	1	0	0	0	0	0	0	0	0	0	0
Hamilton City	2013	DOG	Boxer	123	60	63	56	106	1	0	0	0	0	0	0	0	0	0	0
Hamilton City	2013	DOG	Cattle, Australian	36	17	19	17	29	1	0	0	0	0	0	0	0	0	0	0
Hamilton City	2013	DOG	Chihuahua, Long Coat	140	74	66	61	115	0	0	0	0	0	0	0	0	0	0	0
Hamilton City	2013	DOG	Chihuahua, Smooth Coat	94	53	41	41	72	0	0	0	0	0	0	0	0	0	0	0
Hamilton City	2013	DOG	Collie, Bearded	13	4	9	8	8	0	0	0	0	0	0	0	0	0	0	0
Hamilton City	2013	DOG	Collie, Border	206	99	107	125	149	0	0	0	0	0	0	0	0	0	0	0
Hamilton City	2013	DOG	Collie, Rough	18	9	9	10	10	0	0	0	0	0	0	0	0	0	0	0
Hamilton City	2013	DOG	Collie, Smooth	1	1	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Hamilton City	2013	DOG	Greyhound	25	8	17	12	23	0	0	0	0	0	0	0	0	0	0	0
Hamilton City	2013	DOG	Heading	11	5	6	6	10	0	0	0	0	0	0	0	0	0	0	0
Hamilton City	2013	DOG	Huntaway	37	15	22	19	29	0	0	0	0	0	0	0	0	0	0	0
Hamilton City	2013	DOG	Maltese	106	50	56	40	95	0	0	0	0	0	0	0	0	0	0	0
Hamilton City	2013	DOG	Poodle, Miniature	76	37	39	46	58	0	0	0	0	0	0	0	0	0	0	0
Hamilton City	2013	DOG	Poodle, Toy	100	44	56	61	79	0	0	0	0	0	0	0	0	0	0	0
Hamilton City	2013	DOG	Retriever, Golden	187	93	94	84	135	0	0	0	0	0	0	0	0	0	0	0
Hamilton City	2013	DOG	Retriever, Labrador	783	380	403	414	649	3	0	0	0	0	0	0	0	0	0	0
Hamilton City	2013	DOG	Rottweiler	167	72	95	52	150	2	0	0	0	0	0	0	0	0	0	0
Hamilton City	2013	DOG	Schnauzer, Miniature	160	72	88	90	140	0	0	0	0	0	0	0	0	0	0	0
Hamilton City	2013	DOG	Shepherd, German	330	168	162	111	270	7	1	0	0	0	0	0	0	0	0	0
Hamilton City	2013	DOG	Shih Tzu	78	30	48	42	72	0	0	0	0	0	0	0	0	0	0	0
Hamilton City	2013	DOG	Spaniel, Cavalier King Charles	90	38	52	55	68	0	0	0	0	0	0	0	0	0	0	0
Hamilton City	2013	DOG	Spaniel, Cocker	109	57	52	64	85	0	0	0	0	0	0	0	0	0	0	0
Hamilton City	2013	DOG	Spaniel, English Springer	55	27	28	21	49	0	0	0	0	0	0	0	0	0	0	0
Hamilton City	2013	DOG	Terrier, American Pit Bull	100	54	46	71	97	60	0	0	0	0	0	0	0	0	0	0
Hamilton City	2013	DOG	Terrier, Fox (Smooth)	380	191	189	246	259	3	0	0	0	0	0	0	0	0	0	0
Hamilton City	2013	DOG	Terrier, Jack Russell	296	141	155	197	208	2	0	0	0	0	0	0	0	0	0	0
Hamilton City	2013	DOG	Terrier, Staffordshire Bull	180	85	95	63	159	3	0	0	0	0	0	0	0	0	0	0
Hamilton City	2013	DOG	Terrier, West Highland White	66	42	24	46	45	0	0	0	0	0	0	0	0	0	0	0
Hamilton City	2013	DOG	_Unidentified_	1770	824	946	853	1415	10	1	0	0	0	0	0	0	0	0	0
Hamilton City	2013	OWN	_	0	0	0	0	0	0	0	0	22	12273	1022	0	0	0	0	0
Hamilton City	2013	JST	_	0	0	0	0	0	0	0	0	0	0	0	1	0	0	0	0
Hamilton City	2013	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	382	69928	85071
Hamilton City	2014	DOG	_ALL-PURE_	5801	2805	2996	2699	4898	83	3	0	0	0	0	0	0	0	0	0
Hamilton City	2014	DOG	_ALL-CROSS_	4756	2356	2400	2199	4210	181	3	0	0	0	0	0	0	0	0	0
Hamilton City	2014	DOG	_ALL-DOGS_	10557	5161	5396	4898	9108	264	6	0	0	0	0	0	0	0	0	0
Hamilton City	2014	DOG	Beagle	86	40	46	51	80	0	0	0	0	0	0	0	0	0	0	0
Hamilton City	2014	DOG	Bichon Frise	169	75	94	85	156	0	0	0	0	0	0	0	0	0	0	0
Hamilton City	2014	DOG	Boxer	113	57	56	48	106	1	1	0	0	0	0	0	0	0	0	0
Hamilton City	2014	DOG	Cattle, Australian	35	16	19	16	31	1	0	0	0	0	0	0	0	0	0	0
Hamilton City	2014	DOG	Chihuahua, Long Coat	142	80	62	48	123	0	0	0	0	0	0	0	0	0	0	0
Hamilton City	2014	DOG	Chihuahua, Smooth Coat	105	60	45	37	88	0	0	0	0	0	0	0	0	0	0	0
Hamilton City	2014	DOG	Collie, Bearded	13	4	9	8	9	0	0	0	0	0	0	0	0	0	0	0
Hamilton City	2014	DOG	Collie, Border	195	95	100	105	154	0	0	0	0	0	0	0	0	0	0	0
Hamilton City	2014	DOG	Collie, Rough	21	12	9	7	17	0	0	0	0	0	0	0	0	0	0	0
Hamilton City	2014	DOG	Collie, Smooth	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Hamilton City	2014	DOG	Greyhound	34	15	19	16	34	0	0	0	0	0	0	0	0	0	0	0
Hamilton City	2014	DOG	Heading	12	6	6	5	12	0	0	0	0	0	0	0	0	0	0	0
Hamilton City	2014	DOG	Huntaway	34	15	19	18	28	0	0	0	0	0	0	0	0	0	0	0
Hamilton City	2014	DOG	Maltese	121	58	63	39	113	0	0	0	0	0	0	0	0	0	0	0
Hamilton City	2014	DOG	Poodle, Miniature	64	32	32	31	56	0	0	0	0	0	0	0	0	0	0	0
Hamilton City	2014	DOG	Poodle, Toy	100	44	56	57	81	0	0	0	0	0	0	0	0	0	0	0
Hamilton City	2014	DOG	Retriever, Golden	175	84	91	72	134	0	0	0	0	0	0	0	0	0	0	0
Hamilton City	2014	DOG	Retriever, Labrador	760	386	374	379	648	3	0	0	0	0	0	0	0	0	0	0
Hamilton City	2014	DOG	Rottweiler	177	75	102	50	159	2	0	0	0	0	0	0	0	0	0	0
Hamilton City	2014	DOG	Schnauzer, Miniature	156	68	88	89	147	0	0	0	0	0	0	0	0	0	0	0
Hamilton City	2014	DOG	Shepherd, German	313	150	163	94	269	8	1	0	0	0	0	0	0	0	0	0
Hamilton City	2014	DOG	Shih Tzu	95	44	51	38	91	0	0	0	0	0	0	0	0	0	0	0
Hamilton City	2014	DOG	Spaniel, Cavalier King Charles	78	36	42	44	66	0	0	0	0	0	0	0	0	0	0	0
Hamilton City	2014	DOG	Spaniel, Cocker	102	53	49	58	87	0	0	0	0	0	0	0	0	0	0	0
Hamilton City	2014	DOG	Spaniel, English Springer	46	22	24	16	41	0	0	0	0	0	0	0	0	0	0	0
Hamilton City	2014	DOG	Terrier, American Pit Bull	80	42	38	55	79	49	0	0	0	0	0	0	0	0	0	0
Hamilton City	2014	DOG	Terrier, Fox (Smooth)	360	179	181	222	265	2	0	0	0	0	0	0	0	0	0	0
Hamilton City	2014	DOG	Terrier, Jack Russell	276	126	150	169	208	2	0	0	0	0	0	0	0	0	0	0
Hamilton City	2014	DOG	Terrier, Staffordshire Bull	187	88	99	64	165	4	0	0	0	0	0	0	0	0	0	0
Hamilton City	2014	DOG	Terrier, West Highland White	65	40	25	41	48	0	0	0	0	0	0	0	0	0	0	0
Hamilton City	2014	DOG	_Unidentified_	1687	803	884	737	1403	11	1	0	0	0	0	0	0	0	0	0
Hamilton City	2014	OWN	_	0	0	0	0	0	0	0	1	38	12062	1134	0	0	0	0	0
Hamilton City	2014	JST	_	0	0	0	0	0	0	0	0	0	0	0	3	1	0	0	0
Hamilton City	2014	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	427	121468	120186
Hamilton City	2015	DOG	_ALL-PURE_	5321	2525	2796	2197	4699	83	1	0	0	0	0	0	0	0	0	0
Hamilton City	2015	DOG	_ALL-CROSS_	4623	2286	2337	1922	4189	188	7	0	0	0	0	0	0	0	0	0
Hamilton City	2015	DOG	_ALL-DOGS_	9944	4811	5133	4119	8888	271	8	0	0	0	0	0	0	0	0	0
Hamilton City	2015	DOG	Beagle	80	35	45	43	78	0	0	0	0	0	0	0	0	0	0	0
Hamilton City	2015	DOG	Bichon Frise	167	72	95	71	155	0	0	0	0	0	0	0	0	0	0	0
Hamilton City	2015	DOG	Boxer	92	49	43	30	85	1	1	0	0	0	0	0	0	0	0	0
Hamilton City	2015	DOG	Cattle, Australian	39	16	23	14	35	1	0	0	0	0	0	0	0	0	0	0
Hamilton City	2015	DOG	Chihuahua, Long Coat	126	64	62	41	112	0	0	0	0	0	0	0	0	0	0	0
Hamilton City	2015	DOG	Chihuahua, Smooth Coat	101	59	42	36	91	0	0	0	0	0	0	0	0	0	0	0
Hamilton City	2015	DOG	Collie, Bearded	15	5	10	6	11	0	0	0	0	0	0	0	0	0	0	0
Hamilton City	2015	DOG	Collie, Border	199	95	104	89	167	0	0	0	0	0	0	0	0	0	0	0
Hamilton City	2015	DOG	Collie, Rough	20	8	12	5	17	0	0	0	0	0	0	0	0	0	0	0
Hamilton City	2015	DOG	Collie, Smooth	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Hamilton City	2015	DOG	Greyhound	36	18	18	15	35	0	0	0	0	0	0	0	0	0	0	0
Hamilton City	2015	DOG	Heading	12	6	6	5	12	0	0	0	0	0	0	0	0	0	0	0
Hamilton City	2015	DOG	Huntaway	24	13	11	12	22	0	0	0	0	0	0	0	0	0	0	0
Hamilton City	2015	DOG	Maltese	119	54	65	33	111	0	0	0	0	0	0	0	0	0	0	0
Hamilton City	2015	DOG	Poodle, Miniature	71	37	34	31	61	0	0	0	0	0	0	0	0	0	0	0
Hamilton City	2015	DOG	Poodle, Toy	88	39	49	50	72	0	0	0	0	0	0	0	0	0	0	0
Hamilton City	2015	DOG	Retriever, Golden	152	71	81	57	123	0	0	0	0	0	0	0	0	0	0	0
Hamilton City	2015	DOG	Retriever, Labrador	670	327	343	293	604	1	0	0	0	0	0	0	0	0	0	0
Hamilton City	2015	DOG	Rottweiler	174	65	109	40	165	3	0	0	0	0	0	0	0	0	0	0
Hamilton City	2015	DOG	Schnauzer, Miniature	155	67	88	80	149	0	0	0	0	0	0	0	0	0	0	0
Hamilton City	2015	DOG	Shepherd, German	268	123	145	73	241	6	0	0	0	0	0	0	0	0	0	0
Hamilton City	2015	DOG	Shih Tzu	102	40	62	41	99	0	0	0	0	0	0	0	0	0	0	0
Hamilton City	2015	DOG	Spaniel, Cavalier King Charles	69	35	34	37	63	0	0	0	0	0	0	0	0	0	0	0
Hamilton City	2015	DOG	Spaniel, Cocker	91	48	43	48	77	0	0	0	0	0	0	0	0	0	0	0
Hamilton City	2015	DOG	Spaniel, English Springer	46	24	22	15	43	0	0	0	0	0	0	0	0	0	0	0
Hamilton City	2015	DOG	Terrier, American Pit Bull	67	39	28	47	65	53	0	0	0	0	0	0	0	0	0	0
Hamilton City	2015	DOG	Terrier, Fox (Smooth)	301	147	154	179	236	1	0	0	0	0	0	0	0	0	0	0
Hamilton City	2015	DOG	Terrier, Jack Russell	230	106	124	131	183	0	0	0	0	0	0	0	0	0	0	0
Hamilton City	2015	DOG	Terrier, Staffordshire Bull	178	85	93	47	163	3	0	0	0	0	0	0	0	0	0	0
Hamilton City	2015	DOG	Terrier, West Highland White	63	35	28	38	51	0	0	0	0	0	0	0	0	0	0	0
Hamilton City	2015	DOG	_Unidentified_	1566	743	823	590	1373	14	0	0	0	0	0	0	0	0	0	0
Hamilton City	2015	OWN	_	0	0	0	0	0	0	0	3	51	11539	1257	0	0	0	0	0
Hamilton City	2015	JST	_	0	0	0	0	0	0	0	0	0	0	0	6	2	0	0	0
Hamilton City	2015	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	472	88188	109430
Hamilton City	2016	DOG	_ALL-PURE_	4917	2356	2561	1821	4549	80	2	0	0	0	0	0	0	0	0	0
Hamilton City	2016	DOG	_ALL-CROSS_	4722	2326	2396	1791	4410	192	11	0	0	0	0	0	0	0	0	0
Hamilton City	2016	DOG	_ALL-DOGS_	9639	4682	4957	3612	8959	272	13	0	0	0	0	0	0	0	0	0
Hamilton City	2016	DOG	Beagle	76	31	45	34	73	0	0	0	0	0	0	0	0	0	0	0
Hamilton City	2016	DOG	Bichon Frise	148	65	83	60	142	0	0	0	0	0	0	0	0	0	0	0
Hamilton City	2016	DOG	Boxer	87	40	47	25	85	0	0	0	0	0	0	0	0	0	0	0
Hamilton City	2016	DOG	Cattle, Australian	34	12	22	14	32	1	0	0	0	0	0	0	0	0	0	0
Hamilton City	2016	DOG	Chihuahua, Long Coat	130	67	63	41	119	0	0	0	0	0	0	0	0	0	0	0
Hamilton City	2016	DOG	Chihuahua, Smooth Coat	98	58	40	30	92	0	0	0	0	0	0	0	0	0	0	0
Hamilton City	2016	DOG	Collie, Bearded	18	6	12	6	13	0	0	0	0	0	0	0	0	0	0	0
Hamilton City	2016	DOG	Collie, Border	163	90	73	59	150	0	0	0	0	0	0	0	0	0	0	0
Hamilton City	2016	DOG	Collie, Rough	20	9	11	4	18	0	0	0	0	0	0	0	0	0	0	0
Hamilton City	2016	DOG	Collie, Smooth	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Hamilton City	2016	DOG	Greyhound	31	17	14	11	31	0	0	0	0	0	0	0	0	0	0	0
Hamilton City	2016	DOG	Heading	15	8	7	6	12	0	0	0	0	0	0	0	0	0	0	0
Hamilton City	2016	DOG	Huntaway	30	12	18	13	29	0	0	0	0	0	0	0	0	0	0	0
Hamilton City	2016	DOG	Maltese	119	55	64	38	118	1	0	0	0	0	0	0	0	0	0	0
Hamilton City	2016	DOG	Poodle, Miniature	62	31	31	25	54	0	0	0	0	0	0	0	0	0	0	0
Hamilton City	2016	DOG	Poodle, Toy	83	42	41	34	75	0	0	0	0	0	0	0	0	0	0	0
Hamilton City	2016	DOG	Retriever, Golden	129	60	69	39	115	0	0	0	0	0	0	0	0	0	0	0
Hamilton City	2016	DOG	Retriever, Labrador	646	331	315	248	607	2	0	0	0	0	0	0	0	0	0	0
Hamilton City	2016	DOG	Rottweiler	150	67	83	36	145	5	0	0	0	0	0	0	0	0	0	0
Hamilton City	2016	DOG	Schnauzer, Miniature	169	72	97	82	163	0	0	0	0	0	0	0	0	0	0	0
Hamilton City	2016	DOG	Shepherd, German	251	113	138	52	240	6	2	0	0	0	0	0	0	0	0	0
Hamilton City	2016	DOG	Shih Tzu	101	47	54	38	99	0	0	0	0	0	0	0	0	0	0	0
Hamilton City	2016	DOG	Spaniel, Cavalier King Charles	56	24	32	26	52	0	0	0	0	0	0	0	0	0	0	0
Hamilton City	2016	DOG	Spaniel, Cocker	69	35	34	34	62	0	0	0	0	0	0	0	0	0	0	0
Hamilton City	2016	DOG	Spaniel, English Springer	41	22	19	11	38	0	0	0	0	0	0	0	0	0	0	0
Hamilton City	2016	DOG	Terrier, American Pit Bull	69	40	29	51	66	49	0	0	0	0	0	0	0	0	0	0
Hamilton City	2016	DOG	Terrier, Fox (Smooth)	267	122	145	140	227	1	0	0	0	0	0	0	0	0	0	0
Hamilton City	2016	DOG	Terrier, Jack Russell	212	91	121	111	172	0	0	0	0	0	0	0	0	0	0	0
Hamilton City	2016	DOG	Terrier, Staffordshire Bull	163	72	91	45	157	2	0	0	0	0	0	0	0	0	0	0
Hamilton City	2016	DOG	Terrier, West Highland White	48	28	20	29	37	0	0	0	0	0	0	0	0	0	0	0
Hamilton City	2016	DOG	_Unidentified_	1432	689	743	479	1326	13	0	0	0	0	0	0	0	0	0	0
Hamilton City	2016	OWN	_	0	0	0	0	0	0	0	7	53	11187	1275	0	0	0	0	0
Hastings District	2001	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	51	10109	0
Hastings District	2002	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	59	15908	0
Hastings District	2003	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	44	30124	0
Hastings District	2004	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	238	25247	0
Hastings District	2005	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	210	37391	0
Hastings District	2006	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	233	55627	40362
Hastings District	2007	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	242	41041	48905
Hastings District	2008	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	234	54006	64219
Hastings District	2009	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	244	53985	46425
Hastings District	2010	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	247	100295	85653
Hastings District	2011	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	249	57922	84397
Hastings District	2012	JST	_	0	0	0	0	0	0	0	0	0	0	0	21	5	0	0	0
Hastings District	2012	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	243	52376	48427
Hastings District	2013	DOG	_ALL-PURE_	7451	3844	3607	2701	2613	130	4	0	0	0	0	0	0	0	0	0
Hastings District	2013	DOG	_ALL-CROSS_	2963	1522	1441	1529	1540	149	1	0	0	0	0	0	0	0	0	0
Hastings District	2013	DOG	_ALL-DOGS_	10414	5366	5048	4230	4153	279	5	0	0	0	0	0	0	0	0	0
Hastings District	2013	DOG	Beagle	60	30	30	29	36	0	0	0	0	0	0	0	0	0	0	0
Hastings District	2013	DOG	Bichon Frise	125	70	55	74	75	0	0	0	0	0	0	0	0	0	0	0
Hastings District	2013	DOG	Boxer	98	49	49	58	49	0	0	0	0	0	0	0	0	0	0	0
Hastings District	2013	DOG	Cattle, Australian	117	58	59	48	45	1	0	0	0	0	0	0	0	0	0	0
Hastings District	2013	DOG	Chihuahua, Long Coat	65	22	43	25	25	0	0	0	0	0	0	0	0	0	0	0
Hastings District	2013	DOG	Chihuahua, Smooth Coat	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Hastings District	2013	DOG	Collie, Bearded	35	21	14	7	2	0	0	0	0	0	0	0	0	0	0	0
Hastings District	2013	DOG	Collie, Border	223	117	106	98	81	0	0	0	0	0	0	0	0	0	0	0
Hastings District	2013	DOG	Collie, Rough	27	13	14	5	4	0	0	0	0	0	0	0	0	0	0	0
Hastings District	2013	DOG	Collie, Smooth	11	4	7	3	3	0	0	0	0	0	0	0	0	0	0	0
Hastings District	2013	DOG	Greyhound	23	9	14	13	11	0	0	0	0	0	0	0	0	0	0	0
Hastings District	2013	DOG	Heading	951	488	463	56	18	0	0	0	0	0	0	0	0	0	0	0
Hastings District	2013	DOG	Huntaway	895	438	457	84	36	0	0	0	0	0	0	0	0	0	0	0
Hastings District	2013	DOG	Maltese	35	24	11	16	16	0	0	0	0	0	0	0	0	0	0	0
Hastings District	2013	DOG	Poodle, Miniature	37	22	15	20	13	0	0	0	0	0	0	0	0	0	0	0
Hastings District	2013	DOG	Poodle, Toy	48	27	21	22	18	0	0	0	0	0	0	0	0	0	0	0
Hastings District	2013	DOG	Retriever, Golden	127	71	56	60	65	0	0	0	0	0	0	0	0	0	0	0
Hastings District	2013	DOG	Retriever, Labrador	1071	528	543	495	463	1	0	0	0	0	0	0	0	0	0	0
Hastings District	2013	DOG	Rottweiler	167	82	85	54	89	0	1	0	0	0	0	0	0	0	0	0
Hastings District	2013	DOG	Schnauzer, Miniature	52	31	21	24	29	0	0	0	0	0	0	0	0	0	0	0
Hastings District	2013	DOG	Shepherd, German	253	137	116	99	133	5	0	0	0	0	0	0	0	0	0	0
Hastings District	2013	DOG	Shih Tzu	95	49	46	47	47	0	0	0	0	0	0	0	0	0	0	0
Hastings District	2013	DOG	Spaniel, Cavalier King Charles	22	12	10	9	11	0	0	0	0	0	0	0	0	0	0	0
Hastings District	2013	DOG	Spaniel, Cocker	50	25	25	27	30	0	0	0	0	0	0	0	0	0	0	0
Hastings District	2013	DOG	Spaniel, English Springer	34	14	20	13	16	1	0	0	0	0	0	0	0	0	0	0
Hastings District	2013	DOG	Terrier, American Pit Bull	107	55	52	66	97	101	1	0	0	0	0	0	0	0	0	0
Hastings District	2013	DOG	Terrier, Fox (Smooth)	547	308	239	286	215	2	0	0	0	0	0	0	0	0	0	0
Hastings District	2013	DOG	Terrier, Jack Russell	462	243	219	266	166	1	0	0	0	0	0	0	0	0	0	0
Hastings District	2013	DOG	Terrier, Staffordshire Bull	140	75	65	44	82	0	1	0	0	0	0	0	0	0	0	0
Hastings District	2013	DOG	Terrier, West Highland White	33	17	16	18	9	0	0	0	0	0	0	0	0	0	0	0
Hastings District	2013	DOG	_Unidentified_	1541	805	736	635	729	18	1	0	0	0	0	0	0	0	0	0
Hastings District	2013	OWN	_	0	0	0	0	0	0	0	0	4	7006	138	0	0	0	0	0
Hastings District	2013	JST	_	0	0	0	0	0	0	0	0	0	0	0	6	3	0	0	0
Hastings District	2013	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	260	47922	55193
Hastings District	2014	DOG	_ALL-PURE_	6809	3504	3305	2531	2650	112	3	0	0	0	0	0	0	0	0	0
Hastings District	2014	DOG	_ALL-CROSS_	2871	1462	1409	1508	1653	159	0	0	0	0	0	0	0	0	0	0
Hastings District	2014	DOG	_ALL-DOGS_	9680	4966	4714	4039	4303	271	3	0	0	0	0	0	0	0	0	0
Hastings District	2014	DOG	Beagle	51	27	24	27	31	0	0	0	0	0	0	0	0	0	0	0
Hastings District	2014	DOG	Bichon Frise	121	64	57	73	78	0	0	0	0	0	0	0	0	0	0	0
Hastings District	2014	DOG	Boxer	92	47	45	45	58	0	0	0	0	0	0	0	0	0	0	0
Hastings District	2014	DOG	Cattle, Australian	99	54	45	44	40	2	0	0	0	0	0	0	0	0	0	0
Hastings District	2014	DOG	Chihuahua, Long Coat	70	23	47	25	36	0	0	0	0	0	0	0	0	0	0	0
Hastings District	2014	DOG	Chihuahua, Smooth Coat	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Hastings District	2014	DOG	Collie, Bearded	34	22	12	6	3	0	0	0	0	0	0	0	0	0	0	0
Hastings District	2014	DOG	Collie, Border	212	107	105	91	82	0	0	0	0	0	0	0	0	0	0	0
Hastings District	2014	DOG	Collie, Rough	28	16	12	4	5	0	0	0	0	0	0	0	0	0	0	0
Hastings District	2014	DOG	Collie, Smooth	10	5	5	5	4	0	0	0	0	0	0	0	0	0	0	0
Hastings District	2014	DOG	Greyhound	24	10	14	12	11	0	0	0	0	0	0	0	0	0	0	0
Hastings District	2014	DOG	Heading	884	445	439	57	24	0	0	0	0	0	0	0	0	0	0	0
Hastings District	2014	DOG	Huntaway	834	403	431	81	43	0	0	0	0	0	0	0	0	0	0	0
Hastings District	2014	DOG	Maltese	32	21	11	18	17	0	0	0	0	0	0	0	0	0	0	0
Hastings District	2014	DOG	Poodle, Miniature	39	21	18	25	15	0	0	0	0	0	0	0	0	0	0	0
Hastings District	2014	DOG	Poodle, Toy	45	27	18	24	23	0	0	0	0	0	0	0	0	0	0	0
Hastings District	2014	DOG	Retriever, Golden	109	62	47	59	60	0	0	0	0	0	0	0	0	0	0	0
Hastings District	2014	DOG	Retriever, Labrador	990	503	487	466	481	1	0	0	0	0	0	0	0	0	0	0
Hastings District	2014	DOG	Rottweiler	150	65	85	51	89	0	1	0	0	0	0	0	0	0	0	0
Hastings District	2014	DOG	Schnauzer, Miniature	63	39	24	30	42	0	0	0	0	0	0	0	0	0	0	0
Hastings District	2014	DOG	Shepherd, German	229	119	110	84	133	3	0	0	0	0	0	0	0	0	0	0
Hastings District	2014	DOG	Shih Tzu	105	54	51	57	58	0	0	0	0	0	0	0	0	0	0	0
Hastings District	2014	DOG	Spaniel, Cavalier King Charles	23	14	9	14	15	0	0	0	0	0	0	0	0	0	0	0
Hastings District	2014	DOG	Spaniel, Cocker	49	21	28	27	32	0	0	0	0	0	0	0	0	0	0	0
Hastings District	2014	DOG	Spaniel, English Springer	28	15	13	9	16	1	0	0	0	0	0	0	0	0	0	0
Hastings District	2014	DOG	Terrier, American Pit Bull	84	40	44	74	73	82	1	0	0	0	0	0	0	0	0	0
Hastings District	2014	DOG	Terrier, Fox (Smooth)	464	262	202	238	204	1	0	0	0	0	0	0	0	0	0	0
Hastings District	2014	DOG	Terrier, Jack Russell	404	227	177	221	167	1	0	0	0	0	0	0	0	0	0	0
Hastings District	2014	DOG	Terrier, Staffordshire Bull	134	76	58	44	85	1	0	0	0	0	0	0	0	0	0	0
Hastings District	2014	DOG	Terrier, West Highland White	31	20	11	24	11	0	0	0	0	0	0	0	0	0	0	0
Hastings District	2014	DOG	_Unidentified_	1371	695	676	596	714	20	1	0	0	0	0	0	0	0	0	0
Hastings District	2014	OWN	_	0	0	0	0	0	0	0	0	2	6571	116	0	0	0	0	0
Hastings District	2014	JST	_	0	0	0	0	0	0	0	0	0	0	0	4	2	0	0	0
Hastings District	2014	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	291	70927	74290
Hastings District	2015	DOG	_ALL-PURE_	8172	4191	3981	3080	3529	97	2	0	0	0	0	0	0	0	0	0
Hastings District	2015	DOG	_ALL-CROSS_	3430	1750	1680	1880	2159	148	0	0	0	0	0	0	0	0	0	0
Hastings District	2015	DOG	_ALL-DOGS_	11602	5941	5661	4960	5688	245	2	0	0	0	0	0	0	0	0	0
Hastings District	2015	DOG	Beagle	64	33	31	35	42	0	0	0	0	0	0	0	0	0	0	0
Hastings District	2015	DOG	Bichon Frise	145	68	77	84	101	0	0	0	0	0	0	0	0	0	0	0
Hastings District	2015	DOG	Boxer	109	56	53	57	74	0	0	0	0	0	0	0	0	0	0	0
Hastings District	2015	DOG	Cattle, Australian	118	66	52	59	44	2	0	0	0	0	0	0	0	0	0	0
Hastings District	2015	DOG	Chihuahua, Long Coat	79	28	51	39	45	0	0	0	0	0	0	0	0	0	0	0
Hastings District	2015	DOG	Chihuahua, Smooth Coat	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Hastings District	2015	DOG	Collie, Bearded	43	26	17	8	4	0	0	0	0	0	0	0	0	0	0	0
Hastings District	2015	DOG	Collie, Border	244	122	122	103	108	0	0	0	0	0	0	0	0	0	0	0
Hastings District	2015	DOG	Collie, Rough	24	14	10	5	5	0	0	0	0	0	0	0	0	0	0	0
Hastings District	2015	DOG	Collie, Smooth	11	6	5	7	4	0	0	0	0	0	0	0	0	0	0	0
Hastings District	2015	DOG	Greyhound	29	15	14	16	16	0	0	0	0	0	0	0	0	0	0	0
Hastings District	2015	DOG	Heading	1042	541	501	79	36	0	0	0	0	0	0	0	0	0	0	0
Hastings District	2015	DOG	Huntaway	959	448	511	104	55	0	0	0	0	0	0	0	0	0	0	0
Hastings District	2015	DOG	Maltese	42	25	17	19	26	0	0	0	0	0	0	0	0	0	0	0
Hastings District	2015	DOG	Poodle, Miniature	58	29	29	37	31	0	0	0	0	0	0	0	0	0	0	0
Hastings District	2015	DOG	Poodle, Toy	55	33	22	30	28	0	0	0	0	0	0	0	0	0	0	0
Hastings District	2015	DOG	Retriever, Golden	135	75	60	72	89	0	0	0	0	0	0	0	0	0	0	0
Hastings District	2015	DOG	Retriever, Labrador	1204	612	592	560	640	0	0	0	0	0	0	0	0	0	0	0
Hastings District	2015	DOG	Rottweiler	177	79	98	53	111	1	1	0	0	0	0	0	0	0	0	0
Hastings District	2015	DOG	Schnauzer, Miniature	89	49	40	45	64	0	0	0	0	0	0	0	0	0	0	0
Hastings District	2015	DOG	Shepherd, German	269	143	126	104	178	4	0	0	0	0	0	0	0	0	0	0
Hastings District	2015	DOG	Shih Tzu	122	56	66	63	80	0	0	0	0	0	0	0	0	0	0	0
Hastings District	2015	DOG	Spaniel, Cavalier King Charles	33	17	16	20	25	0	0	0	0	0	0	0	0	0	0	0
Hastings District	2015	DOG	Spaniel, Cocker	64	29	35	33	40	0	0	0	0	0	0	0	0	0	0	0
Hastings District	2015	DOG	Spaniel, English Springer	37	19	18	13	23	1	0	0	0	0	0	0	0	0	0	0
Hastings District	2015	DOG	Terrier, American Pit Bull	71	37	34	59	60	70	0	0	0	0	0	0	0	0	0	0
Hastings District	2015	DOG	Terrier, Fox (Smooth)	578	324	254	303	272	1	0	0	0	0	0	0	0	0	0	0
Hastings District	2015	DOG	Terrier, Jack Russell	505	267	238	273	245	1	0	0	0	0	0	0	0	0	0	0
Hastings District	2015	DOG	Terrier, Staffordshire Bull	166	96	70	53	119	1	0	0	0	0	0	0	0	0	0	0
Hastings District	2015	DOG	Terrier, West Highland White	44	27	17	32	21	0	0	0	0	0	0	0	0	0	0	0
Hastings District	2015	DOG	_Unidentified_	1656	851	805	715	943	16	1	0	0	0	0	0	0	0	0	0
Hastings District	2015	OWN	_	0	0	0	0	0	0	0	0	1	7902	135	0	0	0	0	0
Hastings District	2015	JST	_	0	0	0	0	0	0	0	0	0	0	0	5	2	0	0	0
Hastings District	2015	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	252	65383	77179
Hastings District	2016	DOG	_ALL-PURE_	8150	4183	3967	3088	3791	81	3	0	0	0	0	0	0	0	0	0
Hastings District	2016	DOG	_ALL-CROSS_	3561	1834	1727	1970	2340	117	5	0	0	0	0	0	0	0	0	0
Hastings District	2016	DOG	_ALL-DOGS_	11711	6017	5694	5058	6131	198	8	0	0	0	0	0	0	0	0	0
Hastings District	2016	DOG	Beagle	75	40	35	41	57	0	0	0	0	0	0	0	0	0	0	0
Hastings District	2016	DOG	Bichon Frise	141	70	71	86	97	0	0	0	0	0	0	0	0	0	0	0
Hastings District	2016	DOG	Boxer	100	53	47	52	73	0	0	0	0	0	0	0	0	0	0	0
Hastings District	2016	DOG	Cattle, Australian	110	62	48	55	44	2	0	0	0	0	0	0	0	0	0	0
Hastings District	2016	DOG	Chihuahua, Long Coat	82	32	50	37	52	0	0	0	0	0	0	0	0	0	0	0
Hastings District	2016	DOG	Chihuahua, Smooth Coat	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Hastings District	2016	DOG	Collie, Bearded	43	24	19	10	6	0	0	0	0	0	0	0	0	0	0	0
Hastings District	2016	DOG	Collie, Border	244	126	118	114	117	0	0	0	0	0	0	0	0	0	0	0
Hastings District	2016	DOG	Collie, Rough	22	11	11	3	7	0	0	0	0	0	0	0	0	0	0	0
Hastings District	2016	DOG	Collie, Smooth	11	6	5	6	3	0	0	0	0	0	0	0	0	0	0	0
Hastings District	2016	DOG	Greyhound	33	17	16	22	20	0	0	0	0	0	0	0	0	0	0	0
Hastings District	2016	DOG	Heading	1008	524	484	79	33	0	0	0	0	0	0	0	0	0	0	0
Hastings District	2016	DOG	Huntaway	963	439	524	112	64	0	0	0	0	0	0	0	0	0	0	0
Hastings District	2016	DOG	Maltese	46	28	18	23	29	0	0	0	0	0	0	0	0	0	0	0
Hastings District	2016	DOG	Poodle, Miniature	61	31	30	46	37	0	0	0	0	0	0	0	0	0	0	0
Hastings District	2016	DOG	Poodle, Toy	52	33	19	31	28	0	0	0	0	0	0	0	0	0	0	0
Hastings District	2016	DOG	Retriever, Golden	139	73	66	72	100	0	0	0	0	0	0	0	0	0	0	0
Hastings District	2016	DOG	Retriever, Labrador	1206	610	596	542	705	0	0	0	0	0	0	0	0	0	0	0
Hastings District	2016	DOG	Rottweiler	180	80	100	52	116	1	1	0	0	0	0	0	0	0	0	0
Hastings District	2016	DOG	Schnauzer, Miniature	98	53	45	59	76	0	0	0	0	0	0	0	0	0	0	0
Hastings District	2016	DOG	Shepherd, German	293	159	134	110	210	4	0	0	0	0	0	0	0	0	0	0
Hastings District	2016	DOG	Shih Tzu	135	70	65	66	88	0	0	0	0	0	0	0	0	0	0	0
Hastings District	2016	DOG	Spaniel, Cavalier King Charles	35	20	15	24	27	0	0	0	0	0	0	0	0	0	0	0
Hastings District	2016	DOG	Spaniel, Cocker	63	32	31	32	42	0	0	0	0	0	0	0	0	0	0	0
Hastings District	2016	DOG	Spaniel, English Springer	36	17	19	12	25	1	0	0	0	0	0	0	0	0	0	0
Hastings District	2016	DOG	Terrier, American Pit Bull	58	35	23	42	48	58	0	0	0	0	0	0	0	0	0	0
Hastings District	2016	DOG	Terrier, Fox (Smooth)	556	307	249	303	280	1	0	0	0	0	0	0	0	0	0	0
Hastings District	2016	DOG	Terrier, Jack Russell	498	255	243	277	258	1	0	0	0	0	0	0	0	0	0	0
Hastings District	2016	DOG	Terrier, Staffordshire Bull	179	109	70	64	127	0	1	0	0	0	0	0	0	0	0	0
Hastings District	2016	DOG	Terrier, West Highland White	41	24	17	30	21	0	0	0	0	0	0	0	0	0	0	0
Hastings District	2016	DOG	_Unidentified_	1642	843	799	686	1001	13	1	0	0	0	0	0	0	0	0	0
Hastings District	2016	OWN	_	0	0	0	0	0	0	0	0	0	7947	105	0	0	0	0	0
Hauraki District	2001	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	5	299	0
Hauraki District	2002	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	7	5301	0
Hauraki District	2003	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	11	560	0
Hauraki District	2004	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	33	2997	0
Hauraki District	2005	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	58	23819	0
Hauraki District	2006	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	56	6625	13694
Hauraki District	2007	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	55	6445	6025
Hauraki District	2008	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	44	5930	6153
Hauraki District	2009	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	42	4117	4580
Hauraki District	2010	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	46	11205	9827
Hauraki District	2011	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	54	11513	12715
Hauraki District	2012	JST	_	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Hauraki District	2012	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	47	9217	9752
Hauraki District	2013	DOG	_ALL-PURE_	2736	1407	1329	1414	1438	37	3	0	0	0	0	0	0	0	0	0
Hauraki District	2013	DOG	_ALL-CROSS_	1595	787	808	911	1074	61	6	0	0	0	0	0	0	0	0	0
Hauraki District	2013	DOG	_ALL-DOGS_	4331	2194	2137	2325	2512	98	9	0	0	0	0	0	0	0	0	0
Hauraki District	2013	DOG	Beagle	33	23	10	19	22	0	0	0	0	0	0	0	0	0	0	0
Hauraki District	2013	DOG	Bichon Frise	32	19	13	22	24	0	0	0	0	0	0	0	0	0	0	0
Hauraki District	2013	DOG	Boxer	44	22	22	30	24	1	0	0	0	0	0	0	0	0	0	0
Hauraki District	2013	DOG	Cattle, Australian	47	19	28	19	21	1	0	0	0	0	0	0	0	0	0	0
Hauraki District	2013	DOG	Chihuahua, Long Coat	41	16	25	24	31	0	0	0	0	0	0	0	0	0	0	0
Hauraki District	2013	DOG	Chihuahua, Smooth Coat	25	11	14	17	12	0	0	0	0	0	0	0	0	0	0	0
Hauraki District	2013	DOG	Collie, Bearded	19	6	13	12	3	0	0	0	0	0	0	0	0	0	0	0
Hauraki District	2013	DOG	Collie, Border	188	97	91	84	54	1	0	0	0	0	0	0	0	0	0	0
Hauraki District	2013	DOG	Collie, Rough	13	9	4	7	3	0	0	0	0	0	0	0	0	0	0	0
Hauraki District	2013	DOG	Collie, Smooth	2	0	2	1	1	0	0	0	0	0	0	0	0	0	0	0
Hauraki District	2013	DOG	Greyhound	29	9	20	1	15	0	0	0	0	0	0	0	0	0	0	0
Hauraki District	2013	DOG	Heading	65	30	35	14	12	0	0	0	0	0	0	0	0	0	0	0
Hauraki District	2013	DOG	Huntaway	251	119	132	77	22	0	0	0	0	0	0	0	0	0	0	0
Hauraki District	2013	DOG	Maltese	29	14	15	16	24	0	0	0	0	0	0	0	0	0	0	0
Hauraki District	2013	DOG	Poodle, Miniature	16	8	8	14	11	0	0	0	0	0	0	0	0	0	0	0
Hauraki District	2013	DOG	Poodle, Toy	31	15	16	25	23	0	0	0	0	0	0	0	0	0	0	0
Hauraki District	2013	DOG	Retriever, Golden	66	38	28	33	37	0	0	0	0	0	0	0	0	0	0	0
Hauraki District	2013	DOG	Retriever, Labrador	445	221	224	229	262	2	0	0	0	0	0	0	0	0	0	0
Hauraki District	2013	DOG	Rottweiler	59	31	28	21	43	1	0	0	0	0	0	0	0	0	0	0
Hauraki District	2013	DOG	Schnauzer, Miniature	23	12	11	13	21	0	0	0	0	0	0	0	0	0	0	0
Hauraki District	2013	DOG	Shepherd, German	116	58	58	53	71	2	1	0	0	0	0	0	0	0	0	0
Hauraki District	2013	DOG	Shih Tzu	42	24	18	24	36	0	0	0	0	0	0	0	0	0	0	0
Hauraki District	2013	DOG	Spaniel, Cavalier King Charles	17	10	7	8	8	0	0	0	0	0	0	0	0	0	0	0
Hauraki District	2013	DOG	Spaniel, Cocker	25	15	10	8	18	0	0	0	0	0	0	0	0	0	0	0
Hauraki District	2013	DOG	Spaniel, English Springer	19	7	12	14	10	0	0	0	0	0	0	0	0	0	0	0
Hauraki District	2013	DOG	Terrier, American Pit Bull	23	14	9	20	22	23	0	0	0	0	0	0	0	0	0	0
Hauraki District	2013	DOG	Terrier, Fox (Smooth)	229	124	105	162	126	0	0	0	0	0	0	0	0	0	0	0
Hauraki District	2013	DOG	Terrier, Jack Russell	139	75	64	95	76	2	0	0	0	0	0	0	0	0	0	0
Hauraki District	2013	DOG	Terrier, Staffordshire Bull	77	48	29	46	49	0	1	0	0	0	0	0	0	0	0	0
Hauraki District	2013	DOG	Terrier, West Highland White	16	9	7	8	8	0	0	0	0	0	0	0	0	0	0	0
Hauraki District	2013	DOG	_Unidentified_	575	304	271	298	349	4	1	0	0	0	0	0	0	0	0	0
Hauraki District	2013	OWN	_	0	0	0	0	0	0	0	27	7	2937	30	0	0	0	0	0
Hauraki District	2013	JST	_	0	0	0	0	0	0	0	0	0	0	0	2	2	0	0	0
Hauraki District	2013	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	48	4688	4664
Hauraki District	2014	DOG	_ALL-PURE_	2650	1373	1277	1369	1552	40	3	0	0	0	0	0	0	0	0	0
Hauraki District	2014	DOG	_ALL-CROSS_	1654	808	846	982	1179	71	8	0	0	0	0	0	0	0	0	0
Hauraki District	2014	DOG	_ALL-DOGS_	4304	2181	2123	2351	2731	111	11	0	0	0	0	0	0	0	0	0
Hauraki District	2014	DOG	Beagle	26	18	8	15	19	0	0	0	0	0	0	0	0	0	0	0
Hauraki District	2014	DOG	Bichon Frise	33	19	14	26	29	0	0	0	0	0	0	0	0	0	0	0
Hauraki District	2014	DOG	Boxer	39	18	21	24	23	1	0	0	0	0	0	0	0	0	0	0
Hauraki District	2014	DOG	Cattle, Australian	40	17	23	16	22	0	0	0	0	0	0	0	0	0	0	0
Hauraki District	2014	DOG	Chihuahua, Long Coat	42	17	25	25	29	0	0	0	0	0	0	0	0	0	0	0
Hauraki District	2014	DOG	Chihuahua, Smooth Coat	37	15	22	21	21	0	0	0	0	0	0	0	0	0	0	0
Hauraki District	2014	DOG	Collie, Bearded	14	5	9	9	1	0	0	0	0	0	0	0	0	0	0	0
Hauraki District	2014	DOG	Collie, Border	173	84	89	77	55	1	0	0	0	0	0	0	0	0	0	0
Hauraki District	2014	DOG	Collie, Rough	10	6	4	5	4	0	0	0	0	0	0	0	0	0	0	0
Hauraki District	2014	DOG	Collie, Smooth	3	1	2	1	2	0	0	0	0	0	0	0	0	0	0	0
Hauraki District	2014	DOG	Greyhound	37	19	18	2	32	0	0	0	0	0	0	0	0	0	0	0
Hauraki District	2014	DOG	Heading	67	33	34	16	15	0	0	0	0	0	0	0	0	0	0	0
Hauraki District	2014	DOG	Huntaway	248	124	124	74	26	0	0	0	0	0	0	0	0	0	0	0
Hauraki District	2014	DOG	Maltese	30	14	16	20	26	0	0	0	0	0	0	0	0	0	0	0
Hauraki District	2014	DOG	Poodle, Miniature	17	9	8	14	13	0	0	0	0	0	0	0	0	0	0	0
Hauraki District	2014	DOG	Poodle, Toy	31	15	16	25	25	0	0	0	0	0	0	0	0	0	0	0
Hauraki District	2014	DOG	Retriever, Golden	64	37	27	32	38	0	0	0	0	0	0	0	0	0	0	0
Hauraki District	2014	DOG	Retriever, Labrador	433	218	215	216	279	0	0	0	0	0	0	0	0	0	0	0
Hauraki District	2014	DOG	Rottweiler	54	28	26	21	42	1	0	0	0	0	0	0	0	0	0	0
Hauraki District	2014	DOG	Schnauzer, Miniature	25	14	11	16	23	0	0	0	0	0	0	0	0	0	0	0
Hauraki District	2014	DOG	Shepherd, German	110	59	51	49	73	2	1	0	0	0	0	0	0	0	0	0
Hauraki District	2014	DOG	Shih Tzu	41	25	16	24	37	0	0	0	0	0	0	0	0	0	0	0
Hauraki District	2014	DOG	Spaniel, Cavalier King Charles	17	11	6	9	11	0	0	0	0	0	0	0	0	0	0	0
Hauraki District	2014	DOG	Spaniel, Cocker	24	12	12	16	16	0	0	0	0	0	0	0	0	0	0	0
Hauraki District	2014	DOG	Spaniel, English Springer	18	5	13	11	12	0	0	0	0	0	0	0	0	0	0	0
Hauraki District	2014	DOG	Terrier, American Pit Bull	26	18	8	21	23	26	0	0	0	0	0	0	0	0	0	0
Hauraki District	2014	DOG	Terrier, Fox (Smooth)	202	107	95	148	122	1	0	0	0	0	0	0	0	0	0	0
Hauraki District	2014	DOG	Terrier, Jack Russell	124	63	61	88	72	3	0	0	0	0	0	0	0	0	0	0
Hauraki District	2014	DOG	Terrier, Staffordshire Bull	79	48	31	43	56	0	1	0	0	0	0	0	0	0	0	0
Hauraki District	2014	DOG	Terrier, West Highland White	20	12	8	6	14	0	0	0	0	0	0	0	0	0	0	0
Hauraki District	2014	DOG	_Unidentified_	566	302	264	299	392	5	1	0	0	0	0	0	0	0	0	0
Hauraki District	2014	OWN	_	0	0	0	0	0	0	0	25	9	2883	34	0	0	0	0	0
Hauraki District	2014	JST	_	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Hauraki District	2014	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	63	7008	6927
Hauraki District	2015	DOG	_ALL-PURE_	2593	1338	1255	1414	1630	37	5	0	0	0	0	0	0	0	0	0
Hauraki District	2015	DOG	_ALL-CROSS_	1749	885	864	1095	1312	81	8	0	0	0	0	0	0	0	0	0
Hauraki District	2015	DOG	_ALL-DOGS_	4342	2223	2119	2509	2942	118	13	0	0	0	0	0	0	0	0	0
Hauraki District	2015	DOG	Beagle	23	15	8	14	19	0	0	0	0	0	0	0	0	0	0	0
Hauraki District	2015	DOG	Bichon Frise	31	16	15	29	29	0	0	0	0	0	0	0	0	0	0	0
Hauraki District	2015	DOG	Boxer	34	13	21	21	26	1	0	0	0	0	0	0	0	0	0	0
Hauraki District	2015	DOG	Cattle, Australian	42	19	23	19	23	0	0	0	0	0	0	0	0	0	0	0
Hauraki District	2015	DOG	Chihuahua, Long Coat	44	18	26	26	29	0	0	0	0	0	0	0	0	0	0	0
Hauraki District	2015	DOG	Chihuahua, Smooth Coat	38	16	22	23	23	0	0	0	0	0	0	0	0	0	0	0
Hauraki District	2015	DOG	Collie, Bearded	10	5	5	6	2	0	0	0	0	0	0	0	0	0	0	0
Hauraki District	2015	DOG	Collie, Border	166	80	86	80	58	1	0	0	0	0	0	0	0	0	0	0
Hauraki District	2015	DOG	Collie, Rough	17	8	9	5	11	0	0	0	0	0	0	0	0	0	0	0
Hauraki District	2015	DOG	Collie, Smooth	4	1	3	1	2	0	0	0	0	0	0	0	0	0	0	0
Hauraki District	2015	DOG	Greyhound	33	17	16	3	30	0	0	0	0	0	0	0	0	0	0	0
Hauraki District	2015	DOG	Heading	69	31	38	18	17	0	0	0	0	0	0	0	0	0	0	0
Hauraki District	2015	DOG	Huntaway	240	126	114	72	26	0	0	0	0	0	0	0	0	0	0	0
Hauraki District	2015	DOG	Maltese	32	18	14	20	29	0	0	0	0	0	0	0	0	0	0	0
Hauraki District	2015	DOG	Poodle, Miniature	20	9	11	14	17	0	0	0	0	0	0	0	0	0	0	0
Hauraki District	2015	DOG	Poodle, Toy	34	16	18	30	27	0	0	0	0	0	0	0	0	0	0	0
Hauraki District	2015	DOG	Retriever, Golden	61	34	27	34	40	0	0	0	0	0	0	0	0	0	0	0
Hauraki District	2015	DOG	Retriever, Labrador	418	211	207	228	290	0	0	0	0	0	0	0	0	0	0	0
Hauraki District	2015	DOG	Rottweiler	60	36	24	29	48	1	0	0	0	0	0	0	0	0	0	0
Hauraki District	2015	DOG	Schnauzer, Miniature	28	17	11	20	25	0	0	0	0	0	0	0	0	0	0	0
Hauraki District	2015	DOG	Shepherd, German	94	51	43	44	66	3	1	0	0	0	0	0	0	0	0	0
Hauraki District	2015	DOG	Shih Tzu	47	30	17	29	44	0	0	0	0	0	0	0	0	0	0	0
Hauraki District	2015	DOG	Spaniel, Cavalier King Charles	18	12	6	10	12	0	0	0	0	0	0	0	0	0	0	0
Hauraki District	2015	DOG	Spaniel, Cocker	21	13	8	14	17	0	0	0	0	0	0	0	0	0	0	0
Hauraki District	2015	DOG	Spaniel, English Springer	19	5	14	11	15	0	0	0	0	0	0	0	0	0	0	0
Hauraki District	2015	DOG	Terrier, American Pit Bull	21	15	6	19	19	21	0	0	0	0	0	0	0	0	0	0
Hauraki District	2015	DOG	Terrier, Fox (Smooth)	199	101	98	146	132	1	0	0	0	0	0	0	0	0	0	0
Hauraki District	2015	DOG	Terrier, Jack Russell	130	68	62	92	84	3	0	0	0	0	0	0	0	0	0	0
Hauraki District	2015	DOG	Terrier, Staffordshire Bull	69	38	31	44	53	0	1	0	0	0	0	0	0	0	0	0
Hauraki District	2015	DOG	Terrier, West Highland White	19	12	7	5	15	0	0	0	0	0	0	0	0	0	0	0
Hauraki District	2015	DOG	_Unidentified_	552	287	265	308	402	6	3	0	0	0	0	0	0	0	0	0
Hauraki District	2015	OWN	_	0	0	0	0	0	0	0	21	9	2926	24	0	0	0	0	0
Hauraki District	2015	JST	_	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Hauraki District	2015	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	50	10399	10745
Hauraki District	2016	DOG	_ALL-PURE_	2527	1306	1221	1388	1710	35	4	0	0	0	0	0	0	0	0	0
Hauraki District	2016	DOG	_ALL-CROSS_	1827	909	918	1151	1411	79	8	0	0	0	0	0	0	0	0	0
Hauraki District	2016	DOG	_ALL-DOGS_	4354	2215	2139	2539	3121	114	12	0	0	0	0	0	0	0	0	0
Hauraki District	2016	DOG	Beagle	22	14	8	15	18	0	0	0	0	0	0	0	0	0	0	0
Hauraki District	2016	DOG	Bichon Frise	33	15	18	28	31	0	0	0	0	0	0	0	0	0	0	0
Hauraki District	2016	DOG	Boxer	27	14	13	22	22	1	0	0	0	0	0	0	0	0	0	0
Hauraki District	2016	DOG	Cattle, Australian	43	22	21	24	28	0	0	0	0	0	0	0	0	0	0	0
Hauraki District	2016	DOG	Chihuahua, Long Coat	49	20	29	29	33	0	0	0	0	0	0	0	0	0	0	0
Hauraki District	2016	DOG	Chihuahua, Smooth Coat	30	13	17	18	20	0	0	0	0	0	0	0	0	0	0	0
Hauraki District	2016	DOG	Collie, Bearded	14	8	6	7	5	0	0	0	0	0	0	0	0	0	0	0
Hauraki District	2016	DOG	Collie, Border	163	83	80	79	65	0	0	0	0	0	0	0	0	0	0	0
Hauraki District	2016	DOG	Collie, Rough	17	8	9	5	11	0	0	0	0	0	0	0	0	0	0	0
Hauraki District	2016	DOG	Collie, Smooth	2	1	1	0	1	0	0	0	0	0	0	0	0	0	0	0
Hauraki District	2016	DOG	Greyhound	33	19	14	5	30	0	0	0	0	0	0	0	0	0	0	0
Hauraki District	2016	DOG	Heading	69	33	36	21	16	0	0	0	0	0	0	0	0	0	0	0
Hauraki District	2016	DOG	Huntaway	223	119	104	74	26	0	0	0	0	0	0	0	0	0	0	0
Hauraki District	2016	DOG	Maltese	34	17	17	28	31	0	0	0	0	0	0	0	0	0	0	0
Hauraki District	2016	DOG	Poodle, Miniature	17	9	8	13	14	0	0	0	0	0	0	0	0	0	0	0
Hauraki District	2016	DOG	Poodle, Toy	31	15	16	27	24	0	0	0	0	0	0	0	0	0	0	0
Hauraki District	2016	DOG	Retriever, Golden	60	32	28	34	40	0	0	0	0	0	0	0	0	0	0	0
Hauraki District	2016	DOG	Retriever, Labrador	408	202	206	230	311	1	0	0	0	0	0	0	0	0	0	0
Hauraki District	2016	DOG	Rottweiler	65	38	27	29	53	0	1	0	0	0	0	0	0	0	0	0
Hauraki District	2016	DOG	Schnauzer, Miniature	28	17	11	19	25	0	0	0	0	0	0	0	0	0	0	0
Hauraki District	2016	DOG	Shepherd, German	104	53	51	40	78	2	0	0	0	0	0	0	0	0	0	0
Hauraki District	2016	DOG	Shih Tzu	47	32	15	32	46	0	0	0	0	0	0	0	0	0	0	0
Hauraki District	2016	DOG	Spaniel, Cavalier King Charles	16	8	8	8	13	0	0	0	0	0	0	0	0	0	0	0
Hauraki District	2016	DOG	Spaniel, Cocker	22	13	9	15	19	0	0	0	0	0	0	0	0	0	0	0
Hauraki District	2016	DOG	Spaniel, English Springer	18	5	13	9	15	0	0	0	0	0	0	0	0	0	0	0
Hauraki District	2016	DOG	Terrier, American Pit Bull	20	13	7	19	19	20	0	0	0	0	0	0	0	0	0	0
Hauraki District	2016	DOG	Terrier, Fox (Smooth)	186	98	88	134	131	1	0	0	0	0	0	0	0	0	0	0
Hauraki District	2016	DOG	Terrier, Jack Russell	116	57	59	86	85	3	0	0	0	0	0	0	0	0	0	0
Hauraki District	2016	DOG	Terrier, Staffordshire Bull	67	38	29	45	57	1	1	0	0	0	0	0	0	0	0	0
Hauraki District	2016	DOG	Terrier, West Highland White	18	12	6	8	16	0	0	0	0	0	0	0	0	0	0	0
Hauraki District	2016	DOG	_Unidentified_	545	278	267	285	427	6	2	0	0	0	0	0	0	0	0	0
Hauraki District	2016	OWN	_	0	0	0	0	0	0	0	13	10	2911	14	0	0	0	0	0
Horowhenua District	2001	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	19	20672	0
Horowhenua District	2002	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	17	6299	0
Horowhenua District	2003	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	19	1897	0
Horowhenua District	2004	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	68	12774	0
Horowhenua District	2005	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	81	36269	0
Horowhenua District	2006	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	80	8744	30343
Horowhenua District	2007	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	80	14091	9884
Horowhenua District	2008	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	80	33371	26154
Horowhenua District	2009	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	69	11599	19809
Horowhenua District	2010	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	93	15252	26622
Horowhenua District	2011	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	80	13799	16518
Horowhenua District	2012	JST	_	0	0	0	0	0	0	0	0	0	0	0	3	1	0	0	0
Horowhenua District	2012	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	96	16517	13351
Horowhenua District	2013	DOG	_ALL-PURE_	3893	2022	1871	1631	2256	75	8	0	0	0	0	0	0	0	0	0
Horowhenua District	2013	DOG	_ALL-CROSS_	2200	1087	1113	1366	1432	121	12	0	0	0	0	0	0	0	0	0
Horowhenua District	2013	DOG	_ALL-DOGS_	6093	3109	2984	2997	3688	196	20	0	0	0	0	0	0	0	0	0
Horowhenua District	2013	DOG	Beagle	27	21	6	15	22	0	0	0	0	0	0	0	0	0	0	0
Horowhenua District	2013	DOG	Bichon Frise	99	47	52	64	69	0	0	0	0	0	0	0	0	0	0	0
Horowhenua District	2013	DOG	Boxer	65	28	37	25	45	0	0	0	0	0	0	0	0	0	0	0
Horowhenua District	2013	DOG	Cattle, Australian	72	34	38	26	21	1	0	0	0	0	0	0	0	0	0	0
Horowhenua District	2013	DOG	Chihuahua, Long Coat	31	17	14	14	18	0	0	0	0	0	0	0	0	0	0	0
Horowhenua District	2013	DOG	Chihuahua, Smooth Coat	72	41	31	41	42	0	0	0	0	0	0	0	0	0	0	0
Horowhenua District	2013	DOG	Collie, Bearded	19	11	8	4	11	0	0	0	0	0	0	0	0	0	0	0
Horowhenua District	2013	DOG	Collie, Border	182	100	82	75	82	0	2	0	0	0	0	0	0	0	0	0
Horowhenua District	2013	DOG	Collie, Rough	13	9	4	3	9	0	0	0	0	0	0	0	0	0	0	0
Horowhenua District	2013	DOG	Collie, Smooth	5	3	2	2	1	0	0	0	0	0	0	0	0	0	0	0
Horowhenua District	2013	DOG	Greyhound	164	85	79	17	119	1	0	0	0	0	0	0	0	0	0	0
Horowhenua District	2013	DOG	Heading	105	58	47	16	14	0	0	0	0	0	0	0	0	0	0	0
Horowhenua District	2013	DOG	Huntaway	185	74	111	31	33	0	0	0	0	0	0	0	0	0	0	0
Horowhenua District	2013	DOG	Maltese	20	10	10	13	14	1	0	0	0	0	0	0	0	0	0	0
Horowhenua District	2013	DOG	Poodle, Miniature	55	23	32	41	32	0	0	0	0	0	0	0	0	0	0	0
Horowhenua District	2013	DOG	Poodle, Toy	42	18	24	15	33	0	0	0	0	0	0	0	0	0	0	0
Horowhenua District	2013	DOG	Retriever, Golden	77	45	32	23	49	0	0	0	0	0	0	0	0	0	0	0
Horowhenua District	2013	DOG	Retriever, Labrador	531	259	272	255	316	2	0	0	0	0	0	0	0	0	0	0
Horowhenua District	2013	DOG	Rottweiler	129	72	57	50	91	0	0	0	0	0	0	0	0	0	0	0
Horowhenua District	2013	DOG	Schnauzer, Miniature	32	18	14	10	25	0	0	0	0	0	0	0	0	0	0	0
Horowhenua District	2013	DOG	Shepherd, German	199	101	98	91	119	2	2	0	0	0	0	0	0	0	0	0
Horowhenua District	2013	DOG	Shih Tzu	61	33	28	22	50	0	0	0	0	0	0	0	0	0	0	0
Horowhenua District	2013	DOG	Spaniel, Cavalier King Charles	62	30	32	28	42	0	0	0	0	0	0	0	0	0	0	0
Horowhenua District	2013	DOG	Spaniel, Cocker	38	24	14	17	20	0	0	0	0	0	0	0	0	0	0	0
Horowhenua District	2013	DOG	Spaniel, English Springer	26	12	14	11	13	0	0	0	0	0	0	0	0	0	0	0
Horowhenua District	2013	DOG	Terrier, American Pit Bull	66	30	36	24	55	61	0	0	0	0	0	0	0	0	0	0
Horowhenua District	2013	DOG	Terrier, Fox (Smooth)	230	124	106	168	92	1	1	0	0	0	0	0	0	0	0	0
Horowhenua District	2013	DOG	Terrier, Jack Russell	164	91	73	102	91	0	0	0	0	0	0	0	0	0	0	0
Horowhenua District	2013	DOG	Terrier, Staffordshire Bull	110	63	47	44	82	0	0	0	0	0	0	0	0	0	0	0
Horowhenua District	2013	DOG	Terrier, West Highland White	22	12	10	13	14	0	0	0	0	0	0	0	0	0	0	0
Horowhenua District	2013	DOG	_Unidentified_	990	529	461	371	632	6	3	0	0	0	0	0	0	0	0	0
Horowhenua District	2013	OWN	_	0	0	0	0	0	0	0	2	0	4140	59	0	0	0	0	0
Horowhenua District	2013	JST	_	0	0	0	0	0	0	0	0	0	0	0	11	2	0	0	0
Horowhenua District	2013	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	107	32572	26569
Horowhenua District	2014	DOG	_ALL-PURE_	2333	1194	1139	971	1501	52	6	0	0	0	0	0	0	0	0	0
Horowhenua District	2014	DOG	_ALL-CROSS_	1417	728	689	857	968	101	8	0	0	0	0	0	0	0	0	0
Horowhenua District	2014	DOG	_ALL-DOGS_	3750	1922	1828	1828	2469	153	14	0	0	0	0	0	0	0	0	0
Horowhenua District	2014	DOG	Beagle	19	14	5	9	15	0	0	0	0	0	0	0	0	0	0	0
Horowhenua District	2014	DOG	Bichon Frise	59	27	32	39	43	0	0	0	0	0	0	0	0	0	0	0
Horowhenua District	2014	DOG	Boxer	37	14	23	18	28	0	0	0	0	0	0	0	0	0	0	0
Horowhenua District	2014	DOG	Cattle, Australian	50	22	28	17	20	1	0	0	0	0	0	0	0	0	0	0
Horowhenua District	2014	DOG	Chihuahua, Long Coat	15	4	11	11	10	0	0	0	0	0	0	0	0	0	0	0
Horowhenua District	2014	DOG	Chihuahua, Smooth Coat	31	18	13	21	22	0	0	0	0	0	0	0	0	0	0	0
Horowhenua District	2014	DOG	Collie, Bearded	11	6	5	3	8	0	0	0	0	0	0	0	0	0	0	0
Horowhenua District	2014	DOG	Collie, Border	107	57	50	48	55	0	1	0	0	0	0	0	0	0	0	0
Horowhenua District	2014	DOG	Collie, Rough	13	7	6	0	11	0	0	0	0	0	0	0	0	0	0	0
Horowhenua District	2014	DOG	Collie, Smooth	3	1	2	1	1	0	0	0	0	0	0	0	0	0	0	0
Horowhenua District	2014	DOG	Greyhound	105	64	41	11	88	1	0	0	0	0	0	0	0	0	0	0
Horowhenua District	2014	DOG	Heading	65	36	29	11	12	0	0	0	0	0	0	0	0	0	0	0
Horowhenua District	2014	DOG	Huntaway	97	33	64	20	19	0	0	0	0	0	0	0	0	0	0	0
Horowhenua District	2014	DOG	Maltese	15	7	8	10	12	0	0	0	0	0	0	0	0	0	0	0
Horowhenua District	2014	DOG	Poodle, Miniature	35	11	24	28	20	0	0	0	0	0	0	0	0	0	0	0
Horowhenua District	2014	DOG	Poodle, Toy	26	11	15	6	18	0	0	0	0	0	0	0	0	0	0	0
Horowhenua District	2014	DOG	Retriever, Golden	46	26	20	10	35	0	0	0	0	0	0	0	0	0	0	0
Horowhenua District	2014	DOG	Retriever, Labrador	296	128	168	145	191	1	0	0	0	0	0	0	0	0	0	0
Horowhenua District	2014	DOG	Rottweiler	75	47	28	30	57	2	0	0	0	0	0	0	0	0	0	0
Horowhenua District	2014	DOG	Schnauzer, Miniature	25	17	8	11	21	0	0	0	0	0	0	0	0	0	0	0
Horowhenua District	2014	DOG	Shepherd, German	111	55	56	50	79	2	2	0	0	0	0	0	0	0	0	0
Horowhenua District	2014	DOG	Shih Tzu	29	14	15	10	25	0	0	0	0	0	0	0	0	0	0	0
Horowhenua District	2014	DOG	Spaniel, Cavalier King Charles	43	22	21	17	32	0	0	0	0	0	0	0	0	0	0	0
Horowhenua District	2014	DOG	Spaniel, Cocker	19	10	9	11	14	0	0	0	0	0	0	0	0	0	0	0
Horowhenua District	2014	DOG	Spaniel, English Springer	14	7	7	5	7	0	0	0	0	0	0	0	0	0	0	0
Horowhenua District	2014	DOG	Terrier, American Pit Bull	45	20	25	16	38	38	0	0	0	0	0	0	0	0	0	0
Horowhenua District	2014	DOG	Terrier, Fox (Smooth)	138	73	65	96	62	1	0	0	0	0	0	0	0	0	0	0
Horowhenua District	2014	DOG	Terrier, Jack Russell	112	68	44	65	71	1	0	0	0	0	0	0	0	0	0	0
Horowhenua District	2014	DOG	Terrier, Staffordshire Bull	66	41	25	27	49	1	0	0	0	0	0	0	0	0	0	0
Horowhenua District	2014	DOG	Terrier, West Highland White	19	9	10	12	12	0	0	0	0	0	0	0	0	0	0	0
Horowhenua District	2014	DOG	_Unidentified_	607	325	282	213	426	4	3	0	0	0	0	0	0	0	0	0
Horowhenua District	2014	OWN	_	0	0	0	0	0	0	0	1	0	2632	68	0	0	0	0	0
Horowhenua District	2014	JST	_	0	0	0	0	0	0	0	0	0	0	0	12	2	0	0	0
Horowhenua District	2014	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	105	67618	46325
Horowhenua District	2015	DOG	_ALL-PURE_	3816	1986	1830	1674	2603	81	9	0	0	0	0	0	0	0	0	0
Horowhenua District	2015	DOG	_ALL-CROSS_	2170	1079	1091	1390	1596	114	8	0	0	0	0	0	0	0	0	0
Horowhenua District	2015	DOG	_ALL-DOGS_	5986	3065	2921	3064	4199	195	17	0	0	0	0	0	0	0	0	0
Horowhenua District	2015	DOG	Beagle	27	22	5	17	23	0	0	0	0	0	0	0	0	0	0	0
Horowhenua District	2015	DOG	Bichon Frise	83	37	46	62	67	0	0	0	0	0	0	0	0	0	0	0
Horowhenua District	2015	DOG	Boxer	67	29	38	29	51	0	0	0	0	0	0	0	0	0	0	0
Horowhenua District	2015	DOG	Cattle, Australian	53	23	30	21	25	3	0	0	0	0	0	0	0	0	0	0
Horowhenua District	2015	DOG	Chihuahua, Long Coat	43	21	22	27	29	0	0	0	0	0	0	0	0	0	0	0
Horowhenua District	2015	DOG	Chihuahua, Smooth Coat	47	26	21	32	40	0	0	0	0	0	0	0	0	0	0	0
Horowhenua District	2015	DOG	Collie, Bearded	14	8	6	5	8	0	0	0	0	0	0	0	0	0	0	0
Horowhenua District	2015	DOG	Collie, Border	164	91	73	74	96	0	2	0	0	0	0	0	0	0	0	0
Horowhenua District	2015	DOG	Collie, Rough	17	11	6	5	13	0	0	0	0	0	0	0	0	0	0	0
Horowhenua District	2015	DOG	Collie, Smooth	5	3	2	2	1	0	0	0	0	0	0	0	0	0	0	0
Horowhenua District	2015	DOG	Greyhound	184	101	83	47	153	1	0	0	0	0	0	0	0	0	0	0
Horowhenua District	2015	DOG	Heading	114	67	47	15	15	0	0	0	0	0	0	0	0	0	0	0
Horowhenua District	2015	DOG	Huntaway	179	76	103	39	41	0	0	0	0	0	0	0	0	0	0	0
Horowhenua District	2015	DOG	Maltese	26	16	10	13	21	0	0	0	0	0	0	0	0	0	0	0
Horowhenua District	2015	DOG	Poodle, Miniature	60	26	34	42	38	0	0	0	0	0	0	0	0	0	0	0
Horowhenua District	2015	DOG	Poodle, Toy	48	23	25	18	38	0	0	0	0	0	0	0	0	0	0	0
Horowhenua District	2015	DOG	Retriever, Golden	84	53	31	20	58	0	0	0	0	0	0	0	0	0	0	0
Horowhenua District	2015	DOG	Retriever, Labrador	516	247	269	246	368	1	0	0	0	0	0	0	0	0	0	0
Horowhenua District	2015	DOG	Rottweiler	126	74	52	50	109	3	0	0	0	0	0	0	0	0	0	0
Horowhenua District	2015	DOG	Schnauzer, Miniature	39	24	15	16	31	0	0	0	0	0	0	0	0	0	0	0
Horowhenua District	2015	DOG	Shepherd, German	189	97	92	86	130	3	3	0	0	0	0	0	0	0	0	0
Horowhenua District	2015	DOG	Shih Tzu	64	29	35	26	57	0	0	0	0	0	0	0	0	0	0	0
Horowhenua District	2015	DOG	Spaniel, Cavalier King Charles	62	34	28	31	53	0	0	0	0	0	0	0	0	0	0	0
Horowhenua District	2015	DOG	Spaniel, Cocker	32	20	12	17	22	0	0	0	0	0	0	0	0	0	0	0
Horowhenua District	2015	DOG	Spaniel, English Springer	22	11	11	10	14	0	0	0	0	0	0	0	0	0	0	0
Horowhenua District	2015	DOG	Terrier, American Pit Bull	67	30	37	29	51	60	0	0	0	0	0	0	0	0	0	0
Horowhenua District	2015	DOG	Terrier, Fox (Smooth)	212	110	102	147	112	1	1	0	0	0	0	0	0	0	0	0
Horowhenua District	2015	DOG	Terrier, Jack Russell	183	109	74	105	122	0	0	0	0	0	0	0	0	0	0	0
Horowhenua District	2015	DOG	Terrier, Staffordshire Bull	120	68	52	47	91	1	0	0	0	0	0	0	0	0	0	0
Horowhenua District	2015	DOG	Terrier, West Highland White	23	9	14	17	17	0	0	0	0	0	0	0	0	0	0	0
Horowhenua District	2015	DOG	_Unidentified_	946	491	455	379	709	8	3	0	0	0	0	0	0	0	0	0
Horowhenua District	2015	OWN	_	0	0	0	0	0	0	0	0	1	4144	73	0	0	0	0	0
Horowhenua District	2015	JST	_	0	0	0	0	0	0	0	0	0	0	0	6	1	0	0	0
Horowhenua District	2015	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	100	18056	53150
Horowhenua District	2016	DOG	_ALL-PURE_	3886	1987	1899	1784	2876	89	10	0	0	0	0	0	0	0	0	0
Horowhenua District	2016	DOG	_ALL-CROSS_	2304	1136	1168	1521	1821	142	11	0	0	0	0	0	0	0	0	0
Horowhenua District	2016	DOG	_ALL-DOGS_	6190	3123	3067	3305	4697	231	21	0	0	0	0	0	0	0	0	0
Horowhenua District	2016	DOG	Beagle	26	21	5	16	24	0	0	0	0	0	0	0	0	0	0	0
Horowhenua District	2016	DOG	Bichon Frise	76	34	42	57	65	0	0	0	0	0	0	0	0	0	0	0
Horowhenua District	2016	DOG	Boxer	68	33	35	34	54	0	0	0	0	0	0	0	0	0	0	0
Horowhenua District	2016	DOG	Cattle, Australian	57	25	32	24	33	2	0	0	0	0	0	0	0	0	0	0
Horowhenua District	2016	DOG	Chihuahua, Long Coat	41	19	22	25	26	0	0	0	0	0	0	0	0	0	0	0
Horowhenua District	2016	DOG	Chihuahua, Smooth Coat	46	27	19	32	41	0	0	0	0	0	0	0	0	0	0	0
Horowhenua District	2016	DOG	Collie, Bearded	16	9	7	9	11	0	0	0	0	0	0	0	0	0	0	0
Horowhenua District	2016	DOG	Collie, Border	168	98	70	73	108	0	2	0	0	0	0	0	0	0	0	0
Horowhenua District	2016	DOG	Collie, Rough	21	14	7	6	15	0	0	0	0	0	0	0	0	0	0	0
Horowhenua District	2016	DOG	Collie, Smooth	8	5	3	2	1	0	0	0	0	0	0	0	0	0	0	0
Horowhenua District	2016	DOG	Greyhound	248	143	105	78	229	0	0	0	0	0	0	0	0	0	0	0
Horowhenua District	2016	DOG	Heading	106	56	50	11	16	0	0	0	0	0	0	0	0	0	0	0
Horowhenua District	2016	DOG	Huntaway	183	77	106	38	51	0	0	0	0	0	0	0	0	0	0	0
Horowhenua District	2016	DOG	Maltese	27	15	12	18	20	0	0	0	0	0	0	0	0	0	0	0
Horowhenua District	2016	DOG	Poodle, Miniature	55	22	33	40	39	0	0	0	0	0	0	0	0	0	0	0
Horowhenua District	2016	DOG	Poodle, Toy	48	23	25	18	42	0	0	0	0	0	0	0	0	0	0	0
Horowhenua District	2016	DOG	Retriever, Golden	82	48	34	24	62	0	0	0	0	0	0	0	0	0	0	0
Horowhenua District	2016	DOG	Retriever, Labrador	512	232	280	245	398	1	0	0	0	0	0	0	0	0	0	0
Horowhenua District	2016	DOG	Rottweiler	144	77	67	56	132	4	0	0	0	0	0	0	0	0	0	0
Horowhenua District	2016	DOG	Schnauzer, Miniature	36	21	15	20	29	0	0	0	0	0	0	0	0	0	0	0
Horowhenua District	2016	DOG	Shepherd, German	188	95	93	80	145	3	2	0	0	0	0	0	0	0	0	0
Horowhenua District	2016	DOG	Shih Tzu	80	37	43	31	71	0	0	0	0	0	0	0	0	0	0	0
Horowhenua District	2016	DOG	Spaniel, Cavalier King Charles	59	30	29	32	51	0	0	0	0	0	0	0	0	0	0	0
Horowhenua District	2016	DOG	Spaniel, Cocker	28	17	11	20	21	0	0	0	0	0	0	0	0	0	0	0
Horowhenua District	2016	DOG	Spaniel, English Springer	22	13	9	11	16	0	0	0	0	0	0	0	0	0	0	0
Horowhenua District	2016	DOG	Terrier, American Pit Bull	70	33	37	35	58	66	0	0	0	0	0	0	0	0	0	0
Horowhenua District	2016	DOG	Terrier, Fox (Smooth)	197	105	92	141	112	1	1	0	0	0	0	0	0	0	0	0
Horowhenua District	2016	DOG	Terrier, Jack Russell	178	106	72	108	132	0	0	0	0	0	0	0	0	0	0	0
Horowhenua District	2016	DOG	Terrier, Staffordshire Bull	125	70	55	55	106	0	0	0	0	0	0	0	0	0	0	0
Horowhenua District	2016	DOG	Terrier, West Highland White	27	11	16	19	21	0	0	0	0	0	0	0	0	0	0	0
Horowhenua District	2016	DOG	_Unidentified_	944	471	473	426	747	12	5	0	0	0	0	0	0	0	0	0
Horowhenua District	2016	OWN	_	0	0	0	0	0	0	0	2	1	4319	61	0	0	0	0	0
Hurunui District	2001	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	19	10447	0
Hurunui District	2002	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	13	582	0
Hurunui District	2003	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	21	2183	0
Hurunui District	2004	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	43	2473	0
Hurunui District	2005	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	39	3815	0
Hurunui District	2006	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	49	11079	11099
Hurunui District	2007	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	45	30402	24531
Hurunui District	2008	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	46	8848	13286
Hurunui District	2009	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	62	12761	12573
Hurunui District	2010	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	48	11079	12073
Hurunui District	2011	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	54	11132	9372
Hurunui District	2012	JST	_	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Hurunui District	2012	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	50	24247	25995
Hurunui District	2013	DOG	_ALL-PURE_	4511	2277	2234	554	1075	14	2	0	0	0	0	0	0	0	0	0
Hurunui District	2013	DOG	_ALL-CROSS_	1108	540	568	268	475	5	3	0	0	0	0	0	0	0	0	0
Hurunui District	2013	DOG	_ALL-DOGS_	5619	2817	2802	822	1550	19	5	0	0	0	0	0	0	0	0	0
Hurunui District	2013	DOG	Beagle	17	7	10	4	13	0	0	0	0	0	0	0	0	0	0	0
Hurunui District	2013	DOG	Bichon Frise	53	31	22	24	31	0	0	0	0	0	0	0	0	0	0	0
Hurunui District	2013	DOG	Boxer	35	18	17	12	17	0	0	0	0	0	0	0	0	0	0	0
Hurunui District	2013	DOG	Cattle, Australian	14	7	7	3	1	0	0	0	0	0	0	0	0	0	0	0
Hurunui District	2013	DOG	Chihuahua, Long Coat	17	9	8	8	12	0	0	0	0	0	0	0	0	0	0	0
Hurunui District	2013	DOG	Chihuahua, Smooth Coat	12	7	5	5	8	0	0	0	0	0	0	0	0	0	0	0
Hurunui District	2013	DOG	Collie, Bearded	101	49	52	10	7	0	0	0	0	0	0	0	0	0	0	0
Hurunui District	2013	DOG	Collie, Border	169	92	77	37	46	1	0	0	0	0	0	0	0	0	0	0
Hurunui District	2013	DOG	Collie, Rough	38	19	19	0	0	0	0	0	0	0	0	0	0	0	0	0
Hurunui District	2013	DOG	Collie, Smooth	1303	656	647	17	6	0	0	0	0	0	0	0	0	0	0	0
Hurunui District	2013	DOG	Greyhound	139	59	80	15	82	0	0	0	0	0	0	0	0	0	0	0
Hurunui District	2013	DOG	Heading	307	157	150	3	6	0	0	0	0	0	0	0	0	0	0	0
Hurunui District	2013	DOG	Huntaway	700	297	403	21	10	0	0	0	0	0	0	0	0	0	0	0
Hurunui District	2013	DOG	Maltese	18	9	9	4	7	0	0	0	0	0	0	0	0	0	0	0
Hurunui District	2013	DOG	Poodle, Miniature	14	8	6	3	9	0	0	0	0	0	0	0	0	0	0	0
Hurunui District	2013	DOG	Poodle, Toy	15	7	8	6	11	0	0	0	0	0	0	0	0	0	0	0
Hurunui District	2013	DOG	Retriever, Golden	61	34	27	14	26	0	0	0	0	0	0	0	0	0	0	0
Hurunui District	2013	DOG	Retriever, Labrador	292	145	147	80	140	0	0	0	0	0	0	0	0	0	0	0
Hurunui District	2013	DOG	Rottweiler	25	14	11	5	19	1	0	0	0	0	0	0	0	0	0	0
Hurunui District	2013	DOG	Schnauzer, Miniature	12	9	3	2	9	0	0	0	0	0	0	0	0	0	0	0
Hurunui District	2013	DOG	Shepherd, German	63	37	26	14	36	2	2	0	0	0	0	0	0	0	0	0
Hurunui District	2013	DOG	Shih Tzu	9	7	2	3	9	0	0	0	0	0	0	0	0	0	0	0
Hurunui District	2013	DOG	Spaniel, Cavalier King Charles	5	4	1	4	4	0	0	0	0	0	0	0	0	0	0	0
Hurunui District	2013	DOG	Spaniel, Cocker	27	20	7	9	17	0	0	0	0	0	0	0	0	0	0	0
Hurunui District	2013	DOG	Spaniel, English Springer	31	19	12	5	12	0	0	0	0	0	0	0	0	0	0	0
Hurunui District	2013	DOG	Terrier, American Pit Bull	3	3	0	2	3	3	0	0	0	0	0	0	0	0	0	0
Hurunui District	2013	DOG	Terrier, Fox (Smooth)	158	74	84	35	59	1	0	0	0	0	0	0	0	0	0	0
Hurunui District	2013	DOG	Terrier, Jack Russell	289	147	142	55	135	3	0	0	0	0	0	0	0	0	0	0
Hurunui District	2013	DOG	Terrier, Staffordshire Bull	41	27	14	14	27	1	0	0	0	0	0	0	0	0	0	0
Hurunui District	2013	DOG	Terrier, West Highland White	22	6	16	6	14	0	0	0	0	0	0	0	0	0	0	0
Hurunui District	2013	DOG	_Unidentified_	521	299	222	134	299	2	0	0	0	0	0	0	0	0	0	0
Hurunui District	2013	OWN	_	0	0	0	0	0	0	0	0	0	2277	27	0	0	0	0	0
Hurunui District	2013	JST	_	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Hurunui District	2013	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	57	14124	16194
Hurunui District	2014	DOG	_ALL-PURE_	4381	2242	2139	551	1093	12	2	0	0	0	0	0	0	0	0	0
Hurunui District	2014	DOG	_ALL-CROSS_	1086	533	553	289	498	8	4	0	0	0	0	0	0	0	0	0
Hurunui District	2014	DOG	_ALL-DOGS_	5467	2775	2692	840	1591	20	6	0	0	0	0	0	0	0	0	0
Hurunui District	2014	DOG	Beagle	16	6	10	4	14	0	0	0	0	0	0	0	0	0	0	0
Hurunui District	2014	DOG	Bichon Frise	40	23	17	20	25	0	0	0	0	0	0	0	0	0	0	0
Hurunui District	2014	DOG	Boxer	32	18	14	12	20	0	0	0	0	0	0	0	0	0	0	0
Hurunui District	2014	DOG	Cattle, Australian	14	7	7	2	1	0	0	0	0	0	0	0	0	0	0	0
Hurunui District	2014	DOG	Chihuahua, Long Coat	16	10	6	8	10	0	0	0	0	0	0	0	0	0	0	0
Hurunui District	2014	DOG	Chihuahua, Smooth Coat	14	7	7	4	10	0	0	0	0	0	0	0	0	0	0	0
Hurunui District	2014	DOG	Collie, Bearded	106	52	54	8	8	0	0	0	0	0	0	0	0	0	0	0
Hurunui District	2014	DOG	Collie, Border	168	86	82	34	43	0	0	0	0	0	0	0	0	0	0	0
Hurunui District	2014	DOG	Collie, Rough	32	16	16	0	0	0	0	0	0	0	0	0	0	0	0	0
Hurunui District	2014	DOG	Collie, Smooth	1202	613	589	18	9	0	0	0	0	0	0	0	0	0	0	0
Hurunui District	2014	DOG	Greyhound	151	68	83	8	112	0	0	0	0	0	0	0	0	0	0	0
Hurunui District	2014	DOG	Heading	340	183	157	8	6	0	0	0	0	0	0	0	0	0	0	0
Hurunui District	2014	DOG	Huntaway	719	319	400	23	9	0	0	0	0	0	0	0	0	0	0	0
Hurunui District	2014	DOG	Maltese	16	9	7	3	6	0	0	0	0	0	0	0	0	0	0	0
Hurunui District	2014	DOG	Poodle, Miniature	14	9	5	5	10	0	0	0	0	0	0	0	0	0	0	0
Hurunui District	2014	DOG	Poodle, Toy	15	7	8	6	11	0	0	0	0	0	0	0	0	0	0	0
Hurunui District	2014	DOG	Retriever, Golden	58	40	18	15	26	0	0	0	0	0	0	0	0	0	0	0
Hurunui District	2014	DOG	Retriever, Labrador	273	139	134	73	146	0	0	0	0	0	0	0	0	0	0	0
Hurunui District	2014	DOG	Rottweiler	19	11	8	6	14	1	0	0	0	0	0	0	0	0	0	0
Hurunui District	2014	DOG	Schnauzer, Miniature	12	9	3	3	9	0	0	0	0	0	0	0	0	0	0	0
Hurunui District	2014	DOG	Shepherd, German	55	30	25	15	31	2	2	0	0	0	0	0	0	0	0	0
Hurunui District	2014	DOG	Shih Tzu	12	9	3	5	10	0	0	0	0	0	0	0	0	0	0	0
Hurunui District	2014	DOG	Spaniel, Cavalier King Charles	7	5	2	6	6	0	0	0	0	0	0	0	0	0	0	0
Hurunui District	2014	DOG	Spaniel, Cocker	22	16	6	5	14	0	0	0	0	0	0	0	0	0	0	0
Hurunui District	2014	DOG	Spaniel, English Springer	37	22	15	9	22	0	0	0	0	0	0	0	0	0	0	0
Hurunui District	2014	DOG	Terrier, American Pit Bull	3	3	0	2	3	3	0	0	0	0	0	0	0	0	0	0
Hurunui District	2014	DOG	Terrier, Fox (Smooth)	156	81	75	40	60	1	0	0	0	0	0	0	0	0	0	0
Hurunui District	2014	DOG	Terrier, Jack Russell	275	141	134	52	129	2	0	0	0	0	0	0	0	0	0	0
Hurunui District	2014	DOG	Terrier, Staffordshire Bull	45	27	18	15	29	1	0	0	0	0	0	0	0	0	0	0
Hurunui District	2014	DOG	Terrier, West Highland White	21	6	15	5	14	0	0	0	0	0	0	0	0	0	0	0
Hurunui District	2014	DOG	_Unidentified_	491	270	221	137	286	2	0	0	0	0	0	0	0	0	0	0
Hurunui District	2014	OWN	_	0	0	0	0	0	0	0	0	0	2221	25	0	0	0	0	0
Hurunui District	2014	JST	_	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Hurunui District	2014	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	54	8082	9140
Hurunui District	2015	DOG	_ALL-PURE_	4343	2190	2153	590	1209	12	1	0	0	0	0	0	0	0	0	0
Hurunui District	2015	DOG	_ALL-CROSS_	1087	538	549	314	561	3	3	0	0	0	0	0	0	0	0	0
Hurunui District	2015	DOG	_ALL-DOGS_	5430	2728	2702	904	1770	15	4	0	0	0	0	0	0	0	0	0
Hurunui District	2015	DOG	Beagle	16	5	11	5	14	0	0	0	0	0	0	0	0	0	0	0
Hurunui District	2015	DOG	Bichon Frise	45	26	19	22	29	0	0	0	0	0	0	0	0	0	0	0
Hurunui District	2015	DOG	Boxer	33	19	14	16	26	0	0	0	0	0	0	0	0	0	0	0
Hurunui District	2015	DOG	Cattle, Australian	22	13	9	3	6	0	0	0	0	0	0	0	0	0	0	0
Hurunui District	2015	DOG	Chihuahua, Long Coat	15	9	6	7	11	0	0	0	0	0	0	0	0	0	0	0
Hurunui District	2015	DOG	Chihuahua, Smooth Coat	17	9	8	6	13	0	0	0	0	0	0	0	0	0	0	0
Hurunui District	2015	DOG	Collie, Bearded	105	54	51	7	9	0	0	0	0	0	0	0	0	0	0	0
Hurunui District	2015	DOG	Collie, Border	147	80	67	30	40	0	0	0	0	0	0	0	0	0	0	0
Hurunui District	2015	DOG	Collie, Rough	33	19	14	0	0	0	0	0	0	0	0	0	0	0	0	0
Hurunui District	2015	DOG	Collie, Smooth	1110	560	550	19	10	0	0	0	0	0	0	0	0	0	0	0
Hurunui District	2015	DOG	Greyhound	154	71	83	8	123	0	0	0	0	0	0	0	0	0	0	0
Hurunui District	2015	DOG	Heading	368	180	188	5	10	0	0	0	0	0	0	0	0	0	0	0
Hurunui District	2015	DOG	Huntaway	724	316	408	21	11	0	0	0	0	0	0	0	0	0	0	0
Hurunui District	2015	DOG	Maltese	16	8	8	4	7	0	0	0	0	0	0	0	0	0	0	0
Hurunui District	2015	DOG	Poodle, Miniature	10	6	4	5	8	0	0	0	0	0	0	0	0	0	0	0
Hurunui District	2015	DOG	Poodle, Toy	7	3	4	3	6	0	0	0	0	0	0	0	0	0	0	0
Hurunui District	2015	DOG	Retriever, Golden	55	37	18	14	32	0	0	0	0	0	0	0	0	0	0	0
Hurunui District	2015	DOG	Retriever, Labrador	281	140	141	76	165	1	0	0	0	0	0	0	0	0	0	0
Hurunui District	2015	DOG	Rottweiler	19	11	8	5	16	1	0	0	0	0	0	0	0	0	0	0
Hurunui District	2015	DOG	Schnauzer, Miniature	15	10	5	6	12	0	0	0	0	0	0	0	0	0	0	0
Hurunui District	2015	DOG	Shepherd, German	62	34	28	19	40	2	1	0	0	0	0	0	0	0	0	0
Hurunui District	2015	DOG	Shih Tzu	14	11	3	5	13	0	0	0	0	0	0	0	0	0	0	0
Hurunui District	2015	DOG	Spaniel, Cavalier King Charles	7	5	2	6	6	0	0	0	0	0	0	0	0	0	0	0
Hurunui District	2015	DOG	Spaniel, Cocker	21	15	6	5	14	0	0	0	0	0	0	0	0	0	0	0
Hurunui District	2015	DOG	Spaniel, English Springer	35	21	14	8	22	0	0	0	0	0	0	0	0	0	0	0
Hurunui District	2015	DOG	Terrier, American Pit Bull	3	3	0	2	3	3	0	0	0	0	0	0	0	0	0	0
Hurunui District	2015	DOG	Terrier, Fox (Smooth)	147	73	74	43	63	0	0	0	0	0	0	0	0	0	0	0
Hurunui District	2015	DOG	Terrier, Jack Russell	266	134	132	53	137	1	0	0	0	0	0	0	0	0	0	0
Hurunui District	2015	DOG	Terrier, Staffordshire Bull	44	25	19	15	35	1	0	0	0	0	0	0	0	0	0	0
Hurunui District	2015	DOG	Terrier, West Highland White	22	6	16	6	16	0	0	0	0	0	0	0	0	0	0	0
Hurunui District	2015	DOG	_Unidentified_	530	287	243	166	312	3	0	0	0	0	0	0	0	0	0	0
Hurunui District	2015	OWN	_	0	0	0	0	0	0	0	0	0	2225	23	0	0	0	0	0
Hurunui District	2015	JST	_	0	0	0	0	0	0	0	0	0	0	0	4	1	0	0	0
Hurunui District	2015	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	61	13179	13568
Hurunui District	2016	DOG	_ALL-PURE_	4343	2204	2139	629	1273	13	0	0	0	0	0	0	0	0	0	0
Hurunui District	2016	DOG	_ALL-CROSS_	1113	560	553	349	603	7	7	0	0	0	0	0	0	0	0	0
Hurunui District	2016	DOG	_ALL-DOGS_	5456	2764	2692	978	1876	20	7	0	0	0	0	0	0	0	0	0
Hurunui District	2016	DOG	Beagle	12	6	6	5	10	0	0	0	0	0	0	0	0	0	0	0
Hurunui District	2016	DOG	Bichon Frise	50	27	23	24	36	0	0	0	0	0	0	0	0	0	0	0
Hurunui District	2016	DOG	Boxer	34	23	11	17	27	0	0	0	0	0	0	0	0	0	0	0
Hurunui District	2016	DOG	Cattle, Australian	34	17	17	8	11	0	0	0	0	0	0	0	0	0	0	0
Hurunui District	2016	DOG	Chihuahua, Long Coat	29	20	9	8	21	0	0	0	0	0	0	0	0	0	0	0
Hurunui District	2016	DOG	Chihuahua, Smooth Coat	19	11	8	7	13	0	0	0	0	0	0	0	0	0	0	0
Hurunui District	2016	DOG	Collie, Bearded	97	51	46	8	9	0	0	0	0	0	0	0	0	0	0	0
Hurunui District	2016	DOG	Collie, Border	164	84	80	34	47	0	0	0	0	0	0	0	0	0	0	0
Hurunui District	2016	DOG	Collie, Rough	29	16	13	0	0	0	0	0	0	0	0	0	0	0	0	0
Hurunui District	2016	DOG	Collie, Smooth	1031	511	520	17	11	1	0	0	0	0	0	0	0	0	0	0
Hurunui District	2016	DOG	Greyhound	150	74	76	10	129	0	0	0	0	0	0	0	0	0	0	0
Hurunui District	2016	DOG	Heading	393	197	196	4	12	0	0	0	0	0	0	0	0	0	0	0
Hurunui District	2016	DOG	Huntaway	748	320	428	26	16	0	0	0	0	0	0	0	0	0	0	0
Hurunui District	2016	DOG	Maltese	15	8	7	4	7	0	0	0	0	0	0	0	0	0	0	0
Hurunui District	2016	DOG	Poodle, Miniature	8	5	3	3	8	0	0	0	0	0	0	0	0	0	0	0
Hurunui District	2016	DOG	Poodle, Toy	6	3	3	2	5	0	0	0	0	0	0	0	0	0	0	0
Hurunui District	2016	DOG	Retriever, Golden	50	37	13	15	30	0	0	0	0	0	0	0	0	0	0	0
Hurunui District	2016	DOG	Retriever, Labrador	287	146	141	88	177	1	0	0	0	0	0	0	0	0	0	0
Hurunui District	2016	DOG	Rottweiler	19	10	9	4	16	1	0	0	0	0	0	0	0	0	0	0
Hurunui District	2016	DOG	Schnauzer, Miniature	17	12	5	7	12	0	0	0	0	0	0	0	0	0	0	0
Hurunui District	2016	DOG	Shepherd, German	48	27	21	11	35	1	0	0	0	0	0	0	0	0	0	0
Hurunui District	2016	DOG	Shih Tzu	13	11	2	5	11	0	0	0	0	0	0	0	0	0	0	0
Hurunui District	2016	DOG	Spaniel, Cavalier King Charles	9	7	2	6	7	0	0	0	0	0	0	0	0	0	0	0
Hurunui District	2016	DOG	Spaniel, Cocker	19	15	4	4	11	0	0	0	0	0	0	0	0	0	0	0
Hurunui District	2016	DOG	Spaniel, English Springer	28	18	10	6	19	0	0	0	0	0	0	0	0	0	0	0
Hurunui District	2016	DOG	Terrier, American Pit Bull	4	3	1	2	4	4	0	0	0	0	0	0	0	0	0	0
Hurunui District	2016	DOG	Terrier, Fox (Smooth)	146	77	69	45	66	0	0	0	0	0	0	0	0	0	0	0
Hurunui District	2016	DOG	Terrier, Jack Russell	260	131	129	60	144	1	0	0	0	0	0	0	0	0	0	0
Hurunui District	2016	DOG	Terrier, Staffordshire Bull	43	26	17	17	33	1	0	0	0	0	0	0	0	0	0	0
Hurunui District	2016	DOG	Terrier, West Highland White	29	11	18	10	20	0	0	0	0	0	0	0	0	0	0	0
Hurunui District	2016	DOG	_Unidentified_	552	300	252	172	326	3	0	0	0	0	0	0	0	0	0	0
Hurunui District	2016	OWN	_	0	0	0	0	0	0	0	0	0	2252	14	0	0	0	0	0
Hutt City	2001	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	45	9148	0
Hutt City	2002	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	44	4399	0
Hutt City	2003	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	37	95777	0
Hutt City	2004	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	113	12878	0
Hutt City	2005	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	162	14889	0
Hutt City	2006	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	185	21529	46731
Hutt City	2007	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	151	12391	21738
Hutt City	2008	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	187	132202	54732
Hutt City	2009	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	151	28809	67764
Hutt City	2010	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	143	18602	48138
Hutt City	2011	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	205	39558	35186
Hutt City	2012	JST	_	0	0	0	0	0	0	0	0	0	0	0	7	1	0	0	0
Hutt City	2012	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	235	41775	37545
Hutt City	2013	DOG	_ALL-PURE_	4938	2360	2578	3261	3151	71	22	0	0	0	0	0	0	0	0	0
Hutt City	2013	DOG	_ALL-CROSS_	3985	2001	1984	2804	2772	97	19	0	0	0	0	0	0	0	0	0
Hutt City	2013	DOG	_ALL-DOGS_	8923	4361	4562	6065	5923	168	41	0	0	0	0	0	0	0	0	0
Hutt City	2013	DOG	Beagle	78	35	43	62	61	0	0	0	0	0	0	0	0	0	0	0
Hutt City	2013	DOG	Bichon Frise	174	68	106	129	117	0	1	0	0	0	0	0	0	0	0	0
Hutt City	2013	DOG	Boxer	116	59	57	85	52	0	0	0	0	0	0	0	0	0	0	0
Hutt City	2013	DOG	Cattle, Australian	39	18	21	27	25	0	0	0	0	0	0	0	0	0	0	0
Hutt City	2013	DOG	Chihuahua, Long Coat	101	50	51	62	65	0	1	0	0	0	0	0	0	0	0	0
Hutt City	2013	DOG	Chihuahua, Smooth Coat	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Hutt City	2013	DOG	Collie, Bearded	6	4	2	4	4	0	0	0	0	0	0	0	0	0	0	0
Hutt City	2013	DOG	Collie, Border	222	117	105	154	124	0	1	0	0	0	0	0	0	0	0	0
Hutt City	2013	DOG	Collie, Rough	16	9	7	13	10	0	0	0	0	0	0	0	0	0	0	0
Hutt City	2013	DOG	Collie, Smooth	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Hutt City	2013	DOG	Greyhound	48	23	25	42	41	0	0	0	0	0	0	0	0	0	0	0
Hutt City	2013	DOG	Heading	11	5	6	9	5	0	0	0	0	0	0	0	0	0	0	0
Hutt City	2013	DOG	Huntaway	48	35	13	40	25	0	1	0	0	0	0	0	0	0	0	0
Hutt City	2013	DOG	Maltese	39	16	23	24	35	0	0	0	0	0	0	0	0	0	0	0
Hutt City	2013	DOG	Poodle, Miniature	55	32	23	38	34	0	0	0	0	0	0	0	0	0	0	0
Hutt City	2013	DOG	Poodle, Toy	41	19	22	21	29	0	0	0	0	0	0	0	0	0	0	0
Hutt City	2013	DOG	Retriever, Golden	210	98	112	135	114	0	0	0	0	0	0	0	0	0	0	0
Hutt City	2013	DOG	Retriever, Labrador	668	325	343	482	424	1	1	0	0	0	0	0	0	0	0	0
Hutt City	2013	DOG	Rottweiler	139	58	81	62	96	2	1	0	0	0	0	0	0	0	0	0
Hutt City	2013	DOG	Schnauzer, Miniature	71	23	48	45	51	0	0	0	0	0	0	0	0	0	0	0
Hutt City	2013	DOG	Shepherd, German	261	139	122	148	149	5	2	0	0	0	0	0	0	0	0	0
Hutt City	2013	DOG	Shih Tzu	81	35	46	53	65	0	0	0	0	0	0	0	0	0	0	0
Hutt City	2013	DOG	Spaniel, Cavalier King Charles	91	37	54	63	57	0	0	0	0	0	0	0	0	0	0	0
Hutt City	2013	DOG	Spaniel, Cocker	106	48	58	72	68	0	0	0	0	0	0	0	0	0	0	0
Hutt City	2013	DOG	Spaniel, English Springer	40	23	17	32	20	0	0	0	0	0	0	0	0	0	0	0
Hutt City	2013	DOG	Terrier, American Pit Bull	65	27	38	47	51	59	3	0	0	0	0	0	0	0	0	0
Hutt City	2013	DOG	Terrier, Fox (Smooth)	265	141	124	189	133	0	0	0	0	0	0	0	0	0	0	0
Hutt City	2013	DOG	Terrier, Jack Russell	255	125	130	189	153	0	1	0	0	0	0	0	0	0	0	0
Hutt City	2013	DOG	Terrier, Staffordshire Bull	159	83	76	85	119	1	1	0	0	0	0	0	0	0	0	0
Hutt City	2013	DOG	Terrier, West Highland White	71	34	37	61	49	0	0	0	0	0	0	0	0	0	0	0
Hutt City	2013	DOG	_Unidentified_	1462	674	788	888	975	3	9	0	0	0	0	0	0	0	0	0
Hutt City	2013	OWN	_	0	0	0	0	0	0	0	0	0	7636	11	0	0	0	0	0
Hutt City	2013	JST	_	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Hutt City	2013	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	232	99470	74634
Hutt City	2014	DOG	_ALL-PURE_	4826	2288	2538	3252	3363	80	21	0	0	0	0	0	0	0	0	0
Hutt City	2014	DOG	_ALL-CROSS_	4065	2053	2012	2935	3041	105	17	0	0	0	0	0	0	0	0	0
Hutt City	2014	DOG	_ALL-DOGS_	8891	4341	4550	6187	6404	185	38	0	0	0	0	0	0	0	0	0
Hutt City	2014	DOG	Beagle	66	27	39	52	55	0	0	0	0	0	0	0	0	0	0	0
Hutt City	2014	DOG	Bichon Frise	176	71	105	130	126	0	1	0	0	0	0	0	0	0	0	0
Hutt City	2014	DOG	Boxer	101	51	50	77	57	1	0	0	0	0	0	0	0	0	0	0
Hutt City	2014	DOG	Cattle, Australian	36	18	18	25	25	0	0	0	0	0	0	0	0	0	0	0
Hutt City	2014	DOG	Chihuahua, Long Coat	102	52	50	67	67	0	1	0	0	0	0	0	0	0	0	0
Hutt City	2014	DOG	Chihuahua, Smooth Coat	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Hutt City	2014	DOG	Collie, Bearded	7	4	3	4	5	0	0	0	0	0	0	0	0	0	0	0
Hutt City	2014	DOG	Collie, Border	212	109	103	148	129	0	1	0	0	0	0	0	0	0	0	0
Hutt City	2014	DOG	Collie, Rough	17	10	7	13	11	0	0	0	0	0	0	0	0	0	0	0
Hutt City	2014	DOG	Collie, Smooth	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Hutt City	2014	DOG	Greyhound	56	27	29	51	49	0	0	0	0	0	0	0	0	0	0	0
Hutt City	2014	DOG	Heading	11	5	6	11	5	0	0	0	0	0	0	0	0	0	0	0
Hutt City	2014	DOG	Huntaway	45	31	14	40	26	0	1	0	0	0	0	0	0	0	0	0
Hutt City	2014	DOG	Maltese	40	18	22	23	38	0	0	0	0	0	0	0	0	0	0	0
Hutt City	2014	DOG	Poodle, Miniature	53	29	24	36	38	0	0	0	0	0	0	0	0	0	0	0
Hutt City	2014	DOG	Poodle, Toy	39	20	19	24	28	0	0	0	0	0	0	0	0	0	0	0
Hutt City	2014	DOG	Retriever, Golden	190	89	101	124	117	0	0	0	0	0	0	0	0	0	0	0
Hutt City	2014	DOG	Retriever, Labrador	654	319	335	473	446	3	1	0	0	0	0	0	0	0	0	0
Hutt City	2014	DOG	Rottweiler	140	55	85	68	110	3	2	0	0	0	0	0	0	0	0	0
Hutt City	2014	DOG	Schnauzer, Miniature	87	31	56	60	68	0	0	0	0	0	0	0	0	0	0	0
Hutt City	2014	DOG	Shepherd, German	247	125	122	138	169	8	3	0	0	0	0	0	0	0	0	0
Hutt City	2014	DOG	Shih Tzu	92	44	48	60	77	0	0	0	0	0	0	0	0	0	0	0
Hutt City	2014	DOG	Spaniel, Cavalier King Charles	81	33	48	60	56	0	0	0	0	0	0	0	0	0	0	0
Hutt City	2014	DOG	Spaniel, Cocker	100	45	55	73	71	0	0	0	0	0	0	0	0	0	0	0
Hutt City	2014	DOG	Spaniel, English Springer	35	21	14	25	22	0	0	0	0	0	0	0	0	0	0	0
Hutt City	2014	DOG	Terrier, American Pit Bull	58	22	36	47	48	56	2	0	0	0	0	0	0	0	0	0
Hutt City	2014	DOG	Terrier, Fox (Smooth)	248	132	116	190	138	0	0	0	0	0	0	0	0	0	0	0
Hutt City	2014	DOG	Terrier, Jack Russell	238	112	126	180	152	1	1	0	0	0	0	0	0	0	0	0
Hutt City	2014	DOG	Terrier, Staffordshire Bull	184	89	95	89	143	2	1	0	0	0	0	0	0	0	0	0
Hutt City	2014	DOG	Terrier, West Highland White	65	31	34	56	50	0	0	0	0	0	0	0	0	0	0	0
Hutt City	2014	DOG	_Unidentified_	1446	668	778	908	1037	6	7	0	0	0	0	0	0	0	0	0
Hutt City	2014	OWN	_	0	0	0	0	0	0	0	0	1	7600	17	0	0	0	0	0
Hutt City	2014	JST	_	0	0	0	0	0	0	0	0	0	0	0	1	0	0	0	0
Hutt City	2014	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	218	35909	71515
Hutt City	2015	DOG	_ALL-PURE_	4886	2315	2571	3260	3686	64	20	0	0	0	0	0	0	0	0	0
Hutt City	2015	DOG	_ALL-CROSS_	4228	2085	2143	3094	3320	98	17	0	0	0	0	0	0	0	0	0
Hutt City	2015	DOG	_ALL-DOGS_	9114	4400	4714	6354	7006	162	37	0	0	0	0	0	0	0	0	0
Hutt City	2015	DOG	Beagle	68	30	38	55	60	0	0	0	0	0	0	0	0	0	0	0
Hutt City	2015	DOG	Bichon Frise	168	69	99	126	130	0	0	0	0	0	0	0	0	0	0	0
Hutt City	2015	DOG	Boxer	87	43	44	63	59	0	0	0	0	0	0	0	0	0	0	0
Hutt City	2015	DOG	Cattle, Australian	39	19	20	26	26	0	0	0	0	0	0	0	0	0	0	0
Hutt City	2015	DOG	Chihuahua, Long Coat	108	52	56	75	80	0	1	0	0	0	0	0	0	0	0	0
Hutt City	2015	DOG	Chihuahua, Smooth Coat	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Hutt City	2015	DOG	Collie, Bearded	9	6	3	4	8	0	0	0	0	0	0	0	0	0	0	0
Hutt City	2015	DOG	Collie, Border	217	100	117	145	147	0	0	0	0	0	0	0	0	0	0	0
Hutt City	2015	DOG	Collie, Rough	13	8	5	10	10	0	0	0	0	0	0	0	0	0	0	0
Hutt City	2015	DOG	Collie, Smooth	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Hutt City	2015	DOG	Greyhound	59	29	30	55	55	0	0	0	0	0	0	0	0	0	0	0
Hutt City	2015	DOG	Heading	8	3	5	8	4	0	0	0	0	0	0	0	0	0	0	0
Hutt City	2015	DOG	Huntaway	56	34	22	41	40	0	1	0	0	0	0	0	0	0	0	0
Hutt City	2015	DOG	Maltese	44	19	25	28	39	0	0	0	0	0	0	0	0	0	0	0
Hutt City	2015	DOG	Poodle, Miniature	49	25	24	31	39	0	0	0	0	0	0	0	0	0	0	0
Hutt City	2015	DOG	Poodle, Toy	35	17	18	22	26	0	0	0	0	0	0	0	0	0	0	0
Hutt City	2015	DOG	Retriever, Golden	190	89	101	125	126	0	0	0	0	0	0	0	0	0	0	0
Hutt City	2015	DOG	Retriever, Labrador	656	326	330	460	496	1	1	0	0	0	0	0	0	0	0	0
Hutt City	2015	DOG	Rottweiler	144	64	80	72	120	3	1	0	0	0	0	0	0	0	0	0
Hutt City	2015	DOG	Schnauzer, Miniature	99	37	62	67	87	0	0	0	0	0	0	0	0	0	0	0
Hutt City	2015	DOG	Shepherd, German	236	121	115	140	176	6	3	0	0	0	0	0	0	0	0	0
Hutt City	2015	DOG	Shih Tzu	109	56	53	77	92	0	0	0	0	0	0	0	0	0	0	0
Hutt City	2015	DOG	Spaniel, Cavalier King Charles	88	34	54	67	66	0	0	0	0	0	0	0	0	0	0	0
Hutt City	2015	DOG	Spaniel, Cocker	96	42	54	71	71	1	0	0	0	0	0	0	0	0	0	0
Hutt City	2015	DOG	Spaniel, English Springer	33	21	12	23	22	0	0	0	0	0	0	0	0	0	0	0
Hutt City	2015	DOG	Terrier, American Pit Bull	44	15	29	34	38	41	1	0	0	0	0	0	0	0	0	0
Hutt City	2015	DOG	Terrier, Fox (Smooth)	230	129	101	181	140	0	0	0	0	0	0	0	0	0	0	0
Hutt City	2015	DOG	Terrier, Jack Russell	232	108	124	170	157	1	1	0	0	0	0	0	0	0	0	0
Hutt City	2015	DOG	Terrier, Staffordshire Bull	197	99	98	91	160	2	1	0	0	0	0	0	0	0	0	0
Hutt City	2015	DOG	Terrier, West Highland White	64	32	32	56	50	0	0	0	0	0	0	0	0	0	0	0
Hutt City	2015	DOG	_Unidentified_	1508	688	820	937	1162	9	10	0	0	0	0	0	0	0	0	0
Hutt City	2015	OWN	_	0	0	0	0	0	0	0	0	2	7757	12	0	0	0	0	0
Hutt City	2015	JST	_	0	0	0	0	0	0	0	0	0	0	0	1	1	0	0	0
Hutt City	2015	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	205	57065	67155
Hutt City	2016	DOG	_ALL-PURE_	4875	2301	2574	3293	3877	66	18	0	0	0	0	0	0	0	0	0
Hutt City	2016	DOG	_ALL-CROSS_	4448	2180	2268	3390	3664	119	20	0	0	0	0	0	0	0	0	0
Hutt City	2016	DOG	_ALL-DOGS_	9323	4481	4842	6683	7541	185	38	0	0	0	0	0	0	0	0	0
Hutt City	2016	DOG	Beagle	65	30	35	52	59	0	0	0	0	0	0	0	0	0	0	0
Hutt City	2016	DOG	Bichon Frise	164	69	95	123	125	0	0	0	0	0	0	0	0	0	0	0
Hutt City	2016	DOG	Boxer	79	38	41	60	60	0	0	0	0	0	0	0	0	0	0	0
Hutt City	2016	DOG	Cattle, Australian	35	19	16	27	27	0	0	0	0	0	0	0	0	0	0	0
Hutt City	2016	DOG	Chihuahua, Long Coat	117	55	62	88	91	1	1	0	0	0	0	0	0	0	0	0
Hutt City	2016	DOG	Chihuahua, Smooth Coat	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Hutt City	2016	DOG	Collie, Bearded	9	5	4	6	8	0	0	0	0	0	0	0	0	0	0	0
Hutt City	2016	DOG	Collie, Border	205	98	107	145	150	0	0	0	0	0	0	0	0	0	0	0
Hutt City	2016	DOG	Collie, Rough	14	6	8	9	11	0	0	0	0	0	0	0	0	0	0	0
Hutt City	2016	DOG	Collie, Smooth	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Hutt City	2016	DOG	Greyhound	63	32	31	57	58	0	0	0	0	0	0	0	0	0	0	0
Hutt City	2016	DOG	Heading	7	3	4	7	4	0	0	0	0	0	0	0	0	0	0	0
Hutt City	2016	DOG	Huntaway	55	29	26	42	43	0	0	0	0	0	0	0	0	0	0	0
Hutt City	2016	DOG	Maltese	41	18	23	25	34	0	0	0	0	0	0	0	0	0	0	0
Hutt City	2016	DOG	Poodle, Miniature	50	26	24	33	40	0	0	0	0	0	0	0	0	0	0	0
Hutt City	2016	DOG	Poodle, Toy	37	17	20	24	29	0	0	0	0	0	0	0	0	0	0	0
Hutt City	2016	DOG	Retriever, Golden	202	94	108	128	153	0	0	0	0	0	0	0	0	0	0	0
Hutt City	2016	DOG	Retriever, Labrador	640	320	320	456	510	1	0	0	0	0	0	0	0	0	0	0
Hutt City	2016	DOG	Rottweiler	156	73	83	79	132	2	1	0	0	0	0	0	0	0	0	0
Hutt City	2016	DOG	Schnauzer, Miniature	117	47	70	84	101	0	0	0	0	0	0	0	0	0	0	0
Hutt City	2016	DOG	Shepherd, German	225	116	109	133	183	4	3	0	0	0	0	0	0	0	0	0
Hutt City	2016	DOG	Shih Tzu	123	67	56	93	112	0	0	0	0	0	0	0	0	0	0	0
Hutt City	2016	DOG	Spaniel, Cavalier King Charles	86	32	54	65	66	0	0	0	0	0	0	0	0	0	0	0
Hutt City	2016	DOG	Spaniel, Cocker	96	40	56	68	75	1	0	0	0	0	0	0	0	0	0	0
Hutt City	2016	DOG	Spaniel, English Springer	29	18	11	18	22	0	0	0	0	0	0	0	0	0	0	0
Hutt City	2016	DOG	Terrier, American Pit Bull	46	18	28	41	43	45	1	0	0	0	0	0	0	0	0	0
Hutt City	2016	DOG	Terrier, Fox (Smooth)	214	121	93	171	144	0	0	0	0	0	0	0	0	0	0	0
Hutt City	2016	DOG	Terrier, Jack Russell	214	97	117	158	148	1	1	0	0	0	0	0	0	0	0	0
Hutt City	2016	DOG	Terrier, Staffordshire Bull	211	98	113	106	170	1	1	0	0	0	0	0	0	0	0	0
Hutt City	2016	DOG	Terrier, West Highland White	64	34	30	57	53	0	0	0	0	0	0	0	0	0	0	0
Hutt City	2016	DOG	_Unidentified_	1511	681	830	938	1226	10	10	0	0	0	0	0	0	0	0	0
Hutt City	2016	OWN	_	0	0	0	0	0	0	0	0	2	7958	11	0	0	0	0	0
Invercargill City	2001	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	32	4931	0
Invercargill City	2002	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	21	1292	0
Invercargill City	2003	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	20	8344	0
Invercargill City	2004	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	79	18220	0
Invercargill City	2005	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	78	8869	0
Invercargill City	2006	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	81	6410	10544
Invercargill City	2007	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	38	11361	10216
Invercargill City	2008	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	38	4755	8028
Invercargill City	2009	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	35	2798	15399
Invercargill City	2010	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	37	27121	32708
Invercargill City	2011	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	50	21025	3495
Invercargill City	2012	JST	_	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Invercargill City	2012	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	120	21993	16608
Invercargill City	2013	DOG	_ALL-PURE_	4955	2457	2498	40	2190	56	4	0	0	0	0	0	0	0	0	0
Invercargill City	2013	DOG	_ALL-CROSS_	2866	1395	1471	32	1207	71	4	0	0	0	0	0	0	0	0	0
Invercargill City	2013	DOG	_ALL-DOGS_	7821	3852	3969	72	3397	127	8	0	0	0	0	0	0	0	0	0
Invercargill City	2013	DOG	Beagle	39	17	22	0	22	0	0	0	0	0	0	0	0	0	0	0
Invercargill City	2013	DOG	Bichon Frise	264	146	118	3	110	3	0	0	0	0	0	0	0	0	0	0
Invercargill City	2013	DOG	Boxer	116	46	70	1	50	3	0	0	0	0	0	0	0	0	0	0
Invercargill City	2013	DOG	Cattle, Australian	1	0	1	0	1	0	0	0	0	0	0	0	0	0	0	0
Invercargill City	2013	DOG	Chihuahua, Long Coat	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Invercargill City	2013	DOG	Chihuahua, Smooth Coat	173	97	76	1	90	0	0	0	0	0	0	0	0	0	0	0
Invercargill City	2013	DOG	Collie, Bearded	13	7	6	0	5	0	0	0	0	0	0	0	0	0	0	0
Invercargill City	2013	DOG	Collie, Border	259	134	125	3	88	1	0	0	0	0	0	0	0	0	0	0
Invercargill City	2013	DOG	Collie, Rough	17	8	9	0	3	1	0	0	0	0	0	0	0	0	0	0
Invercargill City	2013	DOG	Collie, Smooth	13	6	7	0	1	0	0	0	0	0	0	0	0	0	0	0
Invercargill City	2013	DOG	Greyhound	59	30	29	1	7	1	0	0	0	0	0	0	0	0	0	0
Invercargill City	2013	DOG	Heading	16	10	6	1	6	0	0	0	0	0	0	0	0	0	0	0
Invercargill City	2013	DOG	Huntaway	84	39	45	0	13	0	0	0	0	0	0	0	0	0	0	0
Invercargill City	2013	DOG	Maltese	90	44	46	1	40	1	0	0	0	0	0	0	0	0	0	0
Invercargill City	2013	DOG	Poodle, Miniature	65	31	34	0	40	0	0	0	0	0	0	0	0	0	0	0
Invercargill City	2013	DOG	Poodle, Toy	36	20	16	1	11	0	0	0	0	0	0	0	0	0	0	0
Invercargill City	2013	DOG	Retriever, Golden	146	63	83	2	72	0	0	0	0	0	0	0	0	0	0	0
Invercargill City	2013	DOG	Retriever, Labrador	786	378	408	7	321	3	1	0	0	0	0	0	0	0	0	0
Invercargill City	2013	DOG	Rottweiler	180	84	96	1	87	9	1	0	0	0	0	0	0	0	0	0
Invercargill City	2013	DOG	Schnauzer, Miniature	55	22	33	0	31	0	0	0	0	0	0	0	0	0	0	0
Invercargill City	2013	DOG	Shepherd, German	202	106	96	0	93	5	0	0	0	0	0	0	0	0	0	0
Invercargill City	2013	DOG	Shih Tzu	100	58	42	0	69	0	0	0	0	0	0	0	0	0	0	0
Invercargill City	2013	DOG	Spaniel, Cavalier King Charles	75	41	34	3	33	0	0	0	0	0	0	0	0	0	0	0
Invercargill City	2013	DOG	Spaniel, Cocker	102	42	60	1	57	1	0	0	0	0	0	0	0	0	0	0
Invercargill City	2013	DOG	Spaniel, English Springer	109	56	53	1	48	2	0	0	0	0	0	0	0	0	0	0
Invercargill City	2013	DOG	Terrier, American Pit Bull	10	5	5	0	8	9	0	0	0	0	0	0	0	0	0	0
Invercargill City	2013	DOG	Terrier, Fox (Smooth)	226	125	101	0	74	0	0	0	0	0	0	0	0	0	0	0
Invercargill City	2013	DOG	Terrier, Jack Russell	359	188	171	3	155	2	0	0	0	0	0	0	0	0	0	0
Invercargill City	2013	DOG	Terrier, Staffordshire Bull	215	119	96	1	108	2	0	0	0	0	0	0	0	0	0	0
Invercargill City	2013	DOG	Terrier, West Highland White	32	14	18	0	20	0	0	0	0	0	0	0	0	0	0	0
Invercargill City	2013	DOG	_Unidentified_	1113	521	592	9	527	13	2	0	0	0	0	0	0	0	0	0
Invercargill City	2013	OWN	_	0	0	0	0	0	0	0	0	0	6267	69	0	0	0	0	0
Invercargill City	2013	JST	_	0	0	0	0	0	0	0	0	0	0	0	2	1	0	0	0
Invercargill City	2013	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	124	16942	28287
Invercargill City	2014	DOG	_ALL-PURE_	5071	2470	2601	32	2463	64	2	0	0	0	0	0	0	0	0	0
Invercargill City	2014	DOG	_ALL-CROSS_	2914	1422	1492	37	1306	68	3	0	0	0	0	0	0	0	0	0
Invercargill City	2014	DOG	_ALL-DOGS_	7985	3892	4093	69	3769	132	5	0	0	0	0	0	0	0	0	0
Invercargill City	2014	DOG	Beagle	35	15	20	0	21	0	0	0	0	0	0	0	0	0	0	0
Invercargill City	2014	DOG	Bichon Frise	280	153	127	2	127	3	0	0	0	0	0	0	0	0	0	0
Invercargill City	2014	DOG	Boxer	118	47	71	0	56	2	0	0	0	0	0	0	0	0	0	0
Invercargill City	2014	DOG	Cattle, Australian	2	0	2	0	1	0	0	0	0	0	0	0	0	0	0	0
Invercargill City	2014	DOG	Chihuahua, Long Coat	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Invercargill City	2014	DOG	Chihuahua, Smooth Coat	161	86	75	1	89	0	0	0	0	0	0	0	0	0	0	0
Invercargill City	2014	DOG	Collie, Bearded	14	7	7	0	5	0	0	0	0	0	0	0	0	0	0	0
Invercargill City	2014	DOG	Collie, Border	263	134	129	3	101	1	0	0	0	0	0	0	0	0	0	0
Invercargill City	2014	DOG	Collie, Rough	18	10	8	0	4	1	0	0	0	0	0	0	0	0	0	0
Invercargill City	2014	DOG	Collie, Smooth	10	5	5	0	1	0	0	0	0	0	0	0	0	0	0	0
Invercargill City	2014	DOG	Greyhound	75	32	43	0	43	1	0	0	0	0	0	0	0	0	0	0
Invercargill City	2014	DOG	Heading	20	13	7	1	5	0	0	0	0	0	0	0	0	0	0	0
Invercargill City	2014	DOG	Huntaway	101	43	58	0	15	0	0	0	0	0	0	0	0	0	0	0
Invercargill City	2014	DOG	Maltese	89	46	43	1	44	1	0	0	0	0	0	0	0	0	0	0
Invercargill City	2014	DOG	Poodle, Miniature	62	30	32	0	39	0	0	0	0	0	0	0	0	0	0	0
Invercargill City	2014	DOG	Poodle, Toy	36	19	17	0	16	0	0	0	0	0	0	0	0	0	0	0
Invercargill City	2014	DOG	Retriever, Golden	145	62	83	2	77	0	0	0	0	0	0	0	0	0	0	0
Invercargill City	2014	DOG	Retriever, Labrador	786	369	417	7	359	3	0	0	0	0	0	0	0	0	0	0
Invercargill City	2014	DOG	Rottweiler	196	89	107	1	99	10	1	0	0	0	0	0	0	0	0	0
Invercargill City	2014	DOG	Schnauzer, Miniature	66	27	39	0	42	0	0	0	0	0	0	0	0	0	0	0
Invercargill City	2014	DOG	Shepherd, German	193	99	94	0	99	5	0	0	0	0	0	0	0	0	0	0
Invercargill City	2014	DOG	Shih Tzu	122	64	58	0	91	1	0	0	0	0	0	0	0	0	0	0
Invercargill City	2014	DOG	Spaniel, Cavalier King Charles	64	32	32	3	30	0	0	0	0	0	0	0	0	0	0	0
Invercargill City	2014	DOG	Spaniel, Cocker	107	44	63	0	67	1	0	0	0	0	0	0	0	0	0	0
Invercargill City	2014	DOG	Spaniel, English Springer	98	52	46	1	43	2	0	0	0	0	0	0	0	0	0	0
Invercargill City	2014	DOG	Terrier, American Pit Bull	17	8	9	0	7	17	0	0	0	0	0	0	0	0	0	0
Invercargill City	2014	DOG	Terrier, Fox (Smooth)	232	127	105	0	91	0	0	0	0	0	0	0	0	0	0	0
Invercargill City	2014	DOG	Terrier, Jack Russell	386	206	180	3	184	1	0	0	0	0	0	0	0	0	0	0
Invercargill City	2014	DOG	Terrier, Staffordshire Bull	256	128	128	2	119	3	0	0	0	0	0	0	0	0	0	0
Invercargill City	2014	DOG	Terrier, West Highland White	32	14	18	0	20	0	0	0	0	0	0	0	0	0	0	0
Invercargill City	2014	DOG	_Unidentified_	1087	509	578	5	568	12	1	0	0	0	0	0	0	0	0	0
Invercargill City	2014	OWN	_	0	0	0	0	0	0	0	0	0	6400	83	0	0	0	0	0
Invercargill City	2014	JST	_	0	0	0	0	0	0	0	0	0	0	0	1	1	0	0	0
Invercargill City	2014	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	116	6366	24564
Invercargill City	2015	DOG	_ALL-PURE_	5188	2542	2646	33	2618	73	1	0	0	0	0	0	0	0	0	0
Invercargill City	2015	DOG	_ALL-CROSS_	3224	1586	1638	33	1504	73	1	0	0	0	0	0	0	0	0	0
Invercargill City	2015	DOG	_ALL-DOGS_	8412	4128	4284	66	4122	146	2	0	0	0	0	0	0	0	0	0
Invercargill City	2015	DOG	Beagle	36	16	20	0	22	0	0	0	0	0	0	0	0	0	0	0
Invercargill City	2015	DOG	Bichon Frise	278	161	117	2	132	1	0	0	0	0	0	0	0	0	0	0
Invercargill City	2015	DOG	Boxer	110	39	71	0	59	2	0	0	0	0	0	0	0	0	0	0
Invercargill City	2015	DOG	Cattle, Australian	2	0	2	0	0	0	0	0	0	0	0	0	0	0	0	0
Invercargill City	2015	DOG	Chihuahua, Long Coat	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Invercargill City	2015	DOG	Chihuahua, Smooth Coat	172	89	83	1	95	0	0	0	0	0	0	0	0	0	0	0
Invercargill City	2015	DOG	Collie, Bearded	14	8	6	0	5	0	0	0	0	0	0	0	0	0	0	0
Invercargill City	2015	DOG	Collie, Border	262	132	130	2	105	1	0	0	0	0	0	0	0	0	0	0
Invercargill City	2015	DOG	Collie, Rough	12	5	7	0	1	0	0	0	0	0	0	0	0	0	0	0
Invercargill City	2015	DOG	Collie, Smooth	11	3	8	0	2	0	0	0	0	0	0	0	0	0	0	0
Invercargill City	2015	DOG	Greyhound	65	29	36	0	43	0	0	0	0	0	0	0	0	0	0	0
Invercargill City	2015	DOG	Heading	21	11	10	1	5	0	0	0	0	0	0	0	0	0	0	0
Invercargill City	2015	DOG	Huntaway	112	51	61	1	20	0	0	0	0	0	0	0	0	0	0	0
Invercargill City	2015	DOG	Maltese	89	47	42	1	42	1	0	0	0	0	0	0	0	0	0	0
Invercargill City	2015	DOG	Poodle, Miniature	56	26	30	0	37	0	0	0	0	0	0	0	0	0	0	0
Invercargill City	2015	DOG	Poodle, Toy	39	20	19	0	16	0	0	0	0	0	0	0	0	0	0	0
Invercargill City	2015	DOG	Retriever, Golden	139	55	84	2	80	0	0	0	0	0	0	0	0	0	0	0
Invercargill City	2015	DOG	Retriever, Labrador	783	370	413	7	370	4	0	0	0	0	0	0	0	0	0	0
Invercargill City	2015	DOG	Rottweiler	211	102	109	1	107	12	0	0	0	0	0	0	0	0	0	0
Invercargill City	2015	DOG	Schnauzer, Miniature	66	26	40	0	46	0	0	0	0	0	0	0	0	0	0	0
Invercargill City	2015	DOG	Shepherd, German	202	100	102	0	101	6	0	0	0	0	0	0	0	0	0	0
Invercargill City	2015	DOG	Shih Tzu	128	68	60	1	95	1	0	0	0	0	0	0	0	0	0	0
Invercargill City	2015	DOG	Spaniel, Cavalier King Charles	65	33	32	3	31	0	0	0	0	0	0	0	0	0	0	0
Invercargill City	2015	DOG	Spaniel, Cocker	112	49	63	0	72	1	0	0	0	0	0	0	0	0	0	0
Invercargill City	2015	DOG	Spaniel, English Springer	106	55	51	1	50	2	0	0	0	0	0	0	0	0	0	0
Invercargill City	2015	DOG	Terrier, American Pit Bull	19	9	10	0	7	19	0	0	0	0	0	0	0	0	0	0
Invercargill City	2015	DOG	Terrier, Fox (Smooth)	236	129	107	1	102	0	0	0	0	0	0	0	0	0	0	0
Invercargill City	2015	DOG	Terrier, Jack Russell	378	197	181	3	191	1	0	0	0	0	0	0	0	0	0	0
Invercargill City	2015	DOG	Terrier, Staffordshire Bull	284	148	136	0	151	3	0	0	0	0	0	0	0	0	0	0
Invercargill City	2015	DOG	Terrier, West Highland White	32	15	17	0	21	0	0	0	0	0	0	0	0	0	0	0
Invercargill City	2015	DOG	_Unidentified_	1148	549	599	6	610	19	1	0	0	0	0	0	0	0	0	0
Invercargill City	2015	OWN	_	0	0	0	0	0	0	0	0	0	6683	92	0	0	0	0	0
Invercargill City	2015	JST	_	0	0	0	0	0	0	0	0	0	0	0	2	0	0	0	0
Invercargill City	2015	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	118	31249	34856
Invercargill City	2016	DOG	_ALL-PURE_	5342	2584	2758	2171	2987	82	3	0	0	0	0	0	0	0	0	0
Invercargill City	2016	DOG	_ALL-CROSS_	3482	1702	1780	1608	1875	83	1	0	0	0	0	0	0	0	0	0
Invercargill City	2016	DOG	_ALL-DOGS_	8824	4286	4538	3779	4862	165	4	0	0	0	0	0	0	0	0	0
Invercargill City	2016	DOG	Beagle	36	15	21	18	24	0	0	0	0	0	0	0	0	0	0	0
Invercargill City	2016	DOG	Bichon Frise	276	154	122	144	141	0	0	0	0	0	0	0	0	0	0	0
Invercargill City	2016	DOG	Boxer	98	33	65	38	58	4	0	0	0	0	0	0	0	0	0	0
Invercargill City	2016	DOG	Cattle, Australian	5	3	2	0	3	1	0	0	0	0	0	0	0	0	0	0
Invercargill City	2016	DOG	Chihuahua, Long Coat	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Invercargill City	2016	DOG	Chihuahua, Smooth Coat	183	92	91	44	103	0	0	0	0	0	0	0	0	0	0	0
Invercargill City	2016	DOG	Collie, Bearded	15	6	9	3	6	0	0	0	0	0	0	0	0	0	0	0
Invercargill City	2016	DOG	Collie, Border	254	120	134	103	123	2	0	0	0	0	0	0	0	0	0	0
Invercargill City	2016	DOG	Collie, Rough	12	4	8	5	3	0	0	0	0	0	0	0	0	0	0	0
Invercargill City	2016	DOG	Collie, Smooth	12	4	8	4	3	0	0	0	0	0	0	0	0	0	0	0
Invercargill City	2016	DOG	Greyhound	56	28	28	12	25	0	0	0	0	0	0	0	0	0	0	0
Invercargill City	2016	DOG	Heading	25	12	13	5	7	0	0	0	0	0	0	0	0	0	0	0
Invercargill City	2016	DOG	Huntaway	125	55	70	21	22	0	0	0	0	0	0	0	0	0	0	0
Invercargill City	2016	DOG	Maltese	92	45	47	42	51	0	0	0	0	0	0	0	0	0	0	0
Invercargill City	2016	DOG	Poodle, Miniature	61	29	32	36	43	0	0	0	0	0	0	0	0	0	0	0
Invercargill City	2016	DOG	Poodle, Toy	40	18	22	24	19	0	0	0	0	0	0	0	0	0	0	0
Invercargill City	2016	DOG	Retriever, Golden	139	56	83	56	93	0	0	0	0	0	0	0	0	0	0	0
Invercargill City	2016	DOG	Retriever, Labrador	763	359	404	292	405	4	0	0	0	0	0	0	0	0	0	0
Invercargill City	2016	DOG	Rottweiler	217	107	110	53	123	10	0	0	0	0	0	0	0	0	0	0
Invercargill City	2016	DOG	Schnauzer, Miniature	75	33	42	48	53	0	0	0	0	0	0	0	0	0	0	0
Invercargill City	2016	DOG	Shepherd, German	208	105	103	62	125	7	0	0	0	0	0	0	0	0	0	0
Invercargill City	2016	DOG	Shih Tzu	144	78	66	77	107	1	0	0	0	0	0	0	0	0	0	0
Invercargill City	2016	DOG	Spaniel, Cavalier King Charles	64	33	31	30	39	0	0	0	0	0	0	0	0	0	0	0
Invercargill City	2016	DOG	Spaniel, Cocker	122	55	67	56	77	1	0	0	0	0	0	0	0	0	0	0
Invercargill City	2016	DOG	Spaniel, English Springer	97	48	49	41	53	2	0	0	0	0	0	0	0	0	0	0
Invercargill City	2016	DOG	Terrier, American Pit Bull	18	8	10	3	8	18	0	0	0	0	0	0	0	0	0	0
Invercargill City	2016	DOG	Terrier, Fox (Smooth)	243	135	108	113	122	0	0	0	0	0	0	0	0	0	0	0
Invercargill City	2016	DOG	Terrier, Jack Russell	392	207	185	197	228	2	0	0	0	0	0	0	0	0	0	0
Invercargill City	2016	DOG	Terrier, Staffordshire Bull	293	149	144	128	178	5	0	0	0	0	0	0	0	0	0	0
Invercargill City	2016	DOG	Terrier, West Highland White	31	16	15	24	22	0	0	0	0	0	0	0	0	0	0	0
Invercargill City	2016	DOG	_Unidentified_	1246	577	669	492	723	25	3	0	0	0	0	0	0	0	0	0
Invercargill City	2016	OWN	_	0	0	0	0	0	0	0	0	0	6987	79	0	0	0	0	0
Kaikoura District	2001	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	6	167	0
Kaikoura District	2002	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	0	99506	0
Kaikoura District	2003	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	3	631	0
Kaikoura District	2004	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	10	1056	0
Kaikoura District	2005	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	14	1241	0
Kaikoura District	2006	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	17	2144	4410
Kaikoura District	2007	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	16	8495	6731
Kaikoura District	2008	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	13	4345	81364
Kaikoura District	2009	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	14	2509	2209
Kaikoura District	2010	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	13	2196	2542
Kaikoura District	2011	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	26	12987	8477
Kaikoura District	2012	JST	_	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Kaikoura District	2012	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	28	7980	8884
Kaikoura District	2013	DOG	_ALL-PURE_	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Kaikoura District	2013	DOG	_ALL-CROSS_	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Kaikoura District	2013	DOG	_ALL-DOGS_	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Kaikoura District	2013	DOG	Beagle	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Kaikoura District	2013	DOG	Bichon Frise	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Kaikoura District	2013	DOG	Boxer	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Kaikoura District	2013	DOG	Cattle, Australian	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Kaikoura District	2013	DOG	Chihuahua, Long Coat	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Kaikoura District	2013	DOG	Chihuahua, Smooth Coat	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Kaikoura District	2013	DOG	Collie, Bearded	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Kaikoura District	2013	DOG	Collie, Border	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Kaikoura District	2013	DOG	Collie, Rough	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Kaikoura District	2013	DOG	Collie, Smooth	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Kaikoura District	2013	DOG	Greyhound	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Kaikoura District	2013	DOG	Heading	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Kaikoura District	2013	DOG	Huntaway	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Kaikoura District	2013	DOG	Maltese	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Kaikoura District	2013	DOG	Poodle, Miniature	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Kaikoura District	2013	DOG	Poodle, Toy	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Kaikoura District	2013	DOG	Retriever, Golden	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Kaikoura District	2013	DOG	Retriever, Labrador	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Kaikoura District	2013	DOG	Rottweiler	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Kaikoura District	2013	DOG	Schnauzer, Miniature	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Kaikoura District	2013	DOG	Shepherd, German	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Kaikoura District	2013	DOG	Shih Tzu	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Kaikoura District	2013	DOG	Spaniel, Cavalier King Charles	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Kaikoura District	2013	DOG	Spaniel, Cocker	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Kaikoura District	2013	DOG	Spaniel, English Springer	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Kaikoura District	2013	DOG	Terrier, American Pit Bull	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Kaikoura District	2013	DOG	Terrier, Fox (Smooth)	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Kaikoura District	2013	DOG	Terrier, Jack Russell	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Kaikoura District	2013	DOG	Terrier, Staffordshire Bull	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Kaikoura District	2013	DOG	Terrier, West Highland White	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Kaikoura District	2013	DOG	_Unidentified_	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Kaikoura District	2013	OWN	_	0	0	0	0	0	0	0	0	0	0	3	0	0	0	0	0
Kaikoura District	2013	JST	_	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Kaikoura District	2013	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	24	3170	9711
Kaikoura District	2014	DOG	_ALL-PURE_	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Kaikoura District	2014	DOG	_ALL-CROSS_	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Kaikoura District	2014	DOG	_ALL-DOGS_	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Kaikoura District	2014	DOG	Beagle	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Kaikoura District	2014	DOG	Bichon Frise	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Kaikoura District	2014	DOG	Boxer	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Kaikoura District	2014	DOG	Cattle, Australian	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Kaikoura District	2014	DOG	Chihuahua, Long Coat	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Kaikoura District	2014	DOG	Chihuahua, Smooth Coat	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Kaikoura District	2014	DOG	Collie, Bearded	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Kaikoura District	2014	DOG	Collie, Border	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Kaikoura District	2014	DOG	Collie, Rough	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Kaikoura District	2014	DOG	Collie, Smooth	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Kaikoura District	2014	DOG	Greyhound	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Kaikoura District	2014	DOG	Heading	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Kaikoura District	2014	DOG	Huntaway	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Kaikoura District	2014	DOG	Maltese	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Kaikoura District	2014	DOG	Poodle, Miniature	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Kaikoura District	2014	DOG	Poodle, Toy	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Kaikoura District	2014	DOG	Retriever, Golden	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Kaikoura District	2014	DOG	Retriever, Labrador	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Kaikoura District	2014	DOG	Rottweiler	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Kaikoura District	2014	DOG	Schnauzer, Miniature	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Kaikoura District	2014	DOG	Shepherd, German	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Kaikoura District	2014	DOG	Shih Tzu	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Kaikoura District	2014	DOG	Spaniel, Cavalier King Charles	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Kaikoura District	2014	DOG	Spaniel, Cocker	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Kaikoura District	2014	DOG	Spaniel, English Springer	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Kaikoura District	2014	DOG	Terrier, American Pit Bull	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Kaikoura District	2014	DOG	Terrier, Fox (Smooth)	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Kaikoura District	2014	DOG	Terrier, Jack Russell	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Kaikoura District	2014	DOG	Terrier, Staffordshire Bull	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Kaikoura District	2014	DOG	Terrier, West Highland White	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Kaikoura District	2014	DOG	_Unidentified_	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Kaikoura District	2014	OWN	_	0	0	0	0	0	0	0	0	0	0	3	0	0	0	0	0
Kaikoura District	2014	JST	_	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Kaikoura District	2014	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	12	1563	1660
Kaikoura District	2015	DOG	_ALL-PURE_	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Kaikoura District	2015	DOG	_ALL-CROSS_	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Kaikoura District	2015	DOG	_ALL-DOGS_	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Kaikoura District	2015	DOG	Beagle	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Kaikoura District	2015	DOG	Bichon Frise	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Kaikoura District	2015	DOG	Boxer	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Kaikoura District	2015	DOG	Cattle, Australian	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Kaikoura District	2015	DOG	Chihuahua, Long Coat	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Kaikoura District	2015	DOG	Chihuahua, Smooth Coat	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Kaikoura District	2015	DOG	Collie, Bearded	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Kaikoura District	2015	DOG	Collie, Border	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Kaikoura District	2015	DOG	Collie, Rough	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Kaikoura District	2015	DOG	Collie, Smooth	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Kaikoura District	2015	DOG	Greyhound	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Kaikoura District	2015	DOG	Heading	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Kaikoura District	2015	DOG	Huntaway	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Kaikoura District	2015	DOG	Maltese	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Kaikoura District	2015	DOG	Poodle, Miniature	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Kaikoura District	2015	DOG	Poodle, Toy	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Kaikoura District	2015	DOG	Retriever, Golden	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Kaikoura District	2015	DOG	Retriever, Labrador	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Kaikoura District	2015	DOG	Rottweiler	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Kaikoura District	2015	DOG	Schnauzer, Miniature	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Kaikoura District	2015	DOG	Shepherd, German	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Kaikoura District	2015	DOG	Shih Tzu	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Kaikoura District	2015	DOG	Spaniel, Cavalier King Charles	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Kaikoura District	2015	DOG	Spaniel, Cocker	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Kaikoura District	2015	DOG	Spaniel, English Springer	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Kaikoura District	2015	DOG	Terrier, American Pit Bull	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Kaikoura District	2015	DOG	Terrier, Fox (Smooth)	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Kaikoura District	2015	DOG	Terrier, Jack Russell	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Kaikoura District	2015	DOG	Terrier, Staffordshire Bull	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Kaikoura District	2015	DOG	Terrier, West Highland White	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Kaikoura District	2015	DOG	_Unidentified_	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Kaikoura District	2015	OWN	_	0	0	0	0	0	0	0	0	0	0	4	0	0	0	0	0
Kaikoura District	2015	JST	_	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Kaikoura District	2015	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	13	1949	1818
Kaikoura District	2016	DOG	_ALL-PURE_	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Kaikoura District	2016	DOG	_ALL-CROSS_	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Kaikoura District	2016	DOG	_ALL-DOGS_	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Kaikoura District	2016	DOG	Beagle	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Kaikoura District	2016	DOG	Bichon Frise	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Kaikoura District	2016	DOG	Boxer	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Kaikoura District	2016	DOG	Cattle, Australian	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Kaikoura District	2016	DOG	Chihuahua, Long Coat	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Kaikoura District	2016	DOG	Chihuahua, Smooth Coat	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Kaikoura District	2016	DOG	Collie, Bearded	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Kaikoura District	2016	DOG	Collie, Border	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Kaikoura District	2016	DOG	Collie, Rough	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Kaikoura District	2016	DOG	Collie, Smooth	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Kaikoura District	2016	DOG	Greyhound	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Kaikoura District	2016	DOG	Heading	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Kaikoura District	2016	DOG	Huntaway	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Kaikoura District	2016	DOG	Maltese	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Kaikoura District	2016	DOG	Poodle, Miniature	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Kaikoura District	2016	DOG	Poodle, Toy	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Kaikoura District	2016	DOG	Retriever, Golden	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Kaikoura District	2016	DOG	Retriever, Labrador	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Kaikoura District	2016	DOG	Rottweiler	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Kaikoura District	2016	DOG	Schnauzer, Miniature	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Kaikoura District	2016	DOG	Shepherd, German	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Kaikoura District	2016	DOG	Shih Tzu	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Kaikoura District	2016	DOG	Spaniel, Cavalier King Charles	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Kaikoura District	2016	DOG	Spaniel, Cocker	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Kaikoura District	2016	DOG	Spaniel, English Springer	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Kaikoura District	2016	DOG	Terrier, American Pit Bull	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Kaikoura District	2016	DOG	Terrier, Fox (Smooth)	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Kaikoura District	2016	DOG	Terrier, Jack Russell	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Kaikoura District	2016	DOG	Terrier, Staffordshire Bull	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Kaikoura District	2016	DOG	Terrier, West Highland White	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Kaikoura District	2016	DOG	_Unidentified_	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Kaikoura District	2016	OWN	_	0	0	0	0	0	0	0	0	0	0	2	0	0	0	0	0
Kaipara District	2001	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	14	1277	0
Kaipara District	2002	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	13	83298	0
Kaipara District	2003	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	13	3837	0
Kaipara District	2004	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	52	5676	0
Kaipara District	2005	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	71	13118	0
Kaipara District	2006	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	60	6699	12068
Kaipara District	2007	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	59	7601	8792
Kaipara District	2008	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	75	9593	10535
Kaipara District	2009	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	78	16012	14451
Kaipara District	2010	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	51	11726	16996
Kaipara District	2011	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	60	21623	21469
Kaipara District	2012	JST	_	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Kaipara District	2012	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	72	17370	21546
Kaipara District	2013	DOG	_ALL-PURE_	3499	1757	1742	1110	695	11	0	0	0	0	0	0	0	0	0	0
Kaipara District	2013	DOG	_ALL-CROSS_	1641	836	805	773	386	23	0	0	0	0	0	0	0	0	0	0
Kaipara District	2013	DOG	_ALL-DOGS_	5140	2593	2547	1883	1081	34	0	0	0	0	0	0	0	0	0	0
Kaipara District	2013	DOG	Beagle	6	3	3	4	2	0	0	0	0	0	0	0	0	0	0	0
Kaipara District	2013	DOG	Bichon Frise	52	29	23	25	25	0	0	0	0	0	0	0	0	0	0	0
Kaipara District	2013	DOG	Boxer	54	24	30	33	16	0	0	0	0	0	0	0	0	0	0	0
Kaipara District	2013	DOG	Cattle, Australian	210	78	132	35	21	1	0	0	0	0	0	0	0	0	0	0
Kaipara District	2013	DOG	Chihuahua, Long Coat	56	35	21	22	21	0	0	0	0	0	0	0	0	0	0	0
Kaipara District	2013	DOG	Chihuahua, Smooth Coat	36	21	15	14	10	0	0	0	0	0	0	0	0	0	0	0
Kaipara District	2013	DOG	Collie, Bearded	35	18	17	6	4	0	0	0	0	0	0	0	0	0	0	0
Kaipara District	2013	DOG	Collie, Border	314	177	137	92	50	0	0	0	0	0	0	0	0	0	0	0
Kaipara District	2013	DOG	Collie, Rough	9	8	1	1	1	0	0	0	0	0	0	0	0	0	0	0
Kaipara District	2013	DOG	Collie, Smooth	3	1	2	1	0	0	0	0	0	0	0	0	0	0	0	0
Kaipara District	2013	DOG	Greyhound	10	6	4	2	1	0	0	0	0	0	0	0	0	0	0	0
Kaipara District	2013	DOG	Heading	358	207	151	27	3	0	0	0	0	0	0	0	0	0	0	0
Kaipara District	2013	DOG	Huntaway	586	242	344	76	16	0	0	0	0	0	0	0	0	0	0	0
Kaipara District	2013	DOG	Maltese	8	6	2	3	3	0	0	0	0	0	0	0	0	0	0	0
Kaipara District	2013	DOG	Poodle, Miniature	35	17	18	12	7	0	0	0	0	0	0	0	0	0	0	0
Kaipara District	2013	DOG	Poodle, Toy	27	14	13	12	9	0	0	0	0	0	0	0	0	0	0	0
Kaipara District	2013	DOG	Retriever, Golden	47	26	21	25	13	0	0	0	0	0	0	0	0	0	0	0
Kaipara District	2013	DOG	Retriever, Labrador	333	173	160	144	118	0	0	0	0	0	0	0	0	0	0	0
Kaipara District	2013	DOG	Rottweiler	56	30	26	17	22	0	0	0	0	0	0	0	0	0	0	0
Kaipara District	2013	DOG	Schnauzer, Miniature	8	4	4	3	5	0	0	0	0	0	0	0	0	0	0	0
Kaipara District	2013	DOG	Shepherd, German	84	42	42	36	24	0	0	0	0	0	0	0	0	0	0	0
Kaipara District	2013	DOG	Shih Tzu	30	21	9	16	12	0	0	0	0	0	0	0	0	0	0	0
Kaipara District	2013	DOG	Spaniel, Cavalier King Charles	39	19	20	21	18	0	0	0	0	0	0	0	0	0	0	0
Kaipara District	2013	DOG	Spaniel, Cocker	23	10	13	11	5	0	0	0	0	0	0	0	0	0	0	0
Kaipara District	2013	DOG	Spaniel, English Springer	33	14	19	18	6	0	0	0	0	0	0	0	0	0	0	0
Kaipara District	2013	DOG	Terrier, American Pit Bull	14	6	8	6	7	10	0	0	0	0	0	0	0	0	0	0
Kaipara District	2013	DOG	Terrier, Fox (Smooth)	146	79	67	84	54	0	0	0	0	0	0	0	0	0	0	0
Kaipara District	2013	DOG	Terrier, Jack Russell	229	112	117	113	44	0	0	0	0	0	0	0	0	0	0	0
Kaipara District	2013	DOG	Terrier, Staffordshire Bull	41	26	15	19	9	0	0	0	0	0	0	0	0	0	0	0
Kaipara District	2013	DOG	Terrier, West Highland White	15	10	5	7	6	0	0	0	0	0	0	0	0	0	0	0
Kaipara District	2013	DOG	_Unidentified_	602	299	303	225	163	0	0	0	0	0	0	0	0	0	0	0
Kaipara District	2013	OWN	_	0	0	0	0	0	0	0	0	0	2889	32	0	0	0	0	0
Kaipara District	2013	JST	_	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Kaipara District	2013	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	99	29567	28753
Kaipara District	2014	DOG	_ALL-PURE_	3313	1661	1652	1118	745	10	1	0	0	0	0	0	0	0	0	0
Kaipara District	2014	DOG	_ALL-CROSS_	1514	780	734	797	427	19	0	0	0	0	0	0	0	0	0	0
Kaipara District	2014	DOG	_ALL-DOGS_	4827	2441	2386	1915	1172	29	1	0	0	0	0	0	0	0	0	0
Kaipara District	2014	DOG	Beagle	8	4	4	5	2	0	0	0	0	0	0	0	0	0	0	0
Kaipara District	2014	DOG	Bichon Frise	47	26	21	25	25	0	0	0	0	0	0	0	0	0	0	0
Kaipara District	2014	DOG	Boxer	48	27	21	32	13	0	0	0	0	0	0	0	0	0	0	0
Kaipara District	2014	DOG	Cattle, Australian	186	70	116	36	21	1	0	0	0	0	0	0	0	0	0	0
Kaipara District	2014	DOG	Chihuahua, Long Coat	52	32	20	24	21	0	0	0	0	0	0	0	0	0	0	0
Kaipara District	2014	DOG	Chihuahua, Smooth Coat	40	24	16	14	13	0	0	0	0	0	0	0	0	0	0	0
Kaipara District	2014	DOG	Collie, Bearded	32	15	17	6	5	0	0	0	0	0	0	0	0	0	0	0
Kaipara District	2014	DOG	Collie, Border	291	168	123	92	51	0	0	0	0	0	0	0	0	0	0	0
Kaipara District	2014	DOG	Collie, Rough	8	7	1	1	0	0	0	0	0	0	0	0	0	0	0	0
Kaipara District	2014	DOG	Collie, Smooth	4	2	2	2	0	0	0	0	0	0	0	0	0	0	0	0
Kaipara District	2014	DOG	Greyhound	7	5	2	1	2	0	0	0	0	0	0	0	0	0	0	0
Kaipara District	2014	DOG	Heading	333	189	144	25	3	0	0	0	0	0	0	0	0	0	0	0
Kaipara District	2014	DOG	Huntaway	556	217	339	77	15	0	0	0	0	0	0	0	0	0	0	0
Kaipara District	2014	DOG	Maltese	8	3	5	5	4	0	0	0	0	0	0	0	0	0	0	0
Kaipara District	2014	DOG	Poodle, Miniature	37	16	21	16	10	0	0	0	0	0	0	0	0	0	0	0
Kaipara District	2014	DOG	Poodle, Toy	20	11	9	10	10	0	0	0	0	0	0	0	0	0	0	0
Kaipara District	2014	DOG	Retriever, Golden	49	26	23	28	16	0	0	0	0	0	0	0	0	0	0	0
Kaipara District	2014	DOG	Retriever, Labrador	312	160	152	136	116	0	0	0	0	0	0	0	0	0	0	0
Kaipara District	2014	DOG	Rottweiler	44	21	23	13	20	0	0	0	0	0	0	0	0	0	0	0
Kaipara District	2014	DOG	Schnauzer, Miniature	9	5	4	3	6	0	0	0	0	0	0	0	0	0	0	0
Kaipara District	2014	DOG	Shepherd, German	81	44	37	39	24	0	0	0	0	0	0	0	0	0	0	0
Kaipara District	2014	DOG	Shih Tzu	34	20	14	20	14	0	0	0	0	0	0	0	0	0	0	0
Kaipara District	2014	DOG	Spaniel, Cavalier King Charles	36	18	18	21	19	0	0	0	0	0	0	0	0	0	0	0
Kaipara District	2014	DOG	Spaniel, Cocker	25	12	13	16	8	0	0	0	0	0	0	0	0	0	0	0
Kaipara District	2014	DOG	Spaniel, English Springer	27	10	17	15	6	0	0	0	0	0	0	0	0	0	0	0
Kaipara District	2014	DOG	Terrier, American Pit Bull	14	5	9	5	4	9	0	0	0	0	0	0	0	0	0	0
Kaipara District	2014	DOG	Terrier, Fox (Smooth)	130	67	63	76	51	0	0	0	0	0	0	0	0	0	0	0
Kaipara District	2014	DOG	Terrier, Jack Russell	209	109	100	102	48	0	0	0	0	0	0	0	0	0	0	0
Kaipara District	2014	DOG	Terrier, Staffordshire Bull	28	20	8	13	4	0	0	0	0	0	0	0	0	0	0	0
Kaipara District	2014	DOG	Terrier, West Highland White	17	13	4	6	8	0	0	0	0	0	0	0	0	0	0	0
Kaipara District	2014	DOG	_Unidentified_	621	315	306	254	206	0	1	0	0	0	0	0	0	0	0	0
Kaipara District	2014	OWN	_	0	0	0	0	0	0	0	0	0	2706	36	0	0	0	0	0
Kaipara District	2014	JST	_	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Kaipara District	2014	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	84	37350	38460
Kaipara District	2015	DOG	_ALL-PURE_	3285	1655	1630	1141	871	8	0	0	0	0	0	0	0	0	0	0
Kaipara District	2015	DOG	_ALL-CROSS_	1567	804	763	828	515	16	0	0	0	0	0	0	0	0	0	0
Kaipara District	2015	DOG	_ALL-DOGS_	4852	2459	2393	1969	1386	24	0	0	0	0	0	0	0	0	0	0
Kaipara District	2015	DOG	Beagle	7	5	2	4	1	0	0	0	0	0	0	0	0	0	0	0
Kaipara District	2015	DOG	Bichon Frise	48	24	24	26	27	0	0	0	0	0	0	0	0	0	0	0
Kaipara District	2015	DOG	Boxer	44	25	19	30	19	0	0	0	0	0	0	0	0	0	0	0
Kaipara District	2015	DOG	Cattle, Australian	171	67	104	35	24	0	0	0	0	0	0	0	0	0	0	0
Kaipara District	2015	DOG	Chihuahua, Long Coat	53	33	20	23	24	0	0	0	0	0	0	0	0	0	0	0
Kaipara District	2015	DOG	Chihuahua, Smooth Coat	38	19	19	17	12	0	0	0	0	0	0	0	0	0	0	0
Kaipara District	2015	DOG	Collie, Bearded	35	16	19	7	3	0	0	0	0	0	0	0	0	0	0	0
Kaipara District	2015	DOG	Collie, Border	296	163	133	100	56	0	0	0	0	0	0	0	0	0	0	0
Kaipara District	2015	DOG	Collie, Rough	7	4	3	0	0	0	0	0	0	0	0	0	0	0	0	0
Kaipara District	2015	DOG	Collie, Smooth	2	1	1	1	0	0	0	0	0	0	0	0	0	0	0	0
Kaipara District	2015	DOG	Greyhound	7	3	4	2	2	0	0	0	0	0	0	0	0	0	0	0
Kaipara District	2015	DOG	Heading	340	189	151	26	5	0	0	0	0	0	0	0	0	0	0	0
Kaipara District	2015	DOG	Huntaway	513	204	309	68	17	0	0	0	0	0	0	0	0	0	0	0
Kaipara District	2015	DOG	Maltese	11	4	7	7	5	0	0	0	0	0	0	0	0	0	0	0
Kaipara District	2015	DOG	Poodle, Miniature	37	16	21	16	10	0	0	0	0	0	0	0	0	0	0	0
Kaipara District	2015	DOG	Poodle, Toy	22	12	10	11	12	0	0	0	0	0	0	0	0	0	0	0
Kaipara District	2015	DOG	Retriever, Golden	44	25	19	27	14	0	0	0	0	0	0	0	0	0	0	0
Kaipara District	2015	DOG	Retriever, Labrador	310	163	147	139	127	0	0	0	0	0	0	0	0	0	0	0
Kaipara District	2015	DOG	Rottweiler	42	24	18	12	20	0	0	0	0	0	0	0	0	0	0	0
Kaipara District	2015	DOG	Schnauzer, Miniature	12	8	4	3	10	0	0	0	0	0	0	0	0	0	0	0
Kaipara District	2015	DOG	Shepherd, German	84	45	39	38	28	0	0	0	0	0	0	0	0	0	0	0
Kaipara District	2015	DOG	Shih Tzu	41	24	17	23	17	0	0	0	0	0	0	0	0	0	0	0
Kaipara District	2015	DOG	Spaniel, Cavalier King Charles	34	16	18	25	18	0	0	0	0	0	0	0	0	0	0	0
Kaipara District	2015	DOG	Spaniel, Cocker	24	10	14	15	9	0	0	0	0	0	0	0	0	0	0	0
Kaipara District	2015	DOG	Spaniel, English Springer	24	11	13	12	6	0	0	0	0	0	0	0	0	0	0	0
Kaipara District	2015	DOG	Terrier, American Pit Bull	12	3	9	2	2	7	0	0	0	0	0	0	0	0	0	0
Kaipara District	2015	DOG	Terrier, Fox (Smooth)	132	70	62	77	52	0	0	0	0	0	0	0	0	0	0	0
Kaipara District	2015	DOG	Terrier, Jack Russell	218	108	110	118	59	0	0	0	0	0	0	0	0	0	0	0
Kaipara District	2015	DOG	Terrier, Staffordshire Bull	30	22	8	16	8	0	0	0	0	0	0	0	0	0	0	0
Kaipara District	2015	DOG	Terrier, West Highland White	16	11	5	7	8	0	0	0	0	0	0	0	0	0	0	0
Kaipara District	2015	DOG	_Unidentified_	631	330	301	254	276	1	0	0	0	0	0	0	0	0	0	0
Kaipara District	2015	OWN	_	0	0	0	0	0	0	0	0	0	2770	42	0	0	0	0	0
Kaipara District	2015	JST	_	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Kaipara District	2015	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	91	19362	27169
Kaipara District	2016	DOG	_ALL-PURE_	3131	1576	1555	1075	900	11	0	0	0	0	0	0	0	0	0	0
Kaipara District	2016	DOG	_ALL-CROSS_	1457	754	703	763	527	15	0	0	0	0	0	0	0	0	0	0
Kaipara District	2016	DOG	_ALL-DOGS_	4588	2330	2258	1838	1427	26	0	0	0	0	0	0	0	0	0	0
Kaipara District	2016	DOG	Beagle	6	4	2	4	1	0	0	0	0	0	0	0	0	0	0	0
Kaipara District	2016	DOG	Bichon Frise	36	16	20	23	26	0	0	0	0	0	0	0	0	0	0	0
Kaipara District	2016	DOG	Boxer	38	21	17	24	20	1	0	0	0	0	0	0	0	0	0	0
Kaipara District	2016	DOG	Cattle, Australian	156	62	94	34	23	0	0	0	0	0	0	0	0	0	0	0
Kaipara District	2016	DOG	Chihuahua, Long Coat	57	36	21	24	28	0	0	0	0	0	0	0	0	0	0	0
Kaipara District	2016	DOG	Chihuahua, Smooth Coat	33	18	15	12	11	0	0	0	0	0	0	0	0	0	0	0
Kaipara District	2016	DOG	Collie, Bearded	31	12	19	7	4	0	0	0	0	0	0	0	0	0	0	0
Kaipara District	2016	DOG	Collie, Border	290	164	126	102	55	0	0	0	0	0	0	0	0	0	0	0
Kaipara District	2016	DOG	Collie, Rough	5	4	1	0	0	0	0	0	0	0	0	0	0	0	0	0
Kaipara District	2016	DOG	Collie, Smooth	3	1	2	0	0	0	0	0	0	0	0	0	0	0	0	0
Kaipara District	2016	DOG	Greyhound	6	3	3	3	1	0	0	0	0	0	0	0	0	0	0	0
Kaipara District	2016	DOG	Heading	323	167	156	19	10	0	0	0	0	0	0	0	0	0	0	0
Kaipara District	2016	DOG	Huntaway	497	203	294	68	19	0	0	0	0	0	0	0	0	0	0	0
Kaipara District	2016	DOG	Maltese	15	4	11	10	7	0	0	0	0	0	0	0	0	0	0	0
Kaipara District	2016	DOG	Poodle, Miniature	39	17	22	18	11	0	0	0	0	0	0	0	0	0	0	0
Kaipara District	2016	DOG	Poodle, Toy	22	14	8	14	12	0	0	0	0	0	0	0	0	0	0	0
Kaipara District	2016	DOG	Retriever, Golden	46	25	21	28	15	0	0	0	0	0	0	0	0	0	0	0
Kaipara District	2016	DOG	Retriever, Labrador	306	147	159	135	128	0	0	0	0	0	0	0	0	0	0	0
Kaipara District	2016	DOG	Rottweiler	37	22	15	9	22	0	0	0	0	0	0	0	0	0	0	0
Kaipara District	2016	DOG	Schnauzer, Miniature	18	10	8	8	12	0	0	0	0	0	0	0	0	0	0	0
Kaipara District	2016	DOG	Shepherd, German	73	39	34	33	25	0	0	0	0	0	0	0	0	0	0	0
Kaipara District	2016	DOG	Shih Tzu	39	24	15	23	16	0	0	0	0	0	0	0	0	0	0	0
Kaipara District	2016	DOG	Spaniel, Cavalier King Charles	32	12	20	24	19	0	0	0	0	0	0	0	0	0	0	0
Kaipara District	2016	DOG	Spaniel, Cocker	19	9	10	15	7	0	0	0	0	0	0	0	0	0	0	0
Kaipara District	2016	DOG	Spaniel, English Springer	23	12	11	12	8	0	0	0	0	0	0	0	0	0	0	0
Kaipara District	2016	DOG	Terrier, American Pit Bull	10	3	7	3	2	9	0	0	0	0	0	0	0	0	0	0
Kaipara District	2016	DOG	Terrier, Fox (Smooth)	117	65	52	62	42	0	0	0	0	0	0	0	0	0	0	0
Kaipara District	2016	DOG	Terrier, Jack Russell	194	101	93	100	61	0	0	0	0	0	0	0	0	0	0	0
Kaipara District	2016	DOG	Terrier, Staffordshire Bull	37	25	12	18	19	0	0	0	0	0	0	0	0	0	0	0
Kaipara District	2016	DOG	Terrier, West Highland White	18	13	5	7	10	0	0	0	0	0	0	0	0	0	0	0
Kaipara District	2016	DOG	_Unidentified_	605	323	282	236	286	1	0	0	0	0	0	0	0	0	0	0
Kaipara District	2016	OWN	_	0	0	0	0	0	0	0	0	0	2610	33	0	0	0	0	0
Kapiti Coast District	2001	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	17	6022	0
Kapiti Coast District	2002	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	19	4438	0
Kapiti Coast District	2003	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	20	8246	0
Kapiti Coast District	2004	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	117	30026	0
Kapiti Coast District	2005	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	106	11953	0
Kapiti Coast District	2006	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	126	44401	24083
Kapiti Coast District	2007	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	136	24489	36239
Kapiti Coast District	2008	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	141	64208	50824
Kapiti Coast District	2009	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	139	40416	41480
Kapiti Coast District	2010	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	101	16707	34934
Kapiti Coast District	2011	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	137	31323	30684
Kapiti Coast District	2012	JST	_	0	0	0	0	0	0	0	0	0	0	0	33	5	0	0	0
Kapiti Coast District	2012	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	136	27550	31799
Kapiti Coast District	2013	DOG	_ALL-PURE_	3929	1928	2001	3086	2392	37	0	0	0	0	0	0	0	0	0	0
Kapiti Coast District	2013	DOG	_ALL-CROSS_	2874	1449	1425	2452	1911	52	2	0	0	0	0	0	0	0	0	0
Kapiti Coast District	2013	DOG	_ALL-DOGS_	6803	3377	3426	5538	4303	89	2	0	0	0	0	0	0	0	0	0
Kapiti Coast District	2013	DOG	Beagle	51	27	24	47	40	0	0	0	0	0	0	0	0	0	0	0
Kapiti Coast District	2013	DOG	Bichon Frise	113	50	63	106	61	0	0	0	0	0	0	0	0	0	0	0
Kapiti Coast District	2013	DOG	Boxer	68	38	30	56	44	0	0	0	0	0	0	0	0	0	0	0
Kapiti Coast District	2013	DOG	Cattle, Australian	38	20	18	27	16	0	0	0	0	0	0	0	0	0	0	0
Kapiti Coast District	2013	DOG	Chihuahua, Long Coat	44	16	28	37	29	0	0	0	0	0	0	0	0	0	0	0
Kapiti Coast District	2013	DOG	Chihuahua, Smooth Coat	21	11	10	19	13	0	0	0	0	0	0	0	0	0	0	0
Kapiti Coast District	2013	DOG	Collie, Bearded	41	19	22	24	11	0	0	0	0	0	0	0	0	0	0	0
Kapiti Coast District	2013	DOG	Collie, Border	212	100	112	161	115	0	0	0	0	0	0	0	0	0	0	0
Kapiti Coast District	2013	DOG	Collie, Rough	6	2	4	5	1	0	0	0	0	0	0	0	0	0	0	0
Kapiti Coast District	2013	DOG	Collie, Smooth	4	2	2	4	2	0	0	0	0	0	0	0	0	0	0	0
Kapiti Coast District	2013	DOG	Greyhound	66	30	36	63	59	1	0	0	0	0	0	0	0	0	0	0
Kapiti Coast District	2013	DOG	Heading	27	15	12	11	9	0	0	0	0	0	0	0	0	0	0	0
Kapiti Coast District	2013	DOG	Huntaway	93	48	45	53	37	0	0	0	0	0	0	0	0	0	0	0
Kapiti Coast District	2013	DOG	Maltese	22	15	7	20	19	0	0	0	0	0	0	0	0	0	0	0
Kapiti Coast District	2013	DOG	Poodle, Miniature	91	47	44	80	49	0	0	0	0	0	0	0	0	0	0	0
Kapiti Coast District	2013	DOG	Poodle, Toy	76	28	48	65	47	0	0	0	0	0	0	0	0	0	0	0
Kapiti Coast District	2013	DOG	Retriever, Golden	185	87	98	141	101	0	0	0	0	0	0	0	0	0	0	0
Kapiti Coast District	2013	DOG	Retriever, Labrador	581	302	279	477	365	0	0	0	0	0	0	0	0	0	0	0
Kapiti Coast District	2013	DOG	Rottweiler	89	39	50	61	64	1	0	0	0	0	0	0	0	0	0	0
Kapiti Coast District	2013	DOG	Schnauzer, Miniature	56	30	26	51	46	0	0	0	0	0	0	0	0	0	0	0
Kapiti Coast District	2013	DOG	Shepherd, German	203	93	110	150	124	2	0	0	0	0	0	0	0	0	0	0
Kapiti Coast District	2013	DOG	Shih Tzu	40	17	23	32	27	0	0	0	0	0	0	0	0	0	0	0
Kapiti Coast District	2013	DOG	Spaniel, Cavalier King Charles	81	34	47	67	43	0	0	0	0	0	0	0	0	0	0	0
Kapiti Coast District	2013	DOG	Spaniel, Cocker	76	39	37	62	49	0	0	0	0	0	0	0	0	0	0	0
Kapiti Coast District	2013	DOG	Spaniel, English Springer	35	18	17	28	16	0	0	0	0	0	0	0	0	0	0	0
Kapiti Coast District	2013	DOG	Terrier, American Pit Bull	30	14	16	19	27	30	0	0	0	0	0	0	0	0	0	0
Kapiti Coast District	2013	DOG	Terrier, Fox (Smooth)	133	63	70	114	82	1	0	0	0	0	0	0	0	0	0	0
Kapiti Coast District	2013	DOG	Terrier, Jack Russell	198	101	97	167	93	0	0	0	0	0	0	0	0	0	0	0
Kapiti Coast District	2013	DOG	Terrier, Staffordshire Bull	105	56	49	77	65	1	0	0	0	0	0	0	0	0	0	0
Kapiti Coast District	2013	DOG	Terrier, West Highland White	45	21	24	37	26	0	0	0	0	0	0	0	0	0	0	0
Kapiti Coast District	2013	DOG	_Unidentified_	1099	546	553	825	712	1	0	0	0	0	0	0	0	0	0	0
Kapiti Coast District	2013	OWN	_	0	0	0	0	0	0	0	2	10	5294	60	0	0	0	0	0
Kapiti Coast District	2013	JST	_	0	0	0	0	0	0	0	0	0	0	0	19	3	0	0	0
Kapiti Coast District	2013	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	156	34174	28530
Kapiti Coast District	2014	DOG	_ALL-PURE_	3964	1938	2026	3111	2713	39	0	0	0	0	0	0	0	0	0	0
Kapiti Coast District	2014	DOG	_ALL-CROSS_	2986	1514	1472	2543	2171	45	2	0	0	0	0	0	0	0	0	0
Kapiti Coast District	2014	DOG	_ALL-DOGS_	6950	3452	3498	5654	4884	84	2	0	0	0	0	0	0	0	0	0
Kapiti Coast District	2014	DOG	Beagle	58	31	27	53	50	0	0	0	0	0	0	0	0	0	0	0
Kapiti Coast District	2014	DOG	Bichon Frise	116	47	69	108	70	0	0	0	0	0	0	0	0	0	0	0
Kapiti Coast District	2014	DOG	Boxer	66	38	28	57	50	0	0	0	0	0	0	0	0	0	0	0
Kapiti Coast District	2014	DOG	Cattle, Australian	35	19	16	26	19	0	0	0	0	0	0	0	0	0	0	0
Kapiti Coast District	2014	DOG	Chihuahua, Long Coat	44	16	28	35	33	0	0	0	0	0	0	0	0	0	0	0
Kapiti Coast District	2014	DOG	Chihuahua, Smooth Coat	23	10	13	20	16	0	0	0	0	0	0	0	0	0	0	0
Kapiti Coast District	2014	DOG	Collie, Bearded	39	17	22	22	13	0	0	0	0	0	0	0	0	0	0	0
Kapiti Coast District	2014	DOG	Collie, Border	219	105	114	171	139	0	0	0	0	0	0	0	0	0	0	0
Kapiti Coast District	2014	DOG	Collie, Rough	6	1	5	6	2	0	0	0	0	0	0	0	0	0	0	0
Kapiti Coast District	2014	DOG	Collie, Smooth	4	2	2	3	2	0	0	0	0	0	0	0	0	0	0	0
Kapiti Coast District	2014	DOG	Greyhound	73	35	38	70	64	1	0	0	0	0	0	0	0	0	0	0
Kapiti Coast District	2014	DOG	Heading	31	17	14	10	11	0	0	0	0	0	0	0	0	0	0	0
Kapiti Coast District	2014	DOG	Huntaway	83	43	40	52	40	0	0	0	0	0	0	0	0	0	0	0
Kapiti Coast District	2014	DOG	Maltese	28	16	12	26	25	0	0	0	0	0	0	0	0	0	0	0
Kapiti Coast District	2014	DOG	Poodle, Miniature	84	46	38	73	52	0	0	0	0	0	0	0	0	0	0	0
Kapiti Coast District	2014	DOG	Poodle, Toy	70	27	43	61	43	0	0	0	0	0	0	0	0	0	0	0
Kapiti Coast District	2014	DOG	Retriever, Golden	175	80	95	129	116	0	0	0	0	0	0	0	0	0	0	0
Kapiti Coast District	2014	DOG	Retriever, Labrador	577	289	288	468	404	0	0	0	0	0	0	0	0	0	0	0
Kapiti Coast District	2014	DOG	Rottweiler	88	42	46	60	66	2	0	0	0	0	0	0	0	0	0	0
Kapiti Coast District	2014	DOG	Schnauzer, Miniature	67	34	33	59	55	0	0	0	0	0	0	0	0	0	0	0
Kapiti Coast District	2014	DOG	Shepherd, German	197	90	107	145	133	2	0	0	0	0	0	0	0	0	0	0
Kapiti Coast District	2014	DOG	Shih Tzu	46	20	26	39	37	0	0	0	0	0	0	0	0	0	0	0
Kapiti Coast District	2014	DOG	Spaniel, Cavalier King Charles	81	30	51	64	48	0	0	0	0	0	0	0	0	0	0	0
Kapiti Coast District	2014	DOG	Spaniel, Cocker	72	37	35	60	54	0	0	0	0	0	0	0	0	0	0	0
Kapiti Coast District	2014	DOG	Spaniel, English Springer	32	17	15	23	14	0	0	0	0	0	0	0	0	0	0	0
Kapiti Coast District	2014	DOG	Terrier, American Pit Bull	29	15	14	21	28	29	0	0	0	0	0	0	0	0	0	0
Kapiti Coast District	2014	DOG	Terrier, Fox (Smooth)	148	72	76	125	100	1	0	0	0	0	0	0	0	0	0	0
Kapiti Coast District	2014	DOG	Terrier, Jack Russell	192	95	97	170	104	0	0	0	0	0	0	0	0	0	0	0
Kapiti Coast District	2014	DOG	Terrier, Staffordshire Bull	122	71	51	86	84	2	0	0	0	0	0	0	0	0	0	0
Kapiti Coast District	2014	DOG	Terrier, West Highland White	40	20	20	34	23	0	0	0	0	0	0	0	0	0	0	0
Kapiti Coast District	2014	DOG	_Unidentified_	1119	556	563	835	818	2	0	0	0	0	0	0	0	0	0	0
Kapiti Coast District	2014	OWN	_	0	0	0	0	0	0	0	0	11	5436	52	0	0	0	0	0
Kapiti Coast District	2014	JST	_	0	0	0	0	0	0	0	0	0	0	0	12	1	0	0	0
Kapiti Coast District	2014	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	143	39501	41225
Kapiti Coast District	2015	DOG	_ALL-PURE_	3950	1951	1999	3112	2996	35	0	0	0	0	0	0	0	0	0	0
Kapiti Coast District	2015	DOG	_ALL-CROSS_	3088	1566	1522	2657	2427	53	2	0	0	0	0	0	0	0	0	0
Kapiti Coast District	2015	DOG	_ALL-DOGS_	7038	3517	3521	5769	5423	88	2	0	0	0	0	0	0	0	0	0
Kapiti Coast District	2015	DOG	Beagle	60	30	30	54	52	0	0	0	0	0	0	0	0	0	0	0
Kapiti Coast District	2015	DOG	Bichon Frise	102	37	65	96	71	0	0	0	0	0	0	0	0	0	0	0
Kapiti Coast District	2015	DOG	Boxer	59	35	24	49	48	0	0	0	0	0	0	0	0	0	0	0
Kapiti Coast District	2015	DOG	Cattle, Australian	32	19	13	23	22	0	0	0	0	0	0	0	0	0	0	0
Kapiti Coast District	2015	DOG	Chihuahua, Long Coat	48	20	28	37	37	0	0	0	0	0	0	0	0	0	0	0
Kapiti Coast District	2015	DOG	Chihuahua, Smooth Coat	25	11	14	21	21	0	0	0	0	0	0	0	0	0	0	0
Kapiti Coast District	2015	DOG	Collie, Bearded	34	13	21	20	14	0	0	0	0	0	0	0	0	0	0	0
Kapiti Coast District	2015	DOG	Collie, Border	208	102	106	164	148	0	0	0	0	0	0	0	0	0	0	0
Kapiti Coast District	2015	DOG	Collie, Rough	4	2	2	3	4	0	0	0	0	0	0	0	0	0	0	0
Kapiti Coast District	2015	DOG	Collie, Smooth	3	1	2	2	2	0	0	0	0	0	0	0	0	0	0	0
Kapiti Coast District	2015	DOG	Greyhound	88	45	43	83	82	1	0	0	0	0	0	0	0	0	0	0
Kapiti Coast District	2015	DOG	Heading	32	17	15	11	14	0	0	0	0	0	0	0	0	0	0	0
Kapiti Coast District	2015	DOG	Huntaway	95	49	46	54	52	0	0	0	0	0	0	0	0	0	0	0
Kapiti Coast District	2015	DOG	Maltese	26	15	11	24	24	0	0	0	0	0	0	0	0	0	0	0
Kapiti Coast District	2015	DOG	Poodle, Miniature	86	49	37	75	59	0	0	0	0	0	0	0	0	0	0	0
Kapiti Coast District	2015	DOG	Poodle, Toy	67	31	36	59	47	0	0	0	0	0	0	0	0	0	0	0
Kapiti Coast District	2015	DOG	Retriever, Golden	169	79	90	126	126	0	0	0	0	0	0	0	0	0	0	0
Kapiti Coast District	2015	DOG	Retriever, Labrador	571	276	295	478	434	1	0	0	0	0	0	0	0	0	0	0
Kapiti Coast District	2015	DOG	Rottweiler	95	45	50	58	77	1	0	0	0	0	0	0	0	0	0	0
Kapiti Coast District	2015	DOG	Schnauzer, Miniature	69	37	32	65	58	0	0	0	0	0	0	0	0	0	0	0
Kapiti Coast District	2015	DOG	Shepherd, German	197	93	104	143	144	3	0	0	0	0	0	0	0	0	0	0
Kapiti Coast District	2015	DOG	Shih Tzu	57	26	31	48	50	0	0	0	0	0	0	0	0	0	0	0
Kapiti Coast District	2015	DOG	Spaniel, Cavalier King Charles	76	30	46	62	57	0	0	0	0	0	0	0	0	0	0	0
Kapiti Coast District	2015	DOG	Spaniel, Cocker	74	39	35	62	59	0	0	0	0	0	0	0	0	0	0	0
Kapiti Coast District	2015	DOG	Spaniel, English Springer	35	20	15	24	24	0	0	0	0	0	0	0	0	0	0	0
Kapiti Coast District	2015	DOG	Terrier, American Pit Bull	24	11	13	24	24	24	0	0	0	0	0	0	0	0	0	0
Kapiti Coast District	2015	DOG	Terrier, Fox (Smooth)	143	67	76	125	105	1	0	0	0	0	0	0	0	0	0	0
Kapiti Coast District	2015	DOG	Terrier, Jack Russell	185	91	94	170	115	0	0	0	0	0	0	0	0	0	0	0
Kapiti Coast District	2015	DOG	Terrier, Staffordshire Bull	118	69	49	84	97	2	0	0	0	0	0	0	0	0	0	0
Kapiti Coast District	2015	DOG	Terrier, West Highland White	41	19	22	35	24	0	0	0	0	0	0	0	0	0	0	0
Kapiti Coast District	2015	DOG	_Unidentified_	1127	573	554	833	905	2	0	0	0	0	0	0	0	0	0	0
Kapiti Coast District	2015	OWN	_	0	0	0	0	0	0	0	0	12	5508	79	0	0	0	0	0
Kapiti Coast District	2015	JST	_	0	0	0	0	0	0	0	0	0	0	0	2	0	0	0	0
Kapiti Coast District	2015	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	134	28432	37574
Kapiti Coast District	2016	DOG	_ALL-PURE_	3919	1954	1965	3105	3226	36	2	0	0	0	0	0	0	0	0	0
Kapiti Coast District	2016	DOG	_ALL-CROSS_	3163	1598	1565	2734	2664	59	1	0	0	0	0	0	0	0	0	0
Kapiti Coast District	2016	DOG	_ALL-DOGS_	7082	3552	3530	5839	5890	95	3	0	0	0	0	0	0	0	0	0
Kapiti Coast District	2016	DOG	Beagle	57	33	24	54	50	0	0	0	0	0	0	0	0	0	0	0
Kapiti Coast District	2016	DOG	Bichon Frise	102	42	60	94	78	0	0	0	0	0	0	0	0	0	0	0
Kapiti Coast District	2016	DOG	Boxer	71	38	33	56	61	0	0	0	0	0	0	0	0	0	0	0
Kapiti Coast District	2016	DOG	Cattle, Australian	30	18	12	23	24	0	0	0	0	0	0	0	0	0	0	0
Kapiti Coast District	2016	DOG	Chihuahua, Long Coat	47	20	27	39	40	0	0	0	0	0	0	0	0	0	0	0
Kapiti Coast District	2016	DOG	Chihuahua, Smooth Coat	26	12	14	23	25	0	0	0	0	0	0	0	0	0	0	0
Kapiti Coast District	2016	DOG	Collie, Bearded	31	13	18	19	14	0	0	0	0	0	0	0	0	0	0	0
Kapiti Coast District	2016	DOG	Collie, Border	219	103	116	172	170	0	0	0	0	0	0	0	0	0	0	0
Kapiti Coast District	2016	DOG	Collie, Rough	4	2	2	3	4	0	0	0	0	0	0	0	0	0	0	0
Kapiti Coast District	2016	DOG	Collie, Smooth	4	2	2	4	3	0	0	0	0	0	0	0	0	0	0	0
Kapiti Coast District	2016	DOG	Greyhound	80	42	38	76	76	1	0	0	0	0	0	0	0	0	0	0
Kapiti Coast District	2016	DOG	Heading	31	18	13	12	14	0	0	0	0	0	0	0	0	0	0	0
Kapiti Coast District	2016	DOG	Huntaway	92	47	45	56	56	0	0	0	0	0	0	0	0	0	0	0
Kapiti Coast District	2016	DOG	Maltese	27	15	12	24	26	0	0	0	0	0	0	0	0	0	0	0
Kapiti Coast District	2016	DOG	Poodle, Miniature	82	45	37	73	64	0	0	0	0	0	0	0	0	0	0	0
Kapiti Coast District	2016	DOG	Poodle, Toy	63	26	37	56	50	0	0	0	0	0	0	0	0	0	0	0
Kapiti Coast District	2016	DOG	Retriever, Golden	175	82	93	132	143	0	0	0	0	0	0	0	0	0	0	0
Kapiti Coast District	2016	DOG	Retriever, Labrador	541	271	270	444	444	1	0	0	0	0	0	0	0	0	0	0
Kapiti Coast District	2016	DOG	Rottweiler	88	42	46	55	75	0	0	0	0	0	0	0	0	0	0	0
Kapiti Coast District	2016	DOG	Schnauzer, Miniature	68	41	27	62	59	0	0	0	0	0	0	0	0	0	0	0
Kapiti Coast District	2016	DOG	Shepherd, German	180	84	96	139	148	2	0	0	0	0	0	0	0	0	0	0
Kapiti Coast District	2016	DOG	Shih Tzu	52	27	25	46	49	0	0	0	0	0	0	0	0	0	0	0
Kapiti Coast District	2016	DOG	Spaniel, Cavalier King Charles	73	31	42	59	58	0	0	0	0	0	0	0	0	0	0	0
Kapiti Coast District	2016	DOG	Spaniel, Cocker	78	41	37	67	68	0	0	0	0	0	0	0	0	0	0	0
Kapiti Coast District	2016	DOG	Spaniel, English Springer	41	25	16	29	31	0	0	0	0	0	0	0	0	0	0	0
Kapiti Coast District	2016	DOG	Terrier, American Pit Bull	23	14	9	23	23	21	2	0	0	0	0	0	0	0	0	0
Kapiti Coast District	2016	DOG	Terrier, Fox (Smooth)	152	72	80	134	122	1	0	0	0	0	0	0	0	0	0	0
Kapiti Coast District	2016	DOG	Terrier, Jack Russell	184	89	95	171	129	0	0	0	0	0	0	0	0	0	0	0
Kapiti Coast District	2016	DOG	Terrier, Staffordshire Bull	132	77	55	94	115	2	0	0	0	0	0	0	0	0	0	0
Kapiti Coast District	2016	DOG	Terrier, West Highland White	38	15	23	31	23	0	0	0	0	0	0	0	0	0	0	0
Kapiti Coast District	2016	DOG	_Unidentified_	1128	567	561	835	984	8	0	0	0	0	0	0	0	0	0	0
Kapiti Coast District	2016	OWN	_	0	0	0	0	0	0	0	1	14	5528	76	0	0	0	0	0
Kawerau District	2001	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	6	644	0
Kawerau District	2002	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	4	208	0
Kawerau District	2003	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	6	2874	0
Kawerau District	2004	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	31	3791	0
Kawerau District	2005	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	36	5897	0
Kawerau District	2006	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	25	2533	2599
Kawerau District	2007	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	46	8544	4976
Kawerau District	2008	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	26	1990	5597
Kawerau District	2009	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	28	19822	19634
Kawerau District	2010	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	32	5836	5969
Kawerau District	2011	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	63	8013	7871
Kawerau District	2012	JST	_	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Kawerau District	2012	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	37	3424	3112
Kawerau District	2013	DOG	_ALL-PURE_	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Kawerau District	2013	DOG	_ALL-CROSS_	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Kawerau District	2013	DOG	_ALL-DOGS_	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Kawerau District	2013	DOG	Beagle	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Kawerau District	2013	DOG	Bichon Frise	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Kawerau District	2013	DOG	Boxer	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Kawerau District	2013	DOG	Cattle, Australian	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Kawerau District	2013	DOG	Chihuahua, Long Coat	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Kawerau District	2013	DOG	Chihuahua, Smooth Coat	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Kawerau District	2013	DOG	Collie, Bearded	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Kawerau District	2013	DOG	Collie, Border	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Kawerau District	2013	DOG	Collie, Rough	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Kawerau District	2013	DOG	Collie, Smooth	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Kawerau District	2013	DOG	Greyhound	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Kawerau District	2013	DOG	Heading	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Kawerau District	2013	DOG	Huntaway	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Kawerau District	2013	DOG	Maltese	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Kawerau District	2013	DOG	Poodle, Miniature	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Kawerau District	2013	DOG	Poodle, Toy	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Kawerau District	2013	DOG	Retriever, Golden	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Kawerau District	2013	DOG	Retriever, Labrador	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Kawerau District	2013	DOG	Rottweiler	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Kawerau District	2013	DOG	Schnauzer, Miniature	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Kawerau District	2013	DOG	Shepherd, German	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Kawerau District	2013	DOG	Shih Tzu	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Kawerau District	2013	DOG	Spaniel, Cavalier King Charles	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Kawerau District	2013	DOG	Spaniel, Cocker	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Kawerau District	2013	DOG	Spaniel, English Springer	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Kawerau District	2013	DOG	Terrier, American Pit Bull	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Kawerau District	2013	DOG	Terrier, Fox (Smooth)	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Kawerau District	2013	DOG	Terrier, Jack Russell	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Kawerau District	2013	DOG	Terrier, Staffordshire Bull	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Kawerau District	2013	DOG	Terrier, West Highland White	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Kawerau District	2013	DOG	_Unidentified_	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Kawerau District	2013	OWN	_	0	0	0	0	0	0	0	0	0	0	6	0	0	0	0	0
Kawerau District	2013	JST	_	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Kawerau District	2013	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	38	4071	3979
Kawerau District	2014	DOG	_ALL-PURE_	662	351	311	423	458	34	2	0	0	0	0	0	0	0	0	0
Kawerau District	2014	DOG	_ALL-CROSS_	612	282	330	363	519	44	0	0	0	0	0	0	0	0	0	0
Kawerau District	2014	DOG	_ALL-DOGS_	1274	633	641	786	977	78	2	0	0	0	0	0	0	0	0	0
Kawerau District	2014	DOG	Beagle	1	1	0	0	1	0	0	0	0	0	0	0	0	0	0	0
Kawerau District	2014	DOG	Bichon Frise	7	4	3	6	6	0	0	0	0	0	0	0	0	0	0	0
Kawerau District	2014	DOG	Boxer	4	3	1	4	2	0	0	0	0	0	0	0	0	0	0	0
Kawerau District	2014	DOG	Cattle, Australian	16	10	6	10	13	0	0	0	0	0	0	0	0	0	0	0
Kawerau District	2014	DOG	Chihuahua, Long Coat	12	8	4	11	9	0	0	0	0	0	0	0	0	0	0	0
Kawerau District	2014	DOG	Chihuahua, Smooth Coat	11	5	6	10	5	0	0	0	0	0	0	0	0	0	0	0
Kawerau District	2014	DOG	Collie, Bearded	7	3	4	5	5	0	0	0	0	0	0	0	0	0	0	0
Kawerau District	2014	DOG	Collie, Border	25	18	7	21	17	1	0	0	0	0	0	0	0	0	0	0
Kawerau District	2014	DOG	Collie, Rough	1	0	1	1	0	0	0	0	0	0	0	0	0	0	0	0
Kawerau District	2014	DOG	Collie, Smooth	1	1	0	1	0	0	0	0	0	0	0	0	0	0	0	0
Kawerau District	2014	DOG	Greyhound	18	6	12	4	12	0	0	0	0	0	0	0	0	0	0	0
Kawerau District	2014	DOG	Heading	1	0	1	0	0	0	0	0	0	0	0	0	0	0	0	0
Kawerau District	2014	DOG	Huntaway	10	4	6	4	6	0	0	0	0	0	0	0	0	0	0	0
Kawerau District	2014	DOG	Maltese	4	3	1	2	3	0	0	0	0	0	0	0	0	0	0	0
Kawerau District	2014	DOG	Poodle, Miniature	7	2	5	5	6	0	0	0	0	0	0	0	0	0	0	0
Kawerau District	2014	DOG	Poodle, Toy	8	5	3	7	7	0	0	0	0	0	0	0	0	0	0	0
Kawerau District	2014	DOG	Retriever, Golden	3	3	0	1	2	0	0	0	0	0	0	0	0	0	0	0
Kawerau District	2014	DOG	Retriever, Labrador	74	36	38	44	50	0	0	0	0	0	0	0	0	0	0	0
Kawerau District	2014	DOG	Rottweiler	30	20	10	18	24	1	1	0	0	0	0	0	0	0	0	0
Kawerau District	2014	DOG	Schnauzer, Miniature	2	1	1	2	2	0	0	0	0	0	0	0	0	0	0	0
Kawerau District	2014	DOG	Shepherd, German	33	15	18	23	19	0	0	0	0	0	0	0	0	0	0	0
Kawerau District	2014	DOG	Shih Tzu	8	4	4	2	7	0	0	0	0	0	0	0	0	0	0	0
Kawerau District	2014	DOG	Spaniel, Cavalier King Charles	3	2	1	3	3	0	0	0	0	0	0	0	0	0	0	0
Kawerau District	2014	DOG	Spaniel, Cocker	1	0	1	1	0	0	0	0	0	0	0	0	0	0	0	0
Kawerau District	2014	DOG	Spaniel, English Springer	1	1	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Kawerau District	2014	DOG	Terrier, American Pit Bull	28	18	10	12	26	28	0	0	0	0	0	0	0	0	0	0
Kawerau District	2014	DOG	Terrier, Fox (Smooth)	79	49	30	65	47	0	0	0	0	0	0	0	0	0	0	0
Kawerau District	2014	DOG	Terrier, Jack Russell	35	17	18	24	23	1	0	0	0	0	0	0	0	0	0	0
Kawerau District	2014	DOG	Terrier, Staffordshire Bull	27	12	15	12	21	0	0	0	0	0	0	0	0	0	0	0
Kawerau District	2014	DOG	Terrier, West Highland White	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Kawerau District	2014	DOG	_Unidentified_	205	100	105	125	142	3	1	0	0	0	0	0	0	0	0	0
Kawerau District	2014	OWN	_	0	0	0	0	0	0	0	0	0	944	4	0	0	0	0	0
Kawerau District	2014	JST	_	0	0	0	0	0	0	0	0	0	0	0	2	1	0	0	0
Kawerau District	2014	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	39	13133	10540
Kawerau District	2015	DOG	_ALL-PURE_	674	353	321	414	514	40	2	0	0	0	0	0	0	0	0	0
Kawerau District	2015	DOG	_ALL-CROSS_	643	300	343	386	561	43	1	0	0	0	0	0	0	0	0	0
Kawerau District	2015	DOG	_ALL-DOGS_	1317	653	664	800	1075	83	3	0	0	0	0	0	0	0	0	0
Kawerau District	2015	DOG	Beagle	1	1	0	0	1	0	0	0	0	0	0	0	0	0	0	0
Kawerau District	2015	DOG	Bichon Frise	9	6	3	8	8	0	0	0	0	0	0	0	0	0	0	0
Kawerau District	2015	DOG	Boxer	6	4	2	5	4	0	0	0	0	0	0	0	0	0	0	0
Kawerau District	2015	DOG	Cattle, Australian	11	6	5	8	9	0	0	0	0	0	0	0	0	0	0	0
Kawerau District	2015	DOG	Chihuahua, Long Coat	14	8	6	12	12	0	0	0	0	0	0	0	0	0	0	0
Kawerau District	2015	DOG	Chihuahua, Smooth Coat	9	5	4	6	5	0	0	0	0	0	0	0	0	0	0	0
Kawerau District	2015	DOG	Collie, Bearded	10	5	5	6	9	0	0	0	0	0	0	0	0	0	0	0
Kawerau District	2015	DOG	Collie, Border	24	15	9	19	16	0	0	0	0	0	0	0	0	0	0	0
Kawerau District	2015	DOG	Collie, Rough	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Kawerau District	2015	DOG	Collie, Smooth	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Kawerau District	2015	DOG	Greyhound	14	7	7	4	8	0	0	0	0	0	0	0	0	0	0	0
Kawerau District	2015	DOG	Heading	1	0	1	0	0	0	0	0	0	0	0	0	0	0	0	0
Kawerau District	2015	DOG	Huntaway	13	7	6	4	10	0	0	0	0	0	0	0	0	0	0	0
Kawerau District	2015	DOG	Maltese	4	2	2	2	3	0	0	0	0	0	0	0	0	0	0	0
Kawerau District	2015	DOG	Poodle, Miniature	7	2	5	6	5	0	0	0	0	0	0	0	0	0	0	0
Kawerau District	2015	DOG	Poodle, Toy	7	4	3	6	7	0	0	0	0	0	0	0	0	0	0	0
Kawerau District	2015	DOG	Retriever, Golden	3	3	0	1	2	0	0	0	0	0	0	0	0	0	0	0
Kawerau District	2015	DOG	Retriever, Labrador	71	37	34	45	55	0	0	0	0	0	0	0	0	0	0	0
Kawerau District	2015	DOG	Rottweiler	35	25	10	21	30	1	1	0	0	0	0	0	0	0	0	0
Kawerau District	2015	DOG	Schnauzer, Miniature	4	2	2	3	4	0	0	0	0	0	0	0	0	0	0	0
Kawerau District	2015	DOG	Shepherd, German	28	13	15	19	19	0	0	0	0	0	0	0	0	0	0	0
Kawerau District	2015	DOG	Shih Tzu	12	5	7	6	12	0	0	0	0	0	0	0	0	0	0	0
Kawerau District	2015	DOG	Spaniel, Cavalier King Charles	4	3	1	4	4	0	0	0	0	0	0	0	0	0	0	0
Kawerau District	2015	DOG	Spaniel, Cocker	1	0	1	1	0	0	0	0	0	0	0	0	0	0	0	0
Kawerau District	2015	DOG	Spaniel, English Springer	1	1	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Kawerau District	2015	DOG	Terrier, American Pit Bull	34	20	14	14	34	34	0	0	0	0	0	0	0	0	0	0
Kawerau District	2015	DOG	Terrier, Fox (Smooth)	69	40	29	54	46	0	0	0	0	0	0	0	0	0	0	0
Kawerau District	2015	DOG	Terrier, Jack Russell	33	15	18	21	26	1	0	0	0	0	0	0	0	0	0	0
Kawerau District	2015	DOG	Terrier, Staffordshire Bull	30	14	16	14	25	0	0	0	0	0	0	0	0	0	0	0
Kawerau District	2015	DOG	Terrier, West Highland White	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Kawerau District	2015	DOG	_Unidentified_	219	103	116	125	160	4	1	0	0	0	0	0	0	0	0	0
Kawerau District	2015	OWN	_	0	0	0	0	0	0	0	0	1	960	3	0	0	0	0	0
Kawerau District	2015	JST	_	0	0	0	0	0	0	0	0	0	0	0	4	2	0	0	0
Kawerau District	2015	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	61	12299	15753
Kawerau District	2016	DOG	_ALL-PURE_	547	291	256	353	455	29	1	0	0	0	0	0	0	0	0	0
Kawerau District	2016	DOG	_ALL-CROSS_	571	270	301	332	518	44	1	0	0	0	0	0	0	0	0	0
Kawerau District	2016	DOG	_ALL-DOGS_	1118	561	557	685	973	73	2	0	0	0	0	0	0	0	0	0
Kawerau District	2016	DOG	Beagle	1	0	1	1	1	0	0	0	0	0	0	0	0	0	0	0
Kawerau District	2016	DOG	Bichon Frise	9	6	3	8	8	0	0	0	0	0	0	0	0	0	0	0
Kawerau District	2016	DOG	Boxer	3	3	0	3	2	0	0	0	0	0	0	0	0	0	0	0
Kawerau District	2016	DOG	Cattle, Australian	9	4	5	5	9	0	0	0	0	0	0	0	0	0	0	0
Kawerau District	2016	DOG	Chihuahua, Long Coat	17	10	7	14	15	0	0	0	0	0	0	0	0	0	0	0
Kawerau District	2016	DOG	Chihuahua, Smooth Coat	7	5	2	6	5	0	0	0	0	0	0	0	0	0	0	0
Kawerau District	2016	DOG	Collie, Bearded	4	2	2	2	2	0	0	0	0	0	0	0	0	0	0	0
Kawerau District	2016	DOG	Collie, Border	22	11	11	17	16	0	0	0	0	0	0	0	0	0	0	0
Kawerau District	2016	DOG	Collie, Rough	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Kawerau District	2016	DOG	Collie, Smooth	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Kawerau District	2016	DOG	Greyhound	10	6	4	3	8	0	0	0	0	0	0	0	0	0	0	0
Kawerau District	2016	DOG	Heading	1	1	0	1	1	0	0	0	0	0	0	0	0	0	0	0
Kawerau District	2016	DOG	Huntaway	9	3	6	4	6	0	0	0	0	0	0	0	0	0	0	0
Kawerau District	2016	DOG	Maltese	2	0	2	0	2	0	0	0	0	0	0	0	0	0	0	0
Kawerau District	2016	DOG	Poodle, Miniature	5	2	3	5	4	0	0	0	0	0	0	0	0	0	0	0
Kawerau District	2016	DOG	Poodle, Toy	5	2	3	4	5	0	0	0	0	0	0	0	0	0	0	0
Kawerau District	2016	DOG	Retriever, Golden	2	2	0	1	2	0	0	0	0	0	0	0	0	0	0	0
Kawerau District	2016	DOG	Retriever, Labrador	63	34	29	42	56	0	0	0	0	0	0	0	0	0	0	0
Kawerau District	2016	DOG	Rottweiler	33	24	9	18	29	1	1	0	0	0	0	0	0	0	0	0
Kawerau District	2016	DOG	Schnauzer, Miniature	4	2	2	4	4	0	0	0	0	0	0	0	0	0	0	0
Kawerau District	2016	DOG	Shepherd, German	16	7	9	13	11	0	0	0	0	0	0	0	0	0	0	0
Kawerau District	2016	DOG	Shih Tzu	12	6	6	7	12	0	0	0	0	0	0	0	0	0	0	0
Kawerau District	2016	DOG	Spaniel, Cavalier King Charles	1	0	1	1	1	0	0	0	0	0	0	0	0	0	0	0
Kawerau District	2016	DOG	Spaniel, Cocker	1	0	1	1	0	0	0	0	0	0	0	0	0	0	0	0
Kawerau District	2016	DOG	Spaniel, English Springer	1	1	0	1	1	0	0	0	0	0	0	0	0	0	0	0
Kawerau District	2016	DOG	Terrier, American Pit Bull	25	17	8	12	25	25	0	0	0	0	0	0	0	0	0	0
Kawerau District	2016	DOG	Terrier, Fox (Smooth)	63	32	31	46	47	0	0	0	0	0	0	0	0	0	0	0
Kawerau District	2016	DOG	Terrier, Jack Russell	30	14	16	22	24	1	0	0	0	0	0	0	0	0	0	0
Kawerau District	2016	DOG	Terrier, Staffordshire Bull	26	12	14	13	22	0	0	0	0	0	0	0	0	0	0	0
Kawerau District	2016	DOG	Terrier, West Highland White	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Kawerau District	2016	DOG	_Unidentified_	166	85	81	99	137	2	0	0	0	0	0	0	0	0	0	0
Kawerau District	2016	OWN	_	0	0	0	0	0	0	0	0	1	812	6	0	0	0	0	0
Mackenzie District	2001	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	7	270	0
Mackenzie District	2002	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	3	11498	0
Mackenzie District	2003	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	8	252	0
Mackenzie District	2004	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	9	947	0
Mackenzie District	2005	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	12	981	0
Mackenzie District	2006	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	9	10246	10246
Mackenzie District	2007	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	14	3924	3892
Mackenzie District	2008	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	18	1784	1858
Mackenzie District	2009	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	16	2082	2082
Mackenzie District	2010	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	18	1909	1909
Mackenzie District	2011	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	20	4013	3824
Mackenzie District	2012	JST	_	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Mackenzie District	2012	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	22	2941	2995
Mackenzie District	2013	DOG	_ALL-PURE_	1586	756	830	300	237	1	1	0	0	0	0	0	0	0	0	0
Mackenzie District	2013	DOG	_ALL-CROSS_	179	84	95	82	74	0	0	0	0	0	0	0	0	0	0	0
Mackenzie District	2013	DOG	_ALL-DOGS_	1765	840	925	382	311	1	1	0	0	0	0	0	0	0	0	0
Mackenzie District	2013	DOG	Beagle	4	1	3	2	3	0	0	0	0	0	0	0	0	0	0	0
Mackenzie District	2013	DOG	Bichon Frise	19	13	6	11	7	0	0	0	0	0	0	0	0	0	0	0
Mackenzie District	2013	DOG	Boxer	9	5	4	5	4	0	0	0	0	0	0	0	0	0	0	0
Mackenzie District	2013	DOG	Cattle, Australian	8	3	5	4	1	0	0	0	0	0	0	0	0	0	0	0
Mackenzie District	2013	DOG	Chihuahua, Long Coat	2	0	2	1	1	0	0	0	0	0	0	0	0	0	0	0
Mackenzie District	2013	DOG	Chihuahua, Smooth Coat	3	2	1	1	2	0	0	0	0	0	0	0	0	0	0	0
Mackenzie District	2013	DOG	Collie, Bearded	31	14	17	1	2	0	0	0	0	0	0	0	0	0	0	0
Mackenzie District	2013	DOG	Collie, Border	639	304	335	28	14	0	0	0	0	0	0	0	0	0	0	0
Mackenzie District	2013	DOG	Collie, Rough	2	1	1	0	0	0	0	0	0	0	0	0	0	0	0	0
Mackenzie District	2013	DOG	Collie, Smooth	7	5	2	1	0	0	0	0	0	0	0	0	0	0	0	0
Mackenzie District	2013	DOG	Greyhound	4	2	2	2	2	0	0	0	0	0	0	0	0	0	0	0
Mackenzie District	2013	DOG	Heading	117	56	61	1	1	0	0	0	0	0	0	0	0	0	0	0
Mackenzie District	2013	DOG	Huntaway	253	107	146	8	1	0	0	0	0	0	0	0	0	0	0	0
Mackenzie District	2013	DOG	Maltese	7	2	5	4	4	0	0	0	0	0	0	0	0	0	0	0
Mackenzie District	2013	DOG	Poodle, Miniature	1	0	1	1	0	0	0	0	0	0	0	0	0	0	0	0
Mackenzie District	2013	DOG	Poodle, Toy	3	1	2	3	1	0	0	0	0	0	0	0	0	0	0	0
Mackenzie District	2013	DOG	Retriever, Golden	25	13	12	13	8	0	0	0	0	0	0	0	0	0	0	0
Mackenzie District	2013	DOG	Retriever, Labrador	95	47	48	47	40	0	1	0	0	0	0	0	0	0	0	0
Mackenzie District	2013	DOG	Rottweiler	3	3	0	1	1	0	0	0	0	0	0	0	0	0	0	0
Mackenzie District	2013	DOG	Schnauzer, Miniature	2	1	1	0	0	0	0	0	0	0	0	0	0	0	0	0
Mackenzie District	2013	DOG	Shepherd, German	15	5	10	11	4	0	0	0	0	0	0	0	0	0	0	0
Mackenzie District	2013	DOG	Shih Tzu	2	2	0	1	1	0	0	0	0	0	0	0	0	0	0	0
Mackenzie District	2013	DOG	Spaniel, Cavalier King Charles	6	3	3	3	2	0	0	0	0	0	0	0	0	0	0	0
Mackenzie District	2013	DOG	Spaniel, Cocker	19	10	9	9	5	0	0	0	0	0	0	0	0	0	0	0
Mackenzie District	2013	DOG	Spaniel, English Springer	13	7	6	6	7	0	0	0	0	0	0	0	0	0	0	0
Mackenzie District	2013	DOG	Terrier, American Pit Bull	1	1	0	1	1	1	0	0	0	0	0	0	0	0	0	0
Mackenzie District	2013	DOG	Terrier, Fox (Smooth)	43	23	20	19	8	0	0	0	0	0	0	0	0	0	0	0
Mackenzie District	2013	DOG	Terrier, Jack Russell	105	51	54	56	44	0	0	0	0	0	0	0	0	0	0	0
Mackenzie District	2013	DOG	Terrier, Staffordshire Bull	11	5	6	8	5	0	0	0	0	0	0	0	0	0	0	0
Mackenzie District	2013	DOG	Terrier, West Highland White	3	1	2	3	1	0	0	0	0	0	0	0	0	0	0	0
Mackenzie District	2013	DOG	_Unidentified_	134	68	66	49	67	0	0	0	0	0	0	0	0	0	0	0
Mackenzie District	2013	OWN	_	0	0	0	0	0	0	0	0	0	744	6	0	0	0	0	0
Mackenzie District	2013	JST	_	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Mackenzie District	2013	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	21	7012	2509
Mackenzie District	2014	DOG	_ALL-PURE_	1443	691	752	287	228	1	1	0	0	0	0	0	0	0	0	0
Mackenzie District	2014	DOG	_ALL-CROSS_	175	86	89	75	77	0	0	0	0	0	0	0	0	0	0	0
Mackenzie District	2014	DOG	_ALL-DOGS_	1618	777	841	362	305	1	1	0	0	0	0	0	0	0	0	0
Mackenzie District	2014	DOG	Beagle	6	4	2	2	5	0	0	0	0	0	0	0	0	0	0	0
Mackenzie District	2014	DOG	Bichon Frise	17	11	6	11	7	0	0	0	0	0	0	0	0	0	0	0
Mackenzie District	2014	DOG	Boxer	11	5	6	6	4	0	0	0	0	0	0	0	0	0	0	0
Mackenzie District	2014	DOG	Cattle, Australian	7	2	5	2	1	0	0	0	0	0	0	0	0	0	0	0
Mackenzie District	2014	DOG	Chihuahua, Long Coat	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Mackenzie District	2014	DOG	Chihuahua, Smooth Coat	3	2	1	1	2	0	0	0	0	0	0	0	0	0	0	0
Mackenzie District	2014	DOG	Collie, Bearded	30	12	18	1	3	0	0	0	0	0	0	0	0	0	0	0
Mackenzie District	2014	DOG	Collie, Border	566	277	289	25	12	0	0	0	0	0	0	0	0	0	0	0
Mackenzie District	2014	DOG	Collie, Rough	1	0	1	0	0	0	0	0	0	0	0	0	0	0	0	0
Mackenzie District	2014	DOG	Collie, Smooth	8	6	2	1	0	0	0	0	0	0	0	0	0	0	0	0
Mackenzie District	2014	DOG	Greyhound	2	1	1	1	1	0	0	0	0	0	0	0	0	0	0	0
Mackenzie District	2014	DOG	Heading	119	52	67	1	1	0	0	0	0	0	0	0	0	0	0	0
Mackenzie District	2014	DOG	Huntaway	229	100	129	7	4	0	0	0	0	0	0	0	0	0	0	0
Mackenzie District	2014	DOG	Maltese	9	3	6	4	5	0	0	0	0	0	0	0	0	0	0	0
Mackenzie District	2014	DOG	Poodle, Miniature	1	0	1	1	0	0	0	0	0	0	0	0	0	0	0	0
Mackenzie District	2014	DOG	Poodle, Toy	4	2	2	3	1	0	0	0	0	0	0	0	0	0	0	0
Mackenzie District	2014	DOG	Retriever, Golden	21	9	12	10	8	0	0	0	0	0	0	0	0	0	0	0
Mackenzie District	2014	DOG	Retriever, Labrador	91	48	43	48	38	0	1	0	0	0	0	0	0	0	0	0
Mackenzie District	2014	DOG	Rottweiler	3	3	0	1	1	0	0	0	0	0	0	0	0	0	0	0
Mackenzie District	2014	DOG	Schnauzer, Miniature	1	0	1	0	0	0	0	0	0	0	0	0	0	0	0	0
Mackenzie District	2014	DOG	Shepherd, German	11	3	8	9	2	0	0	0	0	0	0	0	0	0	0	0
Mackenzie District	2014	DOG	Shih Tzu	4	2	2	3	2	0	0	0	0	0	0	0	0	0	0	0
Mackenzie District	2014	DOG	Spaniel, Cavalier King Charles	4	2	2	2	1	0	0	0	0	0	0	0	0	0	0	0
Mackenzie District	2014	DOG	Spaniel, Cocker	14	10	4	6	5	0	0	0	0	0	0	0	0	0	0	0
Mackenzie District	2014	DOG	Spaniel, English Springer	15	8	7	8	8	0	0	0	0	0	0	0	0	0	0	0
Mackenzie District	2014	DOG	Terrier, American Pit Bull	1	1	0	1	1	1	0	0	0	0	0	0	0	0	0	0
Mackenzie District	2014	DOG	Terrier, Fox (Smooth)	30	16	14	14	6	0	0	0	0	0	0	0	0	0	0	0
Mackenzie District	2014	DOG	Terrier, Jack Russell	101	48	53	54	43	0	0	0	0	0	0	0	0	0	0	0
Mackenzie District	2014	DOG	Terrier, Staffordshire Bull	12	6	6	10	5	0	0	0	0	0	0	0	0	0	0	0
Mackenzie District	2014	DOG	Terrier, West Highland White	3	1	2	3	1	0	0	0	0	0	0	0	0	0	0	0
Mackenzie District	2014	DOG	_Unidentified_	119	57	62	52	61	0	0	0	0	0	0	0	0	0	0	0
Mackenzie District	2014	OWN	_	0	0	0	0	0	0	0	0	0	700	12	0	0	0	0	0
Mackenzie District	2014	JST	_	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Mackenzie District	2014	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	18	3307	7850
Mackenzie District	2015	DOG	_ALL-PURE_	1524	720	804	308	234	1	1	0	0	0	0	0	0	0	0	0
Mackenzie District	2015	DOG	_ALL-CROSS_	185	96	89	82	73	0	0	0	0	0	0	0	0	0	0	0
Mackenzie District	2015	DOG	_ALL-DOGS_	1709	816	893	390	307	1	1	0	0	0	0	0	0	0	0	0
Mackenzie District	2015	DOG	Beagle	7	5	2	2	5	0	0	0	0	0	0	0	0	0	0	0
Mackenzie District	2015	DOG	Bichon Frise	15	10	5	11	7	0	0	0	0	0	0	0	0	0	0	0
Mackenzie District	2015	DOG	Boxer	9	3	6	5	4	0	0	0	0	0	0	0	0	0	0	0
Mackenzie District	2015	DOG	Cattle, Australian	11	4	7	2	1	0	0	0	0	0	0	0	0	0	0	0
Mackenzie District	2015	DOG	Chihuahua, Long Coat	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Mackenzie District	2015	DOG	Chihuahua, Smooth Coat	2	2	0	1	1	0	0	0	0	0	0	0	0	0	0	0
Mackenzie District	2015	DOG	Collie, Bearded	33	14	19	5	3	0	0	0	0	0	0	0	0	0	0	0
Mackenzie District	2015	DOG	Collie, Border	565	282	283	29	15	0	0	0	0	0	0	0	0	0	0	0
Mackenzie District	2015	DOG	Collie, Rough	2	1	1	0	0	0	0	0	0	0	0	0	0	0	0	0
Mackenzie District	2015	DOG	Collie, Smooth	7	4	3	1	0	0	0	0	0	0	0	0	0	0	0	0
Mackenzie District	2015	DOG	Greyhound	4	2	2	2	2	0	0	0	0	0	0	0	0	0	0	0
Mackenzie District	2015	DOG	Heading	143	58	85	1	0	0	0	0	0	0	0	0	0	0	0	0
Mackenzie District	2015	DOG	Huntaway	253	107	146	10	5	0	0	0	0	0	0	0	0	0	0	0
Mackenzie District	2015	DOG	Maltese	4	2	2	3	4	0	0	0	0	0	0	0	0	0	0	0
Mackenzie District	2015	DOG	Poodle, Miniature	1	0	1	1	0	0	0	0	0	0	0	0	0	0	0	0
Mackenzie District	2015	DOG	Poodle, Toy	4	2	2	4	1	0	0	0	0	0	0	0	0	0	0	0
Mackenzie District	2015	DOG	Retriever, Golden	24	10	14	9	9	0	0	0	0	0	0	0	0	0	0	0
Mackenzie District	2015	DOG	Retriever, Labrador	95	50	45	41	34	0	1	0	0	0	0	0	0	0	0	0
Mackenzie District	2015	DOG	Rottweiler	4	2	2	2	2	0	0	0	0	0	0	0	0	0	0	0
Mackenzie District	2015	DOG	Schnauzer, Miniature	3	0	3	1	1	0	0	0	0	0	0	0	0	0	0	0
Mackenzie District	2015	DOG	Shepherd, German	13	3	10	10	4	0	0	0	0	0	0	0	0	0	0	0
Mackenzie District	2015	DOG	Shih Tzu	5	2	3	4	2	0	0	0	0	0	0	0	0	0	0	0
Mackenzie District	2015	DOG	Spaniel, Cavalier King Charles	3	2	1	2	0	0	0	0	0	0	0	0	0	0	0	0
Mackenzie District	2015	DOG	Spaniel, Cocker	13	8	5	5	5	0	0	0	0	0	0	0	0	0	0	0
Mackenzie District	2015	DOG	Spaniel, English Springer	18	9	9	7	10	0	0	0	0	0	0	0	0	0	0	0
Mackenzie District	2015	DOG	Terrier, American Pit Bull	1	1	0	1	1	1	0	0	0	0	0	0	0	0	0	0
Mackenzie District	2015	DOG	Terrier, Fox (Smooth)	31	17	14	14	7	0	0	0	0	0	0	0	0	0	0	0
Mackenzie District	2015	DOG	Terrier, Jack Russell	99	48	51	58	41	0	0	0	0	0	0	0	0	0	0	0
Mackenzie District	2015	DOG	Terrier, Staffordshire Bull	13	6	7	11	5	0	0	0	0	0	0	0	0	0	0	0
Mackenzie District	2015	DOG	Terrier, West Highland White	3	1	2	3	1	0	0	0	0	0	0	0	0	0	0	0
Mackenzie District	2015	DOG	_Unidentified_	139	65	74	63	64	0	0	0	0	0	0	0	0	0	0	0
Mackenzie District	2015	OWN	_	0	0	0	0	0	0	0	0	0	733	7	0	0	0	0	0
Mackenzie District	2015	JST	_	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Mackenzie District	2015	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	27	3649	3743
Mackenzie District	2016	DOG	_ALL-PURE_	1487	721	766	316	279	2	2	0	0	0	0	0	0	0	0	0
Mackenzie District	2016	DOG	_ALL-CROSS_	178	91	87	76	78	0	0	0	0	0	0	0	0	0	0	0
Mackenzie District	2016	DOG	_ALL-DOGS_	1665	812	853	392	357	2	2	0	0	0	0	0	0	0	0	0
Mackenzie District	2016	DOG	Beagle	6	4	2	2	5	0	0	0	0	0	0	0	0	0	0	0
Mackenzie District	2016	DOG	Bichon Frise	19	9	10	14	10	0	0	0	0	0	0	0	0	0	0	0
Mackenzie District	2016	DOG	Boxer	7	2	5	5	3	0	0	0	0	0	0	0	0	0	0	0
Mackenzie District	2016	DOG	Cattle, Australian	6	1	5	1	1	0	0	0	0	0	0	0	0	0	0	0
Mackenzie District	2016	DOG	Chihuahua, Long Coat	2	2	0	1	0	0	0	0	0	0	0	0	0	0	0	0
Mackenzie District	2016	DOG	Chihuahua, Smooth Coat	2	2	0	1	1	0	0	0	0	0	0	0	0	0	0	0
Mackenzie District	2016	DOG	Collie, Bearded	29	13	16	5	3	0	0	0	0	0	0	0	0	0	0	0
Mackenzie District	2016	DOG	Collie, Border	522	266	256	23	15	0	0	0	0	0	0	0	0	0	0	0
Mackenzie District	2016	DOG	Collie, Rough	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Mackenzie District	2016	DOG	Collie, Smooth	4	2	2	1	0	0	0	0	0	0	0	0	0	0	0	0
Mackenzie District	2016	DOG	Greyhound	2	1	1	1	1	0	0	0	0	0	0	0	0	0	0	0
Mackenzie District	2016	DOG	Heading	141	58	83	3	0	0	0	0	0	0	0	0	0	0	0	0
Mackenzie District	2016	DOG	Huntaway	253	109	144	10	6	0	0	0	0	0	0	0	0	0	0	0
Mackenzie District	2016	DOG	Maltese	5	2	3	4	5	0	0	0	0	0	0	0	0	0	0	0
Mackenzie District	2016	DOG	Poodle, Miniature	1	0	1	1	0	0	0	0	0	0	0	0	0	0	0	0
Mackenzie District	2016	DOG	Poodle, Toy	3	1	2	3	0	0	0	0	0	0	0	0	0	0	0	0
Mackenzie District	2016	DOG	Retriever, Golden	31	12	19	12	17	0	0	0	0	0	0	0	0	0	0	0
Mackenzie District	2016	DOG	Retriever, Labrador	97	55	42	45	42	0	1	0	0	0	0	0	0	0	0	0
Mackenzie District	2016	DOG	Rottweiler	4	2	2	2	2	0	0	0	0	0	0	0	0	0	0	0
Mackenzie District	2016	DOG	Schnauzer, Miniature	3	0	3	1	2	0	0	0	0	0	0	0	0	0	0	0
Mackenzie District	2016	DOG	Shepherd, German	13	5	8	9	5	0	0	0	0	0	0	0	0	0	0	0
Mackenzie District	2016	DOG	Shih Tzu	6	3	3	5	3	0	0	0	0	0	0	0	0	0	0	0
Mackenzie District	2016	DOG	Spaniel, Cavalier King Charles	2	1	1	1	0	0	0	0	0	0	0	0	0	0	0	0
Mackenzie District	2016	DOG	Spaniel, Cocker	13	8	5	5	5	0	0	0	0	0	0	0	0	0	0	0
Mackenzie District	2016	DOG	Spaniel, English Springer	18	10	8	10	8	0	0	0	0	0	0	0	0	0	0	0
Mackenzie District	2016	DOG	Terrier, American Pit Bull	2	1	1	2	2	2	0	0	0	0	0	0	0	0	0	0
Mackenzie District	2016	DOG	Terrier, Fox (Smooth)	30	18	12	12	7	0	0	0	0	0	0	0	0	0	0	0
Mackenzie District	2016	DOG	Terrier, Jack Russell	96	48	48	54	45	0	0	0	0	0	0	0	0	0	0	0
Mackenzie District	2016	DOG	Terrier, Staffordshire Bull	14	8	6	9	7	0	0	0	0	0	0	0	0	0	0	0
Mackenzie District	2016	DOG	Terrier, West Highland White	5	2	3	4	3	0	0	0	0	0	0	0	0	0	0	0
Mackenzie District	2016	DOG	_Unidentified_	151	76	75	70	81	0	1	0	0	0	0	0	0	0	0	0
Mackenzie District	2016	OWN	_	0	0	0	0	0	0	0	0	0	730	5	0	0	0	0	0
Manawatu District	2001	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	3	5029	0
Manawatu District	2002	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	10	3886	0
Manawatu District	2003	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	9	561	0
Manawatu District	2004	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	34	5271	0
Manawatu District	2005	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	45	10444	0
Manawatu District	2006	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	63	8614	9680
Manawatu District	2007	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	42	19691	4938
Manawatu District	2008	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	70	99567	47493
Manawatu District	2009	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	61	20162	75764
Manawatu District	2010	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	67	44709	40457
Manawatu District	2011	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	66	15256	33578
Manawatu District	2012	JST	_	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Manawatu District	2012	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	58	13075	13682
Manawatu District	2013	DOG	_ALL-PURE_	4856	2521	2335	1743	1999	46	2	0	0	0	0	0	0	0	0	0
Manawatu District	2013	DOG	_ALL-CROSS_	1558	819	739	986	933	56	1	0	0	0	0	0	0	0	0	0
Manawatu District	2013	DOG	_ALL-DOGS_	6414	3340	3074	2729	2932	102	3	0	0	0	0	0	0	0	0	0
Manawatu District	2013	DOG	Beagle	41	15	26	30	27	0	0	0	0	0	0	0	0	0	0	0
Manawatu District	2013	DOG	Bichon Frise	76	42	34	51	53	0	0	0	0	0	0	0	0	0	0	0
Manawatu District	2013	DOG	Boxer	51	26	25	37	41	0	0	0	0	0	0	0	0	0	0	0
Manawatu District	2013	DOG	Cattle, Australian	63	27	36	8	8	0	0	0	0	0	0	0	0	0	0	0
Manawatu District	2013	DOG	Chihuahua, Long Coat	13	6	7	10	10	0	0	0	0	0	0	0	0	0	0	0
Manawatu District	2013	DOG	Chihuahua, Smooth Coat	28	16	12	17	15	0	0	0	0	0	0	0	0	0	0	0
Manawatu District	2013	DOG	Collie, Bearded	48	28	20	15	14	0	0	0	0	0	0	0	0	0	0	0
Manawatu District	2013	DOG	Collie, Border	519	266	253	69	65	1	0	0	0	0	0	0	0	0	0	0
Manawatu District	2013	DOG	Collie, Rough	26	10	16	4	8	0	0	0	0	0	0	0	0	0	0	0
Manawatu District	2013	DOG	Collie, Smooth	3	2	1	0	0	0	0	0	0	0	0	0	0	0	0	0
Manawatu District	2013	DOG	Greyhound	116	69	47	22	43	0	0	0	0	0	0	0	0	0	0	0
Manawatu District	2013	DOG	Heading	372	213	159	15	26	0	0	0	0	0	0	0	0	0	0	0
Manawatu District	2013	DOG	Huntaway	735	369	366	43	41	0	0	0	0	0	0	0	0	0	0	0
Manawatu District	2013	DOG	Maltese	22	14	8	12	17	0	0	0	0	0	0	0	0	0	0	0
Manawatu District	2013	DOG	Poodle, Miniature	29	19	10	18	15	0	0	0	0	0	0	0	0	0	0	0
Manawatu District	2013	DOG	Poodle, Toy	31	19	12	14	27	0	0	0	0	0	0	0	0	0	0	0
Manawatu District	2013	DOG	Retriever, Golden	58	24	34	33	30	0	0	0	0	0	0	0	0	0	0	0
Manawatu District	2013	DOG	Retriever, Labrador	649	342	307	341	357	4	0	0	0	0	0	0	0	0	0	0
Manawatu District	2013	DOG	Rottweiler	83	36	47	36	68	3	0	0	0	0	0	0	0	0	0	0
Manawatu District	2013	DOG	Schnauzer, Miniature	19	11	8	15	15	0	0	0	0	0	0	0	0	0	0	0
Manawatu District	2013	DOG	Shepherd, German	152	65	87	63	75	1	0	0	0	0	0	0	0	0	0	0
Manawatu District	2013	DOG	Shih Tzu	30	13	17	16	25	0	0	0	0	0	0	0	0	0	0	0
Manawatu District	2013	DOG	Spaniel, Cavalier King Charles	54	35	19	30	41	0	0	0	0	0	0	0	0	0	0	0
Manawatu District	2013	DOG	Spaniel, Cocker	36	15	21	22	19	0	0	0	0	0	0	0	0	0	0	0
Manawatu District	2013	DOG	Spaniel, English Springer	27	14	13	12	11	0	0	0	0	0	0	0	0	0	0	0
Manawatu District	2013	DOG	Terrier, American Pit Bull	29	13	16	19	25	28	0	0	0	0	0	0	0	0	0	0
Manawatu District	2013	DOG	Terrier, Fox (Smooth)	328	183	145	198	146	1	1	0	0	0	0	0	0	0	0	0
Manawatu District	2013	DOG	Terrier, Jack Russell	209	99	110	130	124	0	0	0	0	0	0	0	0	0	0	0
Manawatu District	2013	DOG	Terrier, Staffordshire Bull	62	35	27	41	39	1	0	0	0	0	0	0	0	0	0	0
Manawatu District	2013	DOG	Terrier, West Highland White	32	21	11	16	24	0	0	0	0	0	0	0	0	0	0	0
Manawatu District	2013	DOG	_Unidentified_	915	474	441	406	590	7	1	0	0	0	0	0	0	0	0	0
Manawatu District	2013	OWN	_	0	0	0	0	0	0	0	0	0	4118	21	0	0	0	0	0
Manawatu District	2013	JST	_	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Manawatu District	2013	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	83	10575	9397
Manawatu District	2014	DOG	_ALL-PURE_	4465	2392	2073	1649	2252	53	2	0	0	0	0	0	0	0	0	0
Manawatu District	2014	DOG	_ALL-CROSS_	1536	804	732	981	1054	59	1	0	0	0	0	0	0	0	0	0
Manawatu District	2014	DOG	_ALL-DOGS_	6001	3196	2805	2630	3306	112	3	0	0	0	0	0	0	0	0	0
Manawatu District	2014	DOG	Beagle	38	15	23	29	25	0	0	0	0	0	0	0	0	0	0	0
Manawatu District	2014	DOG	Bichon Frise	69	39	30	44	49	0	0	0	0	0	0	0	0	0	0	0
Manawatu District	2014	DOG	Boxer	47	26	21	32	40	1	0	0	0	0	0	0	0	0	0	0
Manawatu District	2014	DOG	Cattle, Australian	57	25	32	10	9	0	0	0	0	0	0	0	0	0	0	0
Manawatu District	2014	DOG	Chihuahua, Long Coat	18	9	9	14	13	0	0	0	0	0	0	0	0	0	0	0
Manawatu District	2014	DOG	Chihuahua, Smooth Coat	22	10	12	15	9	0	0	0	0	0	0	0	0	0	0	0
Manawatu District	2014	DOG	Collie, Bearded	42	27	15	10	12	0	0	0	0	0	0	0	0	0	0	0
Manawatu District	2014	DOG	Collie, Border	425	227	198	75	79	1	0	0	0	0	0	0	0	0	0	0
Manawatu District	2014	DOG	Collie, Rough	23	9	14	6	11	0	0	0	0	0	0	0	0	0	0	0
Manawatu District	2014	DOG	Collie, Smooth	4	3	1	0	0	0	0	0	0	0	0	0	0	0	0	0
Manawatu District	2014	DOG	Greyhound	177	95	82	21	168	0	0	0	0	0	0	0	0	0	0	0
Manawatu District	2014	DOG	Heading	339	198	141	17	25	0	0	0	0	0	0	0	0	0	0	0
Manawatu District	2014	DOG	Huntaway	619	317	302	39	46	0	0	0	0	0	0	0	0	0	0	0
Manawatu District	2014	DOG	Maltese	19	12	7	10	16	0	0	0	0	0	0	0	0	0	0	0
Manawatu District	2014	DOG	Poodle, Miniature	30	18	12	18	19	0	0	0	0	0	0	0	0	0	0	0
Manawatu District	2014	DOG	Poodle, Toy	32	16	16	15	28	0	0	0	0	0	0	0	0	0	0	0
Manawatu District	2014	DOG	Retriever, Golden	60	30	30	35	41	0	0	0	0	0	0	0	0	0	0	0
Manawatu District	2014	DOG	Retriever, Labrador	583	320	263	308	369	5	0	0	0	0	0	0	0	0	0	0
Manawatu District	2014	DOG	Rottweiler	83	41	42	36	70	8	0	0	0	0	0	0	0	0	0	0
Manawatu District	2014	DOG	Schnauzer, Miniature	26	13	13	15	23	0	0	0	0	0	0	0	0	0	0	0
Manawatu District	2014	DOG	Shepherd, German	139	68	71	63	82	0	0	0	0	0	0	0	0	0	0	0
Manawatu District	2014	DOG	Shih Tzu	36	19	17	19	31	0	0	0	0	0	0	0	0	0	0	0
Manawatu District	2014	DOG	Spaniel, Cavalier King Charles	58	37	21	30	46	0	0	0	0	0	0	0	0	0	0	0
Manawatu District	2014	DOG	Spaniel, Cocker	39	18	21	22	26	0	0	0	0	0	0	0	0	0	0	0
Manawatu District	2014	DOG	Spaniel, English Springer	23	13	10	8	12	0	0	0	0	0	0	0	0	0	0	0
Manawatu District	2014	DOG	Terrier, American Pit Bull	28	14	14	19	24	27	1	0	0	0	0	0	0	0	0	0
Manawatu District	2014	DOG	Terrier, Fox (Smooth)	280	156	124	173	150	0	0	0	0	0	0	0	0	0	0	0
Manawatu District	2014	DOG	Terrier, Jack Russell	179	87	92	109	115	0	0	0	0	0	0	0	0	0	0	0
Manawatu District	2014	DOG	Terrier, Staffordshire Bull	50	29	21	34	38	2	0	0	0	0	0	0	0	0	0	0
Manawatu District	2014	DOG	Terrier, West Highland White	32	20	12	16	28	0	0	0	0	0	0	0	0	0	0	0
Manawatu District	2014	DOG	_Unidentified_	888	481	407	407	648	9	1	0	0	0	0	0	0	0	0	0
Manawatu District	2014	OWN	_	0	0	0	0	0	0	0	0	0	3969	25	0	0	0	0	0
Manawatu District	2014	JST	_	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Manawatu District	2014	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	75	9529	11845
Manawatu District	2015	DOG	_ALL-PURE_	4775	2544	2231	1766	2530	48	3	0	0	0	0	0	0	0	0	0
Manawatu District	2015	DOG	_ALL-CROSS_	1720	892	828	1127	1252	53	1	0	0	0	0	0	0	0	0	0
Manawatu District	2015	DOG	_ALL-DOGS_	6495	3436	3059	2893	3782	101	4	0	0	0	0	0	0	0	0	0
Manawatu District	2015	DOG	Beagle	35	13	22	29	23	0	0	0	0	0	0	0	0	0	0	0
Manawatu District	2015	DOG	Bichon Frise	80	44	36	50	61	0	0	0	0	0	0	0	0	0	0	0
Manawatu District	2015	DOG	Boxer	40	22	18	33	36	1	0	0	0	0	0	0	0	0	0	0
Manawatu District	2015	DOG	Cattle, Australian	55	24	31	11	10	0	0	0	0	0	0	0	0	0	0	0
Manawatu District	2015	DOG	Chihuahua, Long Coat	21	9	12	17	15	0	0	0	0	0	0	0	0	0	0	0
Manawatu District	2015	DOG	Chihuahua, Smooth Coat	28	16	12	20	18	0	0	0	0	0	0	0	0	0	0	0
Manawatu District	2015	DOG	Collie, Bearded	46	27	19	12	13	0	0	0	0	0	0	0	0	0	0	0
Manawatu District	2015	DOG	Collie, Border	419	224	195	80	91	0	0	0	0	0	0	0	0	0	0	0
Manawatu District	2015	DOG	Collie, Rough	24	10	14	8	16	0	0	0	0	0	0	0	0	0	0	0
Manawatu District	2015	DOG	Collie, Smooth	3	2	1	0	0	0	0	0	0	0	0	0	0	0	0	0
Manawatu District	2015	DOG	Greyhound	257	133	124	30	245	1	0	0	0	0	0	0	0	0	0	0
Manawatu District	2015	DOG	Heading	420	244	176	17	29	0	0	0	0	0	0	0	0	0	0	0
Manawatu District	2015	DOG	Huntaway	706	357	349	44	46	0	0	0	0	0	0	0	0	0	0	0
Manawatu District	2015	DOG	Maltese	16	7	9	10	14	0	0	0	0	0	0	0	0	0	0	0
Manawatu District	2015	DOG	Poodle, Miniature	27	16	11	17	18	0	0	0	0	0	0	0	0	0	0	0
Manawatu District	2015	DOG	Poodle, Toy	28	17	11	13	25	0	0	0	0	0	0	0	0	0	0	0
Manawatu District	2015	DOG	Retriever, Golden	67	28	39	37	49	0	0	0	0	0	0	0	0	0	0	0
Manawatu District	2015	DOG	Retriever, Labrador	626	341	285	335	421	3	0	0	0	0	0	0	0	0	0	0
Manawatu District	2015	DOG	Rottweiler	83	42	41	39	72	5	0	0	0	0	0	0	0	0	0	0
Manawatu District	2015	DOG	Schnauzer, Miniature	30	14	16	16	27	0	0	0	0	0	0	0	0	0	0	0
Manawatu District	2015	DOG	Shepherd, German	116	60	56	64	81	1	0	0	0	0	0	0	0	0	0	0
Manawatu District	2015	DOG	Shih Tzu	37	18	19	22	32	0	0	0	0	0	0	0	0	0	0	0
Manawatu District	2015	DOG	Spaniel, Cavalier King Charles	60	37	23	31	49	0	0	0	0	0	0	0	0	0	0	0
Manawatu District	2015	DOG	Spaniel, Cocker	42	20	22	22	32	0	0	0	0	0	0	0	0	0	0	0
Manawatu District	2015	DOG	Spaniel, English Springer	29	12	17	10	17	0	0	0	0	0	0	0	0	0	0	0
Manawatu District	2015	DOG	Terrier, American Pit Bull	25	11	14	16	23	22	1	0	0	0	0	0	0	0	0	0
Manawatu District	2015	DOG	Terrier, Fox (Smooth)	287	164	123	184	163	0	0	0	0	0	0	0	0	0	0	0
Manawatu District	2015	DOG	Terrier, Jack Russell	197	103	94	119	135	0	0	0	0	0	0	0	0	0	0	0
Manawatu District	2015	DOG	Terrier, Staffordshire Bull	62	36	26	39	52	1	0	0	0	0	0	0	0	0	0	0
Manawatu District	2015	DOG	Terrier, West Highland White	34	21	13	21	31	0	0	0	0	0	0	0	0	0	0	0
Manawatu District	2015	DOG	_Unidentified_	875	472	403	420	686	14	2	0	0	0	0	0	0	0	0	0
Manawatu District	2015	OWN	_	0	0	0	0	0	0	0	0	0	4319	36	0	0	0	0	0
Manawatu District	2015	JST	_	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Manawatu District	2015	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	84	24965	25497
Manawatu District	2016	DOG	_ALL-PURE_	4845	2579	2266	1846	2782	52	2	0	0	0	0	0	0	0	0	0
Manawatu District	2016	DOG	_ALL-CROSS_	1773	915	858	1206	1369	54	2	0	0	0	0	0	0	0	0	0
Manawatu District	2016	DOG	_ALL-DOGS_	6618	3494	3124	3052	4151	106	4	0	0	0	0	0	0	0	0	0
Manawatu District	2016	DOG	Beagle	35	15	20	25	25	0	0	0	0	0	0	0	0	0	0	0
Manawatu District	2016	DOG	Bichon Frise	81	45	36	51	66	0	0	0	0	0	0	0	0	0	0	0
Manawatu District	2016	DOG	Boxer	44	23	21	35	39	1	0	0	0	0	0	0	0	0	0	0
Manawatu District	2016	DOG	Cattle, Australian	46	25	21	10	13	0	0	0	0	0	0	0	0	0	0	0
Manawatu District	2016	DOG	Chihuahua, Long Coat	22	12	10	15	19	0	0	0	0	0	0	0	0	0	0	0
Manawatu District	2016	DOG	Chihuahua, Smooth Coat	28	15	13	19	19	0	0	0	0	0	0	0	0	0	0	0
Manawatu District	2016	DOG	Collie, Bearded	48	28	20	17	14	0	0	0	0	0	0	0	0	0	0	0
Manawatu District	2016	DOG	Collie, Border	393	203	190	83	99	0	0	0	0	0	0	0	0	0	0	0
Manawatu District	2016	DOG	Collie, Rough	17	6	11	5	11	0	0	0	0	0	0	0	0	0	0	0
Manawatu District	2016	DOG	Collie, Smooth	4	2	2	0	0	0	0	0	0	0	0	0	0	0	0	0
Manawatu District	2016	DOG	Greyhound	280	154	126	35	271	0	0	0	0	0	0	0	0	0	0	0
Manawatu District	2016	DOG	Heading	425	253	172	19	35	0	0	0	0	0	0	0	0	0	0	0
Manawatu District	2016	DOG	Huntaway	699	351	348	41	50	0	0	0	0	0	0	0	0	0	0	0
Manawatu District	2016	DOG	Maltese	21	8	13	14	19	0	0	0	0	0	0	0	0	0	0	0
Manawatu District	2016	DOG	Poodle, Miniature	26	17	9	16	18	0	0	0	0	0	0	0	0	0	0	0
Manawatu District	2016	DOG	Poodle, Toy	32	22	10	13	27	0	0	0	0	0	0	0	0	0	0	0
Manawatu District	2016	DOG	Retriever, Golden	77	32	45	42	56	0	0	0	0	0	0	0	0	0	0	0
Manawatu District	2016	DOG	Retriever, Labrador	631	338	293	349	466	4	0	0	0	0	0	0	0	0	0	0
Manawatu District	2016	DOG	Rottweiler	88	45	43	39	77	4	0	0	0	0	0	0	0	0	0	0
Manawatu District	2016	DOG	Schnauzer, Miniature	34	16	18	19	29	0	0	0	0	0	0	0	0	0	0	0
Manawatu District	2016	DOG	Shepherd, German	109	54	55	62	81	2	0	0	0	0	0	0	0	0	0	0
Manawatu District	2016	DOG	Shih Tzu	34	13	21	26	31	0	0	0	0	0	0	0	0	0	0	0
Manawatu District	2016	DOG	Spaniel, Cavalier King Charles	64	41	23	28	57	0	0	0	0	0	0	0	0	0	0	0
Manawatu District	2016	DOG	Spaniel, Cocker	43	22	21	26	34	0	0	0	0	0	0	0	0	0	0	0
Manawatu District	2016	DOG	Spaniel, English Springer	27	11	16	11	20	0	0	0	0	0	0	0	0	0	0	0
Manawatu District	2016	DOG	Terrier, American Pit Bull	22	9	13	19	19	21	0	0	0	0	0	0	0	0	0	0
Manawatu District	2016	DOG	Terrier, Fox (Smooth)	273	151	122	174	174	0	0	0	0	0	0	0	0	0	0	0
Manawatu District	2016	DOG	Terrier, Jack Russell	193	97	96	116	139	2	0	0	0	0	0	0	0	0	0	0
Manawatu District	2016	DOG	Terrier, Staffordshire Bull	86	48	38	55	74	1	0	0	0	0	0	0	0	0	0	0
Manawatu District	2016	DOG	Terrier, West Highland White	34	22	12	21	31	0	0	0	0	0	0	0	0	0	0	0
Manawatu District	2016	DOG	_Unidentified_	929	501	428	461	769	17	2	0	0	0	0	0	0	0	0	0
Manawatu District	2016	OWN	_	0	0	0	0	0	0	0	0	0	4454	30	0	0	0	0	0
Manukau City	2001	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	43	18531	0
Manukau City	2002	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	56	10427	0
Manukau City	2003	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	62	9032	0
Manukau City	2004	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	376	52110	0
Manukau City	2005	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	360	72573	0
Manukau City	2006	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	320	54196	59479
Manukau City	2007	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	302	193729	114582
Manukau City	2008	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	338	82747	154300
Manukau City	2009	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	378	120588	129500
Manukau City	2010	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	444	90348	112740
Manukau City	2011	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	406	112853	100227
Manukau City	2012	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	358	104077	92240
Manukau City	2013	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	328	84906	89467
Manukau City	2014	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	317	96420	110111
Manukau City	2015	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	352	84382	116239
Marlborough District	2001	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	52	4904	0
Marlborough District	2002	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	43	8880	0
Marlborough District	2003	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	48	64760	0
Marlborough District	2004	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	76	16064	0
Marlborough District	2005	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	89	6897	0
Marlborough District	2006	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	74	12658	27171
Marlborough District	2007	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	78	24536	66296
Marlborough District	2008	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	110	28830	26830
Marlborough District	2009	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	103	7993	10683
Marlborough District	2010	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	117	12896	10411
Marlborough District	2011	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	109	27532	11943
Marlborough District	2012	JST	_	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Marlborough District	2012	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	130	43752	46620
Marlborough District	2013	DOG	_ALL-PURE_	6142	3127	3015	2577	3133	38	2	0	0	0	0	0	0	0	0	0
Marlborough District	2013	DOG	_ALL-CROSS_	3544	1797	1747	1684	2268	38	3	0	0	0	0	0	0	0	0	0
Marlborough District	2013	DOG	_ALL-DOGS_	9686	4924	4762	4261	5401	76	5	0	0	0	0	0	0	0	0	0
Marlborough District	2013	DOG	Beagle	29	21	8	20	25	0	0	0	0	0	0	0	0	0	0	0
Marlborough District	2013	DOG	Bichon Frise	183	89	94	134	139	0	0	0	0	0	0	0	0	0	0	0
Marlborough District	2013	DOG	Boxer	104	61	43	64	79	0	0	0	0	0	0	0	0	0	0	0
Marlborough District	2013	DOG	Cattle, Australian	58	25	33	18	31	0	0	0	0	0	0	0	0	0	0	0
Marlborough District	2013	DOG	Chihuahua, Long Coat	45	20	25	24	35	0	0	0	0	0	0	0	0	0	0	0
Marlborough District	2013	DOG	Chihuahua, Smooth Coat	16	11	5	9	11	0	0	0	0	0	0	0	0	0	0	0
Marlborough District	2013	DOG	Collie, Bearded	147	65	82	23	19	0	0	0	0	0	0	0	0	0	0	0
Marlborough District	2013	DOG	Collie, Border	368	199	169	142	169	3	0	0	0	0	0	0	0	0	0	0
Marlborough District	2013	DOG	Collie, Rough	14	6	8	7	6	0	0	0	0	0	0	0	0	0	0	0
Marlborough District	2013	DOG	Collie, Smooth	532	248	284	31	19	0	0	0	0	0	0	0	0	0	0	0
Marlborough District	2013	DOG	Greyhound	28	15	13	11	18	0	0	0	0	0	0	0	0	0	0	0
Marlborough District	2013	DOG	Heading	320	173	147	13	33	0	0	0	0	0	0	0	0	0	0	0
Marlborough District	2013	DOG	Huntaway	584	247	337	43	41	2	0	0	0	0	0	0	0	0	0	0
Marlborough District	2013	DOG	Maltese	43	25	18	21	35	0	0	0	0	0	0	0	0	0	0	0
Marlborough District	2013	DOG	Poodle, Miniature	39	19	20	32	28	0	0	0	0	0	0	0	0	0	0	0
Marlborough District	2013	DOG	Poodle, Toy	30	19	11	16	17	0	0	0	0	0	0	0	0	0	0	0
Marlborough District	2013	DOG	Retriever, Golden	129	67	62	83	89	0	0	0	0	0	0	0	0	0	0	0
Marlborough District	2013	DOG	Retriever, Labrador	668	353	315	349	443	1	0	0	0	0	0	0	0	0	0	0
Marlborough District	2013	DOG	Rottweiler	69	34	35	26	60	0	0	0	0	0	0	0	0	0	0	0
Marlborough District	2013	DOG	Schnauzer, Miniature	59	35	24	43	50	0	0	0	0	0	0	0	0	0	0	0
Marlborough District	2013	DOG	Shepherd, German	140	75	65	59	91	0	0	0	0	0	0	0	0	0	0	0
Marlborough District	2013	DOG	Shih Tzu	28	14	14	17	19	0	0	0	0	0	0	0	0	0	0	0
Marlborough District	2013	DOG	Spaniel, Cavalier King Charles	46	22	24	28	33	0	0	0	0	0	0	0	0	0	0	0
Marlborough District	2013	DOG	Spaniel, Cocker	85	42	43	53	68	0	0	0	0	0	0	0	0	0	0	0
Marlborough District	2013	DOG	Spaniel, English Springer	62	30	32	32	52	0	0	0	0	0	0	0	0	0	0	0
Marlborough District	2013	DOG	Terrier, American Pit Bull	26	15	11	12	23	25	1	0	0	0	0	0	0	0	0	0
Marlborough District	2013	DOG	Terrier, Fox (Smooth)	354	203	151	215	200	3	0	0	0	0	0	0	0	0	0	0
Marlborough District	2013	DOG	Terrier, Jack Russell	418	215	203	260	260	0	0	0	0	0	0	0	0	0	0	0
Marlborough District	2013	DOG	Terrier, Staffordshire Bull	135	69	66	61	92	0	1	0	0	0	0	0	0	0	0	0
Marlborough District	2013	DOG	Terrier, West Highland White	55	34	21	47	44	0	0	0	0	0	0	0	0	0	0	0
Marlborough District	2013	DOG	_Unidentified_	1328	676	652	684	904	4	0	0	0	0	0	0	0	0	0	0
Marlborough District	2013	OWN	_	0	0	0	0	0	0	0	0	3	6248	88	0	0	0	0	0
Marlborough District	2013	JST	_	0	0	0	0	0	0	0	0	0	0	0	3	1	0	0	0
Marlborough District	2013	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	124	14084	21503
Marlborough District	2014	DOG	_ALL-PURE_	6223	3113	3110	2663	3425	41	3	0	0	0	0	0	0	0	0	0
Marlborough District	2014	DOG	_ALL-CROSS_	3636	1877	1759	1811	2511	47	5	0	0	0	0	0	0	0	0	0
Marlborough District	2014	DOG	_ALL-DOGS_	9859	4990	4869	4474	5936	88	8	0	0	0	0	0	0	0	0	0
Marlborough District	2014	DOG	Beagle	32	20	12	18	28	0	0	0	0	0	0	0	0	0	0	0
Marlborough District	2014	DOG	Bichon Frise	170	86	84	130	138	0	0	0	0	0	0	0	0	0	0	0
Marlborough District	2014	DOG	Boxer	107	56	51	66	85	1	0	0	0	0	0	0	0	0	0	0
Marlborough District	2014	DOG	Cattle, Australian	57	26	31	21	34	0	0	0	0	0	0	0	0	0	0	0
Marlborough District	2014	DOG	Chihuahua, Long Coat	44	20	24	25	36	0	0	0	0	0	0	0	0	0	0	0
Marlborough District	2014	DOG	Chihuahua, Smooth Coat	16	10	6	8	10	0	0	0	0	0	0	0	0	0	0	0
Marlborough District	2014	DOG	Collie, Bearded	140	62	78	25	23	0	0	0	0	0	0	0	0	0	0	0
Marlborough District	2014	DOG	Collie, Border	358	191	167	148	176	4	0	0	0	0	0	0	0	0	0	0
Marlborough District	2014	DOG	Collie, Rough	22	12	10	10	10	0	0	0	0	0	0	0	0	0	0	0
Marlborough District	2014	DOG	Collie, Smooth	517	243	274	30	21	0	0	0	0	0	0	0	0	0	0	0
Marlborough District	2014	DOG	Greyhound	34	18	16	17	23	0	0	0	0	0	0	0	0	0	0	0
Marlborough District	2014	DOG	Heading	365	197	168	16	43	0	0	0	0	0	0	0	0	0	0	0
Marlborough District	2014	DOG	Huntaway	608	251	357	46	50	2	0	0	0	0	0	0	0	0	0	0
Marlborough District	2014	DOG	Maltese	51	28	23	29	46	0	0	0	0	0	0	0	0	0	0	0
Marlborough District	2014	DOG	Poodle, Miniature	42	19	23	33	34	0	0	0	0	0	0	0	0	0	0	0
Marlborough District	2014	DOG	Poodle, Toy	29	17	12	19	17	0	0	0	0	0	0	0	0	0	0	0
Marlborough District	2014	DOG	Retriever, Golden	141	73	68	87	100	0	0	0	0	0	0	0	0	0	0	0
Marlborough District	2014	DOG	Retriever, Labrador	657	335	322	366	478	1	0	0	0	0	0	0	0	0	0	0
Marlborough District	2014	DOG	Rottweiler	81	37	44	24	73	1	0	0	0	0	0	0	0	0	0	0
Marlborough District	2014	DOG	Schnauzer, Miniature	69	39	30	51	61	0	0	0	0	0	0	0	0	0	0	0
Marlborough District	2014	DOG	Shepherd, German	127	67	60	55	91	0	0	0	0	0	0	0	0	0	0	0
Marlborough District	2014	DOG	Shih Tzu	24	13	11	15	21	0	0	0	0	0	0	0	0	0	0	0
Marlborough District	2014	DOG	Spaniel, Cavalier King Charles	50	26	24	28	36	0	0	0	0	0	0	0	0	0	0	0
Marlborough District	2014	DOG	Spaniel, Cocker	85	44	41	50	69	0	0	0	0	0	0	0	0	0	0	0
Marlborough District	2014	DOG	Spaniel, English Springer	63	29	34	36	53	0	0	0	0	0	0	0	0	0	0	0
Marlborough District	2014	DOG	Terrier, American Pit Bull	26	15	11	16	24	25	1	0	0	0	0	0	0	0	0	0
Marlborough District	2014	DOG	Terrier, Fox (Smooth)	327	184	143	197	200	3	0	0	0	0	0	0	0	0	0	0
Marlborough District	2014	DOG	Terrier, Jack Russell	410	208	202	265	286	0	0	0	0	0	0	0	0	0	0	0
Marlborough District	2014	DOG	Terrier, Staffordshire Bull	148	76	72	75	117	0	2	0	0	0	0	0	0	0	0	0
Marlborough District	2014	DOG	Terrier, West Highland White	51	36	15	44	42	0	0	0	0	0	0	0	0	0	0	0
Marlborough District	2014	DOG	_Unidentified_	1372	675	697	713	1000	4	0	0	0	0	0	0	0	0	0	0
Marlborough District	2014	OWN	_	0	0	0	0	0	0	0	0	3	6383	98	0	0	0	0	0
Marlborough District	2014	JST	_	0	0	0	0	0	0	0	0	0	0	0	1	0	0	0	0
Marlborough District	2014	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	160	47737	32639
Marlborough District	2015	DOG	_ALL-PURE_	6110	3080	3030	2769	3558	30	1	0	0	0	0	0	0	0	0	0
Marlborough District	2015	DOG	_ALL-CROSS_	3751	1913	1838	1912	2687	63	7	0	0	0	0	0	0	0	0	0
Marlborough District	2015	DOG	_ALL-DOGS_	9861	4993	4868	4681	6245	93	8	0	0	0	0	0	0	0	0	0
Marlborough District	2015	DOG	Beagle	30	19	11	20	26	0	0	0	0	0	0	0	0	0	0	0
Marlborough District	2015	DOG	Bichon Frise	172	90	82	133	141	0	0	0	0	0	0	0	0	0	0	0
Marlborough District	2015	DOG	Boxer	98	55	43	65	80	0	0	0	0	0	0	0	0	0	0	0
Marlborough District	2015	DOG	Cattle, Australian	55	26	29	22	33	0	0	0	0	0	0	0	0	0	0	0
Marlborough District	2015	DOG	Chihuahua, Long Coat	47	23	24	30	39	0	0	0	0	0	0	0	0	0	0	0
Marlborough District	2015	DOG	Chihuahua, Smooth Coat	23	15	8	14	18	0	0	0	0	0	0	0	0	0	0	0
Marlborough District	2015	DOG	Collie, Bearded	125	56	69	25	29	0	0	0	0	0	0	0	0	0	0	0
Marlborough District	2015	DOG	Collie, Border	354	198	156	157	193	4	0	0	0	0	0	0	0	0	0	0
Marlborough District	2015	DOG	Collie, Rough	23	11	12	14	14	0	0	0	0	0	0	0	0	0	0	0
Marlborough District	2015	DOG	Collie, Smooth	482	227	255	26	18	0	0	0	0	0	0	0	0	0	0	0
Marlborough District	2015	DOG	Greyhound	35	18	17	20	24	0	0	0	0	0	0	0	0	0	0	0
Marlborough District	2015	DOG	Heading	389	211	178	20	48	0	0	0	0	0	0	0	0	0	0	0
Marlborough District	2015	DOG	Huntaway	617	258	359	55	63	3	0	0	0	0	0	0	0	0	0	0
Marlborough District	2015	DOG	Maltese	52	30	22	30	43	0	0	0	0	0	0	0	0	0	0	0
Marlborough District	2015	DOG	Poodle, Miniature	45	21	24	36	35	0	0	0	0	0	0	0	0	0	0	0
Marlborough District	2015	DOG	Poodle, Toy	30	17	13	21	18	0	0	0	0	0	0	0	0	0	0	0
Marlborough District	2015	DOG	Retriever, Golden	141	72	69	91	106	0	0	0	0	0	0	0	0	0	0	0
Marlborough District	2015	DOG	Retriever, Labrador	631	322	309	356	486	0	0	0	0	0	0	0	0	0	0	0
Marlborough District	2015	DOG	Rottweiler	82	31	51	33	72	0	0	0	0	0	0	0	0	0	0	0
Marlborough District	2015	DOG	Schnauzer, Miniature	70	40	30	53	61	0	0	0	0	0	0	0	0	0	0	0
Marlborough District	2015	DOG	Shepherd, German	122	62	60	58	100	0	0	0	0	0	0	0	0	0	0	0
Marlborough District	2015	DOG	Shih Tzu	20	12	8	14	20	0	0	0	0	0	0	0	0	0	0	0
Marlborough District	2015	DOG	Spaniel, Cavalier King Charles	51	27	24	31	39	0	0	0	0	0	0	0	0	0	0	0
Marlborough District	2015	DOG	Spaniel, Cocker	91	45	46	60	75	0	0	0	0	0	0	0	0	0	0	0
Marlborough District	2015	DOG	Spaniel, English Springer	61	26	35	39	52	0	0	0	0	0	0	0	0	0	0	0
Marlborough District	2015	DOG	Terrier, American Pit Bull	18	14	4	14	17	16	0	0	0	0	0	0	0	0	0	0
Marlborough District	2015	DOG	Terrier, Fox (Smooth)	305	165	140	193	207	3	0	0	0	0	0	0	0	0	0	0
Marlborough District	2015	DOG	Terrier, Jack Russell	403	205	198	274	302	0	0	0	0	0	0	0	0	0	0	0
Marlborough District	2015	DOG	Terrier, Staffordshire Bull	142	77	65	73	118	0	1	0	0	0	0	0	0	0	0	0
Marlborough District	2015	DOG	Terrier, West Highland White	50	36	14	44	41	0	0	0	0	0	0	0	0	0	0	0
Marlborough District	2015	DOG	_Unidentified_	1346	671	675	748	1040	4	0	0	0	0	0	0	0	0	0	0
Marlborough District	2015	OWN	_	0	0	0	0	0	0	0	0	4	6397	87	0	0	0	0	0
Marlborough District	2015	JST	_	0	0	0	0	0	0	0	0	0	0	0	4	0	0	0	0
Marlborough District	2015	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	133	18321	34819
Marlborough District	2016	DOG	_ALL-PURE_	6273	3174	3099	2861	3776	34	2	0	0	0	0	0	0	0	0	0
Marlborough District	2016	DOG	_ALL-CROSS_	3830	1980	1850	2080	2897	61	9	0	0	0	0	0	0	0	0	0
Marlborough District	2016	DOG	_ALL-DOGS_	10103	5154	4949	4941	6673	95	11	0	0	0	0	0	0	0	0	0
Marlborough District	2016	DOG	Beagle	28	17	11	17	24	0	0	0	0	0	0	0	0	0	0	0
Marlborough District	2016	DOG	Bichon Frise	174	89	85	136	141	0	0	0	0	0	0	0	0	0	0	0
Marlborough District	2016	DOG	Boxer	101	55	46	65	90	0	0	0	0	0	0	0	0	0	0	0
Marlborough District	2016	DOG	Cattle, Australian	50	27	23	21	30	0	0	0	0	0	0	0	0	0	0	0
Marlborough District	2016	DOG	Chihuahua, Long Coat	53	24	29	36	46	0	0	0	0	0	0	0	0	0	0	0
Marlborough District	2016	DOG	Chihuahua, Smooth Coat	28	16	12	16	23	0	0	0	0	0	0	0	0	0	0	0
Marlborough District	2016	DOG	Collie, Bearded	134	63	71	32	36	0	0	0	0	0	0	0	0	0	0	0
Marlborough District	2016	DOG	Collie, Border	376	209	167	165	214	4	0	0	0	0	0	0	0	0	0	0
Marlborough District	2016	DOG	Collie, Rough	23	12	11	11	12	0	0	0	0	0	0	0	0	0	0	0
Marlborough District	2016	DOG	Collie, Smooth	438	210	228	27	26	0	0	0	0	0	0	0	0	0	0	0
Marlborough District	2016	DOG	Greyhound	39	21	18	18	26	0	0	0	0	0	0	0	0	0	0	0
Marlborough District	2016	DOG	Heading	434	239	195	24	54	0	0	0	0	0	0	0	0	0	0	0
Marlborough District	2016	DOG	Huntaway	673	287	386	66	76	2	0	0	0	0	0	0	0	0	0	0
Marlborough District	2016	DOG	Maltese	67	34	33	42	52	0	0	0	0	0	0	0	0	0	0	0
Marlborough District	2016	DOG	Poodle, Miniature	46	21	25	38	38	0	0	0	0	0	0	0	0	0	0	0
Marlborough District	2016	DOG	Poodle, Toy	28	15	13	19	19	0	0	0	0	0	0	0	0	0	0	0
Marlborough District	2016	DOG	Retriever, Golden	134	69	65	90	109	0	0	0	0	0	0	0	0	0	0	0
Marlborough District	2016	DOG	Retriever, Labrador	641	320	321	374	517	0	0	0	0	0	0	0	0	0	0	0
Marlborough District	2016	DOG	Rottweiler	77	31	46	32	63	0	0	0	0	0	0	0	0	0	0	0
Marlborough District	2016	DOG	Schnauzer, Miniature	84	50	34	54	77	0	0	0	0	0	0	0	0	0	0	0
Marlborough District	2016	DOG	Shepherd, German	121	63	58	57	100	0	0	0	0	0	0	0	0	0	0	0
Marlborough District	2016	DOG	Shih Tzu	22	14	8	17	21	0	0	0	0	0	0	0	0	0	0	0
Marlborough District	2016	DOG	Spaniel, Cavalier King Charles	51	29	22	38	42	0	0	0	0	0	0	0	0	0	0	0
Marlborough District	2016	DOG	Spaniel, Cocker	83	41	42	54	72	0	0	0	0	0	0	0	0	0	0	0
Marlborough District	2016	DOG	Spaniel, English Springer	65	30	35	43	58	0	0	0	0	0	0	0	0	0	0	0
Marlborough District	2016	DOG	Terrier, American Pit Bull	20	13	7	17	20	19	0	0	0	0	0	0	0	0	0	0
Marlborough District	2016	DOG	Terrier, Fox (Smooth)	303	169	134	191	213	0	0	0	0	0	0	0	0	0	0	0
Marlborough District	2016	DOG	Terrier, Jack Russell	413	207	206	278	323	0	0	0	0	0	0	0	0	0	0	0
Marlborough District	2016	DOG	Terrier, Staffordshire Bull	150	81	69	77	125	0	1	0	0	0	0	0	0	0	0	0
Marlborough District	2016	DOG	Terrier, West Highland White	46	32	14	41	37	0	0	0	0	0	0	0	0	0	0	0
Marlborough District	2016	DOG	_Unidentified_	1371	686	685	765	1092	9	1	0	0	0	0	0	0	0	0	0
Marlborough District	2016	OWN	_	0	0	0	0	0	0	0	0	3	6588	69	0	0	0	0	0
Masterton District	2001	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	31	2433	0
Masterton District	2002	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	39	3531	0
Masterton District	2003	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	26	1618	0
Masterton District	2004	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	74	9177	0
Masterton District	2005	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	105	13702	0
Masterton District	2006	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	90	83325	16230
Masterton District	2007	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	85	17886	61352
Masterton District	2008	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	82	11826	27054
Masterton District	2009	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	123	23952	22116
Masterton District	2010	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	129	17193	16981
Masterton District	2011	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	93	28793	26392
Masterton District	2012	JST	_	0	0	0	0	0	0	0	0	0	0	0	4	2	0	0	0
Masterton District	2012	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	109	10561	21845
Masterton District	2013	DOG	_ALL-PURE_	3522	1768	1754	1273	1320	44	2	0	0	0	0	0	0	0	0	0
Masterton District	2013	DOG	_ALL-CROSS_	1908	975	933	1133	1134	50	6	0	0	0	0	0	0	0	0	0
Masterton District	2013	DOG	_ALL-DOGS_	5430	2743	2687	2406	2454	94	8	0	0	0	0	0	0	0	0	0
Masterton District	2013	DOG	Beagle	14	7	7	13	10	0	0	0	0	0	0	0	0	0	0	0
Masterton District	2013	DOG	Bichon Frise	37	20	17	28	19	0	0	0	0	0	0	0	0	0	0	0
Masterton District	2013	DOG	Boxer	27	17	10	18	16	0	0	0	0	0	0	0	0	0	0	0
Masterton District	2013	DOG	Cattle, Australian	50	27	23	15	11	0	0	0	0	0	0	0	0	0	0	0
Masterton District	2013	DOG	Chihuahua, Long Coat	24	11	13	13	20	0	0	0	0	0	0	0	0	0	0	0
Masterton District	2013	DOG	Chihuahua, Smooth Coat	24	8	16	15	17	1	0	0	0	0	0	0	0	0	0	0
Masterton District	2013	DOG	Collie, Bearded	15	7	8	4	4	0	0	0	0	0	0	0	0	0	0	0
Masterton District	2013	DOG	Collie, Border	96	50	46	44	29	0	0	0	0	0	0	0	0	0	0	0
Masterton District	2013	DOG	Collie, Rough	7	4	3	3	5	0	0	0	0	0	0	0	0	0	0	0
Masterton District	2013	DOG	Collie, Smooth	6	4	2	2	0	0	0	0	0	0	0	0	0	0	0	0
Masterton District	2013	DOG	Greyhound	14	8	6	13	11	0	0	0	0	0	0	0	0	0	0	0
Masterton District	2013	DOG	Heading	537	282	255	24	18	0	0	0	0	0	0	0	0	0	0	0
Masterton District	2013	DOG	Huntaway	772	361	411	38	13	0	0	0	0	0	0	0	0	0	0	0
Masterton District	2013	DOG	Maltese	11	8	3	7	9	0	0	0	0	0	0	0	0	0	0	0
Masterton District	2013	DOG	Poodle, Miniature	30	13	17	23	18	0	0	0	0	0	0	0	0	0	0	0
Masterton District	2013	DOG	Poodle, Toy	8	4	4	2	4	0	0	0	0	0	0	0	0	0	0	0
Masterton District	2013	DOG	Retriever, Golden	31	14	17	16	19	0	0	0	0	0	0	0	0	0	0	0
Masterton District	2013	DOG	Retriever, Labrador	368	178	190	185	198	2	0	0	0	0	0	0	0	0	0	0
Masterton District	2013	DOG	Rottweiler	48	24	24	30	32	2	0	0	0	0	0	0	0	0	0	0
Masterton District	2013	DOG	Schnauzer, Miniature	31	16	15	20	26	0	0	0	0	0	0	0	0	0	0	0
Masterton District	2013	DOG	Shepherd, German	74	38	36	33	48	3	0	0	0	0	0	0	0	0	0	0
Masterton District	2013	DOG	Shih Tzu	10	6	4	7	8	0	0	0	0	0	0	0	0	0	0	0
Masterton District	2013	DOG	Spaniel, Cavalier King Charles	15	8	7	15	8	0	0	0	0	0	0	0	0	0	0	0
Masterton District	2013	DOG	Spaniel, Cocker	39	18	21	26	25	0	0	0	0	0	0	0	0	0	0	0
Masterton District	2013	DOG	Spaniel, English Springer	21	13	8	10	15	1	0	0	0	0	0	0	0	0	0	0
Masterton District	2013	DOG	Terrier, American Pit Bull	28	12	16	14	23	27	1	0	0	0	0	0	0	0	0	0
Masterton District	2013	DOG	Terrier, Fox (Smooth)	237	133	104	155	135	2	0	0	0	0	0	0	0	0	0	0
Masterton District	2013	DOG	Terrier, Jack Russell	171	91	80	111	82	1	0	0	0	0	0	0	0	0	0	0
Masterton District	2013	DOG	Terrier, Staffordshire Bull	56	24	32	26	36	2	0	0	0	0	0	0	0	0	0	0
Masterton District	2013	DOG	Terrier, West Highland White	24	14	10	21	12	0	0	0	0	0	0	0	0	0	0	0
Masterton District	2013	DOG	_Unidentified_	697	348	349	342	449	3	1	0	0	0	0	0	0	0	0	0
Masterton District	2013	OWN	_	0	0	0	0	0	0	0	0	2	3156	31	0	0	0	0	0
Masterton District	2013	JST	_	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Masterton District	2013	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	106	11519	11950
Masterton District	2014	DOG	_ALL-PURE_	3176	1610	1566	1137	1195	51	2	0	0	0	0	0	0	0	0	0
Masterton District	2014	DOG	_ALL-CROSS_	1678	865	813	1068	1043	43	3	0	0	0	0	0	0	0	0	0
Masterton District	2014	DOG	_ALL-DOGS_	4854	2475	2379	2205	2238	94	5	0	0	0	0	0	0	0	0	0
Masterton District	2014	DOG	Beagle	14	8	6	13	9	0	0	0	0	0	0	0	0	0	0	0
Masterton District	2014	DOG	Bichon Frise	35	19	16	27	17	0	0	0	0	0	0	0	0	0	0	0
Masterton District	2014	DOG	Boxer	24	13	11	19	16	0	0	0	0	0	0	0	0	0	0	0
Masterton District	2014	DOG	Cattle, Australian	43	25	18	11	14	0	0	0	0	0	0	0	0	0	0	0
Masterton District	2014	DOG	Chihuahua, Long Coat	15	8	7	8	12	0	0	0	0	0	0	0	0	0	0	0
Masterton District	2014	DOG	Chihuahua, Smooth Coat	26	8	18	16	16	1	0	0	0	0	0	0	0	0	0	0
Masterton District	2014	DOG	Collie, Bearded	11	6	5	2	2	0	0	0	0	0	0	0	0	0	0	0
Masterton District	2014	DOG	Collie, Border	100	50	50	46	39	0	0	0	0	0	0	0	0	0	0	0
Masterton District	2014	DOG	Collie, Rough	7	4	3	3	5	0	0	0	0	0	0	0	0	0	0	0
Masterton District	2014	DOG	Collie, Smooth	6	4	2	2	0	0	0	0	0	0	0	0	0	0	0	0
Masterton District	2014	DOG	Greyhound	9	5	4	9	8	0	0	0	0	0	0	0	0	0	0	0
Masterton District	2014	DOG	Heading	497	256	241	20	10	0	0	0	0	0	0	0	0	0	0	0
Masterton District	2014	DOG	Huntaway	721	344	377	33	14	0	0	0	0	0	0	0	0	0	0	0
Masterton District	2014	DOG	Maltese	10	7	3	8	8	0	0	0	0	0	0	0	0	0	0	0
Masterton District	2014	DOG	Poodle, Miniature	25	11	14	18	15	0	0	0	0	0	0	0	0	0	0	0
Masterton District	2014	DOG	Poodle, Toy	8	4	4	4	3	0	0	0	0	0	0	0	0	0	0	0
Masterton District	2014	DOG	Retriever, Golden	28	16	12	16	17	0	0	0	0	0	0	0	0	0	0	0
Masterton District	2014	DOG	Retriever, Labrador	317	163	154	161	170	2	0	0	0	0	0	0	0	0	0	0
Masterton District	2014	DOG	Rottweiler	45	22	23	28	31	3	0	0	0	0	0	0	0	0	0	0
Masterton District	2014	DOG	Schnauzer, Miniature	30	16	14	19	25	0	0	0	0	0	0	0	0	0	0	0
Masterton District	2014	DOG	Shepherd, German	66	35	31	30	43	6	0	0	0	0	0	0	0	0	0	0
Masterton District	2014	DOG	Shih Tzu	11	6	5	7	7	0	0	0	0	0	0	0	0	0	0	0
Masterton District	2014	DOG	Spaniel, Cavalier King Charles	12	6	6	12	8	0	0	0	0	0	0	0	0	0	0	0
Masterton District	2014	DOG	Spaniel, Cocker	36	20	16	20	24	0	0	0	0	0	0	0	0	0	0	0
Masterton District	2014	DOG	Spaniel, English Springer	17	11	6	11	13	1	0	0	0	0	0	0	0	0	0	0
Masterton District	2014	DOG	Terrier, American Pit Bull	32	13	19	19	25	31	1	0	0	0	0	0	0	0	0	0
Masterton District	2014	DOG	Terrier, Fox (Smooth)	219	118	101	137	131	3	0	0	0	0	0	0	0	0	0	0
Masterton District	2014	DOG	Terrier, Jack Russell	155	83	72	103	75	1	0	0	0	0	0	0	0	0	0	0
Masterton District	2014	DOG	Terrier, Staffordshire Bull	49	19	30	24	35	1	0	0	0	0	0	0	0	0	0	0
Masterton District	2014	DOG	Terrier, West Highland White	23	16	7	21	12	0	0	0	0	0	0	0	0	0	0	0
Masterton District	2014	DOG	_Unidentified_	585	294	291	290	391	2	1	0	0	0	0	0	0	0	0	0
Masterton District	2014	OWN	_	0	0	0	0	0	0	0	0	1	2766	44	0	0	0	0	0
Masterton District	2014	JST	_	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Masterton District	2014	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	113	47187	32786
Masterton District	2015	DOG	_ALL-PURE_	3403	1717	1686	1292	1389	47	2	0	0	0	0	0	0	0	0	0
Masterton District	2015	DOG	_ALL-CROSS_	1821	948	873	1163	1182	48	4	0	0	0	0	0	0	0	0	0
Masterton District	2015	DOG	_ALL-DOGS_	5224	2665	2559	2455	2571	95	6	0	0	0	0	0	0	0	0	0
Masterton District	2015	DOG	Beagle	15	9	6	12	9	0	0	0	0	0	0	0	0	0	0	0
Masterton District	2015	DOG	Bichon Frise	43	24	19	33	22	0	0	0	0	0	0	0	0	0	0	0
Masterton District	2015	DOG	Boxer	23	14	9	18	17	0	0	0	0	0	0	0	0	0	0	0
Masterton District	2015	DOG	Cattle, Australian	46	26	20	13	16	1	0	0	0	0	0	0	0	0	0	0
Masterton District	2015	DOG	Chihuahua, Long Coat	20	9	11	10	16	0	0	0	0	0	0	0	0	0	0	0
Masterton District	2015	DOG	Chihuahua, Smooth Coat	29	12	17	21	20	1	0	0	0	0	0	0	0	0	0	0
Masterton District	2015	DOG	Collie, Bearded	16	6	10	3	4	0	0	0	0	0	0	0	0	0	0	0
Masterton District	2015	DOG	Collie, Border	105	55	50	54	41	0	0	0	0	0	0	0	0	0	0	0
Masterton District	2015	DOG	Collie, Rough	7	4	3	4	5	0	0	0	0	0	0	0	0	0	0	0
Masterton District	2015	DOG	Collie, Smooth	4	4	0	1	0	0	0	0	0	0	0	0	0	0	0	0
Masterton District	2015	DOG	Greyhound	17	6	11	17	15	0	0	0	0	0	0	0	0	0	0	0
Masterton District	2015	DOG	Heading	514	270	244	28	22	0	0	0	0	0	0	0	0	0	0	0
Masterton District	2015	DOG	Huntaway	724	336	388	31	13	0	0	0	0	0	0	0	0	0	0	0
Masterton District	2015	DOG	Maltese	8	6	2	6	7	0	0	0	0	0	0	0	0	0	0	0
Masterton District	2015	DOG	Poodle, Miniature	26	11	15	21	18	0	0	0	0	0	0	0	0	0	0	0
Masterton District	2015	DOG	Poodle, Toy	9	5	4	5	4	0	0	0	0	0	0	0	0	0	0	0
Masterton District	2015	DOG	Retriever, Golden	32	13	19	19	21	0	0	0	0	0	0	0	0	0	0	0
Masterton District	2015	DOG	Retriever, Labrador	333	173	160	174	198	2	0	0	0	0	0	0	0	0	0	0
Masterton District	2015	DOG	Rottweiler	45	25	20	28	35	3	0	0	0	0	0	0	0	0	0	0
Masterton District	2015	DOG	Schnauzer, Miniature	39	24	15	27	32	0	0	0	0	0	0	0	0	0	0	0
Masterton District	2015	DOG	Shepherd, German	77	37	40	32	50	5	0	0	0	0	0	0	0	0	0	0
Masterton District	2015	DOG	Shih Tzu	16	7	9	10	10	0	0	0	0	0	0	0	0	0	0	0
Masterton District	2015	DOG	Spaniel, Cavalier King Charles	15	8	7	15	9	0	0	0	0	0	0	0	0	0	0	0
Masterton District	2015	DOG	Spaniel, Cocker	46	23	23	29	29	0	0	0	0	0	0	0	0	0	0	0
Masterton District	2015	DOG	Spaniel, English Springer	20	13	7	14	15	1	0	0	0	0	0	0	0	0	0	0
Masterton District	2015	DOG	Terrier, American Pit Bull	28	11	17	15	22	27	1	0	0	0	0	0	0	0	0	0
Masterton District	2015	DOG	Terrier, Fox (Smooth)	241	132	109	157	145	2	0	0	0	0	0	0	0	0	0	0
Masterton District	2015	DOG	Terrier, Jack Russell	169	98	71	111	89	1	0	0	0	0	0	0	0	0	0	0
Masterton District	2015	DOG	Terrier, Staffordshire Bull	54	21	33	31	40	0	0	0	0	0	0	0	0	0	0	0
Masterton District	2015	DOG	Terrier, West Highland White	29	16	13	21	13	0	0	0	0	0	0	0	0	0	0	0
Masterton District	2015	DOG	_Unidentified_	653	319	334	332	452	4	1	0	0	0	0	0	0	0	0	0
Masterton District	2015	OWN	_	0	0	0	0	0	0	0	0	1	3058	48	0	0	0	0	0
Masterton District	2015	JST	_	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Masterton District	2015	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	99	8319	24277
Masterton District	2016	DOG	_ALL-PURE_	3400	1727	1673	1310	1498	49	1	0	0	0	0	0	0	0	0	0
Masterton District	2016	DOG	_ALL-CROSS_	1867	940	927	1213	1257	52	4	0	0	0	0	0	0	0	0	0
Masterton District	2016	DOG	_ALL-DOGS_	5267	2667	2600	2523	2755	101	5	0	0	0	0	0	0	0	0	0
Masterton District	2016	DOG	Beagle	17	10	7	14	10	0	0	0	0	0	0	0	0	0	0	0
Masterton District	2016	DOG	Bichon Frise	42	26	16	36	23	0	0	0	0	0	0	0	0	0	0	0
Masterton District	2016	DOG	Boxer	26	17	9	23	20	1	0	0	0	0	0	0	0	0	0	0
Masterton District	2016	DOG	Cattle, Australian	41	22	19	15	17	1	0	0	0	0	0	0	0	0	0	0
Masterton District	2016	DOG	Chihuahua, Long Coat	18	8	10	10	17	0	0	0	0	0	0	0	0	0	0	0
Masterton District	2016	DOG	Chihuahua, Smooth Coat	21	8	13	17	15	1	0	0	0	0	0	0	0	0	0	0
Masterton District	2016	DOG	Collie, Bearded	19	9	10	4	6	0	0	0	0	0	0	0	0	0	0	0
Masterton District	2016	DOG	Collie, Border	98	52	46	51	41	0	0	0	0	0	0	0	0	0	0	0
Masterton District	2016	DOG	Collie, Rough	3	3	0	1	3	0	0	0	0	0	0	0	0	0	0	0
Masterton District	2016	DOG	Collie, Smooth	5	4	1	1	0	0	0	0	0	0	0	0	0	0	0	0
Masterton District	2016	DOG	Greyhound	16	8	8	16	13	0	0	0	0	0	0	0	0	0	0	0
Masterton District	2016	DOG	Heading	535	280	255	27	23	0	0	0	0	0	0	0	0	0	0	0
Masterton District	2016	DOG	Huntaway	663	308	355	27	15	0	0	0	0	0	0	0	0	0	0	0
Masterton District	2016	DOG	Maltese	15	9	6	9	14	0	0	0	0	0	0	0	0	0	0	0
Masterton District	2016	DOG	Poodle, Miniature	27	11	16	21	19	0	0	0	0	0	0	0	0	0	0	0
Masterton District	2016	DOG	Poodle, Toy	11	6	5	6	7	0	0	0	0	0	0	0	0	0	0	0
Masterton District	2016	DOG	Retriever, Golden	32	14	18	19	25	1	0	0	0	0	0	0	0	0	0	0
Masterton District	2016	DOG	Retriever, Labrador	337	168	169	172	219	2	0	0	0	0	0	0	0	0	0	0
Masterton District	2016	DOG	Rottweiler	40	21	19	29	32	3	0	0	0	0	0	0	0	0	0	0
Masterton District	2016	DOG	Schnauzer, Miniature	42	27	15	28	35	0	0	0	0	0	0	0	0	0	0	0
Masterton District	2016	DOG	Shepherd, German	84	44	40	37	54	6	0	0	0	0	0	0	0	0	0	0
Masterton District	2016	DOG	Shih Tzu	15	8	7	10	10	0	0	0	0	0	0	0	0	0	0	0
Masterton District	2016	DOG	Spaniel, Cavalier King Charles	14	7	7	14	9	0	0	0	0	0	0	0	0	0	0	0
Masterton District	2016	DOG	Spaniel, Cocker	37	17	20	23	28	0	0	0	0	0	0	0	0	0	0	0
Masterton District	2016	DOG	Spaniel, English Springer	20	13	7	13	15	1	0	0	0	0	0	0	0	0	0	0
Masterton District	2016	DOG	Terrier, American Pit Bull	24	11	13	14	20	23	0	0	0	0	0	0	0	0	0	0
Masterton District	2016	DOG	Terrier, Fox (Smooth)	257	141	116	167	173	2	0	0	0	0	0	0	0	0	0	0
Masterton District	2016	DOG	Terrier, Jack Russell	153	89	64	103	91	1	0	0	0	0	0	0	0	0	0	0
Masterton District	2016	DOG	Terrier, Staffordshire Bull	51	20	31	31	43	0	0	0	0	0	0	0	0	0	0	0
Masterton District	2016	DOG	Terrier, West Highland White	32	20	12	23	15	0	0	0	0	0	0	0	0	0	0	0
Masterton District	2016	DOG	_Unidentified_	705	346	359	349	486	7	1	0	0	0	0	0	0	0	0	0
Masterton District	2016	OWN	_	0	0	0	0	0	0	0	0	0	3044	46	0	0	0	0	0
Matamata-Piako District	2001	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	19	2997	0
Matamata-Piako District	2002	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	21	5169	0
Matamata-Piako District	2003	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	16	3439	0
Matamata-Piako District	2004	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	42	3646	0
Matamata-Piako District	2005	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	50	7950	0
Matamata-Piako District	2006	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	71	12737	12955
Matamata-Piako District	2007	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	64	7006	7559
Matamata-Piako District	2008	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	62	32964	9741
Matamata-Piako District	2009	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	75	32093	42764
Matamata-Piako District	2010	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	84	19580	25337
Matamata-Piako District	2011	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	73	9519	13906
Matamata-Piako District	2012	JST	_	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Matamata-Piako District	2012	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	75	11145	11738
Matamata-Piako District	2013	DOG	_ALL-PURE_	3418	1763	1655	1729	1583	27	0	0	0	0	0	0	0	0	0	0
Matamata-Piako District	2013	DOG	_ALL-CROSS_	1589	814	775	891	715	29	0	0	0	0	0	0	0	0	0	0
Matamata-Piako District	2013	DOG	_ALL-DOGS_	5007	2577	2430	2620	2298	56	0	0	0	0	0	0	0	0	0	0
Matamata-Piako District	2013	DOG	Beagle	26	13	13	14	17	0	0	0	0	0	0	0	0	0	0	0
Matamata-Piako District	2013	DOG	Bichon Frise	39	24	15	32	24	0	0	0	0	0	0	0	0	0	0	0
Matamata-Piako District	2013	DOG	Boxer	43	23	20	28	20	1	0	0	0	0	0	0	0	0	0	0
Matamata-Piako District	2013	DOG	Cattle, Australian	40	23	17	9	15	0	0	0	0	0	0	0	0	0	0	0
Matamata-Piako District	2013	DOG	Chihuahua, Long Coat	35	17	18	23	22	0	0	0	0	0	0	0	0	0	0	0
Matamata-Piako District	2013	DOG	Chihuahua, Smooth Coat	19	7	12	16	16	0	0	0	0	0	0	0	0	0	0	0
Matamata-Piako District	2013	DOG	Collie, Bearded	23	10	13	5	6	0	0	0	0	0	0	0	0	0	0	0
Matamata-Piako District	2013	DOG	Collie, Border	208	100	108	66	61	0	0	0	0	0	0	0	0	0	0	0
Matamata-Piako District	2013	DOG	Collie, Rough	5	3	2	0	4	0	0	0	0	0	0	0	0	0	0	0
Matamata-Piako District	2013	DOG	Collie, Smooth	3	2	1	0	1	0	0	0	0	0	0	0	0	0	0	0
Matamata-Piako District	2013	DOG	Greyhound	21	10	11	5	8	0	0	0	0	0	0	0	0	0	0	0
Matamata-Piako District	2013	DOG	Heading	83	35	48	5	6	0	0	0	0	0	0	0	0	0	0	0
Matamata-Piako District	2013	DOG	Huntaway	204	91	113	37	19	0	0	0	0	0	0	0	0	0	0	0
Matamata-Piako District	2013	DOG	Maltese	75	48	27	40	39	0	0	0	0	0	0	0	0	0	0	0
Matamata-Piako District	2013	DOG	Poodle, Miniature	26	10	16	23	16	0	0	0	0	0	0	0	0	0	0	0
Matamata-Piako District	2013	DOG	Poodle, Toy	25	18	7	18	9	0	0	0	0	0	0	0	0	0	0	0
Matamata-Piako District	2013	DOG	Retriever, Golden	80	40	40	48	33	0	0	0	0	0	0	0	0	0	0	0
Matamata-Piako District	2013	DOG	Retriever, Labrador	580	287	293	318	271	3	0	0	0	0	0	0	0	0	0	0
Matamata-Piako District	2013	DOG	Rottweiler	100	51	49	43	65	3	0	0	0	0	0	0	0	0	0	0
Matamata-Piako District	2013	DOG	Schnauzer, Miniature	61	39	22	38	46	0	0	0	0	0	0	0	0	0	0	0
Matamata-Piako District	2013	DOG	Shepherd, German	126	65	61	67	71	3	0	0	0	0	0	0	0	0	0	0
Matamata-Piako District	2013	DOG	Shih Tzu	59	29	30	36	41	0	0	0	0	0	0	0	0	0	0	0
Matamata-Piako District	2013	DOG	Spaniel, Cavalier King Charles	36	23	13	17	25	0	0	0	0	0	0	0	0	0	0	0
Matamata-Piako District	2013	DOG	Spaniel, Cocker	51	26	25	32	22	0	0	0	0	0	0	0	0	0	0	0
Matamata-Piako District	2013	DOG	Spaniel, English Springer	43	23	20	19	16	0	0	0	0	0	0	0	0	0	0	0
Matamata-Piako District	2013	DOG	Terrier, American Pit Bull	15	8	7	10	9	15	0	0	0	0	0	0	0	0	0	0
Matamata-Piako District	2013	DOG	Terrier, Fox (Smooth)	378	192	186	268	164	0	0	0	0	0	0	0	0	0	0	0
Matamata-Piako District	2013	DOG	Terrier, Jack Russell	151	76	75	105	68	0	0	0	0	0	0	0	0	0	0	0
Matamata-Piako District	2013	DOG	Terrier, Staffordshire Bull	57	32	25	29	35	0	0	0	0	0	0	0	0	0	0	0
Matamata-Piako District	2013	DOG	Terrier, West Highland White	25	13	12	17	22	0	0	0	0	0	0	0	0	0	0	0
Matamata-Piako District	2013	DOG	_Unidentified_	781	425	356	361	412	2	0	0	0	0	0	0	0	0	0	0
Matamata-Piako District	2013	OWN	_	0	0	0	0	0	0	0	0	1	3449	52	0	0	0	0	0
Matamata-Piako District	2013	JST	_	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Matamata-Piako District	2013	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	78	10902	11652
Matamata-Piako District	2014	DOG	_ALL-PURE_	3444	1771	1673	1755	1759	21	0	0	0	0	0	0	0	0	0	0
Matamata-Piako District	2014	DOG	_ALL-CROSS_	1607	821	786	927	815	30	0	0	0	0	0	0	0	0	0	0
Matamata-Piako District	2014	DOG	_ALL-DOGS_	5051	2592	2459	2682	2574	51	0	0	0	0	0	0	0	0	0	0
Matamata-Piako District	2014	DOG	Beagle	28	11	17	16	19	0	0	0	0	0	0	0	0	0	0	0
Matamata-Piako District	2014	DOG	Bichon Frise	38	22	16	28	23	0	0	0	0	0	0	0	0	0	0	0
Matamata-Piako District	2014	DOG	Boxer	42	23	19	30	20	1	0	0	0	0	0	0	0	0	0	0
Matamata-Piako District	2014	DOG	Cattle, Australian	50	28	22	13	21	0	0	0	0	0	0	0	0	0	0	0
Matamata-Piako District	2014	DOG	Chihuahua, Long Coat	38	15	23	27	25	0	0	0	0	0	0	0	0	0	0	0
Matamata-Piako District	2014	DOG	Chihuahua, Smooth Coat	19	8	11	14	16	0	0	0	0	0	0	0	0	0	0	0
Matamata-Piako District	2014	DOG	Collie, Bearded	25	10	15	6	7	0	0	0	0	0	0	0	0	0	0	0
Matamata-Piako District	2014	DOG	Collie, Border	206	98	108	72	74	0	0	0	0	0	0	0	0	0	0	0
Matamata-Piako District	2014	DOG	Collie, Rough	5	3	2	0	4	0	0	0	0	0	0	0	0	0	0	0
Matamata-Piako District	2014	DOG	Collie, Smooth	5	4	1	0	1	0	0	0	0	0	0	0	0	0	0	0
Matamata-Piako District	2014	DOG	Greyhound	31	16	15	9	19	0	0	0	0	0	0	0	0	0	0	0
Matamata-Piako District	2014	DOG	Heading	88	45	43	7	10	0	0	0	0	0	0	0	0	0	0	0
Matamata-Piako District	2014	DOG	Huntaway	212	92	120	42	25	0	0	0	0	0	0	0	0	0	0	0
Matamata-Piako District	2014	DOG	Maltese	76	49	27	42	40	0	0	0	0	0	0	0	0	0	0	0
Matamata-Piako District	2014	DOG	Poodle, Miniature	22	9	13	21	14	0	0	0	0	0	0	0	0	0	0	0
Matamata-Piako District	2014	DOG	Poodle, Toy	28	19	9	23	13	0	0	0	0	0	0	0	0	0	0	0
Matamata-Piako District	2014	DOG	Retriever, Golden	78	42	36	48	41	0	0	0	0	0	0	0	0	0	0	0
Matamata-Piako District	2014	DOG	Retriever, Labrador	577	292	285	301	309	3	0	0	0	0	0	0	0	0	0	0
Matamata-Piako District	2014	DOG	Rottweiler	110	58	52	43	73	2	0	0	0	0	0	0	0	0	0	0
Matamata-Piako District	2014	DOG	Schnauzer, Miniature	60	36	24	41	46	0	0	0	0	0	0	0	0	0	0	0
Matamata-Piako District	2014	DOG	Shepherd, German	123	62	61	61	77	3	0	0	0	0	0	0	0	0	0	0
Matamata-Piako District	2014	DOG	Shih Tzu	61	30	31	43	43	0	0	0	0	0	0	0	0	0	0	0
Matamata-Piako District	2014	DOG	Spaniel, Cavalier King Charles	33	19	14	13	27	0	0	0	0	0	0	0	0	0	0	0
Matamata-Piako District	2014	DOG	Spaniel, Cocker	44	21	23	29	20	0	0	0	0	0	0	0	0	0	0	0
Matamata-Piako District	2014	DOG	Spaniel, English Springer	44	24	20	20	24	0	0	0	0	0	0	0	0	0	0	0
Matamata-Piako District	2014	DOG	Terrier, American Pit Bull	11	6	5	8	9	11	0	0	0	0	0	0	0	0	0	0
Matamata-Piako District	2014	DOG	Terrier, Fox (Smooth)	361	179	182	267	178	0	0	0	0	0	0	0	0	0	0	0
Matamata-Piako District	2014	DOG	Terrier, Jack Russell	153	77	76	104	74	0	0	0	0	0	0	0	0	0	0	0
Matamata-Piako District	2014	DOG	Terrier, Staffordshire Bull	68	36	32	33	45	0	0	0	0	0	0	0	0	0	0	0
Matamata-Piako District	2014	DOG	Terrier, West Highland White	29	14	15	19	23	0	0	0	0	0	0	0	0	0	0	0
Matamata-Piako District	2014	DOG	_Unidentified_	779	423	356	375	439	1	0	0	0	0	0	0	0	0	0	0
Matamata-Piako District	2014	OWN	_	0	0	0	0	0	0	0	0	0	3481	51	0	0	0	0	0
Matamata-Piako District	2014	JST	_	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Matamata-Piako District	2014	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	91	39771	21019
Matamata-Piako District	2015	DOG	_ALL-PURE_	3534	1805	1729	1889	1979	22	0	0	0	0	0	0	0	0	0	0
Matamata-Piako District	2015	DOG	_ALL-CROSS_	1727	900	827	1063	987	29	0	0	0	0	0	0	0	0	0	0
Matamata-Piako District	2015	DOG	_ALL-DOGS_	5261	2705	2556	2952	2966	51	0	0	0	0	0	0	0	0	0	0
Matamata-Piako District	2015	DOG	Beagle	27	11	16	17	18	0	0	0	0	0	0	0	0	0	0	0
Matamata-Piako District	2015	DOG	Bichon Frise	46	29	17	32	30	0	0	0	0	0	0	0	0	0	0	0
Matamata-Piako District	2015	DOG	Boxer	44	23	21	29	25	1	0	0	0	0	0	0	0	0	0	0
Matamata-Piako District	2015	DOG	Cattle, Australian	51	28	23	12	26	0	0	0	0	0	0	0	0	0	0	0
Matamata-Piako District	2015	DOG	Chihuahua, Long Coat	41	18	23	28	32	0	0	0	0	0	0	0	0	0	0	0
Matamata-Piako District	2015	DOG	Chihuahua, Smooth Coat	27	13	14	17	23	0	0	0	0	0	0	0	0	0	0	0
Matamata-Piako District	2015	DOG	Collie, Bearded	29	11	18	8	9	0	0	0	0	0	0	0	0	0	0	0
Matamata-Piako District	2015	DOG	Collie, Border	215	108	107	84	83	0	0	0	0	0	0	0	0	0	0	0
Matamata-Piako District	2015	DOG	Collie, Rough	6	3	3	0	5	0	0	0	0	0	0	0	0	0	0	0
Matamata-Piako District	2015	DOG	Collie, Smooth	5	3	2	0	1	0	0	0	0	0	0	0	0	0	0	0
Matamata-Piako District	2015	DOG	Greyhound	26	11	15	11	20	0	0	0	0	0	0	0	0	0	0	0
Matamata-Piako District	2015	DOG	Heading	101	51	50	7	13	0	0	0	0	0	0	0	0	0	0	0
Matamata-Piako District	2015	DOG	Huntaway	209	90	119	46	32	0	0	0	0	0	0	0	0	0	0	0
Matamata-Piako District	2015	DOG	Maltese	85	59	26	56	53	0	0	0	0	0	0	0	0	0	0	0
Matamata-Piako District	2015	DOG	Poodle, Miniature	21	9	12	21	14	0	0	0	0	0	0	0	0	0	0	0
Matamata-Piako District	2015	DOG	Poodle, Toy	25	16	9	21	12	0	0	0	0	0	0	0	0	0	0	0
Matamata-Piako District	2015	DOG	Retriever, Golden	73	38	35	51	42	0	0	0	0	0	0	0	0	0	0	0
Matamata-Piako District	2015	DOG	Retriever, Labrador	584	291	293	330	342	2	0	0	0	0	0	0	0	0	0	0
Matamata-Piako District	2015	DOG	Rottweiler	116	56	60	53	78	2	0	0	0	0	0	0	0	0	0	0
Matamata-Piako District	2015	DOG	Schnauzer, Miniature	61	34	27	45	48	0	0	0	0	0	0	0	0	0	0	0
Matamata-Piako District	2015	DOG	Shepherd, German	121	66	55	63	85	2	0	0	0	0	0	0	0	0	0	0
Matamata-Piako District	2015	DOG	Shih Tzu	69	33	36	48	51	0	0	0	0	0	0	0	0	0	0	0
Matamata-Piako District	2015	DOG	Spaniel, Cavalier King Charles	39	24	15	15	33	0	0	0	0	0	0	0	0	0	0	0
Matamata-Piako District	2015	DOG	Spaniel, Cocker	39	18	21	29	24	0	0	0	0	0	0	0	0	0	0	0
Matamata-Piako District	2015	DOG	Spaniel, English Springer	54	30	24	26	34	0	0	0	0	0	0	0	0	0	0	0
Matamata-Piako District	2015	DOG	Terrier, American Pit Bull	14	7	7	9	10	14	0	0	0	0	0	0	0	0	0	0
Matamata-Piako District	2015	DOG	Terrier, Fox (Smooth)	345	170	175	254	177	0	0	0	0	0	0	0	0	0	0	0
Matamata-Piako District	2015	DOG	Terrier, Jack Russell	151	74	77	106	85	0	0	0	0	0	0	0	0	0	0	0
Matamata-Piako District	2015	DOG	Terrier, Staffordshire Bull	74	39	35	39	52	0	0	0	0	0	0	0	0	0	0	0
Matamata-Piako District	2015	DOG	Terrier, West Highland White	26	11	15	20	23	0	0	0	0	0	0	0	0	0	0	0
Matamata-Piako District	2015	DOG	_Unidentified_	810	431	379	412	499	1	0	0	0	0	0	0	0	0	0	0
Matamata-Piako District	2015	OWN	_	0	0	0	0	0	0	0	0	0	3622	48	0	0	0	0	0
Matamata-Piako District	2015	JST	_	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Matamata-Piako District	2015	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	84	10600	30558
Matamata-Piako District	2016	DOG	_ALL-PURE_	3469	1774	1695	1867	2102	27	0	0	0	0	0	0	0	0	0	0
Matamata-Piako District	2016	DOG	_ALL-CROSS_	1786	919	867	1145	1103	38	0	0	0	0	0	0	0	0	0	0
Matamata-Piako District	2016	DOG	_ALL-DOGS_	5255	2693	2562	3012	3205	65	0	0	0	0	0	0	0	0	0	0
Matamata-Piako District	2016	DOG	Beagle	21	8	13	16	14	0	0	0	0	0	0	0	0	0	0	0
Matamata-Piako District	2016	DOG	Bichon Frise	51	30	21	38	35	0	0	0	0	0	0	0	0	0	0	0
Matamata-Piako District	2016	DOG	Boxer	40	20	20	26	27	0	0	0	0	0	0	0	0	0	0	0
Matamata-Piako District	2016	DOG	Cattle, Australian	53	29	24	11	26	0	0	0	0	0	0	0	0	0	0	0
Matamata-Piako District	2016	DOG	Chihuahua, Long Coat	42	18	24	26	37	0	0	0	0	0	0	0	0	0	0	0
Matamata-Piako District	2016	DOG	Chihuahua, Smooth Coat	27	15	12	17	24	0	0	0	0	0	0	0	0	0	0	0
Matamata-Piako District	2016	DOG	Collie, Bearded	30	12	18	11	12	0	0	0	0	0	0	0	0	0	0	0
Matamata-Piako District	2016	DOG	Collie, Border	227	114	113	102	105	1	0	0	0	0	0	0	0	0	0	0
Matamata-Piako District	2016	DOG	Collie, Rough	8	5	3	0	8	0	0	0	0	0	0	0	0	0	0	0
Matamata-Piako District	2016	DOG	Collie, Smooth	5	2	3	1	1	0	0	0	0	0	0	0	0	0	0	0
Matamata-Piako District	2016	DOG	Greyhound	23	11	12	14	18	0	0	0	0	0	0	0	0	0	0	0
Matamata-Piako District	2016	DOG	Heading	98	53	45	7	15	0	0	0	0	0	0	0	0	0	0	0
Matamata-Piako District	2016	DOG	Huntaway	202	92	110	46	36	0	0	0	0	0	0	0	0	0	0	0
Matamata-Piako District	2016	DOG	Maltese	81	60	21	55	50	0	0	0	0	0	0	0	0	0	0	0
Matamata-Piako District	2016	DOG	Poodle, Miniature	24	10	14	23	17	0	0	0	0	0	0	0	0	0	0	0
Matamata-Piako District	2016	DOG	Poodle, Toy	24	14	10	21	13	0	0	0	0	0	0	0	0	0	0	0
Matamata-Piako District	2016	DOG	Retriever, Golden	70	35	35	45	45	0	0	0	0	0	0	0	0	0	0	0
Matamata-Piako District	2016	DOG	Retriever, Labrador	558	271	287	319	362	3	0	0	0	0	0	0	0	0	0	0
Matamata-Piako District	2016	DOG	Rottweiler	108	54	54	44	85	2	0	0	0	0	0	0	0	0	0	0
Matamata-Piako District	2016	DOG	Schnauzer, Miniature	59	34	25	44	46	0	0	0	0	0	0	0	0	0	0	0
Matamata-Piako District	2016	DOG	Shepherd, German	117	65	52	63	88	3	0	0	0	0	0	0	0	0	0	0
Matamata-Piako District	2016	DOG	Shih Tzu	71	36	35	49	58	0	0	0	0	0	0	0	0	0	0	0
Matamata-Piako District	2016	DOG	Spaniel, Cavalier King Charles	42	27	15	15	38	0	0	0	0	0	0	0	0	0	0	0
Matamata-Piako District	2016	DOG	Spaniel, Cocker	37	19	18	26	27	0	0	0	0	0	0	0	0	0	0	0
Matamata-Piako District	2016	DOG	Spaniel, English Springer	60	27	33	30	43	0	0	0	0	0	0	0	0	0	0	0
Matamata-Piako District	2016	DOG	Terrier, American Pit Bull	12	6	6	9	9	12	0	0	0	0	0	0	0	0	0	0
Matamata-Piako District	2016	DOG	Terrier, Fox (Smooth)	335	163	172	234	183	0	0	0	0	0	0	0	0	0	0	0
Matamata-Piako District	2016	DOG	Terrier, Jack Russell	140	64	76	97	86	0	0	0	0	0	0	0	0	0	0	0
Matamata-Piako District	2016	DOG	Terrier, Staffordshire Bull	86	50	36	48	63	0	0	0	0	0	0	0	0	0	0	0
Matamata-Piako District	2016	DOG	Terrier, West Highland White	24	8	16	21	21	0	0	0	0	0	0	0	0	0	0	0
Matamata-Piako District	2016	DOG	_Unidentified_	794	422	372	409	510	6	0	0	0	0	0	0	0	0	0	0
Matamata-Piako District	2016	OWN	_	0	0	0	0	0	0	0	0	0	3646	40	0	0	0	0	0
Napier City	2001	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	45	11357	0
Napier City	2002	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	45	5122	0
Napier City	2003	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	37	8606	0
Napier City	2004	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	175	71865	0
Napier City	2005	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	170	18774	0
Napier City	2006	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	197	148934	50630
Napier City	2007	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	184	64828	82984
Napier City	2008	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	208	43226	61458
Napier City	2009	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	184	31405	58348
Napier City	2010	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	231	242227	59432
Napier City	2011	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	261	47522	78617
Napier City	2012	JST	_	0	0	0	0	0	0	0	0	0	0	0	4	2	0	0	0
Napier City	2012	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	245	43514	76915
Napier City	2013	DOG	_ALL-PURE_	3906	2036	1870	2330	2684	63	7	0	0	0	0	0	0	0	0	0
Napier City	2013	DOG	_ALL-CROSS_	3019	1559	1460	1901	2259	95	10	0	0	0	0	0	0	0	0	0
Napier City	2013	DOG	_ALL-DOGS_	6925	3595	3330	4231	4943	158	17	0	0	0	0	0	0	0	0	0
Napier City	2013	DOG	Beagle	85	41	44	69	71	0	0	0	0	0	0	0	0	0	0	0
Napier City	2013	DOG	Bichon Frise	102	56	46	80	83	0	0	0	0	0	0	0	0	0	0	0
Napier City	2013	DOG	Boxer	111	56	55	66	82	0	0	0	0	0	0	0	0	0	0	0
Napier City	2013	DOG	Cattle, Australian	57	36	21	26	37	0	0	0	0	0	0	0	0	0	0	0
Napier City	2013	DOG	Chihuahua, Long Coat	43	25	18	23	39	0	0	0	0	0	0	0	0	0	0	0
Napier City	2013	DOG	Chihuahua, Smooth Coat	39	18	21	25	31	0	0	0	0	0	0	0	0	0	0	0
Napier City	2013	DOG	Collie, Bearded	7	2	5	2	4	0	0	0	0	0	0	0	0	0	0	0
Napier City	2013	DOG	Collie, Border	153	80	73	89	87	0	0	0	0	0	0	0	0	0	0	0
Napier City	2013	DOG	Collie, Rough	16	10	6	8	9	0	0	0	0	0	0	0	0	0	0	0
Napier City	2013	DOG	Collie, Smooth	4	4	0	1	2	0	0	0	0	0	0	0	0	0	0	0
Napier City	2013	DOG	Greyhound	23	12	11	22	21	0	0	0	0	0	0	0	0	0	0	0
Napier City	2013	DOG	Heading	25	12	13	10	11	0	0	0	0	0	0	0	0	0	0	0
Napier City	2013	DOG	Huntaway	34	16	18	11	11	0	0	0	0	0	0	0	0	0	0	0
Napier City	2013	DOG	Maltese	34	14	20	25	28	0	0	0	0	0	0	0	0	0	0	0
Napier City	2013	DOG	Poodle, Miniature	41	22	19	28	27	0	0	0	0	0	0	0	0	0	0	0
Napier City	2013	DOG	Poodle, Toy	53	32	21	33	32	0	0	0	0	0	0	0	0	0	0	0
Napier City	2013	DOG	Retriever, Golden	115	65	50	72	70	0	0	0	0	0	0	0	0	0	0	0
Napier City	2013	DOG	Retriever, Labrador	631	334	297	376	418	3	0	0	0	0	0	0	0	0	0	0
Napier City	2013	DOG	Rottweiler	123	60	63	49	102	3	2	0	0	0	0	0	0	0	0	0
Napier City	2013	DOG	Schnauzer, Miniature	63	31	32	53	56	0	0	0	0	0	0	0	0	0	0	0
Napier City	2013	DOG	Shepherd, German	167	75	92	82	115	1	0	0	0	0	0	0	0	0	0	0
Napier City	2013	DOG	Shih Tzu	55	27	28	35	47	0	0	0	0	0	0	0	0	0	0	0
Napier City	2013	DOG	Spaniel, Cavalier King Charles	46	26	20	31	36	0	0	0	0	0	0	0	0	0	0	0
Napier City	2013	DOG	Spaniel, Cocker	43	23	20	34	34	0	0	0	0	0	0	0	0	0	0	0
Napier City	2013	DOG	Spaniel, English Springer	40	25	15	25	21	0	0	0	0	0	0	0	0	0	0	0
Napier City	2013	DOG	Terrier, American Pit Bull	46	21	25	32	43	43	3	0	0	0	0	0	0	0	0	0
Napier City	2013	DOG	Terrier, Fox (Smooth)	333	173	160	214	184	1	0	0	0	0	0	0	0	0	0	0
Napier City	2013	DOG	Terrier, Jack Russell	301	144	157	194	195	1	0	0	0	0	0	0	0	0	0	0
Napier City	2013	DOG	Terrier, Staffordshire Bull	124	76	48	58	105	4	1	0	0	0	0	0	0	0	0	0
Napier City	2013	DOG	Terrier, West Highland White	29	15	14	23	19	0	0	0	0	0	0	0	0	0	0	0
Napier City	2013	DOG	_Unidentified_	963	505	458	534	664	7	1	0	0	0	0	0	0	0	0	0
Napier City	2013	OWN	_	0	0	0	0	0	0	0	15	15	5705	95	0	0	0	0	0
Napier City	2013	JST	_	0	0	0	0	0	0	0	0	0	0	0	5	3	0	0	0
Napier City	2013	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	247	66781	106197
Napier City	2014	DOG	_ALL-PURE_	3950	2083	1867	2386	2867	72	8	0	0	0	0	0	0	0	0	0
Napier City	2014	DOG	_ALL-CROSS_	3104	1600	1504	1990	2430	108	10	0	0	0	0	0	0	0	0	0
Napier City	2014	DOG	_ALL-DOGS_	7054	3683	3371	4376	5297	180	18	0	0	0	0	0	0	0	0	0
Napier City	2014	DOG	Beagle	79	39	40	61	68	0	0	0	0	0	0	0	0	0	0	0
Napier City	2014	DOG	Bichon Frise	98	50	48	84	79	0	0	0	0	0	0	0	0	0	0	0
Napier City	2014	DOG	Boxer	100	45	55	69	74	0	0	0	0	0	0	0	0	0	0	0
Napier City	2014	DOG	Cattle, Australian	46	30	16	21	31	1	0	0	0	0	0	0	0	0	0	0
Napier City	2014	DOG	Chihuahua, Long Coat	51	25	26	27	44	0	0	0	0	0	0	0	0	0	0	0
Napier City	2014	DOG	Chihuahua, Smooth Coat	44	22	22	27	37	0	0	0	0	0	0	0	0	0	0	0
Napier City	2014	DOG	Collie, Bearded	11	4	7	3	6	0	0	0	0	0	0	0	0	0	0	0
Napier City	2014	DOG	Collie, Border	152	79	73	90	92	0	0	0	0	0	0	0	0	0	0	0
Napier City	2014	DOG	Collie, Rough	14	8	6	6	8	0	0	0	0	0	0	0	0	0	0	0
Napier City	2014	DOG	Collie, Smooth	3	3	0	1	2	0	0	0	0	0	0	0	0	0	0	0
Napier City	2014	DOG	Greyhound	21	11	10	19	20	0	0	0	0	0	0	0	0	0	0	0
Napier City	2014	DOG	Heading	22	13	9	9	8	0	0	0	0	0	0	0	0	0	0	0
Napier City	2014	DOG	Huntaway	36	14	22	14	16	0	0	0	0	0	0	0	0	0	0	0
Napier City	2014	DOG	Maltese	39	18	21	25	32	0	0	0	0	0	0	0	0	0	0	0
Napier City	2014	DOG	Poodle, Miniature	47	27	20	34	34	0	0	0	0	0	0	0	0	0	0	0
Napier City	2014	DOG	Poodle, Toy	50	28	22	34	31	0	0	0	0	0	0	0	0	0	0	0
Napier City	2014	DOG	Retriever, Golden	112	62	50	73	73	0	0	0	0	0	0	0	0	0	0	0
Napier City	2014	DOG	Retriever, Labrador	629	335	294	370	438	4	0	0	0	0	0	0	0	0	0	0
Napier City	2014	DOG	Rottweiler	124	62	62	46	101	4	2	0	0	0	0	0	0	0	0	0
Napier City	2014	DOG	Schnauzer, Miniature	81	35	46	70	73	0	0	0	0	0	0	0	0	0	0	0
Napier City	2014	DOG	Shepherd, German	179	85	94	89	138	2	0	0	0	0	0	0	0	0	0	0
Napier City	2014	DOG	Shih Tzu	61	31	30	38	52	0	0	0	0	0	0	0	0	0	0	0
Napier City	2014	DOG	Spaniel, Cavalier King Charles	50	28	22	34	40	0	0	0	0	0	0	0	0	0	0	0
Napier City	2014	DOG	Spaniel, Cocker	45	25	20	34	35	0	0	0	0	0	0	0	0	0	0	0
Napier City	2014	DOG	Spaniel, English Springer	37	23	14	24	23	0	0	0	0	0	0	0	0	0	0	0
Napier City	2014	DOG	Terrier, American Pit Bull	51	29	22	31	48	46	5	0	0	0	0	0	0	0	0	0
Napier City	2014	DOG	Terrier, Fox (Smooth)	331	181	150	215	202	2	0	0	0	0	0	0	0	0	0	0
Napier City	2014	DOG	Terrier, Jack Russell	296	144	152	190	203	0	0	0	0	0	0	0	0	0	0	0
Napier City	2014	DOG	Terrier, Staffordshire Bull	114	70	44	56	99	3	1	0	0	0	0	0	0	0	0	0
Napier City	2014	DOG	Terrier, West Highland White	32	17	15	25	21	0	0	0	0	0	0	0	0	0	0	0
Napier City	2014	DOG	_Unidentified_	995	540	455	567	739	10	0	0	0	0	0	0	0	0	0	0
Napier City	2014	OWN	_	0	0	0	0	0	0	0	6	19	5807	69	0	0	0	0	0
Napier City	2014	JST	_	0	0	0	0	0	0	0	0	0	0	0	11	6	0	0	0
Napier City	2014	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	249	85262	114899
Napier City	2015	DOG	_ALL-PURE_	3891	2053	1838	2359	3003	78	4	0	0	0	0	0	0	0	0	0
Napier City	2015	DOG	_ALL-CROSS_	3224	1661	1563	2081	2615	120	10	0	0	0	0	0	0	0	0	0
Napier City	2015	DOG	_ALL-DOGS_	7115	3714	3401	4440	5618	198	14	0	0	0	0	0	0	0	0	0
Napier City	2015	DOG	Beagle	74	37	37	60	67	0	0	0	0	0	0	0	0	0	0	0
Napier City	2015	DOG	Bichon Frise	96	52	44	79	78	0	0	0	0	0	0	0	0	0	0	0
Napier City	2015	DOG	Boxer	92	43	49	65	70	0	0	0	0	0	0	0	0	0	0	0
Napier City	2015	DOG	Cattle, Australian	34	19	15	17	25	1	0	0	0	0	0	0	0	0	0	0
Napier City	2015	DOG	Chihuahua, Long Coat	54	25	29	30	49	1	0	0	0	0	0	0	0	0	0	0
Napier City	2015	DOG	Chihuahua, Smooth Coat	49	26	23	30	43	0	0	0	0	0	0	0	0	0	0	0
Napier City	2015	DOG	Collie, Bearded	10	4	6	6	9	0	0	0	0	0	0	0	0	0	0	0
Napier City	2015	DOG	Collie, Border	143	75	68	85	93	0	0	0	0	0	0	0	0	0	0	0
Napier City	2015	DOG	Collie, Rough	13	7	6	5	10	0	0	0	0	0	0	0	0	0	0	0
Napier City	2015	DOG	Collie, Smooth	3	3	0	1	2	0	0	0	0	0	0	0	0	0	0	0
Napier City	2015	DOG	Greyhound	31	20	11	29	31	0	0	0	0	0	0	0	0	0	0	0
Napier City	2015	DOG	Heading	29	17	12	10	12	0	0	0	0	0	0	0	0	0	0	0
Napier City	2015	DOG	Huntaway	39	17	22	17	17	0	0	0	0	0	0	0	0	0	0	0
Napier City	2015	DOG	Maltese	40	17	23	25	35	0	0	0	0	0	0	0	0	0	0	0
Napier City	2015	DOG	Poodle, Miniature	43	25	18	30	31	0	0	0	0	0	0	0	0	0	0	0
Napier City	2015	DOG	Poodle, Toy	48	29	19	35	34	0	0	0	0	0	0	0	0	0	0	0
Napier City	2015	DOG	Retriever, Golden	114	58	56	74	77	0	0	0	0	0	0	0	0	0	0	0
Napier City	2015	DOG	Retriever, Labrador	614	335	279	366	464	4	0	0	0	0	0	0	0	0	0	0
Napier City	2015	DOG	Rottweiler	123	61	62	40	108	7	1	0	0	0	0	0	0	0	0	0
Napier City	2015	DOG	Schnauzer, Miniature	90	42	48	74	80	0	0	0	0	0	0	0	0	0	0	0
Napier City	2015	DOG	Shepherd, German	169	75	94	87	139	5	0	0	0	0	0	0	0	0	0	0
Napier City	2015	DOG	Shih Tzu	66	32	34	35	58	0	0	0	0	0	0	0	0	0	0	0
Napier City	2015	DOG	Spaniel, Cavalier King Charles	45	23	22	31	42	0	0	0	0	0	0	0	0	0	0	0
Napier City	2015	DOG	Spaniel, Cocker	48	28	20	35	40	0	0	0	0	0	0	0	0	0	0	0
Napier City	2015	DOG	Spaniel, English Springer	35	20	15	21	24	0	0	0	0	0	0	0	0	0	0	0
Napier City	2015	DOG	Terrier, American Pit Bull	43	28	15	37	42	41	2	0	0	0	0	0	0	0	0	0
Napier City	2015	DOG	Terrier, Fox (Smooth)	307	168	139	201	203	2	0	0	0	0	0	0	0	0	0	0
Napier City	2015	DOG	Terrier, Jack Russell	281	135	146	182	207	0	0	0	0	0	0	0	0	0	0	0
Napier City	2015	DOG	Terrier, Staffordshire Bull	116	73	43	57	103	1	1	0	0	0	0	0	0	0	0	0
Napier City	2015	DOG	Terrier, West Highland White	33	19	14	26	24	0	0	0	0	0	0	0	0	0	0	0
Napier City	2015	DOG	_Unidentified_	1009	540	469	569	786	16	0	0	0	0	0	0	0	0	0	0
Napier City	2015	OWN	_	0	0	0	0	0	0	0	16	16	5872	80	0	0	0	0	0
Napier City	2015	JST	_	0	0	0	0	0	0	0	0	0	0	0	7	5	0	0	0
Napier City	2015	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	216	50496	152239
Napier City	2016	DOG	_ALL-PURE_	3919	2035	1884	2345	3238	61	3	0	0	0	0	0	0	0	0	0
Napier City	2016	DOG	_ALL-CROSS_	3403	1758	1645	2215	2903	118	7	0	0	0	0	0	0	0	0	0
Napier City	2016	DOG	_ALL-DOGS_	7322	3793	3529	4560	6141	179	10	0	0	0	0	0	0	0	0	0
Napier City	2016	DOG	Beagle	79	39	40	62	72	0	0	0	0	0	0	0	0	0	0	0
Napier City	2016	DOG	Bichon Frise	102	55	47	84	87	0	0	0	0	0	0	0	0	0	0	0
Napier City	2016	DOG	Boxer	82	41	41	59	71	0	0	0	0	0	0	0	0	0	0	0
Napier City	2016	DOG	Cattle, Australian	31	19	12	15	27	1	0	0	0	0	0	0	0	0	0	0
Napier City	2016	DOG	Chihuahua, Long Coat	63	27	36	37	60	1	0	0	0	0	0	0	0	0	0	0
Napier City	2016	DOG	Chihuahua, Smooth Coat	52	26	26	30	43	0	0	0	0	0	0	0	0	0	0	0
Napier City	2016	DOG	Collie, Bearded	10	4	6	5	8	0	0	0	0	0	0	0	0	0	0	0
Napier City	2016	DOG	Collie, Border	131	66	65	79	96	0	0	0	0	0	0	0	0	0	0	0
Napier City	2016	DOG	Collie, Rough	10	5	5	5	9	0	0	0	0	0	0	0	0	0	0	0
Napier City	2016	DOG	Collie, Smooth	4	3	1	2	3	0	0	0	0	0	0	0	0	0	0	0
Napier City	2016	DOG	Greyhound	38	23	15	37	34	0	0	0	0	0	0	0	0	0	0	0
Napier City	2016	DOG	Heading	32	16	16	11	13	0	0	0	0	0	0	0	0	0	0	0
Napier City	2016	DOG	Huntaway	36	19	17	14	17	0	0	0	0	0	0	0	0	0	0	0
Napier City	2016	DOG	Maltese	47	21	26	27	42	0	0	0	0	0	0	0	0	0	0	0
Napier City	2016	DOG	Poodle, Miniature	42	19	23	30	31	0	0	0	0	0	0	0	0	0	0	0
Napier City	2016	DOG	Poodle, Toy	50	32	18	38	37	0	0	0	0	0	0	0	0	0	0	0
Napier City	2016	DOG	Retriever, Golden	113	53	60	70	88	0	0	0	0	0	0	0	0	0	0	0
Napier City	2016	DOG	Retriever, Labrador	607	315	292	355	486	4	0	0	0	0	0	0	0	0	0	0
Napier City	2016	DOG	Rottweiler	119	62	57	43	105	3	0	0	0	0	0	0	0	0	0	0
Napier City	2016	DOG	Schnauzer, Miniature	94	44	50	72	89	0	0	0	0	0	0	0	0	0	0	0
Napier City	2016	DOG	Shepherd, German	169	78	91	85	147	5	0	0	0	0	0	0	0	0	0	0
Napier City	2016	DOG	Shih Tzu	86	42	44	43	81	0	0	0	0	0	0	0	0	0	0	0
Napier City	2016	DOG	Spaniel, Cavalier King Charles	50	23	27	32	47	0	0	0	0	0	0	0	0	0	0	0
Napier City	2016	DOG	Spaniel, Cocker	48	30	18	35	44	0	0	0	0	0	0	0	0	0	0	0
Napier City	2016	DOG	Spaniel, English Springer	36	22	14	22	26	0	0	0	0	0	0	0	0	0	0	0
Napier City	2016	DOG	Terrier, American Pit Bull	44	26	18	36	42	36	3	0	0	0	0	0	0	0	0	0
Napier City	2016	DOG	Terrier, Fox (Smooth)	286	159	127	190	193	2	0	0	0	0	0	0	0	0	0	0
Napier City	2016	DOG	Terrier, Jack Russell	272	129	143	181	214	0	0	0	0	0	0	0	0	0	0	0
Napier City	2016	DOG	Terrier, Staffordshire Bull	129	75	54	61	120	0	0	0	0	0	0	0	0	0	0	0
Napier City	2016	DOG	Terrier, West Highland White	33	18	15	24	26	0	0	0	0	0	0	0	0	0	0	0
Napier City	2016	DOG	_Unidentified_	1024	544	480	561	880	9	0	0	0	0	0	0	0	0	0	0
Napier City	2016	OWN	_	0	0	0	0	0	0	0	14	7	6004	95	0	0	0	0	0
Nelson City	2001	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	39	9812	0
Nelson City	2002	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	43	4597	0
Nelson City	2003	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	40	5445	0
Nelson City	2004	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	45	9886	0
Nelson City	2005	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	44	4673	0
Nelson City	2006	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	79	16019	9338
Nelson City	2007	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	80	23062	26865
Nelson City	2008	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	111	15663	16678
Nelson City	2009	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	112	15102	18621
Nelson City	2010	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	114	19611	14037
Nelson City	2011	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	132	10483	16176
Nelson City	2012	JST	_	0	0	0	0	0	0	0	0	0	0	0	7	4	0	0	0
Nelson City	2012	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	124	42495	36240
Nelson City	2013	DOG	_ALL-PURE_	2579	1273	1306	1362	1663	38	9	0	0	0	0	0	0	0	0	0
Nelson City	2013	DOG	_ALL-CROSS_	2058	1079	979	1068	1545	38	7	0	0	0	0	0	0	0	0	0
Nelson City	2013	DOG	_ALL-DOGS_	4637	2352	2285	2430	3208	76	16	0	0	0	0	0	0	0	0	0
Nelson City	2013	DOG	Beagle	40	22	18	25	31	0	0	0	0	0	0	0	0	0	0	0
Nelson City	2013	DOG	Bichon Frise	104	51	53	52	78	0	0	0	0	0	0	0	0	0	0	0
Nelson City	2013	DOG	Boxer	72	35	37	37	43	0	1	0	0	0	0	0	0	0	0	0
Nelson City	2013	DOG	Cattle, Australian	37	20	17	21	17	0	1	0	0	0	0	0	0	0	0	0
Nelson City	2013	DOG	Chihuahua, Long Coat	14	8	6	9	13	0	0	0	0	0	0	0	0	0	0	0
Nelson City	2013	DOG	Chihuahua, Smooth Coat	29	16	13	10	24	0	0	0	0	0	0	0	0	0	0	0
Nelson City	2013	DOG	Collie, Bearded	23	12	11	11	17	0	0	0	0	0	0	0	0	0	0	0
Nelson City	2013	DOG	Collie, Border	178	92	86	94	100	0	0	0	0	0	0	0	0	0	0	0
Nelson City	2013	DOG	Collie, Rough	7	4	3	7	2	0	0	0	0	0	0	0	0	0	0	0
Nelson City	2013	DOG	Collie, Smooth	3	2	1	2	2	0	0	0	0	0	0	0	0	0	0	0
Nelson City	2013	DOG	Greyhound	15	7	8	14	15	0	0	0	0	0	0	0	0	0	0	0
Nelson City	2013	DOG	Heading	13	6	7	4	6	0	0	0	0	0	0	0	0	0	0	0
Nelson City	2013	DOG	Huntaway	39	20	19	12	14	1	0	0	0	0	0	0	0	0	0	0
Nelson City	2013	DOG	Maltese	39	17	22	22	26	0	0	0	0	0	0	0	0	0	0	0
Nelson City	2013	DOG	Poodle, Miniature	18	12	6	12	12	0	0	0	0	0	0	0	0	0	0	0
Nelson City	2013	DOG	Poodle, Toy	28	14	14	14	16	0	0	0	0	0	0	0	0	0	0	0
Nelson City	2013	DOG	Retriever, Golden	79	42	37	43	44	0	0	0	0	0	0	0	0	0	0	0
Nelson City	2013	DOG	Retriever, Labrador	249	120	129	129	140	0	0	0	0	0	0	0	0	0	0	0
Nelson City	2013	DOG	Rottweiler	35	19	16	11	25	0	1	0	0	0	0	0	0	0	0	0
Nelson City	2013	DOG	Schnauzer, Miniature	61	25	36	37	47	0	0	0	0	0	0	0	0	0	0	0
Nelson City	2013	DOG	Shepherd, German	74	38	36	31	47	1	1	0	0	0	0	0	0	0	0	0
Nelson City	2013	DOG	Shih Tzu	34	15	19	19	31	0	0	0	0	0	0	0	0	0	0	0
Nelson City	2013	DOG	Spaniel, Cavalier King Charles	34	21	13	19	18	0	0	0	0	0	0	0	0	0	0	0
Nelson City	2013	DOG	Spaniel, Cocker	62	31	31	34	47	0	0	0	0	0	0	0	0	0	0	0
Nelson City	2013	DOG	Spaniel, English Springer	27	12	15	14	22	0	0	0	0	0	0	0	0	0	0	0
Nelson City	2013	DOG	Terrier, American Pit Bull	36	16	20	36	35	33	3	0	0	0	0	0	0	0	0	0
Nelson City	2013	DOG	Terrier, Fox (Smooth)	82	39	43	49	35	0	0	0	0	0	0	0	0	0	0	0
Nelson City	2013	DOG	Terrier, Jack Russell	229	99	130	136	128	1	1	0	0	0	0	0	0	0	0	0
Nelson City	2013	DOG	Terrier, Staffordshire Bull	129	70	59	65	95	0	0	0	0	0	0	0	0	0	0	0
Nelson City	2013	DOG	Terrier, West Highland White	43	22	21	20	32	0	0	0	0	0	0	0	0	0	0	0
Nelson City	2013	DOG	_Unidentified_	746	366	380	373	501	2	1	0	0	0	0	0	0	0	0	0
Nelson City	2013	OWN	_	0	0	0	0	0	0	0	0	0	3714	67	0	0	0	0	0
Nelson City	2013	JST	_	0	0	0	0	0	0	0	0	0	0	0	6	4	0	0	0
Nelson City	2013	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	149	10820	15300
Nelson City	2014	DOG	_ALL-PURE_	2833	1389	1444	1811	1995	37	11	0	0	0	0	0	0	0	0	0
Nelson City	2014	DOG	_ALL-CROSS_	2291	1186	1105	1468	1810	38	6	0	0	0	0	0	0	0	0	0
Nelson City	2014	DOG	_ALL-DOGS_	5124	2575	2549	3279	3805	75	17	0	0	0	0	0	0	0	0	0
Nelson City	2014	DOG	Beagle	49	26	23	39	39	0	0	0	0	0	0	0	0	0	0	0
Nelson City	2014	DOG	Bichon Frise	117	56	61	79	94	0	0	0	0	0	0	0	0	0	0	0
Nelson City	2014	DOG	Boxer	69	30	39	48	41	0	1	0	0	0	0	0	0	0	0	0
Nelson City	2014	DOG	Cattle, Australian	34	14	20	24	22	0	0	0	0	0	0	0	0	0	0	0
Nelson City	2014	DOG	Chihuahua, Long Coat	16	10	6	12	15	0	0	0	0	0	0	0	0	0	0	0
Nelson City	2014	DOG	Chihuahua, Smooth Coat	33	21	12	15	30	0	0	0	0	0	0	0	0	0	0	0
Nelson City	2014	DOG	Collie, Bearded	23	12	11	15	18	0	0	0	0	0	0	0	0	0	0	0
Nelson City	2014	DOG	Collie, Border	185	96	89	112	116	0	0	0	0	0	0	0	0	0	0	0
Nelson City	2014	DOG	Collie, Rough	8	4	4	6	3	0	0	0	0	0	0	0	0	0	0	0
Nelson City	2014	DOG	Collie, Smooth	5	4	1	3	3	0	0	0	0	0	0	0	0	0	0	0
Nelson City	2014	DOG	Greyhound	19	9	10	18	19	0	0	0	0	0	0	0	0	0	0	0
Nelson City	2014	DOG	Heading	18	10	8	6	9	0	0	0	0	0	0	0	0	0	0	0
Nelson City	2014	DOG	Huntaway	49	20	29	19	22	1	0	0	0	0	0	0	0	0	0	0
Nelson City	2014	DOG	Maltese	47	21	26	28	34	0	0	0	0	0	0	0	0	0	0	0
Nelson City	2014	DOG	Poodle, Miniature	26	15	11	19	20	0	0	0	0	0	0	0	0	0	0	0
Nelson City	2014	DOG	Poodle, Toy	31	18	13	22	20	0	0	0	0	0	0	0	0	0	0	0
Nelson City	2014	DOG	Retriever, Golden	87	49	38	58	56	0	0	0	0	0	0	0	0	0	0	0
Nelson City	2014	DOG	Retriever, Labrador	269	133	136	185	170	0	0	0	0	0	0	0	0	0	0	0
Nelson City	2014	DOG	Rottweiler	34	14	20	12	29	1	0	0	0	0	0	0	0	0	0	0
Nelson City	2014	DOG	Schnauzer, Miniature	78	33	45	57	64	0	0	0	0	0	0	0	0	0	0	0
Nelson City	2014	DOG	Shepherd, German	71	35	36	37	50	0	2	0	0	0	0	0	0	0	0	0
Nelson City	2014	DOG	Shih Tzu	37	20	17	26	34	0	0	0	0	0	0	0	0	0	0	0
Nelson City	2014	DOG	Spaniel, Cavalier King Charles	43	22	21	30	31	0	0	0	0	0	0	0	0	0	0	0
Nelson City	2014	DOG	Spaniel, Cocker	76	35	41	43	64	0	0	0	0	0	0	0	0	0	0	0
Nelson City	2014	DOG	Spaniel, English Springer	32	12	20	20	28	0	0	0	0	0	0	0	0	0	0	0
Nelson City	2014	DOG	Terrier, American Pit Bull	36	15	21	31	35	29	5	0	0	0	0	0	0	0	0	0
Nelson City	2014	DOG	Terrier, Fox (Smooth)	76	37	39	58	42	0	0	0	0	0	0	0	0	0	0	0
Nelson City	2014	DOG	Terrier, Jack Russell	241	105	136	178	140	1	1	0	0	0	0	0	0	0	0	0
Nelson City	2014	DOG	Terrier, Staffordshire Bull	134	69	65	79	104	0	0	0	0	0	0	0	0	0	0	0
Nelson City	2014	DOG	Terrier, West Highland White	46	26	20	31	36	0	0	0	0	0	0	0	0	0	0	0
Nelson City	2014	DOG	_Unidentified_	844	418	426	501	607	5	2	0	0	0	0	0	0	0	0	0
Nelson City	2014	OWN	_	0	0	0	0	0	0	0	1	0	4125	55	0	0	0	0	0
Nelson City	2014	JST	_	0	0	0	0	0	0	0	0	0	0	0	12	0	0	0	0
Nelson City	2014	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	149	31073	35842
Nelson City	2015	DOG	_ALL-PURE_	2942	1441	1501	1865	2225	36	8	0	0	0	0	0	0	0	0	0
Nelson City	2015	DOG	_ALL-CROSS_	2532	1342	1190	1579	2084	35	7	0	0	0	0	0	0	0	0	0
Nelson City	2015	DOG	_ALL-DOGS_	5474	2783	2691	3444	4309	71	15	0	0	0	0	0	0	0	0	0
Nelson City	2015	DOG	Beagle	42	21	21	33	32	0	0	0	0	0	0	0	0	0	0	0
Nelson City	2015	DOG	Bichon Frise	123	59	64	84	104	0	0	0	0	0	0	0	0	0	0	0
Nelson City	2015	DOG	Boxer	69	34	35	49	49	0	1	0	0	0	0	0	0	0	0	0
Nelson City	2015	DOG	Cattle, Australian	33	15	18	24	21	0	0	0	0	0	0	0	0	0	0	0
Nelson City	2015	DOG	Chihuahua, Long Coat	17	9	8	12	17	0	0	0	0	0	0	0	0	0	0	0
Nelson City	2015	DOG	Chihuahua, Smooth Coat	40	28	12	21	38	0	0	0	0	0	0	0	0	0	0	0
Nelson City	2015	DOG	Collie, Bearded	21	12	9	16	15	0	0	0	0	0	0	0	0	0	0	0
Nelson City	2015	DOG	Collie, Border	186	92	94	116	119	1	0	0	0	0	0	0	0	0	0	0
Nelson City	2015	DOG	Collie, Rough	4	2	2	2	2	0	0	0	0	0	0	0	0	0	0	0
Nelson City	2015	DOG	Collie, Smooth	5	3	2	4	3	0	0	0	0	0	0	0	0	0	0	0
Nelson City	2015	DOG	Greyhound	20	8	12	18	20	0	0	0	0	0	0	0	0	0	0	0
Nelson City	2015	DOG	Heading	19	10	9	7	8	0	0	0	0	0	0	0	0	0	0	0
Nelson City	2015	DOG	Huntaway	46	16	30	19	23	1	0	0	0	0	0	0	0	0	0	0
Nelson City	2015	DOG	Maltese	43	19	24	30	34	0	0	0	0	0	0	0	0	0	0	0
Nelson City	2015	DOG	Poodle, Miniature	34	18	16	21	28	0	0	0	0	0	0	0	0	0	0	0
Nelson City	2015	DOG	Poodle, Toy	32	18	14	21	22	0	0	0	0	0	0	0	0	0	0	0
Nelson City	2015	DOG	Retriever, Golden	95	50	45	59	69	0	0	0	0	0	0	0	0	0	0	0
Nelson City	2015	DOG	Retriever, Labrador	277	128	149	187	197	0	0	0	0	0	0	0	0	0	0	0
Nelson City	2015	DOG	Rottweiler	40	21	19	12	36	0	0	0	0	0	0	0	0	0	0	0
Nelson City	2015	DOG	Schnauzer, Miniature	88	42	46	62	74	0	0	0	0	0	0	0	0	0	0	0
Nelson City	2015	DOG	Shepherd, German	70	31	39	33	57	0	2	0	0	0	0	0	0	0	0	0
Nelson City	2015	DOG	Shih Tzu	42	20	22	27	40	0	0	0	0	0	0	0	0	0	0	0
Nelson City	2015	DOG	Spaniel, Cavalier King Charles	45	24	21	32	35	0	0	0	0	0	0	0	0	0	0	0
Nelson City	2015	DOG	Spaniel, Cocker	77	32	45	45	67	0	0	0	0	0	0	0	0	0	0	0
Nelson City	2015	DOG	Spaniel, English Springer	33	14	19	21	27	0	0	0	0	0	0	0	0	0	0	0
Nelson City	2015	DOG	Terrier, American Pit Bull	31	13	18	27	29	27	4	0	0	0	0	0	0	0	0	0
Nelson City	2015	DOG	Terrier, Fox (Smooth)	78	34	44	57	44	0	0	0	0	0	0	0	0	0	0	0
Nelson City	2015	DOG	Terrier, Jack Russell	236	110	126	175	150	1	0	0	0	0	0	0	0	0	0	0
Nelson City	2015	DOG	Terrier, Staffordshire Bull	141	73	68	80	120	0	0	0	0	0	0	0	0	0	0	0
Nelson City	2015	DOG	Terrier, West Highland White	60	36	24	40	48	0	0	0	0	0	0	0	0	0	0	0
Nelson City	2015	DOG	_Unidentified_	895	449	446	531	697	6	1	0	0	0	0	0	0	0	0	0
Nelson City	2015	OWN	_	0	0	0	0	0	0	0	1	2	4466	61	0	0	0	0	0
Nelson City	2015	JST	_	0	0	0	0	0	0	0	0	0	0	0	6	2	0	0	0
Nelson City	2015	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	148	20025	25874
Nelson City	2016	DOG	_ALL-PURE_	2740	1354	1386	1663	2238	33	9	0	0	0	0	0	0	0	0	0
Nelson City	2016	DOG	_ALL-CROSS_	2424	1272	1152	1481	2085	31	5	0	0	0	0	0	0	0	0	0
Nelson City	2016	DOG	_ALL-DOGS_	5164	2626	2538	3144	4323	64	14	0	0	0	0	0	0	0	0	0
Nelson City	2016	DOG	Beagle	38	20	18	29	31	0	0	0	0	0	0	0	0	0	0	0
Nelson City	2016	DOG	Bichon Frise	113	51	62	81	98	0	0	0	0	0	0	0	0	0	0	0
Nelson City	2016	DOG	Boxer	60	35	25	40	46	0	1	0	0	0	0	0	0	0	0	0
Nelson City	2016	DOG	Cattle, Australian	33	16	17	17	21	0	0	0	0	0	0	0	0	0	0	0
Nelson City	2016	DOG	Chihuahua, Long Coat	16	10	6	13	16	0	0	0	0	0	0	0	0	0	0	0
Nelson City	2016	DOG	Chihuahua, Smooth Coat	43	27	16	25	41	0	0	0	0	0	0	0	0	0	0	0
Nelson City	2016	DOG	Collie, Bearded	25	18	7	15	19	0	0	0	0	0	0	0	0	0	0	0
Nelson City	2016	DOG	Collie, Border	180	92	88	103	136	0	0	0	0	0	0	0	0	0	0	0
Nelson City	2016	DOG	Collie, Rough	3	2	1	2	2	0	0	0	0	0	0	0	0	0	0	0
Nelson City	2016	DOG	Collie, Smooth	3	1	2	3	2	0	0	0	0	0	0	0	0	0	0	0
Nelson City	2016	DOG	Greyhound	24	9	15	23	24	0	0	0	0	0	0	0	0	0	0	0
Nelson City	2016	DOG	Heading	16	8	8	7	8	0	0	0	0	0	0	0	0	0	0	0
Nelson City	2016	DOG	Huntaway	48	18	30	20	27	0	0	0	0	0	0	0	0	0	0	0
Nelson City	2016	DOG	Maltese	38	17	21	25	33	0	0	0	0	0	0	0	0	0	0	0
Nelson City	2016	DOG	Poodle, Miniature	38	21	17	25	32	0	0	0	0	0	0	0	0	0	0	0
Nelson City	2016	DOG	Poodle, Toy	27	15	12	21	22	0	0	0	0	0	0	0	0	0	0	0
Nelson City	2016	DOG	Retriever, Golden	86	45	41	54	70	0	0	0	0	0	0	0	0	0	0	0
Nelson City	2016	DOG	Retriever, Labrador	248	114	134	142	193	0	0	0	0	0	0	0	0	0	0	0
Nelson City	2016	DOG	Rottweiler	49	21	28	14	45	1	2	0	0	0	0	0	0	0	0	0
Nelson City	2016	DOG	Schnauzer, Miniature	84	44	40	55	74	0	0	0	0	0	0	0	0	0	0	0
Nelson City	2016	DOG	Shepherd, German	64	29	35	32	50	1	2	0	0	0	0	0	0	0	0	0
Nelson City	2016	DOG	Shih Tzu	46	23	23	28	43	0	0	0	0	0	0	0	0	0	0	0
Nelson City	2016	DOG	Spaniel, Cavalier King Charles	46	24	22	32	41	0	0	0	0	0	0	0	0	0	0	0
Nelson City	2016	DOG	Spaniel, Cocker	65	24	41	39	58	0	0	0	0	0	0	0	0	0	0	0
Nelson City	2016	DOG	Spaniel, English Springer	30	13	17	20	26	0	0	0	0	0	0	0	0	0	0	0
Nelson City	2016	DOG	Terrier, American Pit Bull	27	14	13	26	26	23	3	0	0	0	0	0	0	0	0	0
Nelson City	2016	DOG	Terrier, Fox (Smooth)	76	32	44	54	56	0	0	0	0	0	0	0	0	0	0	0
Nelson City	2016	DOG	Terrier, Jack Russell	205	94	111	142	141	1	0	0	0	0	0	0	0	0	0	0
Nelson City	2016	DOG	Terrier, Staffordshire Bull	145	76	69	80	126	1	0	0	0	0	0	0	0	0	0	0
Nelson City	2016	DOG	Terrier, West Highland White	47	31	16	31	40	0	0	0	0	0	0	0	0	0	0	0
Nelson City	2016	DOG	_Unidentified_	817	410	407	465	691	6	1	0	0	0	0	0	0	0	0	0
Nelson City	2016	OWN	_	0	0	0	0	0	0	0	0	2	4183	74	0	0	0	0	0
New Plymouth District	2001	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	50	8084	0
New Plymouth District	2002	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	50	18075	0
New Plymouth District	2003	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	47	6908	0
New Plymouth District	2004	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	175	19546	0
New Plymouth District	2005	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	190	104916	0
New Plymouth District	2006	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	193	38942	24664
New Plymouth District	2007	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	206	28651	41573
New Plymouth District	2008	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	196	62308	83513
New Plymouth District	2009	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	187	55146	87348
New Plymouth District	2010	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	233	60257	43728
New Plymouth District	2011	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	219	42563	47805
New Plymouth District	2012	JST	_	0	0	0	0	0	0	0	0	0	0	0	8	1	0	0	0
New Plymouth District	2012	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	249	50733	75774
New Plymouth District	2013	DOG	_ALL-PURE_	6272	3131	3141	3882	3279	140	15	0	0	0	0	0	0	0	0	0
New Plymouth District	2013	DOG	_ALL-CROSS_	3721	1834	1887	2719	2184	93	10	0	0	0	0	0	0	0	0	0
New Plymouth District	2013	DOG	_ALL-DOGS_	9993	4965	5028	6601	5463	233	25	0	0	0	0	0	0	0	0	0
New Plymouth District	2013	DOG	Beagle	49	29	20	37	30	0	0	0	0	0	0	0	0	0	0	0
New Plymouth District	2013	DOG	Bichon Frise	187	86	101	149	128	0	0	0	0	0	0	0	0	0	0	0
New Plymouth District	2013	DOG	Boxer	155	78	77	109	94	0	2	0	0	0	0	0	0	0	0	0
New Plymouth District	2013	DOG	Cattle, Australian	96	59	37	57	31	2	0	0	0	0	0	0	0	0	0	0
New Plymouth District	2013	DOG	Chihuahua, Long Coat	37	20	17	28	23	0	0	0	0	0	0	0	0	0	0	0
New Plymouth District	2013	DOG	Chihuahua, Smooth Coat	61	26	35	36	23	0	0	0	0	0	0	0	0	0	0	0
New Plymouth District	2013	DOG	Collie, Bearded	36	19	17	17	15	0	0	0	0	0	0	0	0	0	0	0
New Plymouth District	2013	DOG	Collie, Border	339	178	161	192	154	2	0	0	0	0	0	0	0	0	0	0
New Plymouth District	2013	DOG	Collie, Rough	12	7	5	11	6	0	0	0	0	0	0	0	0	0	0	0
New Plymouth District	2013	DOG	Collie, Smooth	1	1	0	1	0	0	0	0	0	0	0	0	0	0	0	0
New Plymouth District	2013	DOG	Greyhound	35	16	19	28	26	0	0	0	0	0	0	0	0	0	0	0
New Plymouth District	2013	DOG	Heading	316	172	144	37	18	0	0	0	0	0	0	0	0	0	0	0
New Plymouth District	2013	DOG	Huntaway	325	156	169	61	37	1	0	0	0	0	0	0	0	0	0	0
New Plymouth District	2013	DOG	Maltese	96	44	52	77	74	0	0	0	0	0	0	0	0	0	0	0
New Plymouth District	2013	DOG	Poodle, Miniature	118	58	60	95	59	0	0	0	0	0	0	0	0	0	0	0
New Plymouth District	2013	DOG	Poodle, Toy	92	42	50	75	54	0	0	0	0	0	0	0	0	0	0	0
New Plymouth District	2013	DOG	Retriever, Golden	194	97	97	127	105	0	0	0	0	0	0	0	0	0	0	0
New Plymouth District	2013	DOG	Retriever, Labrador	793	386	407	565	456	1	0	0	0	0	0	0	0	0	0	0
New Plymouth District	2013	DOG	Rottweiler	150	68	82	85	109	3	0	0	0	0	0	0	0	0	0	0
New Plymouth District	2013	DOG	Schnauzer, Miniature	104	46	58	72	84	0	0	0	0	0	0	0	0	0	0	0
New Plymouth District	2013	DOG	Shepherd, German	226	119	107	147	119	7	1	0	0	0	0	0	0	0	0	0
New Plymouth District	2013	DOG	Shih Tzu	81	38	43	59	70	0	0	0	0	0	0	0	0	0	0	0
New Plymouth District	2013	DOG	Spaniel, Cavalier King Charles	85	46	39	68	55	0	0	0	0	0	0	0	0	0	0	0
New Plymouth District	2013	DOG	Spaniel, Cocker	54	27	27	41	33	1	0	0	0	0	0	0	0	0	0	0
New Plymouth District	2013	DOG	Spaniel, English Springer	25	17	8	15	9	1	0	0	0	0	0	0	0	0	0	0
New Plymouth District	2013	DOG	Terrier, American Pit Bull	104	52	52	50	91	99	5	0	0	0	0	0	0	0	0	0
New Plymouth District	2013	DOG	Terrier, Fox (Smooth)	315	164	151	230	122	1	0	0	0	0	0	0	0	0	0	0
New Plymouth District	2013	DOG	Terrier, Jack Russell	304	153	151	233	150	0	0	0	0	0	0	0	0	0	0	0
New Plymouth District	2013	DOG	Terrier, Staffordshire Bull	233	106	127	126	159	6	1	0	0	0	0	0	0	0	0	0
New Plymouth District	2013	DOG	Terrier, West Highland White	58	29	29	46	30	0	0	0	0	0	0	0	0	0	0	0
New Plymouth District	2013	DOG	_Unidentified_	1591	792	799	1008	915	16	6	0	0	0	0	0	0	0	0	0
New Plymouth District	2013	OWN	_	0	0	0	0	0	0	0	0	0	7632	135	0	0	0	0	0
New Plymouth District	2013	JST	_	0	0	0	0	0	0	0	0	0	0	0	6	2	0	0	0
New Plymouth District	2013	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	256	60158	43651
New Plymouth District	2014	DOG	_ALL-PURE_	5015	2488	2527	3124	2860	118	14	0	0	0	0	0	0	0	0	0
New Plymouth District	2014	DOG	_ALL-CROSS_	3187	1554	1633	2297	2027	101	13	0	0	0	0	0	0	0	0	0
New Plymouth District	2014	DOG	_ALL-DOGS_	8202	4042	4160	5421	4887	219	27	0	0	0	0	0	0	0	0	0
New Plymouth District	2014	DOG	Beagle	34	21	13	24	22	0	0	0	0	0	0	0	0	0	0	0
New Plymouth District	2014	DOG	Bichon Frise	155	79	76	125	118	0	0	0	0	0	0	0	0	0	0	0
New Plymouth District	2014	DOG	Boxer	110	51	59	69	75	0	2	0	0	0	0	0	0	0	0	0
New Plymouth District	2014	DOG	Cattle, Australian	80	45	35	47	29	2	0	0	0	0	0	0	0	0	0	0
New Plymouth District	2014	DOG	Chihuahua, Long Coat	36	18	18	24	21	0	0	0	0	0	0	0	0	0	0	0
New Plymouth District	2014	DOG	Chihuahua, Smooth Coat	49	22	27	29	21	0	0	0	0	0	0	0	0	0	0	0
New Plymouth District	2014	DOG	Collie, Bearded	28	15	13	15	17	0	0	0	0	0	0	0	0	0	0	0
New Plymouth District	2014	DOG	Collie, Border	271	143	128	169	138	0	0	0	0	0	0	0	0	0	0	0
New Plymouth District	2014	DOG	Collie, Rough	12	8	4	9	5	0	0	0	0	0	0	0	0	0	0	0
New Plymouth District	2014	DOG	Collie, Smooth	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
New Plymouth District	2014	DOG	Greyhound	24	12	12	16	18	0	0	0	0	0	0	0	0	0	0	0
New Plymouth District	2014	DOG	Heading	234	122	112	32	20	0	0	0	0	0	0	0	0	0	0	0
New Plymouth District	2014	DOG	Huntaway	244	119	125	57	30	0	0	0	0	0	0	0	0	0	0	0
New Plymouth District	2014	DOG	Maltese	87	42	45	65	69	0	0	0	0	0	0	0	0	0	0	0
New Plymouth District	2014	DOG	Poodle, Miniature	89	43	46	78	49	0	0	0	0	0	0	0	0	0	0	0
New Plymouth District	2014	DOG	Poodle, Toy	70	35	35	59	44	0	0	0	0	0	0	0	0	0	0	0
New Plymouth District	2014	DOG	Retriever, Golden	120	57	63	82	68	0	0	0	0	0	0	0	0	0	0	0
New Plymouth District	2014	DOG	Retriever, Labrador	660	324	336	470	416	0	0	0	0	0	0	0	0	0	0	0
New Plymouth District	2014	DOG	Rottweiler	125	54	71	74	101	1	0	0	0	0	0	0	0	0	0	0
New Plymouth District	2014	DOG	Schnauzer, Miniature	85	33	52	67	68	0	0	0	0	0	0	0	0	0	0	0
New Plymouth District	2014	DOG	Shepherd, German	180	91	89	113	104	2	1	0	0	0	0	0	0	0	0	0
New Plymouth District	2014	DOG	Shih Tzu	76	35	41	56	64	0	0	0	0	0	0	0	0	0	0	0
New Plymouth District	2014	DOG	Spaniel, Cavalier King Charles	76	41	35	63	54	0	0	0	0	0	0	0	0	0	0	0
New Plymouth District	2014	DOG	Spaniel, Cocker	44	24	20	30	26	1	0	0	0	0	0	0	0	0	0	0
New Plymouth District	2014	DOG	Spaniel, English Springer	23	15	8	12	12	1	0	0	0	0	0	0	0	0	0	0
New Plymouth District	2014	DOG	Terrier, American Pit Bull	94	43	51	48	83	89	5	0	0	0	0	0	0	0	0	0
New Plymouth District	2014	DOG	Terrier, Fox (Smooth)	219	115	104	170	103	1	0	0	0	0	0	0	0	0	0	0
New Plymouth District	2014	DOG	Terrier, Jack Russell	229	117	112	169	119	1	0	0	0	0	0	0	0	0	0	0
New Plymouth District	2014	DOG	Terrier, Staffordshire Bull	208	99	109	107	143	6	1	0	0	0	0	0	0	0	0	0
New Plymouth District	2014	DOG	Terrier, West Highland White	39	21	18	30	22	0	0	0	0	0	0	0	0	0	0	0
New Plymouth District	2014	DOG	_Unidentified_	1314	644	670	815	801	14	5	0	0	0	0	0	0	0	0	0
New Plymouth District	2014	OWN	_	0	0	0	0	0	0	0	0	0	6297	136	0	0	0	0	0
New Plymouth District	2014	JST	_	0	0	0	0	0	0	0	0	0	0	0	2	0	0	0	0
New Plymouth District	2014	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	207	40364	59971
New Plymouth District	2015	DOG	_ALL-PURE_	6386	3164	3222	3992	3869	130	20	0	0	0	0	0	0	0	0	0
New Plymouth District	2015	DOG	_ALL-CROSS_	4001	1982	2019	2961	2690	117	16	0	0	0	0	0	0	0	0	0
New Plymouth District	2015	DOG	_ALL-DOGS_	10387	5146	5241	6953	6559	247	36	0	0	0	0	0	0	0	0	0
New Plymouth District	2015	DOG	Beagle	37	23	14	27	27	0	0	0	0	0	0	0	0	0	0	0
New Plymouth District	2015	DOG	Bichon Frise	193	95	98	162	143	0	0	0	0	0	0	0	0	0	0	0
New Plymouth District	2015	DOG	Boxer	128	61	67	90	88	1	2	0	0	0	0	0	0	0	0	0
New Plymouth District	2015	DOG	Cattle, Australian	83	49	34	52	37	1	1	0	0	0	0	0	0	0	0	0
New Plymouth District	2015	DOG	Chihuahua, Long Coat	47	25	22	34	32	0	0	0	0	0	0	0	0	0	0	0
New Plymouth District	2015	DOG	Chihuahua, Smooth Coat	76	37	39	49	40	1	0	0	0	0	0	0	0	0	0	0
New Plymouth District	2015	DOG	Collie, Bearded	41	22	19	22	20	1	0	0	0	0	0	0	0	0	0	0
New Plymouth District	2015	DOG	Collie, Border	358	186	172	215	191	0	0	0	0	0	0	0	0	0	0	0
New Plymouth District	2015	DOG	Collie, Rough	16	12	4	8	8	0	0	0	0	0	0	0	0	0	0	0
New Plymouth District	2015	DOG	Collie, Smooth	3	2	1	1	1	0	0	0	0	0	0	0	0	0	0	0
New Plymouth District	2015	DOG	Greyhound	36	21	15	28	23	0	0	0	0	0	0	0	0	0	0	0
New Plymouth District	2015	DOG	Heading	282	143	139	39	24	0	0	0	0	0	0	0	0	0	0	0
New Plymouth District	2015	DOG	Huntaway	336	169	167	81	49	0	0	0	0	0	0	0	0	0	0	0
New Plymouth District	2015	DOG	Maltese	120	54	66	96	99	0	0	0	0	0	0	0	0	0	0	0
New Plymouth District	2015	DOG	Poodle, Miniature	99	45	54	88	59	0	0	0	0	0	0	0	0	0	0	0
New Plymouth District	2015	DOG	Poodle, Toy	86	44	42	75	54	0	0	0	0	0	0	0	0	0	0	0
New Plymouth District	2015	DOG	Retriever, Golden	177	86	91	117	112	0	0	0	0	0	0	0	0	0	0	0
New Plymouth District	2015	DOG	Retriever, Labrador	799	380	419	569	537	1	0	0	0	0	0	0	0	0	0	0
New Plymouth District	2015	DOG	Rottweiler	144	59	85	84	117	2	0	0	0	0	0	0	0	0	0	0
New Plymouth District	2015	DOG	Schnauzer, Miniature	137	62	75	102	109	0	0	0	0	0	0	0	0	0	0	0
New Plymouth District	2015	DOG	Shepherd, German	209	110	99	128	140	6	2	0	0	0	0	0	0	0	0	0
New Plymouth District	2015	DOG	Shih Tzu	114	52	62	86	95	0	0	0	0	0	0	0	0	0	0	0
New Plymouth District	2015	DOG	Spaniel, Cavalier King Charles	95	54	41	79	70	0	0	0	0	0	0	0	0	0	0	0
New Plymouth District	2015	DOG	Spaniel, Cocker	58	31	27	40	42	1	0	0	0	0	0	0	0	0	0	0
New Plymouth District	2015	DOG	Spaniel, English Springer	27	16	11	13	18	1	0	0	0	0	0	0	0	0	0	0
New Plymouth District	2015	DOG	Terrier, American Pit Bull	97	50	47	53	82	91	6	0	0	0	0	0	0	0	0	0
New Plymouth District	2015	DOG	Terrier, Fox (Smooth)	267	139	128	202	136	1	0	0	0	0	0	0	0	0	0	0
New Plymouth District	2015	DOG	Terrier, Jack Russell	301	152	149	219	169	1	1	0	0	0	0	0	0	0	0	0
New Plymouth District	2015	DOG	Terrier, Staffordshire Bull	285	136	149	152	219	7	3	0	0	0	0	0	0	0	0	0
New Plymouth District	2015	DOG	Terrier, West Highland White	61	27	34	49	40	0	0	0	0	0	0	0	0	0	0	0
New Plymouth District	2015	DOG	_Unidentified_	1674	822	852	1032	1088	15	5	0	0	0	0	0	0	0	0	0
New Plymouth District	2015	OWN	_	0	0	0	0	0	0	0	0	0	8022	125	0	0	0	0	0
New Plymouth District	2015	JST	_	0	0	0	0	0	0	0	0	0	0	0	6	2	0	0	0
New Plymouth District	2015	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	217	37070	58428
New Plymouth District	2016	DOG	_ALL-PURE_	5655	2763	2892	3619	3720	124	19	0	0	0	0	0	0	0	0	0
New Plymouth District	2016	DOG	_ALL-CROSS_	3654	1803	1851	2756	2606	102	17	0	0	0	0	0	0	0	0	0
New Plymouth District	2016	DOG	_ALL-DOGS_	9309	4566	4743	6375	6326	226	36	0	0	0	0	0	0	0	0	0
New Plymouth District	2016	DOG	Beagle	28	17	11	24	25	0	0	0	0	0	0	0	0	0	0	0
New Plymouth District	2016	DOG	Bichon Frise	177	87	90	145	133	0	2	0	0	0	0	0	0	0	0	0
New Plymouth District	2016	DOG	Boxer	107	47	60	76	83	1	3	0	0	0	0	0	0	0	0	0
New Plymouth District	2016	DOG	Cattle, Australian	76	44	32	50	36	2	1	0	0	0	0	0	0	0	0	0
New Plymouth District	2016	DOG	Chihuahua, Long Coat	49	25	24	35	36	0	0	0	0	0	0	0	0	0	0	0
New Plymouth District	2016	DOG	Chihuahua, Smooth Coat	67	32	35	41	44	1	0	0	0	0	0	0	0	0	0	0
New Plymouth District	2016	DOG	Collie, Bearded	36	19	17	18	16	1	0	0	0	0	0	0	0	0	0	0
New Plymouth District	2016	DOG	Collie, Border	315	155	160	200	184	1	1	0	0	0	0	0	0	0	0	0
New Plymouth District	2016	DOG	Collie, Rough	12	10	2	8	7	0	0	0	0	0	0	0	0	0	0	0
New Plymouth District	2016	DOG	Collie, Smooth	4	3	1	2	1	0	0	0	0	0	0	0	0	0	0	0
New Plymouth District	2016	DOG	Greyhound	42	25	17	38	33	0	0	0	0	0	0	0	0	0	0	0
New Plymouth District	2016	DOG	Heading	229	110	119	37	24	0	0	0	0	0	0	0	0	0	0	0
New Plymouth District	2016	DOG	Huntaway	251	119	132	67	40	0	0	0	0	0	0	0	0	0	0	0
New Plymouth District	2016	DOG	Maltese	119	54	65	91	97	0	0	0	0	0	0	0	0	0	0	0
New Plymouth District	2016	DOG	Poodle, Miniature	82	36	46	71	51	0	0	0	0	0	0	0	0	0	0	0
New Plymouth District	2016	DOG	Poodle, Toy	77	40	37	68	54	0	0	0	0	0	0	0	0	0	0	0
New Plymouth District	2016	DOG	Retriever, Golden	153	71	82	112	108	1	0	0	0	0	0	0	0	0	0	0
New Plymouth District	2016	DOG	Retriever, Labrador	697	331	366	506	506	3	0	0	0	0	0	0	0	0	0	0
New Plymouth District	2016	DOG	Rottweiler	138	55	83	75	114	3	0	0	0	0	0	0	0	0	0	0
New Plymouth District	2016	DOG	Schnauzer, Miniature	123	57	66	82	103	0	0	0	0	0	0	0	0	0	0	0
New Plymouth District	2016	DOG	Shepherd, German	174	82	92	104	127	5	1	0	0	0	0	0	0	0	0	0
New Plymouth District	2016	DOG	Shih Tzu	120	63	57	92	102	0	0	0	0	0	0	0	0	0	0	0
New Plymouth District	2016	DOG	Spaniel, Cavalier King Charles	80	42	38	70	61	0	0	0	0	0	0	0	0	0	0	0
New Plymouth District	2016	DOG	Spaniel, Cocker	49	29	20	33	39	1	0	0	0	0	0	0	0	0	0	0
New Plymouth District	2016	DOG	Spaniel, English Springer	26	15	11	16	18	1	0	0	0	0	0	0	0	0	0	0
New Plymouth District	2016	DOG	Terrier, American Pit Bull	76	39	37	42	61	71	5	0	0	0	0	0	0	0	0	0
New Plymouth District	2016	DOG	Terrier, Fox (Smooth)	224	123	101	178	135	1	0	0	0	0	0	0	0	0	0	0
New Plymouth District	2016	DOG	Terrier, Jack Russell	258	129	129	202	163	1	1	0	0	0	0	0	0	0	0	0
New Plymouth District	2016	DOG	Terrier, Staffordshire Bull	281	141	140	142	219	11	1	0	0	0	0	0	0	0	0	0
New Plymouth District	2016	DOG	Terrier, West Highland White	54	26	28	44	42	0	0	0	0	0	0	0	0	0	0	0
New Plymouth District	2016	DOG	_Unidentified_	1531	737	794	950	1058	20	4	0	0	0	0	0	0	0	0	0
New Plymouth District	2016	OWN	_	0	0	0	0	0	0	0	0	0	7307	117	0	0	0	0	0
New Zealand	2001	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	8353	1402635	0
New Zealand	2002	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	8196	1369521	0
New Zealand	2003	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	7995	1442139	0
New Zealand	2004	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	9452	1645512	0
New Zealand	2005	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	9764	1789540	0
New Zealand	2006	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	10494	2301189	2056062
New Zealand	2007	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	10680	2425487	2508835
New Zealand	2008	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	10458	3211683	2881933
New Zealand	2009	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	10748	2848689	3401933
New Zealand	2010	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	11158	2734590	3072520
New Zealand	2011	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	11867	2689090	2968478
New Zealand	2012	JST	_	0	0	0	0	0	0	0	0	0	0	0	603	83	0	0	0
New Zealand	2012	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	11922	3160134	2978828
New Zealand	2013	DOG	_ALL-PURE_	357875	177087	180788	159141	169448	3771	294	0	0	0	0	0	0	0	0	0
New Zealand	2013	DOG	_ALL-CROSS_	178112	89419	88693	103042	110490	4258	296	0	0	0	0	0	0	0	0	0
New Zealand	2013	DOG	_ALL-DOGS_	535987	266506	269481	262183	279938	8029	590	0	0	0	0	0	0	0	0	0
New Zealand	2013	DOG	Beagle	2915	1492	1423	1994	1984	2	0	0	0	0	0	0	0	0	0	0
New Zealand	2013	DOG	Bichon Frise	8811	4288	4523	5518	5617	8	2	0	0	0	0	0	0	0	0	0
New Zealand	2013	DOG	Boxer	5741	2819	2922	3420	3574	32	13	0	0	0	0	0	0	0	0	0
New Zealand	2013	DOG	Cattle, Australian	4632	2297	2335	1771	1564	22	4	0	0	0	0	0	0	0	0	0
New Zealand	2013	DOG	Chihuahua, Long Coat	2984	1509	1475	1492	1903	1	1	0	0	0	0	0	0	0	0	0
New Zealand	2013	DOG	Chihuahua, Smooth Coat	3378	1716	1662	1713	2103	2	1	0	0	0	0	0	0	0	0	0
New Zealand	2013	DOG	Collie, Bearded	2803	1338	1465	805	661	1	2	0	0	0	0	0	0	0	0	0
New Zealand	2013	DOG	Collie, Border	24177	12310	11867	8887	7915	53	12	0	0	0	0	0	0	0	0	0
New Zealand	2013	DOG	Collie, Rough	2808	1294	1514	415	429	3	0	0	0	0	0	0	0	0	0	0
New Zealand	2013	DOG	Collie, Smooth	9985	4660	5325	295	258	4	0	0	0	0	0	0	0	0	0	0
New Zealand	2013	DOG	Greyhound	3436	1747	1689	1020	1895	11	1	0	0	0	0	0	0	0	0	0
New Zealand	2013	DOG	Heading	17359	8972	8387	884	743	1	0	0	0	0	0	0	0	0	0	0
New Zealand	2013	DOG	Huntaway	32593	14739	17854	3310	2321	15	2	0	0	0	0	0	0	0	0	0
New Zealand	2013	DOG	Maltese	3594	1763	1831	1957	2483	4	0	0	0	0	0	0	0	0	0	0
New Zealand	2013	DOG	Poodle, Miniature	3210	1533	1677	2200	1862	0	0	0	0	0	0	0	0	0	0	0
New Zealand	2013	DOG	Poodle, Toy	3403	1720	1683	2058	2170	0	0	0	0	0	0	0	0	0	0	0
New Zealand	2013	DOG	Retriever, Golden	9458	4665	4793	5490	5313	8	2	0	0	0	0	0	0	0	0	0
New Zealand	2013	DOG	Retriever, Labrador	43167	21713	21454	22671	24319	83	15	0	0	0	0	0	0	0	0	0
New Zealand	2013	DOG	Rottweiler	6809	3320	3489	2784	4575	105	31	0	0	0	0	0	0	0	0	0
New Zealand	2013	DOG	Schnauzer, Miniature	5010	2471	2539	3103	3839	0	0	0	0	0	0	0	0	0	0	0
New Zealand	2013	DOG	Shepherd, German	12301	6257	6044	6039	7330	138	41	0	0	0	0	0	0	0	0	0
New Zealand	2013	DOG	Shih Tzu	3966	1895	2071	2269	2957	0	0	0	0	0	0	0	0	0	0	0
New Zealand	2013	DOG	Spaniel, Cavalier King Charles	2997	1461	1536	1829	1937	0	0	0	0	0	0	0	0	0	0	0
New Zealand	2013	DOG	Spaniel, Cocker	5304	2659	2645	3218	3244	4	0	0	0	0	0	0	0	0	0	0
New Zealand	2013	DOG	Spaniel, English Springer	3071	1562	1509	1447	1749	8	1	0	0	0	0	0	0	0	0	0
New Zealand	2013	DOG	Terrier, American Pit Bull	2970	1334	1636	1673	2431	2611	56	0	0	0	0	0	0	0	0	0
New Zealand	2013	DOG	Terrier, Fox (Smooth)	17995	9477	8518	10408	8319	38	2	0	0	0	0	0	0	0	0	0
New Zealand	2013	DOG	Terrier, Jack Russell	19656	9666	9990	11374	9763	38	4	0	0	0	0	0	0	0	0	0
New Zealand	2013	DOG	Terrier, Staffordshire Bull	8623	4509	4114	4326	5635	86	18	0	0	0	0	0	0	0	0	0
New Zealand	2013	DOG	Terrier, West Highland White	3358	1677	1681	2221	2059	6	0	0	0	0	0	0	0	0	0	0
New Zealand	2013	DOG	_Unidentified_	81361	40224	41137	42550	48496	487	86	0	0	0	0	0	0	0	0	0
New Zealand	2013	OWN	_	0	0	0	0	0	0	0	111	176	385631	7932	0	0	0	0	0
New Zealand	2013	JST	_	0	0	0	0	0	0	0	0	0	0	0	525	61	0	0	0
New Zealand	2013	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	12478	3041074	3283640
New Zealand	2014	DOG	_ALL-PURE_	348085	172133	175952	160333	181535	3782	270	0	0	0	0	0	0	0	0	0
New Zealand	2014	DOG	_ALL-CROSS_	183073	91818	91255	109553	122774	4443	278	0	0	0	0	0	0	0	0	0
New Zealand	2014	DOG	_ALL-DOGS_	531158	263951	267207	269886	304309	8225	548	0	0	0	0	0	0	0	0	0
New Zealand	2014	DOG	Beagle	2866	1464	1402	2003	2055	2	0	0	0	0	0	0	0	0	0	0
New Zealand	2014	DOG	Bichon Frise	8513	4086	4427	5483	5801	8	1	0	0	0	0	0	0	0	0	0
New Zealand	2014	DOG	Boxer	5377	2650	2727	3313	3665	34	11	0	0	0	0	0	0	0	0	0
New Zealand	2014	DOG	Cattle, Australian	4362	2170	2192	1716	1661	27	1	0	0	0	0	0	0	0	0	0
New Zealand	2014	DOG	Chihuahua, Long Coat	3025	1520	1505	1622	2072	1	1	0	0	0	0	0	0	0	0	0
New Zealand	2014	DOG	Chihuahua, Smooth Coat	3389	1696	1693	1775	2216	1	1	0	0	0	0	0	0	0	0	0
New Zealand	2014	DOG	Collie, Bearded	2627	1205	1422	795	717	1	3	0	0	0	0	0	0	0	0	0
New Zealand	2014	DOG	Collie, Border	23190	11829	11361	8941	8529	44	7	0	0	0	0	0	0	0	0	0
New Zealand	2014	DOG	Collie, Rough	1977	920	1057	419	487	2	0	0	0	0	0	0	0	0	0	0
New Zealand	2014	DOG	Collie, Smooth	9131	4288	4843	304	275	4	0	0	0	0	0	0	0	0	0	0
New Zealand	2014	DOG	Greyhound	3875	1954	1921	1187	2762	11	0	0	0	0	0	0	0	0	0	0
New Zealand	2014	DOG	Heading	17054	8801	8253	908	824	0	0	0	0	0	0	0	0	0	0	0
New Zealand	2014	DOG	Huntaway	31385	14238	17147	3345	2513	14	4	0	0	0	0	0	0	0	0	0
New Zealand	2014	DOG	Maltese	3715	1826	1889	2146	2722	4	0	0	0	0	0	0	0	0	0	0
New Zealand	2014	DOG	Poodle, Miniature	3124	1510	1614	2174	1977	0	0	0	0	0	0	0	0	0	0	0
New Zealand	2014	DOG	Poodle, Toy	3402	1729	1673	2161	2297	0	0	0	0	0	0	0	0	0	0	0
New Zealand	2014	DOG	Retriever, Golden	8979	4464	4515	5393	5597	6	2	0	0	0	0	0	0	0	0	0
New Zealand	2014	DOG	Retriever, Labrador	41670	20900	20770	22551	25777	79	11	0	0	0	0	0	0	0	0	0
New Zealand	2014	DOG	Rottweiler	6693	3269	3424	2760	4808	113	27	0	0	0	0	0	0	0	0	0
New Zealand	2014	DOG	Schnauzer, Miniature	5530	2685	2845	3612	4429	1	0	0	0	0	0	0	0	0	0	0
New Zealand	2014	DOG	Shepherd, German	11970	6078	5892	5933	7890	135	42	0	0	0	0	0	0	0	0	0
New Zealand	2014	DOG	Shih Tzu	4290	2060	2230	2590	3322	1	1	0	0	0	0	0	0	0	0	0
New Zealand	2014	DOG	Spaniel, Cavalier King Charles	2912	1419	1493	1854	2037	0	0	0	0	0	0	0	0	0	0	0
New Zealand	2014	DOG	Spaniel, Cocker	5167	2598	2569	3193	3404	4	0	0	0	0	0	0	0	0	0	0
New Zealand	2014	DOG	Spaniel, English Springer	3020	1514	1506	1426	1885	8	0	0	0	0	0	0	0	0	0	0
New Zealand	2014	DOG	Terrier, American Pit Bull	3001	1365	1636	1736	2484	2637	58	0	0	0	0	0	0	0	0	0
New Zealand	2014	DOG	Terrier, Fox (Smooth)	16886	8899	7987	9943	8746	38	0	0	0	0	0	0	0	0	0	0
New Zealand	2014	DOG	Terrier, Jack Russell	18658	9175	9483	11015	10201	36	3	0	0	0	0	0	0	0	0	0
New Zealand	2014	DOG	Terrier, Staffordshire Bull	8830	4616	4214	4565	6166	88	18	0	0	0	0	0	0	0	0	0
New Zealand	2014	DOG	Terrier, West Highland White	3380	1693	1687	2290	2219	4	0	0	0	0	0	0	0	0	0	0
New Zealand	2014	DOG	_Unidentified_	80087	39512	40575	43180	51997	479	79	0	0	0	0	0	0	0	0	0
New Zealand	2014	OWN	_	0	0	0	0	0	0	0	79	219	386932	8517	0	0	0	0	0
New Zealand	2014	JST	_	0	0	0	0	0	0	0	0	0	0	0	554	91	0	0	0
New Zealand	2014	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	12709	3693762	3734733
New Zealand	2015	DOG	_ALL-PURE_	352771	174586	178185	163438	195786	3668	289	0	0	0	0	0	0	0	0	0
New Zealand	2015	DOG	_ALL-CROSS_	191201	95964	95237	116629	135058	4564	296	0	0	0	0	0	0	0	0	0
New Zealand	2015	DOG	_ALL-DOGS_	543972	270550	273422	280067	330844	8232	585	0	0	0	0	0	0	0	0	0
New Zealand	2015	DOG	Beagle	2792	1420	1372	1974	2069	1	0	0	0	0	0	0	0	0	0	0
New Zealand	2015	DOG	Bichon Frise	8476	4111	4365	5565	6012	6	1	0	0	0	0	0	0	0	0	0
New Zealand	2015	DOG	Boxer	5209	2562	2647	3207	3777	31	11	0	0	0	0	0	0	0	0	0
New Zealand	2015	DOG	Cattle, Australian	4288	2163	2125	1734	1783	28	3	0	0	0	0	0	0	0	0	0
New Zealand	2015	DOG	Chihuahua, Long Coat	3117	1562	1555	1703	2217	2	1	0	0	0	0	0	0	0	0	0
New Zealand	2015	DOG	Chihuahua, Smooth Coat	3617	1813	1804	1964	2493	3	1	0	0	0	0	0	0	0	0	0
New Zealand	2015	DOG	Collie, Bearded	2701	1284	1417	846	810	2	2	0	0	0	0	0	0	0	0	0
New Zealand	2015	DOG	Collie, Border	23146	11860	11286	9024	9303	47	7	0	0	0	0	0	0	0	0	0
New Zealand	2015	DOG	Collie, Rough	2206	1021	1185	395	528	2	0	0	0	0	0	0	0	0	0	0
New Zealand	2015	DOG	Collie, Smooth	8619	4029	4590	283	306	3	0	0	0	0	0	0	0	0	0	0
New Zealand	2015	DOG	Greyhound	4370	2188	2182	1432	3418	9	0	0	0	0	0	0	0	0	0	0
New Zealand	2015	DOG	Heading	18238	9344	8894	1009	1005	0	0	0	0	0	0	0	0	0	0	0
New Zealand	2015	DOG	Huntaway	32315	14602	17713	3408	2835	12	5	0	0	0	0	0	0	0	0	0
New Zealand	2015	DOG	Maltese	3831	1860	1971	2290	2901	4	0	0	0	0	0	0	0	0	0	0
New Zealand	2015	DOG	Poodle, Miniature	3148	1517	1631	2225	2113	0	0	0	0	0	0	0	0	0	0	0
New Zealand	2015	DOG	Poodle, Toy	3384	1760	1624	2212	2410	0	0	0	0	0	0	0	0	0	0	0
New Zealand	2015	DOG	Retriever, Golden	8781	4356	4425	5283	5933	7	1	0	0	0	0	0	0	0	0	0
New Zealand	2015	DOG	Retriever, Labrador	42062	21158	20904	22978	27864	70	12	0	0	0	0	0	0	0	0	0
New Zealand	2015	DOG	Rottweiler	6913	3383	3530	2867	5228	114	25	0	0	0	0	0	0	0	0	0
New Zealand	2015	DOG	Schnauzer, Miniature	6005	2909	3096	3972	4927	1	0	0	0	0	0	0	0	0	0	0
New Zealand	2015	DOG	Shepherd, German	11677	5980	5697	5845	8342	149	41	0	0	0	0	0	0	0	0	0
New Zealand	2015	DOG	Shih Tzu	4666	2233	2433	2883	3704	1	1	0	0	0	0	0	0	0	0	0
New Zealand	2015	DOG	Spaniel, Cavalier King Charles	2918	1422	1496	1891	2156	0	0	0	0	0	0	0	0	0	0	0
New Zealand	2015	DOG	Spaniel, Cocker	5107	2548	2559	3184	3572	6	0	0	0	0	0	0	0	0	0	0
New Zealand	2015	DOG	Spaniel, English Springer	3115	1561	1554	1439	2104	8	0	0	0	0	0	0	0	0	0	0
New Zealand	2015	DOG	Terrier, American Pit Bull	2782	1293	1489	1639	2286	2434	54	0	0	0	0	0	0	0	0	0
New Zealand	2015	DOG	Terrier, Fox (Smooth)	16571	8707	7864	9873	9343	41	2	0	0	0	0	0	0	0	0	0
New Zealand	2015	DOG	Terrier, Jack Russell	18602	9135	9467	11089	10967	28	4	0	0	0	0	0	0	0	0	0
New Zealand	2015	DOG	Terrier, Staffordshire Bull	9173	4783	4390	4789	6780	88	21	0	0	0	0	0	0	0	0	0
New Zealand	2015	DOG	Terrier, West Highland White	3412	1697	1715	2344	2385	5	0	0	0	0	0	0	0	0	0	0
New Zealand	2015	DOG	_Unidentified_	81530	40325	41205	44091	56215	566	97	0	0	0	0	0	0	0	0	0
New Zealand	2015	OWN	_	0	0	0	0	0	0	0	109	232	399844	8354	0	0	0	0	0
New Zealand	2015	JST	_	0	0	0	0	0	0	0	0	0	0	0	538	83	0	0	0
New Zealand	2015	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	12817	2743560	4490945
New Zealand	2016	DOG	_ALL-PURE_	352334	174169	178165	168979	211485	3528	280	0	0	0	0	0	0	0	0	0
New Zealand	2016	DOG	_ALL-CROSS_	199902	100132	99770	125992	149011	4991	323	0	0	0	0	0	0	0	0	0
New Zealand	2016	DOG	_ALL-DOGS_	552236	274301	277935	294971	360496	8519	603	0	0	0	0	0	0	0	0	0
New Zealand	2016	DOG	Beagle	2794	1423	1371	1983	2225	0	0	0	0	0	0	0	0	0	0	0
New Zealand	2016	DOG	Bichon Frise	8421	4073	4348	5852	6322	4	3	0	0	0	0	0	0	0	0	0
New Zealand	2016	DOG	Boxer	5006	2482	2524	3158	3907	28	8	0	0	0	0	0	0	0	0	0
New Zealand	2016	DOG	Cattle, Australian	4122	2076	2046	1725	1912	28	3	0	0	0	0	0	0	0	0	0
New Zealand	2016	DOG	Chihuahua, Long Coat	3270	1641	1629	1853	2473	3	1	0	0	0	0	0	0	0	0	0
New Zealand	2016	DOG	Chihuahua, Smooth Coat	3705	1871	1834	2121	2704	2	1	0	0	0	0	0	0	0	0	0
New Zealand	2016	DOG	Collie, Bearded	2753	1329	1424	889	927	2	3	0	0	0	0	0	0	0	0	0
New Zealand	2016	DOG	Collie, Border	22662	11677	10985	9334	10240	41	5	0	0	0	0	0	0	0	0	0
New Zealand	2016	DOG	Collie, Rough	1851	874	977	384	550	2	0	0	0	0	0	0	0	0	0	0
New Zealand	2016	DOG	Collie, Smooth	7875	3719	4156	284	326	4	1	0	0	0	0	0	0	0	0	0
New Zealand	2016	DOG	Greyhound	4542	2314	2228	1676	3659	7	0	0	0	0	0	0	0	0	0	0
New Zealand	2016	DOG	Heading	18328	9432	8896	1027	1098	2	0	0	0	0	0	0	0	0	0	0
New Zealand	2016	DOG	Huntaway	31548	14271	17277	3537	3155	12	3	0	0	0	0	0	0	0	0	0
New Zealand	2016	DOG	Maltese	4051	1958	2093	2564	3147	4	0	0	0	0	0	0	0	0	0	0
New Zealand	2016	DOG	Poodle, Miniature	3098	1475	1623	2247	2237	0	0	0	0	0	0	0	0	0	0	0
New Zealand	2016	DOG	Poodle, Toy	3431	1756	1675	2276	2587	0	0	0	0	0	0	0	0	0	0	0
New Zealand	2016	DOG	Retriever, Golden	8843	4332	4511	5325	6501	8	1	0	0	0	0	0	0	0	0	0
New Zealand	2016	DOG	Retriever, Labrador	41835	20875	20960	23508	29946	73	12	0	0	0	0	0	0	0	0	0
New Zealand	2016	DOG	Rottweiler	7055	3446	3609	3016	5552	116	27	0	0	0	0	0	0	0	0	0
New Zealand	2016	DOG	Schnauzer, Miniature	6615	3236	3379	4430	5614	0	0	0	0	0	0	0	0	0	0	0
New Zealand	2016	DOG	Shepherd, German	11687	5952	5735	5866	9003	138	43	0	0	0	0	0	0	0	0	0
New Zealand	2016	DOG	Shih Tzu	5129	2480	2649	3325	4202	2	0	0	0	0	0	0	0	0	0	0
New Zealand	2016	DOG	Spaniel, Cavalier King Charles	2891	1388	1503	1920	2301	0	0	0	0	0	0	0	0	0	0	0
New Zealand	2016	DOG	Spaniel, Cocker	5040	2501	2539	3245	3795	5	0	0	0	0	0	0	0	0	0	0
New Zealand	2016	DOG	Spaniel, English Springer	3134	1559	1575	1536	2297	8	0	0	0	0	0	0	0	0	0	0
New Zealand	2016	DOG	Terrier, American Pit Bull	2632	1260	1372	1647	2234	2289	52	0	0	0	0	0	0	0	0	0
New Zealand	2016	DOG	Terrier, Fox (Smooth)	15807	8326	7481	9583	9732	32	3	0	0	0	0	0	0	0	0	0
New Zealand	2016	DOG	Terrier, Jack Russell	18066	8833	9233	11212	11615	36	3	0	0	0	0	0	0	0	0	0
New Zealand	2016	DOG	Terrier, Staffordshire Bull	9554	4970	4584	5346	7517	95	16	0	0	0	0	0	0	0	0	0
New Zealand	2016	DOG	Terrier, West Highland White	3356	1686	1670	2409	2501	3	0	0	0	0	0	0	0	0	0	0
New Zealand	2016	DOG	_Unidentified_	83233	40954	42279	45701	61206	584	95	0	0	0	0	0	0	0	0	0
New Zealand	2016	OWN	_	0	0	0	0	0	0	0	69	219	414541	7574	0	0	0	0	0
North Shore City	2001	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	19	1161	0
North Shore City	2002	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	36	5512	0
North Shore City	2003	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	35	8353	0
North Shore City	2004	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	214	27452	0
North Shore City	2005	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	255	28788	0
North Shore City	2006	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	258	55811	43568
North Shore City	2007	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	310	45285	50820
North Shore City	2008	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	289	109001	79803
North Shore City	2009	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	274	49577	106415
North Shore City	2010	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	318	62555	76520
North Shore City	2011	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	245	58714	40450
North Shore City	2012	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	196	39946	48881
North Shore City	2013	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	189	57512	54454
North Shore City	2014	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	202	42531	53406
North Shore City	2015	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	160	31770	45869
Opotiki District	2001	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	10	903	0
Opotiki District	2002	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	8	967	0
Opotiki District	2003	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	11	595	0
Opotiki District	2004	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	40	7165	0
Opotiki District	2005	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	59	7257	0
Opotiki District	2006	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	47	6613	6763
Opotiki District	2007	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	56	5622	6122
Opotiki District	2008	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	57	4691	3883
Opotiki District	2009	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	57	6944	8112
Opotiki District	2010	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	71	7696	7005
Opotiki District	2011	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	49	10601	10214
Opotiki District	2012	JST	_	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Opotiki District	2012	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	57	31397	18961
Opotiki District	2013	DOG	_ALL-PURE_	802	382	420	401	322	25	1	0	0	0	0	0	0	0	0	0
Opotiki District	2013	DOG	_ALL-CROSS_	738	373	365	370	413	33	1	0	0	0	0	0	0	0	0	0
Opotiki District	2013	DOG	_ALL-DOGS_	1540	755	785	771	735	58	2	0	0	0	0	0	0	0	0	0
Opotiki District	2013	DOG	Beagle	6	4	2	3	4	0	0	0	0	0	0	0	0	0	0	0
Opotiki District	2013	DOG	Bichon Frise	20	10	10	17	11	0	0	0	0	0	0	0	0	0	0	0
Opotiki District	2013	DOG	Boxer	8	6	2	5	6	0	0	0	0	0	0	0	0	0	0	0
Opotiki District	2013	DOG	Cattle, Australian	19	4	15	5	5	0	0	0	0	0	0	0	0	0	0	0
Opotiki District	2013	DOG	Chihuahua, Long Coat	5	1	4	4	2	0	0	0	0	0	0	0	0	0	0	0
Opotiki District	2013	DOG	Chihuahua, Smooth Coat	6	4	2	3	4	0	0	0	0	0	0	0	0	0	0	0
Opotiki District	2013	DOG	Collie, Bearded	14	6	8	6	4	0	0	0	0	0	0	0	0	0	0	0
Opotiki District	2013	DOG	Collie, Border	48	23	25	19	14	0	0	0	0	0	0	0	0	0	0	0
Opotiki District	2013	DOG	Collie, Rough	2	1	1	0	1	0	0	0	0	0	0	0	0	0	0	0
Opotiki District	2013	DOG	Collie, Smooth	1	0	1	0	0	0	0	0	0	0	0	0	0	0	0	0
Opotiki District	2013	DOG	Greyhound	4	1	3	0	1	0	0	0	0	0	0	0	0	0	0	0
Opotiki District	2013	DOG	Heading	117	60	57	47	13	0	0	0	0	0	0	0	0	0	0	0
Opotiki District	2013	DOG	Huntaway	81	36	45	31	7	0	0	0	0	0	0	0	0	0	0	0
Opotiki District	2013	DOG	Maltese	8	2	6	5	5	0	0	0	0	0	0	0	0	0	0	0
Opotiki District	2013	DOG	Poodle, Miniature	6	4	2	5	6	0	0	0	0	0	0	0	0	0	0	0
Opotiki District	2013	DOG	Poodle, Toy	4	2	2	4	2	0	0	0	0	0	0	0	0	0	0	0
Opotiki District	2013	DOG	Retriever, Golden	11	7	4	7	7	0	0	0	0	0	0	0	0	0	0	0
Opotiki District	2013	DOG	Retriever, Labrador	92	37	55	45	49	1	0	0	0	0	0	0	0	0	0	0
Opotiki District	2013	DOG	Rottweiler	17	9	8	11	11	1	0	0	0	0	0	0	0	0	0	0
Opotiki District	2013	DOG	Schnauzer, Miniature	4	2	2	0	1	0	0	0	0	0	0	0	0	0	0	0
Opotiki District	2013	DOG	Shepherd, German	26	13	13	19	13	0	0	0	0	0	0	0	0	0	0	0
Opotiki District	2013	DOG	Shih Tzu	3	2	1	1	2	0	0	0	0	0	0	0	0	0	0	0
Opotiki District	2013	DOG	Spaniel, Cavalier King Charles	2	1	1	2	0	0	0	0	0	0	0	0	0	0	0	0
Opotiki District	2013	DOG	Spaniel, Cocker	3	0	3	2	2	0	0	0	0	0	0	0	0	0	0	0
Opotiki District	2013	DOG	Spaniel, English Springer	5	1	4	4	1	0	0	0	0	0	0	0	0	0	0	0
Opotiki District	2013	DOG	Terrier, American Pit Bull	20	12	8	10	13	19	1	0	0	0	0	0	0	0	0	0
Opotiki District	2013	DOG	Terrier, Fox (Smooth)	70	42	28	52	29	0	0	0	0	0	0	0	0	0	0	0
Opotiki District	2013	DOG	Terrier, Jack Russell	20	13	7	15	9	0	0	0	0	0	0	0	0	0	0	0
Opotiki District	2013	DOG	Terrier, Staffordshire Bull	11	4	7	6	3	0	0	0	0	0	0	0	0	0	0	0
Opotiki District	2013	DOG	Terrier, West Highland White	2	0	2	2	2	0	0	0	0	0	0	0	0	0	0	0
Opotiki District	2013	DOG	_Unidentified_	167	75	92	71	95	4	0	0	0	0	0	0	0	0	0	0
Opotiki District	2013	OWN	_	0	0	0	0	0	0	0	0	0	1024	5	0	0	0	0	0
Opotiki District	2013	JST	_	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Opotiki District	2013	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	54	8237	15420
Opotiki District	2014	DOG	_ALL-PURE_	728	353	375	390	335	15	1	0	0	0	0	0	0	0	0	0
Opotiki District	2014	DOG	_ALL-CROSS_	712	364	348	381	436	32	2	0	0	0	0	0	0	0	0	0
Opotiki District	2014	DOG	_ALL-DOGS_	1440	717	723	771	771	47	3	0	0	0	0	0	0	0	0	0
Opotiki District	2014	DOG	Beagle	5	3	2	3	3	0	0	0	0	0	0	0	0	0	0	0
Opotiki District	2014	DOG	Bichon Frise	13	5	8	11	10	0	0	0	0	0	0	0	0	0	0	0
Opotiki District	2014	DOG	Boxer	10	8	2	5	8	0	0	0	0	0	0	0	0	0	0	0
Opotiki District	2014	DOG	Cattle, Australian	15	3	12	5	5	0	0	0	0	0	0	0	0	0	0	0
Opotiki District	2014	DOG	Chihuahua, Long Coat	7	1	6	4	4	0	0	0	0	0	0	0	0	0	0	0
Opotiki District	2014	DOG	Chihuahua, Smooth Coat	5	2	3	3	4	0	0	0	0	0	0	0	0	0	0	0
Opotiki District	2014	DOG	Collie, Bearded	13	5	8	8	4	0	0	0	0	0	0	0	0	0	0	0
Opotiki District	2014	DOG	Collie, Border	42	22	20	21	15	0	0	0	0	0	0	0	0	0	0	0
Opotiki District	2014	DOG	Collie, Rough	1	1	0	1	0	0	0	0	0	0	0	0	0	0	0	0
Opotiki District	2014	DOG	Collie, Smooth	1	0	1	0	0	0	0	0	0	0	0	0	0	0	0	0
Opotiki District	2014	DOG	Greyhound	4	2	2	0	1	0	0	0	0	0	0	0	0	0	0	0
Opotiki District	2014	DOG	Heading	100	53	47	38	14	0	0	0	0	0	0	0	0	0	0	0
Opotiki District	2014	DOG	Huntaway	79	32	47	26	6	0	0	0	0	0	0	0	0	0	0	0
Opotiki District	2014	DOG	Maltese	8	2	6	6	5	0	0	0	0	0	0	0	0	0	0	0
Opotiki District	2014	DOG	Poodle, Miniature	6	4	2	6	6	0	0	0	0	0	0	0	0	0	0	0
Opotiki District	2014	DOG	Poodle, Toy	5	3	2	5	3	0	0	0	0	0	0	0	0	0	0	0
Opotiki District	2014	DOG	Retriever, Golden	5	5	0	5	2	0	0	0	0	0	0	0	0	0	0	0
Opotiki District	2014	DOG	Retriever, Labrador	89	37	52	47	60	0	0	0	0	0	0	0	0	0	0	0
Opotiki District	2014	DOG	Rottweiler	14	6	8	8	9	0	0	0	0	0	0	0	0	0	0	0
Opotiki District	2014	DOG	Schnauzer, Miniature	4	2	2	2	1	0	0	0	0	0	0	0	0	0	0	0
Opotiki District	2014	DOG	Shepherd, German	23	12	11	16	13	0	0	0	0	0	0	0	0	0	0	0
Opotiki District	2014	DOG	Shih Tzu	5	2	3	3	4	0	0	0	0	0	0	0	0	0	0	0
Opotiki District	2014	DOG	Spaniel, Cavalier King Charles	2	1	1	2	0	0	0	0	0	0	0	0	0	0	0	0
Opotiki District	2014	DOG	Spaniel, Cocker	3	0	3	3	3	0	0	0	0	0	0	0	0	0	0	0
Opotiki District	2014	DOG	Spaniel, English Springer	7	1	6	5	3	0	0	0	0	0	0	0	0	0	0	0
Opotiki District	2014	DOG	Terrier, American Pit Bull	15	12	3	7	14	14	1	0	0	0	0	0	0	0	0	0
Opotiki District	2014	DOG	Terrier, Fox (Smooth)	68	42	26	50	34	0	0	0	0	0	0	0	0	0	0	0
Opotiki District	2014	DOG	Terrier, Jack Russell	23	16	7	19	12	0	0	0	0	0	0	0	0	0	0	0
Opotiki District	2014	DOG	Terrier, Staffordshire Bull	9	3	6	5	4	0	0	0	0	0	0	0	0	0	0	0
Opotiki District	2014	DOG	Terrier, West Highland White	2	0	2	2	2	0	0	0	0	0	0	0	0	0	0	0
Opotiki District	2014	DOG	_Unidentified_	145	68	77	74	86	1	0	0	0	0	0	0	0	0	0	0
Opotiki District	2014	OWN	_	0	0	0	0	0	0	0	0	0	994	6	0	0	0	0	0
Opotiki District	2014	JST	_	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Opotiki District	2014	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	48	6277	10710
Opotiki District	2015	DOG	_ALL-PURE_	711	347	364	355	324	11	1	0	0	0	0	0	0	0	0	0
Opotiki District	2015	DOG	_ALL-CROSS_	699	366	333	393	450	34	2	0	0	0	0	0	0	0	0	0
Opotiki District	2015	DOG	_ALL-DOGS_	1410	713	697	748	774	45	3	0	0	0	0	0	0	0	0	0
Opotiki District	2015	DOG	Beagle	5	3	2	3	3	0	0	0	0	0	0	0	0	0	0	0
Opotiki District	2015	DOG	Bichon Frise	14	7	7	11	12	0	0	0	0	0	0	0	0	0	0	0
Opotiki District	2015	DOG	Boxer	9	6	3	6	7	0	0	0	0	0	0	0	0	0	0	0
Opotiki District	2015	DOG	Cattle, Australian	15	3	12	4	5	0	0	0	0	0	0	0	0	0	0	0
Opotiki District	2015	DOG	Chihuahua, Long Coat	6	1	5	6	4	0	0	0	0	0	0	0	0	0	0	0
Opotiki District	2015	DOG	Chihuahua, Smooth Coat	5	3	2	3	5	0	0	0	0	0	0	0	0	0	0	0
Opotiki District	2015	DOG	Collie, Bearded	14	6	8	4	2	0	0	0	0	0	0	0	0	0	0	0
Opotiki District	2015	DOG	Collie, Border	42	22	20	19	17	0	0	0	0	0	0	0	0	0	0	0
Opotiki District	2015	DOG	Collie, Rough	1	1	0	1	0	0	0	0	0	0	0	0	0	0	0	0
Opotiki District	2015	DOG	Collie, Smooth	1	0	1	0	0	0	0	0	0	0	0	0	0	0	0	0
Opotiki District	2015	DOG	Greyhound	3	1	2	0	1	0	0	0	0	0	0	0	0	0	0	0
Opotiki District	2015	DOG	Heading	100	48	52	25	14	0	0	0	0	0	0	0	0	0	0	0
Opotiki District	2015	DOG	Huntaway	93	37	56	22	3	0	0	0	0	0	0	0	0	0	0	0
Opotiki District	2015	DOG	Maltese	9	3	6	6	5	0	0	0	0	0	0	0	0	0	0	0
Opotiki District	2015	DOG	Poodle, Miniature	6	4	2	6	6	0	0	0	0	0	0	0	0	0	0	0
Opotiki District	2015	DOG	Poodle, Toy	5	3	2	5	3	0	0	0	0	0	0	0	0	0	0	0
Opotiki District	2015	DOG	Retriever, Golden	3	3	0	3	2	0	0	0	0	0	0	0	0	0	0	0
Opotiki District	2015	DOG	Retriever, Labrador	82	35	47	46	56	0	0	0	0	0	0	0	0	0	0	0
Opotiki District	2015	DOG	Rottweiler	11	7	4	7	6	0	0	0	0	0	0	0	0	0	0	0
Opotiki District	2015	DOG	Schnauzer, Miniature	5	2	3	3	2	0	0	0	0	0	0	0	0	0	0	0
Opotiki District	2015	DOG	Shepherd, German	20	11	9	13	10	0	0	0	0	0	0	0	0	0	0	0
Opotiki District	2015	DOG	Shih Tzu	6	3	3	4	5	0	0	0	0	0	0	0	0	0	0	0
Opotiki District	2015	DOG	Spaniel, Cavalier King Charles	2	1	1	2	0	0	0	0	0	0	0	0	0	0	0	0
Opotiki District	2015	DOG	Spaniel, Cocker	3	0	3	3	3	0	0	0	0	0	0	0	0	0	0	0
Opotiki District	2015	DOG	Spaniel, English Springer	6	1	5	4	3	0	0	0	0	0	0	0	0	0	0	0
Opotiki District	2015	DOG	Terrier, American Pit Bull	11	6	5	6	9	11	0	0	0	0	0	0	0	0	0	0
Opotiki District	2015	DOG	Terrier, Fox (Smooth)	56	35	21	45	32	0	0	0	0	0	0	0	0	0	0	0
Opotiki District	2015	DOG	Terrier, Jack Russell	21	13	8	19	12	0	0	0	0	0	0	0	0	0	0	0
Opotiki District	2015	DOG	Terrier, Staffordshire Bull	7	3	4	3	4	0	0	0	0	0	0	0	0	0	0	0
Opotiki District	2015	DOG	Terrier, West Highland White	2	0	2	2	2	0	0	0	0	0	0	0	0	0	0	0
Opotiki District	2015	DOG	_Unidentified_	148	79	69	74	91	0	1	0	0	0	0	0	0	0	0	0
Opotiki District	2015	OWN	_	0	0	0	0	0	0	0	0	0	961	4	0	0	0	0	0
Opotiki District	2015	JST	_	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Opotiki District	2015	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	76	8249	9799
Opotiki District	2016	DOG	_ALL-PURE_	630	319	311	292	327	10	1	0	0	0	0	0	0	0	0	0
Opotiki District	2016	DOG	_ALL-CROSS_	684	359	325	394	456	34	4	0	0	0	0	0	0	0	0	0
Opotiki District	2016	DOG	_ALL-DOGS_	1314	678	636	686	783	44	5	0	0	0	0	0	0	0	0	0
Opotiki District	2016	DOG	Beagle	5	3	2	3	3	0	0	0	0	0	0	0	0	0	0	0
Opotiki District	2016	DOG	Bichon Frise	16	7	9	12	14	0	0	0	0	0	0	0	0	0	0	0
Opotiki District	2016	DOG	Boxer	8	6	2	6	7	0	0	0	0	0	0	0	0	0	0	0
Opotiki District	2016	DOG	Cattle, Australian	13	4	9	2	4	0	0	0	0	0	0	0	0	0	0	0
Opotiki District	2016	DOG	Chihuahua, Long Coat	5	1	4	5	3	0	0	0	0	0	0	0	0	0	0	0
Opotiki District	2016	DOG	Chihuahua, Smooth Coat	6	4	2	4	6	0	0	0	0	0	0	0	0	0	0	0
Opotiki District	2016	DOG	Collie, Bearded	16	12	4	4	6	0	0	0	0	0	0	0	0	0	0	0
Opotiki District	2016	DOG	Collie, Border	48	20	28	16	18	0	0	0	0	0	0	0	0	0	0	0
Opotiki District	2016	DOG	Collie, Rough	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Opotiki District	2016	DOG	Collie, Smooth	1	0	1	0	0	0	0	0	0	0	0	0	0	0	0	0
Opotiki District	2016	DOG	Greyhound	3	1	2	0	1	0	0	0	0	0	0	0	0	0	0	0
Opotiki District	2016	DOG	Heading	76	37	39	16	16	0	0	0	0	0	0	0	0	0	0	0
Opotiki District	2016	DOG	Huntaway	74	30	44	22	3	0	0	0	0	0	0	0	0	0	0	0
Opotiki District	2016	DOG	Maltese	10	4	6	7	6	0	0	0	0	0	0	0	0	0	0	0
Opotiki District	2016	DOG	Poodle, Miniature	6	4	2	6	6	0	0	0	0	0	0	0	0	0	0	0
Opotiki District	2016	DOG	Poodle, Toy	5	3	2	4	5	0	0	0	0	0	0	0	0	0	0	0
Opotiki District	2016	DOG	Retriever, Golden	2	2	0	2	2	0	0	0	0	0	0	0	0	0	0	0
Opotiki District	2016	DOG	Retriever, Labrador	74	35	39	36	54	0	0	0	0	0	0	0	0	0	0	0
Opotiki District	2016	DOG	Rottweiler	15	11	4	8	11	0	0	0	0	0	0	0	0	0	0	0
Opotiki District	2016	DOG	Schnauzer, Miniature	5	3	2	4	3	0	0	0	0	0	0	0	0	0	0	0
Opotiki District	2016	DOG	Shepherd, German	12	7	5	7	5	0	0	0	0	0	0	0	0	0	0	0
Opotiki District	2016	DOG	Shih Tzu	6	2	4	4	6	0	0	0	0	0	0	0	0	0	0	0
Opotiki District	2016	DOG	Spaniel, Cavalier King Charles	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Opotiki District	2016	DOG	Spaniel, Cocker	3	0	3	3	3	0	0	0	0	0	0	0	0	0	0	0
Opotiki District	2016	DOG	Spaniel, English Springer	5	1	4	3	3	0	0	0	0	0	0	0	0	0	0	0
Opotiki District	2016	DOG	Terrier, American Pit Bull	10	7	3	4	8	9	1	0	0	0	0	0	0	0	0	0
Opotiki District	2016	DOG	Terrier, Fox (Smooth)	55	35	20	37	35	0	0	0	0	0	0	0	0	0	0	0
Opotiki District	2016	DOG	Terrier, Jack Russell	16	10	6	13	9	0	0	0	0	0	0	0	0	0	0	0
Opotiki District	2016	DOG	Terrier, Staffordshire Bull	8	4	4	5	5	0	0	0	0	0	0	0	0	0	0	0
Opotiki District	2016	DOG	Terrier, West Highland White	1	0	1	1	1	0	0	0	0	0	0	0	0	0	0	0
Opotiki District	2016	DOG	_Unidentified_	126	66	60	58	84	1	0	0	0	0	0	0	0	0	0	0
Opotiki District	2016	OWN	_	0	0	0	0	0	0	0	0	0	901	5	0	0	0	0	0
Otorohanga District	2001	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	6	319	0
Otorohanga District	2002	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	8	460	0
Otorohanga District	2003	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	5	296	0
Otorohanga District	2004	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	10	4758	0
Otorohanga District	2005	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	6	583	0
Otorohanga District	2006	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	16	6896	4818
Otorohanga District	2007	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	15	2768	4448
Otorohanga District	2008	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	17	2170	2524
Otorohanga District	2009	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	18	5731	5255
Otorohanga District	2010	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	18	2674	3193
Otorohanga District	2011	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	11	1444	1422
Otorohanga District	2012	JST	_	0	0	0	0	0	0	0	0	0	0	0	2	0	0	0	0
Otorohanga District	2012	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	18	3517	3386
Otorohanga District	2013	DOG	_ALL-PURE_	1753	884	869	470	595	11	0	0	0	0	0	0	0	0	0	0
Otorohanga District	2013	DOG	_ALL-CROSS_	542	255	287	235	306	22	0	0	0	0	0	0	0	0	0	0
Otorohanga District	2013	DOG	_ALL-DOGS_	2295	1139	1156	705	901	33	0	0	0	0	0	0	0	0	0	0
Otorohanga District	2013	DOG	Beagle	6	2	4	3	5	0	0	0	0	0	0	0	0	0	0	0
Otorohanga District	2013	DOG	Bichon Frise	12	4	8	10	11	0	0	0	0	0	0	0	0	0	0	0
Otorohanga District	2013	DOG	Boxer	22	11	11	9	16	1	0	0	0	0	0	0	0	0	0	0
Otorohanga District	2013	DOG	Cattle, Australian	116	53	63	15	7	0	0	0	0	0	0	0	0	0	0	0
Otorohanga District	2013	DOG	Chihuahua, Long Coat	8	5	3	5	5	0	0	0	0	0	0	0	0	0	0	0
Otorohanga District	2013	DOG	Chihuahua, Smooth Coat	7	5	2	0	4	0	0	0	0	0	0	0	0	0	0	0
Otorohanga District	2013	DOG	Collie, Bearded	40	20	20	11	7	0	0	0	0	0	0	0	0	0	0	0
Otorohanga District	2013	DOG	Collie, Border	108	54	54	24	27	1	0	0	0	0	0	0	0	0	0	0
Otorohanga District	2013	DOG	Collie, Rough	1	0	1	1	0	0	0	0	0	0	0	0	0	0	0	0
Otorohanga District	2013	DOG	Collie, Smooth	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Otorohanga District	2013	DOG	Greyhound	4	2	2	1	2	0	0	0	0	0	0	0	0	0	0	0
Otorohanga District	2013	DOG	Heading	235	114	121	16	8	0	0	0	0	0	0	0	0	0	0	0
Otorohanga District	2013	DOG	Huntaway	330	145	185	32	16	0	0	0	0	0	0	0	0	0	0	0
Otorohanga District	2013	DOG	Maltese	14	9	5	7	10	0	0	0	0	0	0	0	0	0	0	0
Otorohanga District	2013	DOG	Poodle, Miniature	1	0	1	1	1	0	0	0	0	0	0	0	0	0	0	0
Otorohanga District	2013	DOG	Poodle, Toy	3	1	2	3	3	0	0	0	0	0	0	0	0	0	0	0
Otorohanga District	2013	DOG	Retriever, Golden	29	17	12	8	17	0	0	0	0	0	0	0	0	0	0	0
Otorohanga District	2013	DOG	Retriever, Labrador	197	111	86	81	118	0	0	0	0	0	0	0	0	0	0	0
Otorohanga District	2013	DOG	Rottweiler	19	9	10	5	12	1	0	0	0	0	0	0	0	0	0	0
Otorohanga District	2013	DOG	Schnauzer, Miniature	5	3	2	2	5	0	0	0	0	0	0	0	0	0	0	0
Otorohanga District	2013	DOG	Shepherd, German	41	26	15	10	33	0	0	0	0	0	0	0	0	0	0	0
Otorohanga District	2013	DOG	Shih Tzu	12	8	4	8	11	0	0	0	0	0	0	0	0	0	0	0
Otorohanga District	2013	DOG	Spaniel, Cavalier King Charles	4	1	3	3	2	0	0	0	0	0	0	0	0	0	0	0
Otorohanga District	2013	DOG	Spaniel, Cocker	9	0	9	7	9	0	0	0	0	0	0	0	0	0	0	0
Otorohanga District	2013	DOG	Spaniel, English Springer	6	5	1	2	4	0	0	0	0	0	0	0	0	0	0	0
Otorohanga District	2013	DOG	Terrier, American Pit Bull	5	3	2	3	5	5	0	0	0	0	0	0	0	0	0	0
Otorohanga District	2013	DOG	Terrier, Fox (Smooth)	144	86	58	75	72	2	0	0	0	0	0	0	0	0	0	0
Otorohanga District	2013	DOG	Terrier, Jack Russell	52	28	24	25	30	0	0	0	0	0	0	0	0	0	0	0
Otorohanga District	2013	DOG	Terrier, Staffordshire Bull	26	13	13	15	10	0	0	0	0	0	0	0	0	0	0	0
Otorohanga District	2013	DOG	Terrier, West Highland White	3	3	0	2	3	0	0	0	0	0	0	0	0	0	0	0
Otorohanga District	2013	DOG	_Unidentified_	294	146	148	86	142	1	0	0	0	0	0	0	0	0	0	0
Otorohanga District	2013	OWN	_	0	0	0	0	0	0	0	0	0	1245	18	0	0	0	0	0
Otorohanga District	2013	JST	_	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Otorohanga District	2013	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	21	4958	3654
Otorohanga District	2014	DOG	_ALL-PURE_	1701	880	821	471	635	11	0	0	0	0	0	0	0	0	0	0
Otorohanga District	2014	DOG	_ALL-CROSS_	603	302	301	265	376	25	0	0	0	0	0	0	0	0	0	0
Otorohanga District	2014	DOG	_ALL-DOGS_	2304	1182	1122	736	1011	36	0	0	0	0	0	0	0	0	0	0
Otorohanga District	2014	DOG	Beagle	5	2	3	3	4	0	0	0	0	0	0	0	0	0	0	0
Otorohanga District	2014	DOG	Bichon Frise	11	3	8	9	11	0	0	0	0	0	0	0	0	0	0	0
Otorohanga District	2014	DOG	Boxer	17	11	6	8	15	1	0	0	0	0	0	0	0	0	0	0
Otorohanga District	2014	DOG	Cattle, Australian	115	55	60	15	7	0	0	0	0	0	0	0	0	0	0	0
Otorohanga District	2014	DOG	Chihuahua, Long Coat	8	6	2	4	6	0	0	0	0	0	0	0	0	0	0	0
Otorohanga District	2014	DOG	Chihuahua, Smooth Coat	6	4	2	0	5	0	0	0	0	0	0	0	0	0	0	0
Otorohanga District	2014	DOG	Collie, Bearded	33	16	17	11	5	0	0	0	0	0	0	0	0	0	0	0
Otorohanga District	2014	DOG	Collie, Border	113	58	55	26	32	0	0	0	0	0	0	0	0	0	0	0
Otorohanga District	2014	DOG	Collie, Rough	2	1	1	2	0	0	0	0	0	0	0	0	0	0	0	0
Otorohanga District	2014	DOG	Collie, Smooth	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Otorohanga District	2014	DOG	Greyhound	5	2	3	0	2	0	0	0	0	0	0	0	0	0	0	0
Otorohanga District	2014	DOG	Heading	236	122	114	15	10	0	0	0	0	0	0	0	0	0	0	0
Otorohanga District	2014	DOG	Huntaway	321	145	176	34	19	0	0	0	0	0	0	0	0	0	0	0
Otorohanga District	2014	DOG	Maltese	13	8	5	9	11	0	0	0	0	0	0	0	0	0	0	0
Otorohanga District	2014	DOG	Poodle, Miniature	1	0	1	1	1	0	0	0	0	0	0	0	0	0	0	0
Otorohanga District	2014	DOG	Poodle, Toy	3	1	2	3	3	0	0	0	0	0	0	0	0	0	0	0
Otorohanga District	2014	DOG	Retriever, Golden	29	18	11	9	19	0	0	0	0	0	0	0	0	0	0	0
Otorohanga District	2014	DOG	Retriever, Labrador	200	116	84	87	132	0	0	0	0	0	0	0	0	0	0	0
Otorohanga District	2014	DOG	Rottweiler	15	7	8	4	12	1	0	0	0	0	0	0	0	0	0	0
Otorohanga District	2014	DOG	Schnauzer, Miniature	7	3	4	2	7	0	0	0	0	0	0	0	0	0	0	0
Otorohanga District	2014	DOG	Shepherd, German	35	21	14	9	29	0	0	0	0	0	0	0	0	0	0	0
Otorohanga District	2014	DOG	Shih Tzu	10	7	3	7	9	0	0	0	0	0	0	0	0	0	0	0
Otorohanga District	2014	DOG	Spaniel, Cavalier King Charles	1	1	0	1	1	0	0	0	0	0	0	0	0	0	0	0
Otorohanga District	2014	DOG	Spaniel, Cocker	10	2	8	6	10	0	0	0	0	0	0	0	0	0	0	0
Otorohanga District	2014	DOG	Spaniel, English Springer	6	5	1	2	4	0	0	0	0	0	0	0	0	0	0	0
Otorohanga District	2014	DOG	Terrier, American Pit Bull	5	2	3	4	5	5	0	0	0	0	0	0	0	0	0	0
Otorohanga District	2014	DOG	Terrier, Fox (Smooth)	138	86	52	75	75	1	0	0	0	0	0	0	0	0	0	0
Otorohanga District	2014	DOG	Terrier, Jack Russell	54	28	26	26	38	0	0	0	0	0	0	0	0	0	0	0
Otorohanga District	2014	DOG	Terrier, Staffordshire Bull	23	12	11	13	10	0	0	0	0	0	0	0	0	0	0	0
Otorohanga District	2014	DOG	Terrier, West Highland White	3	3	0	2	3	0	0	0	0	0	0	0	0	0	0	0
Otorohanga District	2014	DOG	_Unidentified_	276	135	141	84	150	3	0	0	0	0	0	0	0	0	0	0
Otorohanga District	2014	OWN	_	0	0	0	0	0	0	0	0	1	1248	21	0	0	0	0	0
Otorohanga District	2014	JST	_	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Otorohanga District	2014	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	16	3756	4404
Otorohanga District	2015	DOG	_ALL-PURE_	1697	855	842	496	707	14	0	0	0	0	0	0	0	0	0	0
Otorohanga District	2015	DOG	_ALL-CROSS_	660	343	317	286	432	26	0	0	0	0	0	0	0	0	0	0
Otorohanga District	2015	DOG	_ALL-DOGS_	2357	1198	1159	782	1139	40	0	0	0	0	0	0	0	0	0	0
Otorohanga District	2015	DOG	Beagle	5	2	3	3	4	0	0	0	0	0	0	0	0	0	0	0
Otorohanga District	2015	DOG	Bichon Frise	13	3	10	12	13	0	0	0	0	0	0	0	0	0	0	0
Otorohanga District	2015	DOG	Boxer	32	20	12	11	15	1	0	0	0	0	0	0	0	0	0	0
Otorohanga District	2015	DOG	Cattle, Australian	101	52	49	17	8	0	0	0	0	0	0	0	0	0	0	0
Otorohanga District	2015	DOG	Chihuahua, Long Coat	8	5	3	5	7	0	0	0	0	0	0	0	0	0	0	0
Otorohanga District	2015	DOG	Chihuahua, Smooth Coat	7	3	4	1	5	0	0	0	0	0	0	0	0	0	0	0
Otorohanga District	2015	DOG	Collie, Bearded	34	17	17	9	5	0	0	0	0	0	0	0	0	0	0	0
Otorohanga District	2015	DOG	Collie, Border	106	51	55	27	36	0	0	0	0	0	0	0	0	0	0	0
Otorohanga District	2015	DOG	Collie, Rough	1	1	0	1	0	0	0	0	0	0	0	0	0	0	0	0
Otorohanga District	2015	DOG	Collie, Smooth	2	2	0	0	1	0	0	0	0	0	0	0	0	0	0	0
Otorohanga District	2015	DOG	Greyhound	3	2	1	1	2	0	0	0	0	0	0	0	0	0	0	0
Otorohanga District	2015	DOG	Heading	235	122	113	19	15	0	0	0	0	0	0	0	0	0	0	0
Otorohanga District	2015	DOG	Huntaway	320	134	186	38	19	0	0	0	0	0	0	0	0	0	0	0
Otorohanga District	2015	DOG	Maltese	14	8	6	11	12	0	0	0	0	0	0	0	0	0	0	0
Otorohanga District	2015	DOG	Poodle, Miniature	1	0	1	1	1	0	0	0	0	0	0	0	0	0	0	0
Otorohanga District	2015	DOG	Poodle, Toy	3	1	2	3	3	0	0	0	0	0	0	0	0	0	0	0
Otorohanga District	2015	DOG	Retriever, Golden	30	17	13	9	22	0	0	0	0	0	0	0	0	0	0	0
Otorohanga District	2015	DOG	Retriever, Labrador	199	107	92	82	143	0	0	0	0	0	0	0	0	0	0	0
Otorohanga District	2015	DOG	Rottweiler	15	6	9	6	13	1	0	0	0	0	0	0	0	0	0	0
Otorohanga District	2015	DOG	Schnauzer, Miniature	8	3	5	2	8	0	0	0	0	0	0	0	0	0	0	0
Otorohanga District	2015	DOG	Shepherd, German	39	24	15	13	36	0	0	0	0	0	0	0	0	0	0	0
Otorohanga District	2015	DOG	Shih Tzu	12	7	5	7	11	0	0	0	0	0	0	0	0	0	0	0
Otorohanga District	2015	DOG	Spaniel, Cavalier King Charles	1	1	0	1	1	0	0	0	0	0	0	0	0	0	0	0
Otorohanga District	2015	DOG	Spaniel, Cocker	11	3	8	7	11	0	0	0	0	0	0	0	0	0	0	0
Otorohanga District	2015	DOG	Spaniel, English Springer	8	5	3	2	6	0	0	0	0	0	0	0	0	0	0	0
Otorohanga District	2015	DOG	Terrier, American Pit Bull	6	3	3	5	6	6	0	0	0	0	0	0	0	0	0	0
Otorohanga District	2015	DOG	Terrier, Fox (Smooth)	141	89	52	77	84	1	0	0	0	0	0	0	0	0	0	0
Otorohanga District	2015	DOG	Terrier, Jack Russell	48	25	23	26	37	0	0	0	0	0	0	0	0	0	0	0
Otorohanga District	2015	DOG	Terrier, Staffordshire Bull	23	13	10	11	13	1	0	0	0	0	0	0	0	0	0	0
Otorohanga District	2015	DOG	Terrier, West Highland White	3	3	0	2	3	0	0	0	0	0	0	0	0	0	0	0
Otorohanga District	2015	DOG	_Unidentified_	268	126	142	87	167	4	0	0	0	0	0	0	0	0	0	0
Otorohanga District	2015	OWN	_	0	0	0	0	0	0	0	0	1	1268	16	0	0	0	0	0
Otorohanga District	2015	JST	_	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Otorohanga District	2015	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	10	2034	2794
Otorohanga District	2016	DOG	_ALL-PURE_	1637	802	835	485	754	13	0	0	0	0	0	0	0	0	0	0
Otorohanga District	2016	DOG	_ALL-CROSS_	681	355	326	303	475	25	0	0	0	0	0	0	0	0	0	0
Otorohanga District	2016	DOG	_ALL-DOGS_	2318	1157	1161	788	1229	38	0	0	0	0	0	0	0	0	0	0
Otorohanga District	2016	DOG	Beagle	5	2	3	3	4	0	0	0	0	0	0	0	0	0	0	0
Otorohanga District	2016	DOG	Bichon Frise	14	4	10	13	13	0	0	0	0	0	0	0	0	0	0	0
Otorohanga District	2016	DOG	Boxer	31	20	11	12	16	1	0	0	0	0	0	0	0	0	0	0
Otorohanga District	2016	DOG	Cattle, Australian	92	47	45	15	6	0	0	0	0	0	0	0	0	0	0	0
Otorohanga District	2016	DOG	Chihuahua, Long Coat	7	4	3	5	6	0	0	0	0	0	0	0	0	0	0	0
Otorohanga District	2016	DOG	Chihuahua, Smooth Coat	5	3	2	1	4	0	0	0	0	0	0	0	0	0	0	0
Otorohanga District	2016	DOG	Collie, Bearded	35	16	19	6	8	0	0	0	0	0	0	0	0	0	0	0
Otorohanga District	2016	DOG	Collie, Border	100	45	55	34	41	0	0	0	0	0	0	0	0	0	0	0
Otorohanga District	2016	DOG	Collie, Rough	2	0	2	1	2	0	0	0	0	0	0	0	0	0	0	0
Otorohanga District	2016	DOG	Collie, Smooth	1	1	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Otorohanga District	2016	DOG	Greyhound	7	4	3	2	5	0	0	0	0	0	0	0	0	0	0	0
Otorohanga District	2016	DOG	Heading	225	125	100	18	13	1	0	0	0	0	0	0	0	0	0	0
Otorohanga District	2016	DOG	Huntaway	309	131	178	41	22	0	0	0	0	0	0	0	0	0	0	0
Otorohanga District	2016	DOG	Maltese	13	6	7	12	11	0	0	0	0	0	0	0	0	0	0	0
Otorohanga District	2016	DOG	Poodle, Miniature	3	1	2	3	3	0	0	0	0	0	0	0	0	0	0	0
Otorohanga District	2016	DOG	Poodle, Toy	3	2	1	2	3	0	0	0	0	0	0	0	0	0	0	0
Otorohanga District	2016	DOG	Retriever, Golden	26	15	11	9	20	0	0	0	0	0	0	0	0	0	0	0
Otorohanga District	2016	DOG	Retriever, Labrador	199	106	93	85	153	0	0	0	0	0	0	0	0	0	0	0
Otorohanga District	2016	DOG	Rottweiler	19	9	10	4	19	1	0	0	0	0	0	0	0	0	0	0
Otorohanga District	2016	DOG	Schnauzer, Miniature	8	3	5	3	8	0	0	0	0	0	0	0	0	0	0	0
Otorohanga District	2016	DOG	Shepherd, German	43	24	19	14	40	0	0	0	0	0	0	0	0	0	0	0
Otorohanga District	2016	DOG	Shih Tzu	11	7	4	6	11	0	0	0	0	0	0	0	0	0	0	0
Otorohanga District	2016	DOG	Spaniel, Cavalier King Charles	1	1	0	1	1	0	0	0	0	0	0	0	0	0	0	0
Otorohanga District	2016	DOG	Spaniel, Cocker	13	4	9	8	13	0	0	0	0	0	0	0	0	0	0	0
Otorohanga District	2016	DOG	Spaniel, English Springer	13	7	6	4	11	0	0	0	0	0	0	0	0	0	0	0
Otorohanga District	2016	DOG	Terrier, American Pit Bull	5	2	3	2	4	5	0	0	0	0	0	0	0	0	0	0
Otorohanga District	2016	DOG	Terrier, Fox (Smooth)	134	73	61	73	97	1	0	0	0	0	0	0	0	0	0	0
Otorohanga District	2016	DOG	Terrier, Jack Russell	45	22	23	23	36	1	0	0	0	0	0	0	0	0	0	0
Otorohanga District	2016	DOG	Terrier, Staffordshire Bull	20	8	12	7	15	0	0	0	0	0	0	0	0	0	0	0
Otorohanga District	2016	DOG	Terrier, West Highland White	2	2	0	2	2	0	0	0	0	0	0	0	0	0	0	0
Otorohanga District	2016	DOG	_Unidentified_	246	108	138	76	167	3	0	0	0	0	0	0	0	0	0	0
Otorohanga District	2016	OWN	_	0	0	0	0	0	0	0	0	1	1270	4	0	0	0	0	0
Palmerston North City	2001	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	77	60385	0
Palmerston North City	2002	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	77	18007	0
Palmerston North City	2003	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	64	26379	0
Palmerston North City	2004	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	109	56871	0
Palmerston North City	2005	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	128	31066	0
Palmerston North City	2006	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	114	37056	39633
Palmerston North City	2007	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	175	56464	36502
Palmerston North City	2008	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	202	47622	45166
Palmerston North City	2009	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	239	69701	91814
Palmerston North City	2010	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	207	38920	34679
Palmerston North City	2011	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	222	43907	53671
Palmerston North City	2012	JST	_	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Palmerston North City	2012	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	229	57880	53225
Palmerston North City	2013	DOG	_ALL-PURE_	4518	2207	2311	3138	2040	62	0	0	0	0	0	0	0	0	0	0
Palmerston North City	2013	DOG	_ALL-CROSS_	2937	1444	1493	2340	1473	65	0	0	0	0	0	0	0	0	0	0
Palmerston North City	2013	DOG	_ALL-DOGS_	7455	3651	3804	5478	3513	127	0	0	0	0	0	0	0	0	0	0
Palmerston North City	2013	DOG	Beagle	77	39	38	66	46	0	0	0	0	0	0	0	0	0	0	0
Palmerston North City	2013	DOG	Bichon Frise	147	63	84	122	70	0	0	0	0	0	0	0	0	0	0	0
Palmerston North City	2013	DOG	Boxer	96	55	41	66	45	0	0	0	0	0	0	0	0	0	0	0
Palmerston North City	2013	DOG	Cattle, Australian	24	17	7	15	11	0	0	0	0	0	0	0	0	0	0	0
Palmerston North City	2013	DOG	Chihuahua, Long Coat	46	29	17	30	21	0	0	0	0	0	0	0	0	0	0	0
Palmerston North City	2013	DOG	Chihuahua, Smooth Coat	18	10	8	12	11	0	0	0	0	0	0	0	0	0	0	0
Palmerston North City	2013	DOG	Collie, Bearded	11	7	4	9	0	0	0	0	0	0	0	0	0	0	0	0
Palmerston North City	2013	DOG	Collie, Border	195	93	102	114	84	0	0	0	0	0	0	0	0	0	0	0
Palmerston North City	2013	DOG	Collie, Rough	21	8	13	14	9	0	0	0	0	0	0	0	0	0	0	0
Palmerston North City	2013	DOG	Collie, Smooth	6	2	4	5	1	0	0	0	0	0	0	0	0	0	0	0
Palmerston North City	2013	DOG	Greyhound	34	12	22	32	24	0	0	0	0	0	0	0	0	0	0	0
Palmerston North City	2013	DOG	Heading	52	29	23	18	10	0	0	0	0	0	0	0	0	0	0	0
Palmerston North City	2013	DOG	Huntaway	107	51	56	46	20	0	0	0	0	0	0	0	0	0	0	0
Palmerston North City	2013	DOG	Maltese	28	9	19	22	17	0	0	0	0	0	0	0	0	0	0	0
Palmerston North City	2013	DOG	Poodle, Miniature	47	25	22	40	18	0	0	0	0	0	0	0	0	0	0	0
Palmerston North City	2013	DOG	Poodle, Toy	39	18	21	34	17	0	0	0	0	0	0	0	0	0	0	0
Palmerston North City	2013	DOG	Retriever, Golden	162	73	89	107	70	0	0	0	0	0	0	0	0	0	0	0
Palmerston North City	2013	DOG	Retriever, Labrador	712	341	371	518	318	2	0	0	0	0	0	0	0	0	0	0
Palmerston North City	2013	DOG	Rottweiler	144	63	81	87	87	7	0	0	0	0	0	0	0	0	0	0
Palmerston North City	2013	DOG	Schnauzer, Miniature	69	38	31	43	43	0	0	0	0	0	0	0	0	0	0	0
Palmerston North City	2013	DOG	Shepherd, German	215	109	106	131	104	1	0	0	0	0	0	0	0	0	0	0
Palmerston North City	2013	DOG	Shih Tzu	76	33	43	51	55	0	0	0	0	0	0	0	0	0	0	0
Palmerston North City	2013	DOG	Spaniel, Cavalier King Charles	73	33	40	47	45	0	0	0	0	0	0	0	0	0	0	0
Palmerston North City	2013	DOG	Spaniel, Cocker	69	32	37	50	28	0	0	0	0	0	0	0	0	0	0	0
Palmerston North City	2013	DOG	Spaniel, English Springer	38	19	19	21	8	0	0	0	0	0	0	0	0	0	0	0
Palmerston North City	2013	DOG	Terrier, American Pit Bull	41	25	16	27	29	41	0	0	0	0	0	0	0	0	0	0
Palmerston North City	2013	DOG	Terrier, Fox (Smooth)	292	151	141	244	101	0	0	0	0	0	0	0	0	0	0	0
Palmerston North City	2013	DOG	Terrier, Jack Russell	236	114	122	187	97	0	0	0	0	0	0	0	0	0	0	0
Palmerston North City	2013	DOG	Terrier, Staffordshire Bull	89	43	46	59	40	1	0	0	0	0	0	0	0	0	0	0
Palmerston North City	2013	DOG	Terrier, West Highland White	67	29	38	49	31	0	0	0	0	0	0	0	0	0	0	0
Palmerston North City	2013	DOG	_Unidentified_	1287	637	650	872	580	10	0	0	0	0	0	0	0	0	0	0
Palmerston North City	2013	OWN	_	0	0	0	0	0	0	0	0	0	5965	105	0	0	0	0	0
Palmerston North City	2013	JST	_	0	0	0	0	0	0	0	0	0	0	0	1	1	0	0	0
Palmerston North City	2013	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	205	38644	49354
Palmerston North City	2014	DOG	_ALL-PURE_	4496	2191	2305	3167	2583	71	1	0	0	0	0	0	0	0	0	0
Palmerston North City	2014	DOG	_ALL-CROSS_	3072	1501	1571	2475	1935	73	1	0	0	0	0	0	0	0	0	0
Palmerston North City	2014	DOG	_ALL-DOGS_	7568	3692	3876	5642	4518	144	2	0	0	0	0	0	0	0	0	0
Palmerston North City	2014	DOG	Beagle	67	33	34	60	44	0	0	0	0	0	0	0	0	0	0	0
Palmerston North City	2014	DOG	Bichon Frise	133	55	78	112	81	0	0	0	0	0	0	0	0	0	0	0
Palmerston North City	2014	DOG	Boxer	88	50	38	57	55	0	0	0	0	0	0	0	0	0	0	0
Palmerston North City	2014	DOG	Cattle, Australian	23	18	5	14	13	0	0	0	0	0	0	0	0	0	0	0
Palmerston North City	2014	DOG	Chihuahua, Long Coat	50	28	22	38	34	0	0	0	0	0	0	0	0	0	0	0
Palmerston North City	2014	DOG	Chihuahua, Smooth Coat	22	12	10	18	15	0	0	0	0	0	0	0	0	0	0	0
Palmerston North City	2014	DOG	Collie, Bearded	10	6	4	9	3	0	0	0	0	0	0	0	0	0	0	0
Palmerston North City	2014	DOG	Collie, Border	193	97	96	119	104	0	0	0	0	0	0	0	0	0	0	0
Palmerston North City	2014	DOG	Collie, Rough	22	9	13	15	11	0	0	0	0	0	0	0	0	0	0	0
Palmerston North City	2014	DOG	Collie, Smooth	9	3	6	5	1	0	0	0	0	0	0	0	0	0	0	0
Palmerston North City	2014	DOG	Greyhound	46	18	28	42	38	1	0	0	0	0	0	0	0	0	0	0
Palmerston North City	2014	DOG	Heading	52	29	23	20	12	0	0	0	0	0	0	0	0	0	0	0
Palmerston North City	2014	DOG	Huntaway	92	45	47	39	22	0	0	0	0	0	0	0	0	0	0	0
Palmerston North City	2014	DOG	Maltese	31	11	20	23	21	0	0	0	0	0	0	0	0	0	0	0
Palmerston North City	2014	DOG	Poodle, Miniature	49	25	24	41	24	0	0	0	0	0	0	0	0	0	0	0
Palmerston North City	2014	DOG	Poodle, Toy	40	17	23	36	27	0	0	0	0	0	0	0	0	0	0	0
Palmerston North City	2014	DOG	Retriever, Golden	157	71	86	109	84	0	0	0	0	0	0	0	0	0	0	0
Palmerston North City	2014	DOG	Retriever, Labrador	704	341	363	516	408	0	0	0	0	0	0	0	0	0	0	0
Palmerston North City	2014	DOG	Rottweiler	153	70	83	82	115	5	0	0	0	0	0	0	0	0	0	0
Palmerston North City	2014	DOG	Schnauzer, Miniature	77	40	37	50	57	0	0	0	0	0	0	0	0	0	0	0
Palmerston North City	2014	DOG	Shepherd, German	214	102	112	127	134	2	0	0	0	0	0	0	0	0	0	0
Palmerston North City	2014	DOG	Shih Tzu	81	38	43	55	69	0	0	0	0	0	0	0	0	0	0	0
Palmerston North City	2014	DOG	Spaniel, Cavalier King Charles	78	33	45	53	58	0	0	0	0	0	0	0	0	0	0	0
Palmerston North City	2014	DOG	Spaniel, Cocker	68	30	38	49	34	0	0	0	0	0	0	0	0	0	0	0
Palmerston North City	2014	DOG	Spaniel, English Springer	42	23	19	24	20	0	0	0	0	0	0	0	0	0	0	0
Palmerston North City	2014	DOG	Terrier, American Pit Bull	50	27	23	28	33	49	0	0	0	0	0	0	0	0	0	0
Palmerston North City	2014	DOG	Terrier, Fox (Smooth)	277	150	127	240	125	0	0	0	0	0	0	0	0	0	0	0
Palmerston North City	2014	DOG	Terrier, Jack Russell	230	109	121	192	116	0	0	0	0	0	0	0	0	0	0	0
Palmerston North City	2014	DOG	Terrier, Staffordshire Bull	91	48	43	64	58	3	0	0	0	0	0	0	0	0	0	0
Palmerston North City	2014	DOG	Terrier, West Highland White	74	33	41	56	44	0	0	0	0	0	0	0	0	0	0	0
Palmerston North City	2014	DOG	_Unidentified_	1273	620	653	874	723	11	1	0	0	0	0	0	0	0	0	0
Palmerston North City	2014	OWN	_	0	0	0	0	0	0	0	0	0	6042	115	0	0	0	0	0
Palmerston North City	2014	JST	_	0	0	0	0	0	0	0	0	0	0	0	2	0	0	0	0
Palmerston North City	2014	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	198	99825	55097
Palmerston North City	2015	DOG	_ALL-PURE_	4582	2247	2335	3298	2775	79	1	0	0	0	0	0	0	0	0	0
Palmerston North City	2015	DOG	_ALL-CROSS_	3151	1548	1603	2615	2088	63	0	0	0	0	0	0	0	0	0	0
Palmerston North City	2015	DOG	_ALL-DOGS_	7733	3795	3938	5913	4863	142	1	0	0	0	0	0	0	0	0	0
Palmerston North City	2015	DOG	Beagle	66	31	35	61	44	0	0	0	0	0	0	0	0	0	0	0
Palmerston North City	2015	DOG	Bichon Frise	137	57	80	120	81	0	0	0	0	0	0	0	0	0	0	0
Palmerston North City	2015	DOG	Boxer	87	47	40	62	49	0	0	0	0	0	0	0	0	0	0	0
Palmerston North City	2015	DOG	Cattle, Australian	26	19	7	17	16	0	0	0	0	0	0	0	0	0	0	0
Palmerston North City	2015	DOG	Chihuahua, Long Coat	41	27	14	33	30	0	0	0	0	0	0	0	0	0	0	0
Palmerston North City	2015	DOG	Chihuahua, Smooth Coat	26	12	14	20	18	0	0	0	0	0	0	0	0	0	0	0
Palmerston North City	2015	DOG	Collie, Bearded	16	7	9	13	9	0	0	0	0	0	0	0	0	0	0	0
Palmerston North City	2015	DOG	Collie, Border	201	96	105	135	114	0	0	0	0	0	0	0	0	0	0	0
Palmerston North City	2015	DOG	Collie, Rough	26	9	17	17	13	0	0	0	0	0	0	0	0	0	0	0
Palmerston North City	2015	DOG	Collie, Smooth	6	2	4	3	1	0	0	0	0	0	0	0	0	0	0	0
Palmerston North City	2015	DOG	Greyhound	53	23	30	49	41	1	0	0	0	0	0	0	0	0	0	0
Palmerston North City	2015	DOG	Heading	58	33	25	23	15	0	0	0	0	0	0	0	0	0	0	0
Palmerston North City	2015	DOG	Huntaway	96	46	50	41	22	0	0	0	0	0	0	0	0	0	0	0
Palmerston North City	2015	DOG	Maltese	33	14	19	23	23	0	0	0	0	0	0	0	0	0	0	0
Palmerston North City	2015	DOG	Poodle, Miniature	47	21	26	43	27	0	0	0	0	0	0	0	0	0	0	0
Palmerston North City	2015	DOG	Poodle, Toy	44	21	23	38	30	0	0	0	0	0	0	0	0	0	0	0
Palmerston North City	2015	DOG	Retriever, Golden	167	78	89	114	96	0	0	0	0	0	0	0	0	0	0	0
Palmerston North City	2015	DOG	Retriever, Labrador	692	345	347	514	425	0	0	0	0	0	0	0	0	0	0	0
Palmerston North City	2015	DOG	Rottweiler	165	82	83	96	128	5	0	0	0	0	0	0	0	0	0	0
Palmerston North City	2015	DOG	Schnauzer, Miniature	88	44	44	64	67	0	0	0	0	0	0	0	0	0	0	0
Palmerston North City	2015	DOG	Shepherd, German	208	102	106	130	145	1	0	0	0	0	0	0	0	0	0	0
Palmerston North City	2015	DOG	Shih Tzu	83	36	47	59	69	0	0	0	0	0	0	0	0	0	0	0
Palmerston North City	2015	DOG	Spaniel, Cavalier King Charles	87	42	45	64	65	0	0	0	0	0	0	0	0	0	0	0
Palmerston North City	2015	DOG	Spaniel, Cocker	60	23	37	43	34	0	0	0	0	0	0	0	0	0	0	0
Palmerston North City	2015	DOG	Spaniel, English Springer	43	24	19	25	20	0	0	0	0	0	0	0	0	0	0	0
Palmerston North City	2015	DOG	Terrier, American Pit Bull	54	27	27	31	39	53	0	0	0	0	0	0	0	0	0	0
Palmerston North City	2015	DOG	Terrier, Fox (Smooth)	265	140	125	229	133	1	0	0	0	0	0	0	0	0	0	0
Palmerston North City	2015	DOG	Terrier, Jack Russell	230	105	125	189	118	0	0	0	0	0	0	0	0	0	0	0
Palmerston North City	2015	DOG	Terrier, Staffordshire Bull	101	51	50	67	68	3	0	0	0	0	0	0	0	0	0	0
Palmerston North City	2015	DOG	Terrier, West Highland White	69	34	35	54	43	0	0	0	0	0	0	0	0	0	0	0
Palmerston North City	2015	DOG	_Unidentified_	1307	649	658	921	792	15	1	0	0	0	0	0	0	0	0	0
Palmerston North City	2015	OWN	_	0	0	0	0	0	0	0	0	0	6176	87	0	0	0	0	0
Palmerston North City	2015	JST	_	0	0	0	0	0	0	0	0	0	0	0	4	1	0	0	0
Palmerston North City	2015	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	228	74575	140151
Palmerston North City	2016	DOG	_ALL-PURE_	4658	2279	2379	3358	3285	73	1	0	0	0	0	0	0	0	0	0
Palmerston North City	2016	DOG	_ALL-CROSS_	3220	1587	1633	2668	2415	62	0	0	0	0	0	0	0	0	0	0
Palmerston North City	2016	DOG	_ALL-DOGS_	7878	3866	4012	6026	5700	135	1	0	0	0	0	0	0	0	0	0
Palmerston North City	2016	DOG	Beagle	64	32	32	59	50	0	0	0	0	0	0	0	0	0	0	0
Palmerston North City	2016	DOG	Bichon Frise	138	60	78	121	101	0	0	0	0	0	0	0	0	0	0	0
Palmerston North City	2016	DOG	Boxer	95	48	47	71	66	2	0	0	0	0	0	0	0	0	0	0
Palmerston North City	2016	DOG	Cattle, Australian	25	18	7	17	17	0	0	0	0	0	0	0	0	0	0	0
Palmerston North City	2016	DOG	Chihuahua, Long Coat	46	29	17	33	38	0	0	0	0	0	0	0	0	0	0	0
Palmerston North City	2016	DOG	Chihuahua, Smooth Coat	33	15	18	24	21	0	0	0	0	0	0	0	0	0	0	0
Palmerston North City	2016	DOG	Collie, Bearded	19	9	10	15	13	0	0	0	0	0	0	0	0	0	0	0
Palmerston North City	2016	DOG	Collie, Border	210	98	112	141	139	0	0	0	0	0	0	0	0	0	0	0
Palmerston North City	2016	DOG	Collie, Rough	26	8	18	20	15	0	0	0	0	0	0	0	0	0	0	0
Palmerston North City	2016	DOG	Collie, Smooth	6	2	4	3	1	0	0	0	0	0	0	0	0	0	0	0
Palmerston North City	2016	DOG	Greyhound	58	20	38	56	50	1	0	0	0	0	0	0	0	0	0	0
Palmerston North City	2016	DOG	Heading	66	39	27	21	23	0	0	0	0	0	0	0	0	0	0	0
Palmerston North City	2016	DOG	Huntaway	108	46	62	44	31	0	0	0	0	0	0	0	0	0	0	0
Palmerston North City	2016	DOG	Maltese	31	10	21	24	26	0	0	0	0	0	0	0	0	0	0	0
Palmerston North City	2016	DOG	Poodle, Miniature	44	21	23	40	30	0	0	0	0	0	0	0	0	0	0	0
Palmerston North City	2016	DOG	Poodle, Toy	41	21	20	34	30	0	0	0	0	0	0	0	0	0	0	0
Palmerston North City	2016	DOG	Retriever, Golden	177	82	95	123	122	0	0	0	0	0	0	0	0	0	0	0
Palmerston North City	2016	DOG	Retriever, Labrador	704	349	355	529	501	0	0	0	0	0	0	0	0	0	0	0
Palmerston North City	2016	DOG	Rottweiler	172	88	84	109	144	6	0	0	0	0	0	0	0	0	0	0
Palmerston North City	2016	DOG	Schnauzer, Miniature	99	45	54	69	81	0	0	0	0	0	0	0	0	0	0	0
Palmerston North City	2016	DOG	Shepherd, German	204	104	100	140	161	1	0	0	0	0	0	0	0	0	0	0
Palmerston North City	2016	DOG	Shih Tzu	89	40	49	65	75	0	0	0	0	0	0	0	0	0	0	0
Palmerston North City	2016	DOG	Spaniel, Cavalier King Charles	91	41	50	69	81	0	0	0	0	0	0	0	0	0	0	0
Palmerston North City	2016	DOG	Spaniel, Cocker	58	25	33	41	44	0	0	0	0	0	0	0	0	0	0	0
Palmerston North City	2016	DOG	Spaniel, English Springer	45	23	22	28	32	0	0	0	0	0	0	0	0	0	0	0
Palmerston North City	2016	DOG	Terrier, American Pit Bull	45	24	21	33	38	45	0	0	0	0	0	0	0	0	0	0
Palmerston North City	2016	DOG	Terrier, Fox (Smooth)	246	124	122	205	152	1	0	0	0	0	0	0	0	0	0	0
Palmerston North City	2016	DOG	Terrier, Jack Russell	214	91	123	176	138	0	0	0	0	0	0	0	0	0	0	0
Palmerston North City	2016	DOG	Terrier, Staffordshire Bull	108	55	53	71	84	4	0	0	0	0	0	0	0	0	0	0
Palmerston North City	2016	DOG	Terrier, West Highland White	72	38	34	56	53	0	0	0	0	0	0	0	0	0	0	0
Palmerston North City	2016	DOG	_Unidentified_	1324	674	650	921	928	13	1	0	0	0	0	0	0	0	0	0
Palmerston North City	2016	OWN	_	0	0	0	0	0	0	0	0	1	6329	81	0	0	0	0	0
Papakura District	2001	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	21	19000	0
Papakura District	2002	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	19	7962	0
Papakura District	2003	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	30	6906	0
Papakura District	2004	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	121	22588	0
Papakura District	2005	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	114	14482	0
Papakura District	2006	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	106	25909	20751
Papakura District	2007	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	103	17526	22888
Papakura District	2008	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	103	23643	19719
Papakura District	2009	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	112	19245	25128
Papakura District	2010	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	109	52366	32255
Papakura District	2011	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	88	18446	19736
Papakura District	2012	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	67	26505	43329
Papakura District	2013	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	118	39233	41260
Papakura District	2014	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	105	26455	35344
Papakura District	2015	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	96	21495	22635
Porirua City	2001	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	14	901	0
Porirua City	2002	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	16	11990	0
Porirua City	2003	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	26	9619	0
Porirua City	2004	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	46	3250	0
Porirua City	2005	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	76	15600	0
Porirua City	2006	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	76	14382	11382
Porirua City	2007	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	104	11253	8733
Porirua City	2008	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	129	54591	48588
Porirua City	2009	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	146	28495	29106
Porirua City	2010	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	123	23738	26034
Porirua City	2011	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	144	20532	30582
Porirua City	2012	JST	_	0	0	0	0	0	0	0	0	0	0	0	3	2	0	0	0
Porirua City	2012	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	143	25403	24343
Porirua City	2013	DOG	_ALL-PURE_	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Porirua City	2013	DOG	_ALL-CROSS_	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Porirua City	2013	DOG	_ALL-DOGS_	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Porirua City	2013	DOG	Beagle	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Porirua City	2013	DOG	Bichon Frise	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Porirua City	2013	DOG	Boxer	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Porirua City	2013	DOG	Cattle, Australian	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Porirua City	2013	DOG	Chihuahua, Long Coat	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Porirua City	2013	DOG	Chihuahua, Smooth Coat	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Porirua City	2013	DOG	Collie, Bearded	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Porirua City	2013	DOG	Collie, Border	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Porirua City	2013	DOG	Collie, Rough	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Porirua City	2013	DOG	Collie, Smooth	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Porirua City	2013	DOG	Greyhound	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Porirua City	2013	DOG	Heading	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Porirua City	2013	DOG	Huntaway	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Porirua City	2013	DOG	Maltese	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Porirua City	2013	DOG	Poodle, Miniature	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Porirua City	2013	DOG	Poodle, Toy	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Porirua City	2013	DOG	Retriever, Golden	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Porirua City	2013	DOG	Retriever, Labrador	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Porirua City	2013	DOG	Rottweiler	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Porirua City	2013	DOG	Schnauzer, Miniature	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Porirua City	2013	DOG	Shepherd, German	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Porirua City	2013	DOG	Shih Tzu	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Porirua City	2013	DOG	Spaniel, Cavalier King Charles	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Porirua City	2013	DOG	Spaniel, Cocker	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Porirua City	2013	DOG	Spaniel, English Springer	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Porirua City	2013	DOG	Terrier, American Pit Bull	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Porirua City	2013	DOG	Terrier, Fox (Smooth)	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Porirua City	2013	DOG	Terrier, Jack Russell	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Porirua City	2013	DOG	Terrier, Staffordshire Bull	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Porirua City	2013	DOG	Terrier, West Highland White	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Porirua City	2013	DOG	_Unidentified_	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Porirua City	2013	OWN	_	0	0	0	0	0	0	0	0	0	0	51	0	0	0	0	0
Porirua City	2013	JST	_	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Porirua City	2013	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	148	34318	27829
Porirua City	2014	DOG	_ALL-PURE_	2669	1237	1432	2099	1954	93	1	0	0	0	0	0	0	0	0	0
Porirua City	2014	DOG	_ALL-CROSS_	1947	912	1035	1634	1663	108	2	0	0	0	0	0	0	0	0	0
Porirua City	2014	DOG	_ALL-DOGS_	4616	2149	2467	3733	3617	201	3	0	0	0	0	0	0	0	0	0
Porirua City	2014	DOG	Beagle	42	22	20	40	34	0	0	0	0	0	0	0	0	0	0	0
Porirua City	2014	DOG	Bichon Frise	94	46	48	80	71	0	0	0	0	0	0	0	0	0	0	0
Porirua City	2014	DOG	Boxer	48	22	26	41	39	0	0	0	0	0	0	0	0	0	0	0
Porirua City	2014	DOG	Cattle, Australian	22	7	15	16	14	1	0	0	0	0	0	0	0	0	0	0
Porirua City	2014	DOG	Chihuahua, Long Coat	32	17	15	23	28	0	0	0	0	0	0	0	0	0	0	0
Porirua City	2014	DOG	Chihuahua, Smooth Coat	20	7	13	18	14	0	0	0	0	0	0	0	0	0	0	0
Porirua City	2014	DOG	Collie, Bearded	6	2	4	5	3	0	0	0	0	0	0	0	0	0	0	0
Porirua City	2014	DOG	Collie, Border	130	68	62	98	82	0	0	0	0	0	0	0	0	0	0	0
Porirua City	2014	DOG	Collie, Rough	6	3	3	4	3	0	0	0	0	0	0	0	0	0	0	0
Porirua City	2014	DOG	Collie, Smooth	13	8	5	12	3	0	0	0	0	0	0	0	0	0	0	0
Porirua City	2014	DOG	Greyhound	33	16	17	30	30	0	0	0	0	0	0	0	0	0	0	0
Porirua City	2014	DOG	Heading	32	14	18	12	10	0	0	0	0	0	0	0	0	0	0	0
Porirua City	2014	DOG	Huntaway	71	27	44	36	29	0	0	0	0	0	0	0	0	0	0	0
Porirua City	2014	DOG	Maltese	17	8	9	13	16	0	0	0	0	0	0	0	0	0	0	0
Porirua City	2014	DOG	Poodle, Miniature	22	13	9	21	15	0	0	0	0	0	0	0	0	0	0	0
Porirua City	2014	DOG	Poodle, Toy	22	11	11	20	17	0	0	0	0	0	0	0	0	0	0	0
Porirua City	2014	DOG	Retriever, Golden	80	35	45	63	52	0	0	0	0	0	0	0	0	0	0	0
Porirua City	2014	DOG	Retriever, Labrador	393	181	212	332	289	0	0	0	0	0	0	0	0	0	0	0
Porirua City	2014	DOG	Rottweiler	77	35	42	46	63	1	0	0	0	0	0	0	0	0	0	0
Porirua City	2014	DOG	Schnauzer, Miniature	24	9	15	21	23	0	0	0	0	0	0	0	0	0	0	0
Porirua City	2014	DOG	Shepherd, German	133	63	70	96	101	1	0	0	0	0	0	0	0	0	0	0
Porirua City	2014	DOG	Shih Tzu	41	17	24	34	36	0	0	0	0	0	0	0	0	0	0	0
Porirua City	2014	DOG	Spaniel, Cavalier King Charles	29	12	17	24	25	0	0	0	0	0	0	0	0	0	0	0
Porirua City	2014	DOG	Spaniel, Cocker	29	17	12	26	23	0	0	0	0	0	0	0	0	0	0	0
Porirua City	2014	DOG	Spaniel, English Springer	20	7	13	16	16	0	0	0	0	0	0	0	0	0	0	0
Porirua City	2014	DOG	Terrier, American Pit Bull	89	36	53	55	80	82	1	0	0	0	0	0	0	0	0	0
Porirua City	2014	DOG	Terrier, Fox (Smooth)	119	54	65	108	70	0	0	0	0	0	0	0	0	0	0	0
Porirua City	2014	DOG	Terrier, Jack Russell	120	51	69	107	73	0	0	0	0	0	0	0	0	0	0	0
Porirua City	2014	DOG	Terrier, Staffordshire Bull	111	65	46	78	79	2	0	0	0	0	0	0	0	0	0	0
Porirua City	2014	DOG	Terrier, West Highland White	30	9	21	27	23	0	0	0	0	0	0	0	0	0	0	0
Porirua City	2014	DOG	_Unidentified_	764	355	409	597	593	6	0	0	0	0	0	0	0	0	0	0
Porirua City	2014	OWN	_	0	0	0	0	0	0	0	0	0	3842	24	0	0	0	0	0
Porirua City	2014	JST	_	0	0	0	0	0	0	0	0	0	0	0	3	1	0	0	0
Porirua City	2014	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	151	24216	30420
Porirua City	2015	DOG	_ALL-PURE_	2633	1215	1418	2069	2051	92	0	0	0	0	0	0	0	0	0	0
Porirua City	2015	DOG	_ALL-CROSS_	1996	936	1060	1710	1761	122	4	0	0	0	0	0	0	0	0	0
Porirua City	2015	DOG	_ALL-DOGS_	4629	2151	2478	3779	3812	214	4	0	0	0	0	0	0	0	0	0
Porirua City	2015	DOG	Beagle	43	25	18	41	34	0	0	0	0	0	0	0	0	0	0	0
Porirua City	2015	DOG	Bichon Frise	90	40	50	79	69	0	0	0	0	0	0	0	0	0	0	0
Porirua City	2015	DOG	Boxer	45	19	26	38	41	0	0	0	0	0	0	0	0	0	0	0
Porirua City	2015	DOG	Cattle, Australian	21	11	10	19	16	1	0	0	0	0	0	0	0	0	0	0
Porirua City	2015	DOG	Chihuahua, Long Coat	39	18	21	26	35	0	0	0	0	0	0	0	0	0	0	0
Porirua City	2015	DOG	Chihuahua, Smooth Coat	19	7	12	17	14	0	0	0	0	0	0	0	0	0	0	0
Porirua City	2015	DOG	Collie, Bearded	6	3	3	4	4	0	0	0	0	0	0	0	0	0	0	0
Porirua City	2015	DOG	Collie, Border	125	68	57	95	85	0	0	0	0	0	0	0	0	0	0	0
Porirua City	2015	DOG	Collie, Rough	4	2	2	2	3	0	0	0	0	0	0	0	0	0	0	0
Porirua City	2015	DOG	Collie, Smooth	12	7	5	11	4	0	0	0	0	0	0	0	0	0	0	0
Porirua City	2015	DOG	Greyhound	28	13	15	27	26	0	0	0	0	0	0	0	0	0	0	0
Porirua City	2015	DOG	Heading	30	13	17	11	10	0	0	0	0	0	0	0	0	0	0	0
Porirua City	2015	DOG	Huntaway	78	31	47	38	32	0	0	0	0	0	0	0	0	0	0	0
Porirua City	2015	DOG	Maltese	25	12	13	21	23	0	0	0	0	0	0	0	0	0	0	0
Porirua City	2015	DOG	Poodle, Miniature	25	15	10	21	19	0	0	0	0	0	0	0	0	0	0	0
Porirua City	2015	DOG	Poodle, Toy	22	10	12	20	20	0	0	0	0	0	0	0	0	0	0	0
Porirua City	2015	DOG	Retriever, Golden	86	38	48	62	65	0	0	0	0	0	0	0	0	0	0	0
Porirua City	2015	DOG	Retriever, Labrador	389	174	215	333	304	0	0	0	0	0	0	0	0	0	0	0
Porirua City	2015	DOG	Rottweiler	80	37	43	54	67	1	0	0	0	0	0	0	0	0	0	0
Porirua City	2015	DOG	Schnauzer, Miniature	32	16	16	26	28	0	0	0	0	0	0	0	0	0	0	0
Porirua City	2015	DOG	Shepherd, German	136	59	77	100	112	2	0	0	0	0	0	0	0	0	0	0
Porirua City	2015	DOG	Shih Tzu	40	16	24	31	37	0	0	0	0	0	0	0	0	0	0	0
Porirua City	2015	DOG	Spaniel, Cavalier King Charles	30	10	20	26	28	0	0	0	0	0	0	0	0	0	0	0
Porirua City	2015	DOG	Spaniel, Cocker	28	17	11	27	22	1	0	0	0	0	0	0	0	0	0	0
Porirua City	2015	DOG	Spaniel, English Springer	22	8	14	19	17	0	0	0	0	0	0	0	0	0	0	0
Porirua City	2015	DOG	Terrier, American Pit Bull	83	35	48	56	78	81	0	0	0	0	0	0	0	0	0	0
Porirua City	2015	DOG	Terrier, Fox (Smooth)	115	50	65	100	73	0	0	0	0	0	0	0	0	0	0	0
Porirua City	2015	DOG	Terrier, Jack Russell	121	51	70	109	80	0	0	0	0	0	0	0	0	0	0	0
Porirua City	2015	DOG	Terrier, Staffordshire Bull	103	56	47	70	81	1	0	0	0	0	0	0	0	0	0	0
Porirua City	2015	DOG	Terrier, West Highland White	28	11	17	26	25	0	0	0	0	0	0	0	0	0	0	0
Porirua City	2015	DOG	_Unidentified_	728	343	385	560	599	5	0	0	0	0	0	0	0	0	0	0
Porirua City	2015	OWN	_	0	0	0	0	0	0	0	0	2	3864	28	0	0	0	0	0
Porirua City	2015	JST	_	0	0	0	0	0	0	0	0	0	0	0	8	0	0	0	0
Porirua City	2015	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	179	29749	39939
Porirua City	2016	DOG	_ALL-PURE_	2685	1249	1436	2143	2249	92	0	0	0	0	0	0	0	0	0	0
Porirua City	2016	DOG	_ALL-CROSS_	2108	998	1110	1875	1942	141	2	0	0	0	0	0	0	0	0	0
Porirua City	2016	DOG	_ALL-DOGS_	4793	2247	2546	4018	4191	233	2	0	0	0	0	0	0	0	0	0
Porirua City	2016	DOG	Beagle	42	20	22	38	35	0	0	0	0	0	0	0	0	0	0	0
Porirua City	2016	DOG	Bichon Frise	86	42	44	80	71	0	0	0	0	0	0	0	0	0	0	0
Porirua City	2016	DOG	Boxer	40	15	25	36	38	0	0	0	0	0	0	0	0	0	0	0
Porirua City	2016	DOG	Cattle, Australian	21	10	11	19	15	1	0	0	0	0	0	0	0	0	0	0
Porirua City	2016	DOG	Chihuahua, Long Coat	37	19	18	28	34	0	0	0	0	0	0	0	0	0	0	0
Porirua City	2016	DOG	Chihuahua, Smooth Coat	20	6	14	19	14	0	0	0	0	0	0	0	0	0	0	0
Porirua City	2016	DOG	Collie, Bearded	7	4	3	2	5	0	0	0	0	0	0	0	0	0	0	0
Porirua City	2016	DOG	Collie, Border	128	70	58	101	97	0	0	0	0	0	0	0	0	0	0	0
Porirua City	2016	DOG	Collie, Rough	4	2	2	3	4	0	0	0	0	0	0	0	0	0	0	0
Porirua City	2016	DOG	Collie, Smooth	9	5	4	8	4	0	0	0	0	0	0	0	0	0	0	0
Porirua City	2016	DOG	Greyhound	31	14	17	30	28	0	0	0	0	0	0	0	0	0	0	0
Porirua City	2016	DOG	Heading	29	15	14	12	11	0	0	0	0	0	0	0	0	0	0	0
Porirua City	2016	DOG	Huntaway	76	30	46	40	41	0	0	0	0	0	0	0	0	0	0	0
Porirua City	2016	DOG	Maltese	25	14	11	21	24	0	0	0	0	0	0	0	0	0	0	0
Porirua City	2016	DOG	Poodle, Miniature	29	17	12	23	24	0	0	0	0	0	0	0	0	0	0	0
Porirua City	2016	DOG	Poodle, Toy	19	8	11	17	17	0	0	0	0	0	0	0	0	0	0	0
Porirua City	2016	DOG	Retriever, Golden	83	38	45	64	70	0	0	0	0	0	0	0	0	0	0	0
Porirua City	2016	DOG	Retriever, Labrador	394	176	218	343	328	1	0	0	0	0	0	0	0	0	0	0
Porirua City	2016	DOG	Rottweiler	86	40	46	56	80	1	0	0	0	0	0	0	0	0	0	0
Porirua City	2016	DOG	Schnauzer, Miniature	41	21	20	37	41	0	0	0	0	0	0	0	0	0	0	0
Porirua City	2016	DOG	Shepherd, German	136	62	74	102	116	3	0	0	0	0	0	0	0	0	0	0
Porirua City	2016	DOG	Shih Tzu	52	20	32	39	50	0	0	0	0	0	0	0	0	0	0	0
Porirua City	2016	DOG	Spaniel, Cavalier King Charles	34	12	22	29	32	0	0	0	0	0	0	0	0	0	0	0
Porirua City	2016	DOG	Spaniel, Cocker	23	16	7	23	20	1	0	0	0	0	0	0	0	0	0	0
Porirua City	2016	DOG	Spaniel, English Springer	21	7	14	17	19	0	0	0	0	0	0	0	0	0	0	0
Porirua City	2016	DOG	Terrier, American Pit Bull	82	35	47	70	76	81	0	0	0	0	0	0	0	0	0	0
Porirua City	2016	DOG	Terrier, Fox (Smooth)	108	48	60	97	76	0	0	0	0	0	0	0	0	0	0	0
Porirua City	2016	DOG	Terrier, Jack Russell	117	50	67	104	85	0	0	0	0	0	0	0	0	0	0	0
Porirua City	2016	DOG	Terrier, Staffordshire Bull	87	46	41	61	76	1	0	0	0	0	0	0	0	0	0	0
Porirua City	2016	DOG	Terrier, West Highland White	28	12	16	27	25	0	0	0	0	0	0	0	0	0	0	0
Porirua City	2016	DOG	_Unidentified_	790	375	415	597	693	3	0	0	0	0	0	0	0	0	0	0
Porirua City	2016	OWN	_	0	0	0	0	0	0	0	0	2	4034	44	0	0	0	0	0
Queenstown-Lakes District	2001	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	14	3039	0
Queenstown-Lakes District	2002	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	13	626	0
Queenstown-Lakes District	2003	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	14	1121	0
Queenstown-Lakes District	2004	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	39	10770	0
Queenstown-Lakes District	2005	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	25	5788	0
Queenstown-Lakes District	2006	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	40	4407	9494
Queenstown-Lakes District	2007	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	45	4154	4912
Queenstown-Lakes District	2008	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	37	8542	7363
Queenstown-Lakes District	2009	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	46	4853	5587
Queenstown-Lakes District	2010	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	59	10734	10932
Queenstown-Lakes District	2011	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	70	8303	7978
Queenstown-Lakes District	2012	JST	_	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Queenstown-Lakes District	2012	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	64	8226	7630
Queenstown-Lakes District	2013	DOG	_ALL-PURE_	2842	1359	1483	1721	1517	14	0	0	0	0	0	0	0	0	0	0
Queenstown-Lakes District	2013	DOG	_ALL-CROSS_	922	454	468	718	625	4	1	0	0	0	0	0	0	0	0	0
Queenstown-Lakes District	2013	DOG	_ALL-DOGS_	3764	1813	1951	2439	2142	18	1	0	0	0	0	0	0	0	0	0
Queenstown-Lakes District	2013	DOG	Beagle	35	18	17	25	20	0	0	0	0	0	0	0	0	0	0	0
Queenstown-Lakes District	2013	DOG	Bichon Frise	51	24	27	39	35	0	0	0	0	0	0	0	0	0	0	0
Queenstown-Lakes District	2013	DOG	Boxer	28	13	15	24	21	0	0	0	0	0	0	0	0	0	0	0
Queenstown-Lakes District	2013	DOG	Cattle, Australian	9	5	4	4	4	0	0	0	0	0	0	0	0	0	0	0
Queenstown-Lakes District	2013	DOG	Chihuahua, Long Coat	7	4	3	4	5	0	0	0	0	0	0	0	0	0	0	0
Queenstown-Lakes District	2013	DOG	Chihuahua, Smooth Coat	12	10	2	10	11	0	0	0	0	0	0	0	0	0	0	0
Queenstown-Lakes District	2013	DOG	Collie, Bearded	36	10	26	16	13	0	0	0	0	0	0	0	0	0	0	0
Queenstown-Lakes District	2013	DOG	Collie, Border	194	85	109	102	83	0	0	0	0	0	0	0	0	0	0	0
Queenstown-Lakes District	2013	DOG	Collie, Rough	12	8	4	2	1	0	0	0	0	0	0	0	0	0	0	0
Queenstown-Lakes District	2013	DOG	Collie, Smooth	177	70	107	16	5	2	0	0	0	0	0	0	0	0	0	0
Queenstown-Lakes District	2013	DOG	Greyhound	1	0	1	1	1	0	0	0	0	0	0	0	0	0	0	0
Queenstown-Lakes District	2013	DOG	Heading	45	24	21	10	3	0	0	0	0	0	0	0	0	0	0	0
Queenstown-Lakes District	2013	DOG	Huntaway	116	57	59	42	29	2	0	0	0	0	0	0	0	0	0	0
Queenstown-Lakes District	2013	DOG	Maltese	30	12	18	25	20	0	0	0	0	0	0	0	0	0	0	0
Queenstown-Lakes District	2013	DOG	Poodle, Miniature	15	11	4	10	6	0	0	0	0	0	0	0	0	0	0	0
Queenstown-Lakes District	2013	DOG	Poodle, Toy	12	6	6	6	7	0	0	0	0	0	0	0	0	0	0	0
Queenstown-Lakes District	2013	DOG	Retriever, Golden	121	62	59	74	73	0	0	0	0	0	0	0	0	0	0	0
Queenstown-Lakes District	2013	DOG	Retriever, Labrador	533	272	261	342	300	0	0	0	0	0	0	0	0	0	0	0
Queenstown-Lakes District	2013	DOG	Rottweiler	18	8	10	10	14	0	0	0	0	0	0	0	0	0	0	0
Queenstown-Lakes District	2013	DOG	Schnauzer, Miniature	41	23	18	36	30	0	0	0	0	0	0	0	0	0	0	0
Queenstown-Lakes District	2013	DOG	Shepherd, German	50	34	16	29	33	1	0	0	0	0	0	0	0	0	0	0
Queenstown-Lakes District	2013	DOG	Shih Tzu	11	5	6	9	7	0	0	0	0	0	0	0	0	0	0	0
Queenstown-Lakes District	2013	DOG	Spaniel, Cavalier King Charles	23	7	16	17	12	0	0	0	0	0	0	0	0	0	0	0
Queenstown-Lakes District	2013	DOG	Spaniel, Cocker	43	24	19	31	28	0	0	0	0	0	0	0	0	0	0	0
Queenstown-Lakes District	2013	DOG	Spaniel, English Springer	67	39	28	47	47	0	0	0	0	0	0	0	0	0	0	0
Queenstown-Lakes District	2013	DOG	Terrier, American Pit Bull	2	0	2	1	2	2	0	0	0	0	0	0	0	0	0	0
Queenstown-Lakes District	2013	DOG	Terrier, Fox (Smooth)	58	24	34	41	32	0	0	0	0	0	0	0	0	0	0	0
Queenstown-Lakes District	2013	DOG	Terrier, Jack Russell	229	98	131	174	99	0	0	0	0	0	0	0	0	0	0	0
Queenstown-Lakes District	2013	DOG	Terrier, Staffordshire Bull	96	47	49	63	77	2	0	0	0	0	0	0	0	0	0	0
Queenstown-Lakes District	2013	DOG	Terrier, West Highland White	45	15	30	34	22	0	0	0	0	0	0	0	0	0	0	0
Queenstown-Lakes District	2013	DOG	_Unidentified_	725	344	381	477	477	5	0	0	0	0	0	0	0	0	0	0
Queenstown-Lakes District	2013	OWN	_	0	0	0	0	0	0	0	0	0	2979	19	0	0	0	0	0
Queenstown-Lakes District	2013	JST	_	0	0	0	0	0	0	0	0	0	0	0	1	1	0	0	0
Queenstown-Lakes District	2013	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	68	9779	9152
Queenstown-Lakes District	2014	DOG	_ALL-PURE_	2871	1370	1501	1775	1629	16	0	0	0	0	0	0	0	0	0	0
Queenstown-Lakes District	2014	DOG	_ALL-CROSS_	956	453	503	753	688	4	1	0	0	0	0	0	0	0	0	0
Queenstown-Lakes District	2014	DOG	_ALL-DOGS_	3827	1823	2004	2528	2317	20	1	0	0	0	0	0	0	0	0	0
Queenstown-Lakes District	2014	DOG	Beagle	34	18	16	25	19	0	0	0	0	0	0	0	0	0	0	0
Queenstown-Lakes District	2014	DOG	Bichon Frise	55	24	31	38	37	0	0	0	0	0	0	0	0	0	0	0
Queenstown-Lakes District	2014	DOG	Boxer	28	17	11	23	20	0	0	0	0	0	0	0	0	0	0	0
Queenstown-Lakes District	2014	DOG	Cattle, Australian	9	5	4	6	5	0	0	0	0	0	0	0	0	0	0	0
Queenstown-Lakes District	2014	DOG	Chihuahua, Long Coat	7	4	3	5	5	0	0	0	0	0	0	0	0	0	0	0
Queenstown-Lakes District	2014	DOG	Chihuahua, Smooth Coat	16	14	2	13	13	0	0	0	0	0	0	0	0	0	0	0
Queenstown-Lakes District	2014	DOG	Collie, Bearded	31	7	24	15	11	0	0	0	0	0	0	0	0	0	0	0
Queenstown-Lakes District	2014	DOG	Collie, Border	198	85	113	107	89	0	0	0	0	0	0	0	0	0	0	0
Queenstown-Lakes District	2014	DOG	Collie, Rough	11	7	4	3	2	0	0	0	0	0	0	0	0	0	0	0
Queenstown-Lakes District	2014	DOG	Collie, Smooth	173	75	98	16	7	2	0	0	0	0	0	0	0	0	0	0
Queenstown-Lakes District	2014	DOG	Greyhound	1	0	1	1	1	0	0	0	0	0	0	0	0	0	0	0
Queenstown-Lakes District	2014	DOG	Heading	46	20	26	6	4	0	0	0	0	0	0	0	0	0	0	0
Queenstown-Lakes District	2014	DOG	Huntaway	117	52	65	39	29	2	0	0	0	0	0	0	0	0	0	0
Queenstown-Lakes District	2014	DOG	Maltese	29	12	17	25	22	0	0	0	0	0	0	0	0	0	0	0
Queenstown-Lakes District	2014	DOG	Poodle, Miniature	15	10	5	10	7	0	0	0	0	0	0	0	0	0	0	0
Queenstown-Lakes District	2014	DOG	Poodle, Toy	15	7	8	9	8	0	0	0	0	0	0	0	0	0	0	0
Queenstown-Lakes District	2014	DOG	Retriever, Golden	117	65	52	77	72	0	0	0	0	0	0	0	0	0	0	0
Queenstown-Lakes District	2014	DOG	Retriever, Labrador	525	272	253	355	325	0	0	0	0	0	0	0	0	0	0	0
Queenstown-Lakes District	2014	DOG	Rottweiler	17	7	10	9	15	0	0	0	0	0	0	0	0	0	0	0
Queenstown-Lakes District	2014	DOG	Schnauzer, Miniature	44	24	20	38	33	0	0	0	0	0	0	0	0	0	0	0
Queenstown-Lakes District	2014	DOG	Shepherd, German	49	30	19	27	35	1	0	0	0	0	0	0	0	0	0	0
Queenstown-Lakes District	2014	DOG	Shih Tzu	12	4	8	9	9	0	0	0	0	0	0	0	0	0	0	0
Queenstown-Lakes District	2014	DOG	Spaniel, Cavalier King Charles	29	11	18	19	18	0	0	0	0	0	0	0	0	0	0	0
Queenstown-Lakes District	2014	DOG	Spaniel, Cocker	44	22	22	32	30	0	0	0	0	0	0	0	0	0	0	0
Queenstown-Lakes District	2014	DOG	Spaniel, English Springer	62	35	27	48	43	0	0	0	0	0	0	0	0	0	0	0
Queenstown-Lakes District	2014	DOG	Terrier, American Pit Bull	2	0	2	1	2	2	0	0	0	0	0	0	0	0	0	0
Queenstown-Lakes District	2014	DOG	Terrier, Fox (Smooth)	61	28	33	46	37	0	0	0	0	0	0	0	0	0	0	0
Queenstown-Lakes District	2014	DOG	Terrier, Jack Russell	219	95	124	174	99	0	0	0	0	0	0	0	0	0	0	0
Queenstown-Lakes District	2014	DOG	Terrier, Staffordshire Bull	93	42	51	65	79	4	0	0	0	0	0	0	0	0	0	0
Queenstown-Lakes District	2014	DOG	Terrier, West Highland White	45	15	30	33	25	0	0	0	0	0	0	0	0	0	0	0
Queenstown-Lakes District	2014	DOG	_Unidentified_	767	363	404	501	528	5	0	0	0	0	0	0	0	0	0	0
Queenstown-Lakes District	2014	OWN	_	0	0	0	0	0	0	0	0	0	3044	24	0	0	0	0	0
Queenstown-Lakes District	2014	JST	_	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Queenstown-Lakes District	2014	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	54	28256	24975
Queenstown-Lakes District	2015	DOG	_ALL-PURE_	2963	1411	1552	1851	1925	26	1	0	0	0	0	0	0	0	0	0
Queenstown-Lakes District	2015	DOG	_ALL-CROSS_	1036	497	539	811	819	2	1	0	0	0	0	0	0	0	0	0
Queenstown-Lakes District	2015	DOG	_ALL-DOGS_	3999	1908	2091	2662	2744	28	2	0	0	0	0	0	0	0	0	0
Queenstown-Lakes District	2015	DOG	Beagle	39	20	19	29	26	0	0	0	0	0	0	0	0	0	0	0
Queenstown-Lakes District	2015	DOG	Bichon Frise	54	23	31	39	40	0	0	0	0	0	0	0	0	0	0	0
Queenstown-Lakes District	2015	DOG	Boxer	30	20	10	25	25	0	0	0	0	0	0	0	0	0	0	0
Queenstown-Lakes District	2015	DOG	Cattle, Australian	11	6	5	7	7	0	0	0	0	0	0	0	0	0	0	0
Queenstown-Lakes District	2015	DOG	Chihuahua, Long Coat	11	8	3	7	10	0	0	0	0	0	0	0	0	0	0	0
Queenstown-Lakes District	2015	DOG	Chihuahua, Smooth Coat	15	12	3	13	14	0	0	0	0	0	0	0	0	0	0	0
Queenstown-Lakes District	2015	DOG	Collie, Bearded	37	12	25	13	13	0	0	0	0	0	0	0	0	0	0	0
Queenstown-Lakes District	2015	DOG	Collie, Border	211	87	124	105	105	1	0	0	0	0	0	0	0	0	0	0
Queenstown-Lakes District	2015	DOG	Collie, Rough	9	6	3	2	2	0	0	0	0	0	0	0	0	0	0	0
Queenstown-Lakes District	2015	DOG	Collie, Smooth	176	78	98	21	9	2	0	0	0	0	0	0	0	0	0	0
Queenstown-Lakes District	2015	DOG	Greyhound	1	0	1	1	1	0	0	0	0	0	0	0	0	0	0	0
Queenstown-Lakes District	2015	DOG	Heading	52	21	31	5	7	0	0	0	0	0	0	0	0	0	0	0
Queenstown-Lakes District	2015	DOG	Huntaway	135	60	75	43	37	2	0	0	0	0	0	0	0	0	0	0
Queenstown-Lakes District	2015	DOG	Maltese	33	13	20	27	28	0	0	0	0	0	0	0	0	0	0	0
Queenstown-Lakes District	2015	DOG	Poodle, Miniature	15	10	5	9	8	0	0	0	0	0	0	0	0	0	0	0
Queenstown-Lakes District	2015	DOG	Poodle, Toy	16	5	11	12	11	0	0	0	0	0	0	0	0	0	0	0
Queenstown-Lakes District	2015	DOG	Retriever, Golden	116	64	52	76	83	0	0	0	0	0	0	0	0	0	0	0
Queenstown-Lakes District	2015	DOG	Retriever, Labrador	539	267	272	366	372	0	0	0	0	0	0	0	0	0	0	0
Queenstown-Lakes District	2015	DOG	Rottweiler	19	8	11	10	19	0	0	0	0	0	0	0	0	0	0	0
Queenstown-Lakes District	2015	DOG	Schnauzer, Miniature	41	21	20	33	32	0	0	0	0	0	0	0	0	0	0	0
Queenstown-Lakes District	2015	DOG	Shepherd, German	48	30	18	31	41	3	0	0	0	0	0	0	0	0	0	0
Queenstown-Lakes District	2015	DOG	Shih Tzu	14	5	9	10	13	0	0	0	0	0	0	0	0	0	0	0
Queenstown-Lakes District	2015	DOG	Spaniel, Cavalier King Charles	28	12	16	20	23	0	0	0	0	0	0	0	0	0	0	0
Queenstown-Lakes District	2015	DOG	Spaniel, Cocker	46	25	21	33	36	0	0	0	0	0	0	0	0	0	0	0
Queenstown-Lakes District	2015	DOG	Spaniel, English Springer	60	33	27	46	47	0	0	0	0	0	0	0	0	0	0	0
Queenstown-Lakes District	2015	DOG	Terrier, American Pit Bull	3	2	1	0	3	2	1	0	0	0	0	0	0	0	0	0
Queenstown-Lakes District	2015	DOG	Terrier, Fox (Smooth)	62	29	33	44	45	0	0	0	0	0	0	0	0	0	0	0
Queenstown-Lakes District	2015	DOG	Terrier, Jack Russell	216	92	124	173	131	0	0	0	0	0	0	0	0	0	0	0
Queenstown-Lakes District	2015	DOG	Terrier, Staffordshire Bull	102	47	55	73	91	6	0	0	0	0	0	0	0	0	0	0
Queenstown-Lakes District	2015	DOG	Terrier, West Highland White	43	15	28	32	28	0	0	0	0	0	0	0	0	0	0	0
Queenstown-Lakes District	2015	DOG	_Unidentified_	781	380	401	546	618	10	0	0	0	0	0	0	0	0	0	0
Queenstown-Lakes District	2015	OWN	_	0	0	0	0	0	0	0	0	0	3185	21	0	0	0	0	0
Queenstown-Lakes District	2015	JST	_	0	0	0	0	0	0	0	0	0	0	0	8	2	0	0	0
Queenstown-Lakes District	2015	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	73	13080	17796
Queenstown-Lakes District	2016	DOG	_ALL-PURE_	3186	1508	1678	2009	2177	22	2	0	0	0	0	0	0	0	0	0
Queenstown-Lakes District	2016	DOG	_ALL-CROSS_	1069	507	562	845	880	4	1	0	0	0	0	0	0	0	0	0
Queenstown-Lakes District	2016	DOG	_ALL-DOGS_	4255	2015	2240	2854	3057	26	3	0	0	0	0	0	0	0	0	0
Queenstown-Lakes District	2016	DOG	Beagle	36	18	18	28	24	0	0	0	0	0	0	0	0	0	0	0
Queenstown-Lakes District	2016	DOG	Bichon Frise	56	23	33	40	38	0	0	0	0	0	0	0	0	0	0	0
Queenstown-Lakes District	2016	DOG	Boxer	36	23	13	30	30	0	0	0	0	0	0	0	0	0	0	0
Queenstown-Lakes District	2016	DOG	Cattle, Australian	14	7	7	10	7	0	0	0	0	0	0	0	0	0	0	0
Queenstown-Lakes District	2016	DOG	Chihuahua, Long Coat	10	7	3	8	9	0	0	0	0	0	0	0	0	0	0	0
Queenstown-Lakes District	2016	DOG	Chihuahua, Smooth Coat	19	15	4	15	16	0	0	0	0	0	0	0	0	0	0	0
Queenstown-Lakes District	2016	DOG	Collie, Bearded	32	8	24	14	15	0	0	0	0	0	0	0	0	0	0	0
Queenstown-Lakes District	2016	DOG	Collie, Border	223	101	122	114	125	1	0	0	0	0	0	0	0	0	0	0
Queenstown-Lakes District	2016	DOG	Collie, Rough	12	5	7	3	2	0	0	0	0	0	0	0	0	0	0	0
Queenstown-Lakes District	2016	DOG	Collie, Smooth	170	81	89	19	12	2	0	0	0	0	0	0	0	0	0	0
Queenstown-Lakes District	2016	DOG	Greyhound	4	1	3	2	2	0	0	0	0	0	0	0	0	0	0	0
Queenstown-Lakes District	2016	DOG	Heading	76	33	43	7	7	0	0	0	0	0	0	0	0	0	0	0
Queenstown-Lakes District	2016	DOG	Huntaway	133	56	77	42	40	2	0	0	0	0	0	0	0	0	0	0
Queenstown-Lakes District	2016	DOG	Maltese	39	16	23	33	34	0	0	0	0	0	0	0	0	0	0	0
Queenstown-Lakes District	2016	DOG	Poodle, Miniature	15	9	6	11	9	0	0	0	0	0	0	0	0	0	0	0
Queenstown-Lakes District	2016	DOG	Poodle, Toy	17	8	9	11	11	0	0	0	0	0	0	0	0	0	0	0
Queenstown-Lakes District	2016	DOG	Retriever, Golden	127	68	59	78	98	0	0	0	0	0	0	0	0	0	0	0
Queenstown-Lakes District	2016	DOG	Retriever, Labrador	574	284	290	400	425	0	0	0	0	0	0	0	0	0	0	0
Queenstown-Lakes District	2016	DOG	Rottweiler	30	17	13	20	30	0	1	0	0	0	0	0	0	0	0	0
Queenstown-Lakes District	2016	DOG	Schnauzer, Miniature	47	24	23	37	36	0	0	0	0	0	0	0	0	0	0	0
Queenstown-Lakes District	2016	DOG	Shepherd, German	51	33	18	34	42	3	0	0	0	0	0	0	0	0	0	0
Queenstown-Lakes District	2016	DOG	Shih Tzu	15	4	11	12	13	0	0	0	0	0	0	0	0	0	0	0
Queenstown-Lakes District	2016	DOG	Spaniel, Cavalier King Charles	31	12	19	24	26	0	0	0	0	0	0	0	0	0	0	0
Queenstown-Lakes District	2016	DOG	Spaniel, Cocker	56	33	23	37	45	0	0	0	0	0	0	0	0	0	0	0
Queenstown-Lakes District	2016	DOG	Spaniel, English Springer	63	37	26	45	53	0	0	0	0	0	0	0	0	0	0	0
Queenstown-Lakes District	2016	DOG	Terrier, American Pit Bull	2	0	2	1	2	1	1	0	0	0	0	0	0	0	0	0
Queenstown-Lakes District	2016	DOG	Terrier, Fox (Smooth)	60	29	31	44	42	0	0	0	0	0	0	0	0	0	0	0
Queenstown-Lakes District	2016	DOG	Terrier, Jack Russell	209	83	126	174	136	0	0	0	0	0	0	0	0	0	0	0
Queenstown-Lakes District	2016	DOG	Terrier, Staffordshire Bull	128	58	70	94	117	6	0	0	0	0	0	0	0	0	0	0
Queenstown-Lakes District	2016	DOG	Terrier, West Highland White	37	11	26	25	26	0	0	0	0	0	0	0	0	0	0	0
Queenstown-Lakes District	2016	DOG	_Unidentified_	864	404	460	597	705	7	0	0	0	0	0	0	0	0	0	0
Queenstown-Lakes District	2016	OWN	_	0	0	0	0	0	0	0	0	0	3422	40	0	0	0	0	0
Rangitikei District	2001	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	0	44	0
Rangitikei District	2002	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	6	378	0
Rangitikei District	2003	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	7	6287	0
Rangitikei District	2004	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	9	10755	0
Rangitikei District	2005	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	11	2176	0
Rangitikei District	2006	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	40	5146	4843
Rangitikei District	2007	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	28	3623	3006
Rangitikei District	2008	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	46	6968	7070
Rangitikei District	2009	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	35	4487	4685
Rangitikei District	2010	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	53	5701	5416
Rangitikei District	2011	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	46	5559	6052
Rangitikei District	2012	JST	_	0	0	0	0	0	0	0	0	0	0	0	3	0	0	0	0
Rangitikei District	2012	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	43	6439	5820
Rangitikei District	2013	DOG	_ALL-PURE_	4308	2171	2137	942	708	20	0	0	0	0	0	0	0	0	0	0
Rangitikei District	2013	DOG	_ALL-CROSS_	539	275	264	319	249	16	1	0	0	0	0	0	0	0	0	0
Rangitikei District	2013	DOG	_ALL-DOGS_	4847	2446	2401	1261	957	36	1	0	0	0	0	0	0	0	0	0
Rangitikei District	2013	DOG	Beagle	11	8	3	9	9	0	0	0	0	0	0	0	0	0	0	0
Rangitikei District	2013	DOG	Bichon Frise	30	14	16	23	14	0	0	0	0	0	0	0	0	0	0	0
Rangitikei District	2013	DOG	Boxer	25	12	13	17	14	0	0	0	0	0	0	0	0	0	0	0
Rangitikei District	2013	DOG	Cattle, Australian	42	23	19	11	5	1	0	0	0	0	0	0	0	0	0	0
Rangitikei District	2013	DOG	Chihuahua, Long Coat	11	10	1	5	1	0	0	0	0	0	0	0	0	0	0	0
Rangitikei District	2013	DOG	Chihuahua, Smooth Coat	13	9	4	5	6	0	0	0	0	0	0	0	0	0	0	0
Rangitikei District	2013	DOG	Collie, Bearded	39	19	20	6	5	0	0	0	0	0	0	0	0	0	0	0
Rangitikei District	2013	DOG	Collie, Border	171	104	67	44	31	0	0	0	0	0	0	0	0	0	0	0
Rangitikei District	2013	DOG	Collie, Rough	14	9	5	4	3	0	0	0	0	0	0	0	0	0	0	0
Rangitikei District	2013	DOG	Collie, Smooth	140	75	65	2	1	0	0	0	0	0	0	0	0	0	0	0
Rangitikei District	2013	DOG	Greyhound	88	46	42	7	36	0	0	0	0	0	0	0	0	0	0	0
Rangitikei District	2013	DOG	Heading	719	378	341	11	3	0	0	0	0	0	0	0	0	0	0	0
Rangitikei District	2013	DOG	Huntaway	1446	652	794	27	17	0	0	0	0	0	0	0	0	0	0	0
Rangitikei District	2013	DOG	Maltese	14	5	9	10	9	0	0	0	0	0	0	0	0	0	0	0
Rangitikei District	2013	DOG	Poodle, Miniature	15	7	8	5	3	0	0	0	0	0	0	0	0	0	0	0
Rangitikei District	2013	DOG	Poodle, Toy	10	6	4	6	5	0	0	0	0	0	0	0	0	0	0	0
Rangitikei District	2013	DOG	Retriever, Golden	21	8	13	8	10	0	0	0	0	0	0	0	0	0	0	0
Rangitikei District	2013	DOG	Retriever, Labrador	334	160	174	158	111	0	0	0	0	0	0	0	0	0	0	0
Rangitikei District	2013	DOG	Rottweiler	42	19	23	12	18	0	0	0	0	0	0	0	0	0	0	0
Rangitikei District	2013	DOG	Schnauzer, Miniature	6	5	1	5	3	0	0	0	0	0	0	0	0	0	0	0
Rangitikei District	2013	DOG	Shepherd, German	76	46	30	48	25	0	0	0	0	0	0	0	0	0	0	0
Rangitikei District	2013	DOG	Shih Tzu	13	9	4	7	10	0	0	0	0	0	0	0	0	0	0	0
Rangitikei District	2013	DOG	Spaniel, Cavalier King Charles	18	8	10	11	7	0	0	0	0	0	0	0	0	0	0	0
Rangitikei District	2013	DOG	Spaniel, Cocker	11	5	6	7	6	0	0	0	0	0	0	0	0	0	0	0
Rangitikei District	2013	DOG	Spaniel, English Springer	20	9	11	8	7	0	0	0	0	0	0	0	0	0	0	0
Rangitikei District	2013	DOG	Terrier, American Pit Bull	23	9	14	10	13	18	0	0	0	0	0	0	0	0	0	0
Rangitikei District	2013	DOG	Terrier, Fox (Smooth)	234	134	100	144	53	0	0	0	0	0	0	0	0	0	0	0
Rangitikei District	2013	DOG	Terrier, Jack Russell	119	62	57	64	37	0	0	0	0	0	0	0	0	0	0	0
Rangitikei District	2013	DOG	Terrier, Staffordshire Bull	38	22	16	20	16	0	0	0	0	0	0	0	0	0	0	0
Rangitikei District	2013	DOG	Terrier, West Highland White	7	3	4	4	5	0	0	0	0	0	0	0	0	0	0	0
Rangitikei District	2013	DOG	_Unidentified_	558	295	263	244	225	1	0	0	0	0	0	0	0	0	0	0
Rangitikei District	2013	OWN	_	0	0	0	0	0	0	0	0	0	2144	39	0	0	0	0	0
Rangitikei District	2013	JST	_	0	0	0	0	0	0	0	0	0	0	0	2	0	0	0	0
Rangitikei District	2013	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	44	22527	22656
Rangitikei District	2014	DOG	_ALL-PURE_	4041	2054	1987	899	755	17	0	0	0	0	0	0	0	0	0	0
Rangitikei District	2014	DOG	_ALL-CROSS_	543	278	265	338	268	19	1	0	0	0	0	0	0	0	0	0
Rangitikei District	2014	DOG	_ALL-DOGS_	4584	2332	2252	1237	1023	36	1	0	0	0	0	0	0	0	0	0
Rangitikei District	2014	DOG	Beagle	9	7	2	8	7	0	0	0	0	0	0	0	0	0	0	0
Rangitikei District	2014	DOG	Bichon Frise	26	13	13	20	16	0	0	0	0	0	0	0	0	0	0	0
Rangitikei District	2014	DOG	Boxer	27	12	15	19	16	0	0	0	0	0	0	0	0	0	0	0
Rangitikei District	2014	DOG	Cattle, Australian	40	21	19	9	4	1	0	0	0	0	0	0	0	0	0	0
Rangitikei District	2014	DOG	Chihuahua, Long Coat	13	11	2	8	2	0	0	0	0	0	0	0	0	0	0	0
Rangitikei District	2014	DOG	Chihuahua, Smooth Coat	12	7	5	9	9	0	0	0	0	0	0	0	0	0	0	0
Rangitikei District	2014	DOG	Collie, Bearded	45	20	25	8	7	0	0	0	0	0	0	0	0	0	0	0
Rangitikei District	2014	DOG	Collie, Border	153	93	60	38	35	0	0	0	0	0	0	0	0	0	0	0
Rangitikei District	2014	DOG	Collie, Rough	13	8	5	3	3	0	0	0	0	0	0	0	0	0	0	0
Rangitikei District	2014	DOG	Collie, Smooth	112	56	56	3	2	0	0	0	0	0	0	0	0	0	0	0
Rangitikei District	2014	DOG	Greyhound	96	49	47	7	60	0	0	0	0	0	0	0	0	0	0	0
Rangitikei District	2014	DOG	Heading	721	380	341	11	5	0	0	0	0	0	0	0	0	0	0	0
Rangitikei District	2014	DOG	Huntaway	1321	612	709	22	15	0	0	0	0	0	0	0	0	0	0	0
Rangitikei District	2014	DOG	Maltese	14	5	9	11	10	0	0	0	0	0	0	0	0	0	0	0
Rangitikei District	2014	DOG	Poodle, Miniature	18	12	6	8	4	0	0	0	0	0	0	0	0	0	0	0
Rangitikei District	2014	DOG	Poodle, Toy	12	8	4	8	5	0	0	0	0	0	0	0	0	0	0	0
Rangitikei District	2014	DOG	Retriever, Golden	21	10	11	6	11	0	0	0	0	0	0	0	0	0	0	0
Rangitikei District	2014	DOG	Retriever, Labrador	293	133	160	149	105	0	0	0	0	0	0	0	0	0	0	0
Rangitikei District	2014	DOG	Rottweiler	39	17	22	12	15	0	0	0	0	0	0	0	0	0	0	0
Rangitikei District	2014	DOG	Schnauzer, Miniature	10	8	2	6	4	0	0	0	0	0	0	0	0	0	0	0
Rangitikei District	2014	DOG	Shepherd, German	65	37	28	43	27	0	0	0	0	0	0	0	0	0	0	0
Rangitikei District	2014	DOG	Shih Tzu	11	6	5	9	9	0	0	0	0	0	0	0	0	0	0	0
Rangitikei District	2014	DOG	Spaniel, Cavalier King Charles	13	4	9	8	6	0	0	0	0	0	0	0	0	0	0	0
Rangitikei District	2014	DOG	Spaniel, Cocker	10	5	5	6	6	0	0	0	0	0	0	0	0	0	0	0
Rangitikei District	2014	DOG	Spaniel, English Springer	18	8	10	7	6	0	0	0	0	0	0	0	0	0	0	0
Rangitikei District	2014	DOG	Terrier, American Pit Bull	20	7	13	10	10	16	0	0	0	0	0	0	0	0	0	0
Rangitikei District	2014	DOG	Terrier, Fox (Smooth)	221	133	88	131	62	0	0	0	0	0	0	0	0	0	0	0
Rangitikei District	2014	DOG	Terrier, Jack Russell	106	57	49	53	34	0	0	0	0	0	0	0	0	0	0	0
Rangitikei District	2014	DOG	Terrier, Staffordshire Bull	37	24	13	20	16	0	0	0	0	0	0	0	0	0	0	0
Rangitikei District	2014	DOG	Terrier, West Highland White	8	4	4	6	5	0	0	0	0	0	0	0	0	0	0	0
Rangitikei District	2014	DOG	_Unidentified_	537	287	250	241	239	0	0	0	0	0	0	0	0	0	0	0
Rangitikei District	2014	OWN	_	0	0	0	0	0	0	0	0	0	2061	32	0	0	0	0	0
Rangitikei District	2014	JST	_	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Rangitikei District	2014	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	46	6139	6464
Rangitikei District	2015	DOG	_ALL-PURE_	4095	2018	2077	925	813	19	0	0	0	0	0	0	0	0	0	0
Rangitikei District	2015	DOG	_ALL-CROSS_	575	295	280	372	294	17	1	0	0	0	0	0	0	0	0	0
Rangitikei District	2015	DOG	_ALL-DOGS_	4670	2313	2357	1297	1107	36	1	0	0	0	0	0	0	0	0	0
Rangitikei District	2015	DOG	Beagle	8	7	1	7	5	0	0	0	0	0	0	0	0	0	0	0
Rangitikei District	2015	DOG	Bichon Frise	29	17	12	21	17	0	0	0	0	0	0	0	0	0	0	0
Rangitikei District	2015	DOG	Boxer	26	11	15	16	14	1	0	0	0	0	0	0	0	0	0	0
Rangitikei District	2015	DOG	Cattle, Australian	36	18	18	4	4	1	0	0	0	0	0	0	0	0	0	0
Rangitikei District	2015	DOG	Chihuahua, Long Coat	16	9	7	11	6	0	0	0	0	0	0	0	0	0	0	0
Rangitikei District	2015	DOG	Chihuahua, Smooth Coat	13	7	6	10	11	0	0	0	0	0	0	0	0	0	0	0
Rangitikei District	2015	DOG	Collie, Bearded	50	23	27	9	5	0	0	0	0	0	0	0	0	0	0	0
Rangitikei District	2015	DOG	Collie, Border	159	84	75	43	39	0	0	0	0	0	0	0	0	0	0	0
Rangitikei District	2015	DOG	Collie, Rough	17	9	8	3	8	0	0	0	0	0	0	0	0	0	0	0
Rangitikei District	2015	DOG	Collie, Smooth	97	48	49	2	2	0	0	0	0	0	0	0	0	0	0	0
Rangitikei District	2015	DOG	Greyhound	87	43	44	9	60	0	0	0	0	0	0	0	0	0	0	0
Rangitikei District	2015	DOG	Heading	769	376	393	16	6	0	0	0	0	0	0	0	0	0	0	0
Rangitikei District	2015	DOG	Huntaway	1340	607	733	37	16	0	0	0	0	0	0	0	0	0	0	0
Rangitikei District	2015	DOG	Maltese	15	4	11	13	11	0	0	0	0	0	0	0	0	0	0	0
Rangitikei District	2015	DOG	Poodle, Miniature	18	13	5	9	5	0	0	0	0	0	0	0	0	0	0	0
Rangitikei District	2015	DOG	Poodle, Toy	11	7	4	7	5	0	0	0	0	0	0	0	0	0	0	0
Rangitikei District	2015	DOG	Retriever, Golden	24	13	11	11	12	0	0	0	0	0	0	0	0	0	0	0
Rangitikei District	2015	DOG	Retriever, Labrador	300	142	158	150	121	0	0	0	0	0	0	0	0	0	0	0
Rangitikei District	2015	DOG	Rottweiler	35	16	19	10	13	0	0	0	0	0	0	0	0	0	0	0
Rangitikei District	2015	DOG	Schnauzer, Miniature	10	7	3	5	5	0	0	0	0	0	0	0	0	0	0	0
Rangitikei District	2015	DOG	Shepherd, German	58	36	22	41	26	0	0	0	0	0	0	0	0	0	0	0
Rangitikei District	2015	DOG	Shih Tzu	16	8	8	13	8	0	0	0	0	0	0	0	0	0	0	0
Rangitikei District	2015	DOG	Spaniel, Cavalier King Charles	13	5	8	9	6	0	0	0	0	0	0	0	0	0	0	0
Rangitikei District	2015	DOG	Spaniel, Cocker	11	8	3	7	6	0	0	0	0	0	0	0	0	0	0	0
Rangitikei District	2015	DOG	Spaniel, English Springer	15	8	7	3	4	0	0	0	0	0	0	0	0	0	0	0
Rangitikei District	2015	DOG	Terrier, American Pit Bull	19	6	13	9	12	17	0	0	0	0	0	0	0	0	0	0
Rangitikei District	2015	DOG	Terrier, Fox (Smooth)	211	125	86	122	62	0	0	0	0	0	0	0	0	0	0	0
Rangitikei District	2015	DOG	Terrier, Jack Russell	107	56	51	56	37	0	0	0	0	0	0	0	0	0	0	0
Rangitikei District	2015	DOG	Terrier, Staffordshire Bull	30	17	13	18	19	0	0	0	0	0	0	0	0	0	0	0
Rangitikei District	2015	DOG	Terrier, West Highland White	10	5	5	7	6	0	0	0	0	0	0	0	0	0	0	0
Rangitikei District	2015	DOG	_Unidentified_	545	283	262	247	262	0	0	0	0	0	0	0	0	0	0	0
Rangitikei District	2015	OWN	_	0	0	0	0	0	0	0	0	0	2100	35	0	0	0	0	0
Rangitikei District	2015	JST	_	0	0	0	0	0	0	0	0	0	0	0	2	0	0	0	0
Rangitikei District	2015	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	43	4601	4955
Rangitikei District	2016	DOG	_ALL-PURE_	4054	1990	2064	936	920	24	0	0	0	0	0	0	0	0	0	0
Rangitikei District	2016	DOG	_ALL-CROSS_	639	327	312	410	355	28	1	0	0	0	0	0	0	0	0	0
Rangitikei District	2016	DOG	_ALL-DOGS_	4693	2317	2376	1346	1275	52	1	0	0	0	0	0	0	0	0	0
Rangitikei District	2016	DOG	Beagle	9	7	2	8	6	0	0	0	0	0	0	0	0	0	0	0
Rangitikei District	2016	DOG	Bichon Frise	28	17	11	21	17	0	0	0	0	0	0	0	0	0	0	0
Rangitikei District	2016	DOG	Boxer	24	11	13	17	15	1	0	0	0	0	0	0	0	0	0	0
Rangitikei District	2016	DOG	Cattle, Australian	38	17	21	7	6	1	0	0	0	0	0	0	0	0	0	0
Rangitikei District	2016	DOG	Chihuahua, Long Coat	15	7	8	10	6	0	0	0	0	0	0	0	0	0	0	0
Rangitikei District	2016	DOG	Chihuahua, Smooth Coat	15	9	6	10	13	0	0	0	0	0	0	0	0	0	0	0
Rangitikei District	2016	DOG	Collie, Bearded	48	22	26	12	8	0	0	0	0	0	0	0	0	0	0	0
Rangitikei District	2016	DOG	Collie, Border	157	87	70	39	35	0	0	0	0	0	0	0	0	0	0	0
Rangitikei District	2016	DOG	Collie, Rough	13	7	6	1	7	0	0	0	0	0	0	0	0	0	0	0
Rangitikei District	2016	DOG	Collie, Smooth	82	36	46	1	2	0	0	0	0	0	0	0	0	0	0	0
Rangitikei District	2016	DOG	Greyhound	122	54	68	15	96	0	0	0	0	0	0	0	0	0	0	0
Rangitikei District	2016	DOG	Heading	774	379	395	15	7	0	0	0	0	0	0	0	0	0	0	0
Rangitikei District	2016	DOG	Huntaway	1270	569	701	36	14	0	0	0	0	0	0	0	0	0	0	0
Rangitikei District	2016	DOG	Maltese	14	6	8	12	11	0	0	0	0	0	0	0	0	0	0	0
Rangitikei District	2016	DOG	Poodle, Miniature	23	16	7	12	8	0	0	0	0	0	0	0	0	0	0	0
Rangitikei District	2016	DOG	Poodle, Toy	11	6	5	7	6	0	0	0	0	0	0	0	0	0	0	0
Rangitikei District	2016	DOG	Retriever, Golden	33	17	16	14	19	0	0	0	0	0	0	0	0	0	0	0
Rangitikei District	2016	DOG	Retriever, Labrador	285	138	147	136	119	0	0	0	0	0	0	0	0	0	0	0
Rangitikei District	2016	DOG	Rottweiler	38	19	19	14	18	1	0	0	0	0	0	0	0	0	0	0
Rangitikei District	2016	DOG	Schnauzer, Miniature	12	8	4	5	7	0	0	0	0	0	0	0	0	0	0	0
Rangitikei District	2016	DOG	Shepherd, German	62	40	22	40	32	0	0	0	0	0	0	0	0	0	0	0
Rangitikei District	2016	DOG	Shih Tzu	20	6	14	14	15	0	0	0	0	0	0	0	0	0	0	0
Rangitikei District	2016	DOG	Spaniel, Cavalier King Charles	13	5	8	10	6	0	0	0	0	0	0	0	0	0	0	0
Rangitikei District	2016	DOG	Spaniel, Cocker	9	7	2	7	5	0	0	0	0	0	0	0	0	0	0	0
Rangitikei District	2016	DOG	Spaniel, English Springer	11	6	5	4	4	0	0	0	0	0	0	0	0	0	0	0
Rangitikei District	2016	DOG	Terrier, American Pit Bull	23	10	13	10	15	20	0	0	0	0	0	0	0	0	0	0
Rangitikei District	2016	DOG	Terrier, Fox (Smooth)	214	124	90	131	73	0	0	0	0	0	0	0	0	0	0	0
Rangitikei District	2016	DOG	Terrier, Jack Russell	119	60	59	58	48	0	0	0	0	0	0	0	0	0	0	0
Rangitikei District	2016	DOG	Terrier, Staffordshire Bull	31	21	10	15	22	0	0	0	0	0	0	0	0	0	0	0
Rangitikei District	2016	DOG	Terrier, West Highland White	9	5	4	6	5	0	0	0	0	0	0	0	0	0	0	0
Rangitikei District	2016	DOG	_Unidentified_	532	274	258	249	275	1	0	0	0	0	0	0	0	0	0	0
Rangitikei District	2016	OWN	_	0	0	0	0	0	0	0	0	0	2119	29	0	0	0	0	0
Rodney District	2001	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	19	1873	0
Rodney District	2002	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	21	1551	0
Rodney District	2003	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	33	3115	0
Rodney District	2004	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	118	13316	0
Rodney District	2005	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	143	23547	0
Rodney District	2006	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	163	64552	33611
Rodney District	2007	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	193	42457	41006
Rodney District	2008	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	182	86896	77829
Rodney District	2009	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	202	42899	82590
Rodney District	2010	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	187	47546	48200
Rodney District	2011	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	180	40113	38945
Rodney District	2012	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	151	50740	33581
Rodney District	2013	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	172	52877	74498
Rodney District	2014	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	177	62516	36430
Rodney District	2015	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	167	29392	58870
Rotorua District	2001	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	57	99036	0
Rotorua District	2002	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	58	7441	0
Rotorua District	2003	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	42	6494	0
Rotorua District	2004	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	88	9014	0
Rotorua District	2005	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	121	21660	0
Rotorua District	2006	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	187	39537	30995
Rotorua District	2007	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	230	60595	42478
Rotorua District	2008	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	229	41174	47556
Rotorua District	2009	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	245	43861	52588
Rotorua District	2010	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	246	43210	69142
Rotorua District	2011	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	271	37989	35822
Rotorua District	2012	JST	_	0	0	0	0	0	0	0	0	0	0	0	4	0	0	0	0
Rotorua District	2012	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	287	56288	73292
Rotorua District	2013	DOG	_ALL-PURE_	5237	2676	2561	2364	3206	165	3	0	0	0	0	0	0	0	0	0
Rotorua District	2013	DOG	_ALL-CROSS_	5420	2657	2763	2480	3543	280	3	0	0	0	0	0	0	0	0	0
Rotorua District	2013	DOG	_ALL-DOGS_	10657	5333	5324	4844	6749	445	6	0	0	0	0	0	0	0	0	0
Rotorua District	2013	DOG	Beagle	22	12	10	16	18	0	0	0	0	0	0	0	0	0	0	0
Rotorua District	2013	DOG	Bichon Frise	75	41	34	40	51	0	0	0	0	0	0	0	0	0	0	0
Rotorua District	2013	DOG	Boxer	86	40	46	47	59	0	0	0	0	0	0	0	0	0	0	0
Rotorua District	2013	DOG	Cattle, Australian	93	47	46	33	45	0	0	0	0	0	0	0	0	0	0	0
Rotorua District	2013	DOG	Chihuahua, Long Coat	81	37	44	25	58	0	0	0	0	0	0	0	0	0	0	0
Rotorua District	2013	DOG	Chihuahua, Smooth Coat	32	17	15	17	23	0	0	0	0	0	0	0	0	0	0	0
Rotorua District	2013	DOG	Collie, Bearded	37	16	21	24	17	0	0	0	0	0	0	0	0	0	0	0
Rotorua District	2013	DOG	Collie, Border	325	178	147	161	156	0	0	0	0	0	0	0	0	0	0	0
Rotorua District	2013	DOG	Collie, Rough	4	2	2	4	1	0	0	0	0	0	0	0	0	0	0	0
Rotorua District	2013	DOG	Collie, Smooth	19	8	11	2	7	0	0	0	0	0	0	0	0	0	0	0
Rotorua District	2013	DOG	Greyhound	45	25	20	9	31	1	0	0	0	0	0	0	0	0	0	0
Rotorua District	2013	DOG	Heading	205	122	83	23	22	0	0	0	0	0	0	0	0	0	0	0
Rotorua District	2013	DOG	Huntaway	302	141	161	41	37	0	0	0	0	0	0	0	0	0	0	0
Rotorua District	2013	DOG	Maltese	62	33	29	27	48	0	0	0	0	0	0	0	0	0	0	0
Rotorua District	2013	DOG	Poodle, Miniature	48	22	26	30	28	0	0	0	0	0	0	0	0	0	0	0
Rotorua District	2013	DOG	Poodle, Toy	69	38	31	38	41	0	0	0	0	0	0	0	0	0	0	0
Rotorua District	2013	DOG	Retriever, Golden	81	37	44	41	51	0	0	0	0	0	0	0	0	0	0	0
Rotorua District	2013	DOG	Retriever, Labrador	737	385	352	344	495	0	0	0	0	0	0	0	0	0	0	0
Rotorua District	2013	DOG	Rottweiler	188	91	97	68	141	2	1	0	0	0	0	0	0	0	0	0
Rotorua District	2013	DOG	Schnauzer, Miniature	60	31	29	31	48	0	0	0	0	0	0	0	0	0	0	0
Rotorua District	2013	DOG	Shepherd, German	216	107	109	101	152	2	0	0	0	0	0	0	0	0	0	0
Rotorua District	2013	DOG	Shih Tzu	57	28	29	22	47	0	0	0	0	0	0	0	0	0	0	0
Rotorua District	2013	DOG	Spaniel, Cavalier King Charles	41	23	18	30	27	0	0	0	0	0	0	0	0	0	0	0
Rotorua District	2013	DOG	Spaniel, Cocker	94	50	44	44	72	0	0	0	0	0	0	0	0	0	0	0
Rotorua District	2013	DOG	Spaniel, English Springer	60	37	23	25	29	0	0	0	0	0	0	0	0	0	0	0
Rotorua District	2013	DOG	Terrier, American Pit Bull	152	63	89	50	132	148	1	0	0	0	0	0	0	0	0	0
Rotorua District	2013	DOG	Terrier, Fox (Smooth)	402	235	167	256	230	1	0	0	0	0	0	0	0	0	0	0
Rotorua District	2013	DOG	Terrier, Jack Russell	251	120	131	153	155	0	0	0	0	0	0	0	0	0	0	0
Rotorua District	2013	DOG	Terrier, Staffordshire Bull	124	65	59	42	99	1	0	0	0	0	0	0	0	0	0	0
Rotorua District	2013	DOG	Terrier, West Highland White	21	10	11	14	14	0	0	0	0	0	0	0	0	0	0	0
Rotorua District	2013	DOG	_Unidentified_	1248	615	633	606	872	10	1	0	0	0	0	0	0	0	0	0
Rotorua District	2013	OWN	_	0	0	0	0	0	0	0	0	5	7515	136	0	0	0	0	0
Rotorua District	2013	JST	_	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Rotorua District	2013	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	285	48829	48034
Rotorua District	2014	DOG	_ALL-PURE_	5347	2708	2639	2464	3508	154	10	0	0	0	0	0	0	0	0	0
Rotorua District	2014	DOG	_ALL-CROSS_	5696	2773	2923	2698	3993	289	8	0	0	0	0	0	0	0	0	0
Rotorua District	2014	DOG	_ALL-DOGS_	11043	5481	5562	5162	7501	443	18	0	0	0	0	0	0	0	0	0
Rotorua District	2014	DOG	Beagle	23	11	12	18	20	0	0	0	0	0	0	0	0	0	0	0
Rotorua District	2014	DOG	Bichon Frise	77	44	33	45	60	0	0	0	0	0	0	0	0	0	0	0
Rotorua District	2014	DOG	Boxer	80	39	41	49	61	0	0	0	0	0	0	0	0	0	0	0
Rotorua District	2014	DOG	Cattle, Australian	105	52	53	38	58	0	0	0	0	0	0	0	0	0	0	0
Rotorua District	2014	DOG	Chihuahua, Long Coat	84	38	46	31	58	0	0	0	0	0	0	0	0	0	0	0
Rotorua District	2014	DOG	Chihuahua, Smooth Coat	43	20	23	23	27	0	0	0	0	0	0	0	0	0	0	0
Rotorua District	2014	DOG	Collie, Bearded	37	19	18	21	17	0	0	0	0	0	0	0	0	0	0	0
Rotorua District	2014	DOG	Collie, Border	315	175	140	161	164	0	0	0	0	0	0	0	0	0	0	0
Rotorua District	2014	DOG	Collie, Rough	2	1	1	2	1	0	0	0	0	0	0	0	0	0	0	0
Rotorua District	2014	DOG	Collie, Smooth	18	6	12	1	6	0	0	0	0	0	0	0	0	0	0	0
Rotorua District	2014	DOG	Greyhound	54	28	26	11	39	1	0	0	0	0	0	0	0	0	0	0
Rotorua District	2014	DOG	Heading	219	128	91	26	27	0	0	0	0	0	0	0	0	0	0	0
Rotorua District	2014	DOG	Huntaway	312	147	165	42	40	0	0	0	0	0	0	0	0	0	0	0
Rotorua District	2014	DOG	Maltese	64	34	30	33	50	0	0	0	0	0	0	0	0	0	0	0
Rotorua District	2014	DOG	Poodle, Miniature	45	19	26	26	27	0	0	0	0	0	0	0	0	0	0	0
Rotorua District	2014	DOG	Poodle, Toy	74	42	32	43	49	0	0	0	0	0	0	0	0	0	0	0
Rotorua District	2014	DOG	Retriever, Golden	88	43	45	51	58	0	0	0	0	0	0	0	0	0	0	0
Rotorua District	2014	DOG	Retriever, Labrador	756	386	370	349	548	0	0	0	0	0	0	0	0	0	0	0
Rotorua District	2014	DOG	Rottweiler	189	88	101	67	154	7	2	0	0	0	0	0	0	0	0	0
Rotorua District	2014	DOG	Schnauzer, Miniature	78	37	41	42	63	0	0	0	0	0	0	0	0	0	0	0
Rotorua District	2014	DOG	Shepherd, German	228	116	112	106	173	2	0	0	0	0	0	0	0	0	0	0
Rotorua District	2014	DOG	Shih Tzu	69	34	35	29	59	0	0	0	0	0	0	0	0	0	0	0
Rotorua District	2014	DOG	Spaniel, Cavalier King Charles	38	21	17	29	27	0	0	0	0	0	0	0	0	0	0	0
Rotorua District	2014	DOG	Spaniel, Cocker	89	45	44	42	70	0	0	0	0	0	0	0	0	0	0	0
Rotorua District	2014	DOG	Spaniel, English Springer	59	35	24	26	28	0	0	0	0	0	0	0	0	0	0	0
Rotorua District	2014	DOG	Terrier, American Pit Bull	134	53	81	65	127	126	4	0	0	0	0	0	0	0	0	0
Rotorua District	2014	DOG	Terrier, Fox (Smooth)	373	222	151	229	238	1	0	0	0	0	0	0	0	0	0	0
Rotorua District	2014	DOG	Terrier, Jack Russell	246	113	133	163	163	0	0	0	0	0	0	0	0	0	0	0
Rotorua District	2014	DOG	Terrier, Staffordshire Bull	152	71	81	60	126	1	2	0	0	0	0	0	0	0	0	0
Rotorua District	2014	DOG	Terrier, West Highland White	22	11	11	12	18	0	0	0	0	0	0	0	0	0	0	0
Rotorua District	2014	DOG	_Unidentified_	1274	630	644	624	952	16	2	0	0	0	0	0	0	0	0	0
Rotorua District	2014	OWN	_	0	0	0	0	0	0	0	0	6	7803	107	0	0	0	0	0
Rotorua District	2014	JST	_	0	0	0	0	0	0	0	0	0	0	0	9	4	0	0	0
Rotorua District	2014	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	277	264816	70436
Rotorua District	2015	DOG	_ALL-PURE_	5386	2729	2657	2668	3793	128	8	0	0	0	0	0	0	0	0	0
Rotorua District	2015	DOG	_ALL-CROSS_	5750	2828	2922	2881	4409	290	16	0	0	0	0	0	0	0	0	0
Rotorua District	2015	DOG	_ALL-DOGS_	11136	5557	5579	5549	8202	418	24	0	0	0	0	0	0	0	0	0
Rotorua District	2015	DOG	Beagle	22	10	12	18	19	0	0	0	0	0	0	0	0	0	0	0
Rotorua District	2015	DOG	Bichon Frise	77	40	37	55	60	0	0	0	0	0	0	0	0	0	0	0
Rotorua District	2015	DOG	Boxer	84	41	43	55	67	0	0	0	0	0	0	0	0	0	0	0
Rotorua District	2015	DOG	Cattle, Australian	105	52	53	42	56	0	0	0	0	0	0	0	0	0	0	0
Rotorua District	2015	DOG	Chihuahua, Long Coat	80	37	43	34	58	0	0	0	0	0	0	0	0	0	0	0
Rotorua District	2015	DOG	Chihuahua, Smooth Coat	44	22	22	27	36	0	0	0	0	0	0	0	0	0	0	0
Rotorua District	2015	DOG	Collie, Bearded	38	21	17	23	18	0	0	0	0	0	0	0	0	0	0	0
Rotorua District	2015	DOG	Collie, Border	321	174	147	169	187	0	0	0	0	0	0	0	0	0	0	0
Rotorua District	2015	DOG	Collie, Rough	6	1	5	3	3	0	0	0	0	0	0	0	0	0	0	0
Rotorua District	2015	DOG	Collie, Smooth	18	7	11	3	6	0	0	0	0	0	0	0	0	0	0	0
Rotorua District	2015	DOG	Greyhound	56	32	24	16	43	1	0	0	0	0	0	0	0	0	0	0
Rotorua District	2015	DOG	Heading	206	119	87	30	35	0	0	0	0	0	0	0	0	0	0	0
Rotorua District	2015	DOG	Huntaway	317	145	172	44	50	0	0	0	0	0	0	0	0	0	0	0
Rotorua District	2015	DOG	Maltese	66	33	33	40	58	0	0	0	0	0	0	0	0	0	0	0
Rotorua District	2015	DOG	Poodle, Miniature	43	18	25	24	29	0	0	0	0	0	0	0	0	0	0	0
Rotorua District	2015	DOG	Poodle, Toy	80	48	32	51	59	0	0	0	0	0	0	0	0	0	0	0
Rotorua District	2015	DOG	Retriever, Golden	95	46	49	54	70	0	0	0	0	0	0	0	0	0	0	0
Rotorua District	2015	DOG	Retriever, Labrador	778	403	375	400	598	0	0	0	0	0	0	0	0	0	0	0
Rotorua District	2015	DOG	Rottweiler	198	98	100	72	170	5	0	0	0	0	0	0	0	0	0	0
Rotorua District	2015	DOG	Schnauzer, Miniature	82	37	45	55	70	0	0	0	0	0	0	0	0	0	0	0
Rotorua District	2015	DOG	Shepherd, German	228	114	114	115	186	2	0	0	0	0	0	0	0	0	0	0
Rotorua District	2015	DOG	Shih Tzu	62	26	36	35	56	0	0	0	0	0	0	0	0	0	0	0
Rotorua District	2015	DOG	Spaniel, Cavalier King Charles	32	17	15	24	23	0	0	0	0	0	0	0	0	0	0	0
Rotorua District	2015	DOG	Spaniel, Cocker	85	44	41	45	74	0	0	0	0	0	0	0	0	0	0	0
Rotorua District	2015	DOG	Spaniel, English Springer	62	35	27	26	40	0	0	0	0	0	0	0	0	0	0	0
Rotorua District	2015	DOG	Terrier, American Pit Bull	107	52	55	58	100	101	5	0	0	0	0	0	0	0	0	0
Rotorua District	2015	DOG	Terrier, Fox (Smooth)	370	219	151	240	264	1	0	0	0	0	0	0	0	0	0	0
Rotorua District	2015	DOG	Terrier, Jack Russell	238	111	127	164	174	0	0	0	0	0	0	0	0	0	0	0
Rotorua District	2015	DOG	Terrier, Staffordshire Bull	156	73	83	67	131	0	0	0	0	0	0	0	0	0	0	0
Rotorua District	2015	DOG	Terrier, West Highland White	26	11	15	17	23	0	0	0	0	0	0	0	0	0	0	0
Rotorua District	2015	DOG	_Unidentified_	1304	643	661	662	1030	18	3	0	0	0	0	0	0	0	0	0
Rotorua District	2015	OWN	_	0	0	0	0	0	0	0	0	5	7945	107	0	0	0	0	0
Rotorua District	2015	JST	_	0	0	0	0	0	0	0	0	0	0	0	2	1	0	0	0
Rotorua District	2015	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	296	42824	258050
Rotorua District	2016	DOG	_ALL-PURE_	5353	2719	2634	2664	4147	127	7	0	0	0	0	0	0	0	0	0
Rotorua District	2016	DOG	_ALL-CROSS_	5871	2891	2980	3002	4865	337	13	0	0	0	0	0	0	0	0	0
Rotorua District	2016	DOG	_ALL-DOGS_	11224	5610	5614	5666	9012	464	20	0	0	0	0	0	0	0	0	0
Rotorua District	2016	DOG	Beagle	27	14	13	18	26	0	0	0	0	0	0	0	0	0	0	0
Rotorua District	2016	DOG	Bichon Frise	78	38	40	53	70	0	0	0	0	0	0	0	0	0	0	0
Rotorua District	2016	DOG	Boxer	80	41	39	49	69	0	0	0	0	0	0	0	0	0	0	0
Rotorua District	2016	DOG	Cattle, Australian	102	52	50	41	62	1	0	0	0	0	0	0	0	0	0	0
Rotorua District	2016	DOG	Chihuahua, Long Coat	84	38	46	42	69	0	0	0	0	0	0	0	0	0	0	0
Rotorua District	2016	DOG	Chihuahua, Smooth Coat	51	25	26	35	48	0	0	0	0	0	0	0	0	0	0	0
Rotorua District	2016	DOG	Collie, Bearded	36	21	15	23	23	0	0	0	0	0	0	0	0	0	0	0
Rotorua District	2016	DOG	Collie, Border	330	181	149	166	213	0	0	0	0	0	0	0	0	0	0	0
Rotorua District	2016	DOG	Collie, Rough	5	2	3	3	4	0	0	0	0	0	0	0	0	0	0	0
Rotorua District	2016	DOG	Collie, Smooth	15	5	10	2	6	0	0	0	0	0	0	0	0	0	0	0
Rotorua District	2016	DOG	Greyhound	52	28	24	16	44	0	0	0	0	0	0	0	0	0	0	0
Rotorua District	2016	DOG	Heading	195	112	83	32	46	0	0	0	0	0	0	0	0	0	0	0
Rotorua District	2016	DOG	Huntaway	293	129	164	46	57	0	0	0	0	0	0	0	0	0	0	0
Rotorua District	2016	DOG	Maltese	79	39	40	46	70	0	0	0	0	0	0	0	0	0	0	0
Rotorua District	2016	DOG	Poodle, Miniature	37	16	21	21	28	0	0	0	0	0	0	0	0	0	0	0
Rotorua District	2016	DOG	Poodle, Toy	81	49	32	52	65	0	0	0	0	0	0	0	0	0	0	0
Rotorua District	2016	DOG	Retriever, Golden	95	45	50	49	76	0	0	0	0	0	0	0	0	0	0	0
Rotorua District	2016	DOG	Retriever, Labrador	745	395	350	411	638	0	0	0	0	0	0	0	0	0	0	0
Rotorua District	2016	DOG	Rottweiler	225	110	115	76	209	4	1	0	0	0	0	0	0	0	0	0
Rotorua District	2016	DOG	Schnauzer, Miniature	83	37	46	59	75	0	0	0	0	0	0	0	0	0	0	0
Rotorua District	2016	DOG	Shepherd, German	223	107	116	113	199	3	0	0	0	0	0	0	0	0	0	0
Rotorua District	2016	DOG	Shih Tzu	68	28	40	38	63	0	0	0	0	0	0	0	0	0	0	0
Rotorua District	2016	DOG	Spaniel, Cavalier King Charles	39	24	15	27	32	0	0	0	0	0	0	0	0	0	0	0
Rotorua District	2016	DOG	Spaniel, Cocker	77	38	39	41	70	0	0	0	0	0	0	0	0	0	0	0
Rotorua District	2016	DOG	Spaniel, English Springer	56	29	27	24	43	0	0	0	0	0	0	0	0	0	0	0
Rotorua District	2016	DOG	Terrier, American Pit Bull	105	47	58	67	104	96	5	0	0	0	0	0	0	0	0	0
Rotorua District	2016	DOG	Terrier, Fox (Smooth)	351	209	142	219	270	1	0	0	0	0	0	0	0	0	0	0
Rotorua District	2016	DOG	Terrier, Jack Russell	232	116	116	161	184	0	0	0	0	0	0	0	0	0	0	0
Rotorua District	2016	DOG	Terrier, Staffordshire Bull	167	76	91	70	150	2	0	0	0	0	0	0	0	0	0	0
Rotorua District	2016	DOG	Terrier, West Highland White	26	10	16	19	23	0	0	0	0	0	0	0	0	0	0	0
Rotorua District	2016	DOG	_Unidentified_	1316	658	658	645	1111	20	1	0	0	0	0	0	0	0	0	0
Rotorua District	2016	OWN	_	0	0	0	0	0	0	0	0	5	8051	102	0	0	0	0	0
Ruapehu District	2001	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	6	229	0
Ruapehu District	2002	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	9	395	0
Ruapehu District	2003	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	6	354	0
Ruapehu District	2004	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	12	692	0
Ruapehu District	2005	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	18	5586	0
Ruapehu District	2006	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	34	2321	3130
Ruapehu District	2007	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	43	8905	8678
Ruapehu District	2008	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	35	2477	2186
Ruapehu District	2009	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	33	1953	2420
Ruapehu District	2010	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	46	8993	5425
Ruapehu District	2011	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	41	3754	4518
Ruapehu District	2012	JST	_	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Ruapehu District	2012	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	55	6789	6248
Ruapehu District	2013	DOG	_ALL-PURE_	3774	1811	1963	587	496	28	3	0	0	0	0	0	0	0	0	0
Ruapehu District	2013	DOG	_ALL-CROSS_	792	403	389	304	337	25	6	0	0	0	0	0	0	0	0	0
Ruapehu District	2013	DOG	_ALL-DOGS_	4566	2214	2352	891	833	53	9	0	0	0	0	0	0	0	0	0
Ruapehu District	2013	DOG	Beagle	7	5	2	7	4	0	0	0	0	0	0	0	0	0	0	0
Ruapehu District	2013	DOG	Bichon Frise	16	9	7	9	9	0	0	0	0	0	0	0	0	0	0	0
Ruapehu District	2013	DOG	Boxer	23	13	10	11	6	0	0	0	0	0	0	0	0	0	0	0
Ruapehu District	2013	DOG	Cattle, Australian	85	40	45	10	7	0	0	0	0	0	0	0	0	0	0	0
Ruapehu District	2013	DOG	Chihuahua, Long Coat	17	10	7	5	15	0	0	0	0	0	0	0	0	0	0	0
Ruapehu District	2013	DOG	Chihuahua, Smooth Coat	9	5	4	4	6	0	0	0	0	0	0	0	0	0	0	0
Ruapehu District	2013	DOG	Collie, Bearded	41	18	23	3	2	0	0	0	0	0	0	0	0	0	0	0
Ruapehu District	2013	DOG	Collie, Border	372	171	201	38	24	0	0	0	0	0	0	0	0	0	0	0
Ruapehu District	2013	DOG	Collie, Rough	2	1	1	0	0	0	0	0	0	0	0	0	0	0	0	0
Ruapehu District	2013	DOG	Collie, Smooth	8	4	4	1	0	0	0	0	0	0	0	0	0	0	0	0
Ruapehu District	2013	DOG	Greyhound	10	5	5	4	2	0	0	0	0	0	0	0	0	0	0	0
Ruapehu District	2013	DOG	Heading	777	389	388	21	14	0	0	0	0	0	0	0	0	0	0	0
Ruapehu District	2013	DOG	Huntaway	1509	686	823	78	25	0	0	0	0	0	0	0	0	0	0	0
Ruapehu District	2013	DOG	Maltese	11	4	7	5	7	0	0	0	0	0	0	0	0	0	0	0
Ruapehu District	2013	DOG	Poodle, Miniature	4	1	3	4	2	0	0	0	0	0	0	0	0	0	0	0
Ruapehu District	2013	DOG	Poodle, Toy	8	6	2	3	1	0	0	0	0	0	0	0	0	0	0	0
Ruapehu District	2013	DOG	Retriever, Golden	16	7	9	6	9	0	0	0	0	0	0	0	0	0	0	0
Ruapehu District	2013	DOG	Retriever, Labrador	201	100	101	96	73	0	0	0	0	0	0	0	0	0	0	0
Ruapehu District	2013	DOG	Rottweiler	33	12	21	10	11	0	0	0	0	0	0	0	0	0	0	0
Ruapehu District	2013	DOG	Schnauzer, Miniature	5	4	1	2	5	0	0	0	0	0	0	0	0	0	0	0
Ruapehu District	2013	DOG	Shepherd, German	33	13	20	13	18	1	0	0	0	0	0	0	0	0	0	0
Ruapehu District	2013	DOG	Shih Tzu	10	6	4	6	9	0	0	0	0	0	0	0	0	0	0	0
Ruapehu District	2013	DOG	Spaniel, Cavalier King Charles	6	2	4	4	3	0	0	0	0	0	0	0	0	0	0	0
Ruapehu District	2013	DOG	Spaniel, Cocker	6	5	1	5	3	0	0	0	0	0	0	0	0	0	0	0
Ruapehu District	2013	DOG	Spaniel, English Springer	2	2	0	0	1	0	0	0	0	0	0	0	0	0	0	0
Ruapehu District	2013	DOG	Terrier, American Pit Bull	26	12	14	6	14	25	1	0	0	0	0	0	0	0	0	0
Ruapehu District	2013	DOG	Terrier, Fox (Smooth)	85	45	40	36	47	0	0	0	0	0	0	0	0	0	0	0
Ruapehu District	2013	DOG	Terrier, Jack Russell	78	34	44	42	34	0	0	0	0	0	0	0	0	0	0	0
Ruapehu District	2013	DOG	Terrier, Staffordshire Bull	26	12	14	14	10	0	0	0	0	0	0	0	0	0	0	0
Ruapehu District	2013	DOG	Terrier, West Highland White	6	3	3	4	3	0	0	0	0	0	0	0	0	0	0	0
Ruapehu District	2013	DOG	_Unidentified_	342	187	155	140	132	2	2	0	0	0	0	0	0	0	0	0
Ruapehu District	2013	OWN	_	0	0	0	0	0	0	0	0	6	1842	10	0	0	0	0	0
Ruapehu District	2013	JST	_	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Ruapehu District	2013	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	44	10202	14665
Ruapehu District	2014	DOG	_ALL-PURE_	3506	1673	1833	524	568	28	2	0	0	0	0	0	0	0	0	0
Ruapehu District	2014	DOG	_ALL-CROSS_	763	389	374	323	407	27	5	0	0	0	0	0	0	0	0	0
Ruapehu District	2014	DOG	_ALL-DOGS_	4269	2062	2207	847	975	55	7	0	0	0	0	0	0	0	0	0
Ruapehu District	2014	DOG	Beagle	5	4	1	5	3	0	0	0	0	0	0	0	0	0	0	0
Ruapehu District	2014	DOG	Bichon Frise	11	7	4	7	7	0	0	0	0	0	0	0	0	0	0	0
Ruapehu District	2014	DOG	Boxer	17	11	6	8	6	0	0	0	0	0	0	0	0	0	0	0
Ruapehu District	2014	DOG	Cattle, Australian	82	36	46	9	9	0	0	0	0	0	0	0	0	0	0	0
Ruapehu District	2014	DOG	Chihuahua, Long Coat	19	12	7	8	18	0	0	0	0	0	0	0	0	0	0	0
Ruapehu District	2014	DOG	Chihuahua, Smooth Coat	12	7	5	6	8	0	0	0	0	0	0	0	0	0	0	0
Ruapehu District	2014	DOG	Collie, Bearded	35	15	20	2	2	0	0	0	0	0	0	0	0	0	0	0
Ruapehu District	2014	DOG	Collie, Border	299	139	160	30	32	0	0	0	0	0	0	0	0	0	0	0
Ruapehu District	2014	DOG	Collie, Rough	1	0	1	0	0	0	0	0	0	0	0	0	0	0	0	0
Ruapehu District	2014	DOG	Collie, Smooth	6	3	3	1	0	0	0	0	0	0	0	0	0	0	0	0
Ruapehu District	2014	DOG	Greyhound	20	11	9	3	18	0	0	0	0	0	0	0	0	0	0	0
Ruapehu District	2014	DOG	Heading	823	398	425	25	15	0	0	0	0	0	0	0	0	0	0	0
Ruapehu District	2014	DOG	Huntaway	1382	629	753	73	20	0	0	0	0	0	0	0	0	0	0	0
Ruapehu District	2014	DOG	Maltese	11	4	7	6	9	0	0	0	0	0	0	0	0	0	0	0
Ruapehu District	2014	DOG	Poodle, Miniature	5	2	3	5	3	0	0	0	0	0	0	0	0	0	0	0
Ruapehu District	2014	DOG	Poodle, Toy	3	2	1	2	2	0	0	0	0	0	0	0	0	0	0	0
Ruapehu District	2014	DOG	Retriever, Golden	13	7	6	3	8	0	0	0	0	0	0	0	0	0	0	0
Ruapehu District	2014	DOG	Retriever, Labrador	161	85	76	81	74	0	0	0	0	0	0	0	0	0	0	0
Ruapehu District	2014	DOG	Rottweiler	26	9	17	7	16	0	0	0	0	0	0	0	0	0	0	0
Ruapehu District	2014	DOG	Schnauzer, Miniature	6	5	1	3	6	0	0	0	0	0	0	0	0	0	0	0
Ruapehu District	2014	DOG	Shepherd, German	35	17	18	15	23	1	0	0	0	0	0	0	0	0	0	0
Ruapehu District	2014	DOG	Shih Tzu	11	6	5	8	9	0	0	0	0	0	0	0	0	0	0	0
Ruapehu District	2014	DOG	Spaniel, Cavalier King Charles	3	1	2	2	2	0	0	0	0	0	0	0	0	0	0	0
Ruapehu District	2014	DOG	Spaniel, Cocker	8	5	3	6	5	0	0	0	0	0	0	0	0	0	0	0
Ruapehu District	2014	DOG	Spaniel, English Springer	1	1	0	1	1	0	0	0	0	0	0	0	0	0	0	0
Ruapehu District	2014	DOG	Terrier, American Pit Bull	27	12	15	9	16	24	1	0	0	0	0	0	0	0	0	0
Ruapehu District	2014	DOG	Terrier, Fox (Smooth)	89	41	48	35	50	1	0	0	0	0	0	0	0	0	0	0
Ruapehu District	2014	DOG	Terrier, Jack Russell	70	32	38	32	37	0	0	0	0	0	0	0	0	0	0	0
Ruapehu District	2014	DOG	Terrier, Staffordshire Bull	21	8	13	11	12	0	0	0	0	0	0	0	0	0	0	0
Ruapehu District	2014	DOG	Terrier, West Highland White	6	3	3	4	3	0	0	0	0	0	0	0	0	0	0	0
Ruapehu District	2014	DOG	_Unidentified_	298	161	137	117	154	2	1	0	0	0	0	0	0	0	0	0
Ruapehu District	2014	OWN	_	0	0	0	0	0	0	0	0	2	1688	12	0	0	0	0	0
Ruapehu District	2014	JST	_	0	0	0	0	0	0	0	0	0	0	0	2	0	0	0	0
Ruapehu District	2014	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	41	6769	6970
Ruapehu District	2015	DOG	_ALL-PURE_	3800	1832	1968	627	736	29	4	0	0	0	0	0	0	0	0	0
Ruapehu District	2015	DOG	_ALL-CROSS_	900	459	441	426	520	33	8	0	0	0	0	0	0	0	0	0
Ruapehu District	2015	DOG	_ALL-DOGS_	4700	2291	2409	1053	1256	62	12	0	0	0	0	0	0	0	0	0
Ruapehu District	2015	DOG	Beagle	5	4	1	5	3	0	0	0	0	0	0	0	0	0	0	0
Ruapehu District	2015	DOG	Bichon Frise	19	13	6	9	13	0	0	0	0	0	0	0	0	0	0	0
Ruapehu District	2015	DOG	Boxer	19	11	8	10	7	0	0	0	0	0	0	0	0	0	0	0
Ruapehu District	2015	DOG	Cattle, Australian	74	33	41	10	11	0	0	0	0	0	0	0	0	0	0	0
Ruapehu District	2015	DOG	Chihuahua, Long Coat	15	9	6	9	15	0	0	0	0	0	0	0	0	0	0	0
Ruapehu District	2015	DOG	Chihuahua, Smooth Coat	8	4	4	6	5	0	0	0	0	0	0	0	0	0	0	0
Ruapehu District	2015	DOG	Collie, Bearded	31	12	19	2	2	0	0	0	0	0	0	0	0	0	0	0
Ruapehu District	2015	DOG	Collie, Border	293	138	155	42	37	0	0	0	0	0	0	0	0	0	0	0
Ruapehu District	2015	DOG	Collie, Rough	1	0	1	0	0	0	0	0	0	0	0	0	0	0	0	0
Ruapehu District	2015	DOG	Collie, Smooth	7	3	4	0	0	0	0	0	0	0	0	0	0	0	0	0
Ruapehu District	2015	DOG	Greyhound	50	31	19	21	44	0	0	0	0	0	0	0	0	0	0	0
Ruapehu District	2015	DOG	Heading	913	438	475	29	14	0	0	0	0	0	0	0	0	0	0	0
Ruapehu District	2015	DOG	Huntaway	1433	650	783	73	31	0	0	0	0	0	0	0	0	0	0	0
Ruapehu District	2015	DOG	Maltese	9	5	4	7	5	0	0	0	0	0	0	0	0	0	0	0
Ruapehu District	2015	DOG	Poodle, Miniature	4	2	2	4	3	0	0	0	0	0	0	0	0	0	0	0
Ruapehu District	2015	DOG	Poodle, Toy	5	3	2	2	4	0	0	0	0	0	0	0	0	0	0	0
Ruapehu District	2015	DOG	Retriever, Golden	12	5	7	3	9	0	0	0	0	0	0	0	0	0	0	0
Ruapehu District	2015	DOG	Retriever, Labrador	192	100	92	96	102	0	0	0	0	0	0	0	0	0	0	0
Ruapehu District	2015	DOG	Rottweiler	38	17	21	13	23	0	0	0	0	0	0	0	0	0	0	0
Ruapehu District	2015	DOG	Schnauzer, Miniature	8	5	3	4	8	0	0	0	0	0	0	0	0	0	0	0
Ruapehu District	2015	DOG	Shepherd, German	34	15	19	15	23	1	0	0	0	0	0	0	0	0	0	0
Ruapehu District	2015	DOG	Shih Tzu	19	14	5	8	15	0	0	0	0	0	0	0	0	0	0	0
Ruapehu District	2015	DOG	Spaniel, Cavalier King Charles	5	2	3	4	3	0	0	0	0	0	0	0	0	0	0	0
Ruapehu District	2015	DOG	Spaniel, Cocker	8	6	2	6	6	0	0	0	0	0	0	0	0	0	0	0
Ruapehu District	2015	DOG	Spaniel, English Springer	6	3	3	2	2	0	0	0	0	0	0	0	0	0	0	0
Ruapehu District	2015	DOG	Terrier, American Pit Bull	27	14	13	9	19	26	1	0	0	0	0	0	0	0	0	0
Ruapehu District	2015	DOG	Terrier, Fox (Smooth)	98	46	52	41	59	1	0	0	0	0	0	0	0	0	0	0
Ruapehu District	2015	DOG	Terrier, Jack Russell	76	33	43	35	48	0	0	0	0	0	0	0	0	0	0	0
Ruapehu District	2015	DOG	Terrier, Staffordshire Bull	37	18	19	18	23	0	0	0	0	0	0	0	0	0	0	0
Ruapehu District	2015	DOG	Terrier, West Highland White	5	2	3	3	3	0	0	0	0	0	0	0	0	0	0	0
Ruapehu District	2015	DOG	_Unidentified_	349	196	153	141	199	1	3	0	0	0	0	0	0	0	0	0
Ruapehu District	2015	OWN	_	0	0	0	0	0	0	0	0	1	1929	13	0	0	0	0	0
Ruapehu District	2015	JST	_	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Ruapehu District	2015	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	65	5701	5734
Ruapehu District	2016	DOG	_ALL-PURE_	3863	1874	1989	617	828	24	6	0	0	0	0	0	0	0	0	0
Ruapehu District	2016	DOG	_ALL-CROSS_	1023	537	486	467	652	36	6	0	0	0	0	0	0	0	0	0
Ruapehu District	2016	DOG	_ALL-DOGS_	4886	2411	2475	1084	1480	60	12	0	0	0	0	0	0	0	0	0
Ruapehu District	2016	DOG	Beagle	6	6	0	4	5	0	0	0	0	0	0	0	0	0	0	0
Ruapehu District	2016	DOG	Bichon Frise	16	10	6	9	13	0	0	0	0	0	0	0	0	0	0	0
Ruapehu District	2016	DOG	Boxer	16	11	5	9	8	0	0	0	0	0	0	0	0	0	0	0
Ruapehu District	2016	DOG	Cattle, Australian	77	33	44	8	12	0	0	0	0	0	0	0	0	0	0	0
Ruapehu District	2016	DOG	Chihuahua, Long Coat	13	7	6	11	13	0	0	0	0	0	0	0	0	0	0	0
Ruapehu District	2016	DOG	Chihuahua, Smooth Coat	14	8	6	9	12	0	0	0	0	0	0	0	0	0	0	0
Ruapehu District	2016	DOG	Collie, Bearded	41	17	24	2	4	0	0	0	0	0	0	0	0	0	0	0
Ruapehu District	2016	DOG	Collie, Border	263	117	146	37	44	1	0	0	0	0	0	0	0	0	0	0
Ruapehu District	2016	DOG	Collie, Rough	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Ruapehu District	2016	DOG	Collie, Smooth	6	3	3	0	0	0	0	0	0	0	0	0	0	0	0	0
Ruapehu District	2016	DOG	Greyhound	60	33	27	25	50	0	0	0	0	0	0	0	0	0	0	0
Ruapehu District	2016	DOG	Heading	965	473	492	30	22	0	0	0	0	0	0	0	0	0	0	0
Ruapehu District	2016	DOG	Huntaway	1456	675	781	61	37	0	0	0	0	0	0	0	0	0	0	0
Ruapehu District	2016	DOG	Maltese	13	5	8	9	11	0	0	0	0	0	0	0	0	0	0	0
Ruapehu District	2016	DOG	Poodle, Miniature	4	1	3	4	4	0	0	0	0	0	0	0	0	0	0	0
Ruapehu District	2016	DOG	Poodle, Toy	4	2	2	1	3	0	0	0	0	0	0	0	0	0	0	0
Ruapehu District	2016	DOG	Retriever, Golden	14	4	10	4	12	1	0	0	0	0	0	0	0	0	0	0
Ruapehu District	2016	DOG	Retriever, Labrador	180	93	87	88	102	0	0	0	0	0	0	0	0	0	0	0
Ruapehu District	2016	DOG	Rottweiler	40	16	24	13	27	1	1	0	0	0	0	0	0	0	0	0
Ruapehu District	2016	DOG	Schnauzer, Miniature	8	4	4	4	8	0	0	0	0	0	0	0	0	0	0	0
Ruapehu District	2016	DOG	Shepherd, German	28	12	16	16	21	1	0	0	0	0	0	0	0	0	0	0
Ruapehu District	2016	DOG	Shih Tzu	25	16	9	9	21	0	0	0	0	0	0	0	0	0	0	0
Ruapehu District	2016	DOG	Spaniel, Cavalier King Charles	5	2	3	4	3	0	0	0	0	0	0	0	0	0	0	0
Ruapehu District	2016	DOG	Spaniel, Cocker	5	3	2	4	5	0	0	0	0	0	0	0	0	0	0	0
Ruapehu District	2016	DOG	Spaniel, English Springer	7	3	4	1	3	0	0	0	0	0	0	0	0	0	0	0
Ruapehu District	2016	DOG	Terrier, American Pit Bull	16	8	8	8	14	15	1	0	0	0	0	0	0	0	0	0
Ruapehu District	2016	DOG	Terrier, Fox (Smooth)	107	54	53	50	66	1	0	0	0	0	0	0	0	0	0	0
Ruapehu District	2016	DOG	Terrier, Jack Russell	81	39	42	42	55	0	0	0	0	0	0	0	0	0	0	0
Ruapehu District	2016	DOG	Terrier, Staffordshire Bull	34	16	18	15	26	1	0	0	0	0	0	0	0	0	0	0
Ruapehu District	2016	DOG	Terrier, West Highland White	3	1	2	2	3	0	0	0	0	0	0	0	0	0	0	0
Ruapehu District	2016	DOG	_Unidentified_	356	202	154	138	224	3	4	0	0	0	0	0	0	0	0	0
Ruapehu District	2016	OWN	_	0	0	0	0	0	0	0	1	10	1973	14	0	0	0	0	0
Selwyn District	2001	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	9	675	0
Selwyn District	2002	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	16	1499	0
Selwyn District	2003	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	14	632	0
Selwyn District	2004	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	25	2958	0
Selwyn District	2005	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	47	52761	0
Selwyn District	2006	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	55	8894	17258
Selwyn District	2007	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	44	6720	6843
Selwyn District	2008	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	55	7801	9202
Selwyn District	2009	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	73	75829	48342
Selwyn District	2010	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	54	5978	34911
Selwyn District	2011	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	70	28054	9772
Selwyn District	2012	JST	_	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Selwyn District	2012	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	67	13622	21952
Selwyn District	2013	DOG	_ALL-PURE_	8399	4255	4144	2848	4290	23	1	0	0	0	0	0	0	0	0	0
Selwyn District	2013	DOG	_ALL-CROSS_	2947	1486	1461	1430	1842	20	2	0	0	0	0	0	0	0	0	0
Selwyn District	2013	DOG	_ALL-DOGS_	11346	5741	5605	4278	6132	43	3	0	0	0	0	0	0	0	0	0
Selwyn District	2013	DOG	Beagle	79	39	40	46	45	0	0	0	0	0	0	0	0	0	0	0
Selwyn District	2013	DOG	Bichon Frise	178	69	109	92	115	0	0	0	0	0	0	0	0	0	0	0
Selwyn District	2013	DOG	Boxer	163	78	85	64	110	0	0	0	0	0	0	0	0	0	0	0
Selwyn District	2013	DOG	Cattle, Australian	46	19	27	18	20	0	0	0	0	0	0	0	0	0	0	0
Selwyn District	2013	DOG	Chihuahua, Long Coat	31	15	16	13	24	0	0	0	0	0	0	0	0	0	0	0
Selwyn District	2013	DOG	Chihuahua, Smooth Coat	49	28	21	19	40	0	0	0	0	0	0	0	0	0	0	0
Selwyn District	2013	DOG	Collie, Bearded	116	56	60	29	26	0	0	0	0	0	0	0	0	0	0	0
Selwyn District	2013	DOG	Collie, Border	1252	656	596	274	271	2	0	0	0	0	0	0	0	0	0	0
Selwyn District	2013	DOG	Collie, Rough	23	8	15	7	14	0	0	0	0	0	0	0	0	0	0	0
Selwyn District	2013	DOG	Collie, Smooth	37	21	16	9	5	0	0	0	0	0	0	0	0	0	0	0
Selwyn District	2013	DOG	Greyhound	432	241	191	24	205	0	0	0	0	0	0	0	0	0	0	0
Selwyn District	2013	DOG	Heading	177	105	72	11	17	0	0	0	0	0	0	0	0	0	0	0
Selwyn District	2013	DOG	Huntaway	479	238	241	78	42	0	0	0	0	0	0	0	0	0	0	0
Selwyn District	2013	DOG	Maltese	57	30	27	27	43	0	0	0	0	0	0	0	0	0	0	0
Selwyn District	2013	DOG	Poodle, Miniature	69	33	36	26	41	0	0	0	0	0	0	0	0	0	0	0
Selwyn District	2013	DOG	Poodle, Toy	42	23	19	20	25	0	0	0	0	0	0	0	0	0	0	0
Selwyn District	2013	DOG	Retriever, Golden	330	165	165	122	213	1	0	0	0	0	0	0	0	0	0	0
Selwyn District	2013	DOG	Retriever, Labrador	1036	504	532	423	641	3	0	0	0	0	0	0	0	0	0	0
Selwyn District	2013	DOG	Rottweiler	94	51	43	37	60	0	0	0	0	0	0	0	0	0	0	0
Selwyn District	2013	DOG	Schnauzer, Miniature	117	60	57	46	95	0	0	0	0	0	0	0	0	0	0	0
Selwyn District	2013	DOG	Shepherd, German	301	155	146	114	171	2	1	0	0	0	0	0	0	0	0	0
Selwyn District	2013	DOG	Shih Tzu	42	22	20	18	28	0	0	0	0	0	0	0	0	0	0	0
Selwyn District	2013	DOG	Spaniel, Cavalier King Charles	76	36	40	31	45	0	0	0	0	0	0	0	0	0	0	0
Selwyn District	2013	DOG	Spaniel, Cocker	142	64	78	69	91	0	0	0	0	0	0	0	0	0	0	0
Selwyn District	2013	DOG	Spaniel, English Springer	115	50	65	41	76	0	0	0	0	0	0	0	0	0	0	0
Selwyn District	2013	DOG	Terrier, American Pit Bull	7	4	3	5	7	6	0	0	0	0	0	0	0	0	0	0
Selwyn District	2013	DOG	Terrier, Fox (Smooth)	257	125	132	108	148	0	0	0	0	0	0	0	0	0	0	0
Selwyn District	2013	DOG	Terrier, Jack Russell	533	273	260	260	302	1	0	0	0	0	0	0	0	0	0	0
Selwyn District	2013	DOG	Terrier, Staffordshire Bull	172	95	77	69	123	1	0	0	0	0	0	0	0	0	0	0
Selwyn District	2013	DOG	Terrier, West Highland White	59	24	35	29	42	1	0	0	0	0	0	0	0	0	0	0
Selwyn District	2013	DOG	_Unidentified_	1888	968	920	719	1205	6	0	0	0	0	0	0	0	0	0	0
Selwyn District	2013	OWN	_	0	0	0	0	0	0	0	0	1	6907	64	0	0	0	0	0
Selwyn District	2013	JST	_	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Selwyn District	2013	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	56	6809	16533
Selwyn District	2014	DOG	_ALL-PURE_	8565	4324	4241	2957	4883	29	0	0	0	0	0	0	0	0	0	0
Selwyn District	2014	DOG	_ALL-CROSS_	3185	1599	1586	1557	2154	24	4	0	0	0	0	0	0	0	0	0
Selwyn District	2014	DOG	_ALL-DOGS_	11750	5923	5827	4514	7037	53	4	0	0	0	0	0	0	0	0	0
Selwyn District	2014	DOG	Beagle	87	43	44	47	55	0	0	0	0	0	0	0	0	0	0	0
Selwyn District	2014	DOG	Bichon Frise	186	77	109	93	132	0	0	0	0	0	0	0	0	0	0	0
Selwyn District	2014	DOG	Boxer	156	75	81	67	118	0	0	0	0	0	0	0	0	0	0	0
Selwyn District	2014	DOG	Cattle, Australian	43	21	22	18	21	0	0	0	0	0	0	0	0	0	0	0
Selwyn District	2014	DOG	Chihuahua, Long Coat	38	20	18	15	30	0	0	0	0	0	0	0	0	0	0	0
Selwyn District	2014	DOG	Chihuahua, Smooth Coat	53	29	24	23	39	0	0	0	0	0	0	0	0	0	0	0
Selwyn District	2014	DOG	Collie, Bearded	108	47	61	31	33	0	0	0	0	0	0	0	0	0	0	0
Selwyn District	2014	DOG	Collie, Border	1177	624	553	287	289	2	0	0	0	0	0	0	0	0	0	0
Selwyn District	2014	DOG	Collie, Rough	23	7	16	6	15	0	0	0	0	0	0	0	0	0	0	0
Selwyn District	2014	DOG	Collie, Smooth	37	23	14	7	6	0	0	0	0	0	0	0	0	0	0	0
Selwyn District	2014	DOG	Greyhound	490	240	250	24	373	0	0	0	0	0	0	0	0	0	0	0
Selwyn District	2014	DOG	Heading	222	128	94	12	23	0	0	0	0	0	0	0	0	0	0	0
Selwyn District	2014	DOG	Huntaway	494	244	250	74	55	0	0	0	0	0	0	0	0	0	0	0
Selwyn District	2014	DOG	Maltese	60	32	28	30	45	0	0	0	0	0	0	0	0	0	0	0
Selwyn District	2014	DOG	Poodle, Miniature	66	33	33	27	46	0	0	0	0	0	0	0	0	0	0	0
Selwyn District	2014	DOG	Poodle, Toy	44	24	20	22	28	0	0	0	0	0	0	0	0	0	0	0
Selwyn District	2014	DOG	Retriever, Golden	333	162	171	122	234	0	0	0	0	0	0	0	0	0	0	0
Selwyn District	2014	DOG	Retriever, Labrador	1052	522	530	440	690	2	0	0	0	0	0	0	0	0	0	0
Selwyn District	2014	DOG	Rottweiler	102	52	50	37	69	0	0	0	0	0	0	0	0	0	0	0
Selwyn District	2014	DOG	Schnauzer, Miniature	132	69	63	55	111	0	0	0	0	0	0	0	0	0	0	0
Selwyn District	2014	DOG	Shepherd, German	321	173	148	111	220	1	0	0	0	0	0	0	0	0	0	0
Selwyn District	2014	DOG	Shih Tzu	41	20	21	21	29	0	0	0	0	0	0	0	0	0	0	0
Selwyn District	2014	DOG	Spaniel, Cavalier King Charles	80	36	44	28	54	0	0	0	0	0	0	0	0	0	0	0
Selwyn District	2014	DOG	Spaniel, Cocker	164	73	91	85	108	0	0	0	0	0	0	0	0	0	0	0
Selwyn District	2014	DOG	Spaniel, English Springer	110	47	63	42	79	0	0	0	0	0	0	0	0	0	0	0
Selwyn District	2014	DOG	Terrier, American Pit Bull	13	6	7	6	11	12	0	0	0	0	0	0	0	0	0	0
Selwyn District	2014	DOG	Terrier, Fox (Smooth)	259	129	130	108	158	0	0	0	0	0	0	0	0	0	0	0
Selwyn District	2014	DOG	Terrier, Jack Russell	500	253	247	245	310	1	0	0	0	0	0	0	0	0	0	0
Selwyn District	2014	DOG	Terrier, Staffordshire Bull	182	104	78	75	135	1	0	0	0	0	0	0	0	0	0	0
Selwyn District	2014	DOG	Terrier, West Highland White	66	28	38	33	51	1	0	0	0	0	0	0	0	0	0	0
Selwyn District	2014	DOG	_Unidentified_	1926	983	943	766	1316	9	0	0	0	0	0	0	0	0	0	0
Selwyn District	2014	OWN	_	0	0	0	0	0	0	0	0	0	7178	56	0	0	0	0	0
Selwyn District	2014	JST	_	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Selwyn District	2014	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	72	18271	34145
Selwyn District	2015	DOG	_ALL-PURE_	8777	4402	4375	3073	5552	36	2	0	0	0	0	0	0	0	0	0
Selwyn District	2015	DOG	_ALL-CROSS_	3488	1750	1738	1688	2577	28	3	0	0	0	0	0	0	0	0	0
Selwyn District	2015	DOG	_ALL-DOGS_	12265	6152	6113	4761	8129	64	5	0	0	0	0	0	0	0	0	0
Selwyn District	2015	DOG	Beagle	84	41	43	47	60	0	0	0	0	0	0	0	0	0	0	0
Selwyn District	2015	DOG	Bichon Frise	190	78	112	99	145	0	0	0	0	0	0	0	0	0	0	0
Selwyn District	2015	DOG	Boxer	155	75	80	63	132	0	0	0	0	0	0	0	0	0	0	0
Selwyn District	2015	DOG	Cattle, Australian	46	24	22	19	27	0	0	0	0	0	0	0	0	0	0	0
Selwyn District	2015	DOG	Chihuahua, Long Coat	43	18	25	16	40	0	0	0	0	0	0	0	0	0	0	0
Selwyn District	2015	DOG	Chihuahua, Smooth Coat	56	28	28	25	42	0	0	0	0	0	0	0	0	0	0	0
Selwyn District	2015	DOG	Collie, Bearded	104	52	52	32	34	0	0	0	0	0	0	0	0	0	0	0
Selwyn District	2015	DOG	Collie, Border	1123	603	520	277	324	3	0	0	0	0	0	0	0	0	0	0
Selwyn District	2015	DOG	Collie, Rough	22	8	14	4	17	0	0	0	0	0	0	0	0	0	0	0
Selwyn District	2015	DOG	Collie, Smooth	49	26	23	7	6	0	0	0	0	0	0	0	0	0	0	0
Selwyn District	2015	DOG	Greyhound	508	252	256	23	428	0	0	0	0	0	0	0	0	0	0	0
Selwyn District	2015	DOG	Heading	222	132	90	16	31	0	0	0	0	0	0	0	0	0	0	0
Selwyn District	2015	DOG	Huntaway	512	246	266	73	68	0	0	0	0	0	0	0	0	0	0	0
Selwyn District	2015	DOG	Maltese	69	35	34	33	51	0	0	0	0	0	0	0	0	0	0	0
Selwyn District	2015	DOG	Poodle, Miniature	72	32	40	29	51	0	0	0	0	0	0	0	0	0	0	0
Selwyn District	2015	DOG	Poodle, Toy	44	24	20	24	29	0	0	0	0	0	0	0	0	0	0	0
Selwyn District	2015	DOG	Retriever, Golden	344	170	174	124	270	0	0	0	0	0	0	0	0	0	0	0
Selwyn District	2015	DOG	Retriever, Labrador	1088	535	553	451	777	2	0	0	0	0	0	0	0	0	0	0
Selwyn District	2015	DOG	Rottweiler	110	61	49	38	79	0	0	0	0	0	0	0	0	0	0	0
Selwyn District	2015	DOG	Schnauzer, Miniature	153	79	74	63	130	0	0	0	0	0	0	0	0	0	0	0
Selwyn District	2015	DOG	Shepherd, German	320	175	145	110	241	2	0	0	0	0	0	0	0	0	0	0
Selwyn District	2015	DOG	Shih Tzu	35	16	19	17	31	0	0	0	0	0	0	0	0	0	0	0
Selwyn District	2015	DOG	Spaniel, Cavalier King Charles	78	35	43	27	61	0	0	0	0	0	0	0	0	0	0	0
Selwyn District	2015	DOG	Spaniel, Cocker	171	70	101	90	123	0	0	0	0	0	0	0	0	0	0	0
Selwyn District	2015	DOG	Spaniel, English Springer	116	56	60	42	88	0	0	0	0	0	0	0	0	0	0	0
Selwyn District	2015	DOG	Terrier, American Pit Bull	13	4	9	6	13	12	0	0	0	0	0	0	0	0	0	0
Selwyn District	2015	DOG	Terrier, Fox (Smooth)	254	122	132	106	171	0	0	0	0	0	0	0	0	0	0	0
Selwyn District	2015	DOG	Terrier, Jack Russell	496	254	242	253	334	1	0	0	0	0	0	0	0	0	0	0
Selwyn District	2015	DOG	Terrier, Staffordshire Bull	197	110	87	89	156	1	0	0	0	0	0	0	0	0	0	0
Selwyn District	2015	DOG	Terrier, West Highland White	79	34	45	42	65	1	0	0	0	0	0	0	0	0	0	0
Selwyn District	2015	DOG	_Unidentified_	2024	1007	1017	828	1528	14	2	0	0	0	0	0	0	0	0	0
Selwyn District	2015	OWN	_	0	0	0	0	0	0	0	0	0	7599	61	0	0	0	0	0
Selwyn District	2015	JST	_	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Selwyn District	2015	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	68	19250	39166
Selwyn District	2016	DOG	_ALL-PURE_	8977	4489	4488	3092	6179	41	1	0	0	0	0	0	0	0	0	0
Selwyn District	2016	DOG	_ALL-CROSS_	3729	1855	1874	1782	2982	35	2	0	0	0	0	0	0	0	0	0
Selwyn District	2016	DOG	_ALL-DOGS_	12706	6344	6362	4874	9161	76	3	0	0	0	0	0	0	0	0	0
Selwyn District	2016	DOG	Beagle	91	50	41	50	72	0	0	0	0	0	0	0	0	0	0	0
Selwyn District	2016	DOG	Bichon Frise	196	78	118	99	161	0	0	0	0	0	0	0	0	0	0	0
Selwyn District	2016	DOG	Boxer	154	76	78	60	139	0	0	0	0	0	0	0	0	0	0	0
Selwyn District	2016	DOG	Cattle, Australian	46	22	24	18	26	0	0	0	0	0	0	0	0	0	0	0
Selwyn District	2016	DOG	Chihuahua, Long Coat	59	32	27	24	55	0	0	0	0	0	0	0	0	0	0	0
Selwyn District	2016	DOG	Chihuahua, Smooth Coat	58	28	30	26	50	0	0	0	0	0	0	0	0	0	0	0
Selwyn District	2016	DOG	Collie, Bearded	92	40	52	26	37	0	0	0	0	0	0	0	0	0	0	0
Selwyn District	2016	DOG	Collie, Border	1071	569	502	266	375	2	0	0	0	0	0	0	0	0	0	0
Selwyn District	2016	DOG	Collie, Rough	21	9	12	5	17	0	0	0	0	0	0	0	0	0	0	0
Selwyn District	2016	DOG	Collie, Smooth	61	33	28	8	7	0	0	0	0	0	0	0	0	0	0	0
Selwyn District	2016	DOG	Greyhound	471	235	236	24	392	0	0	0	0	0	0	0	0	0	0	0
Selwyn District	2016	DOG	Heading	257	159	98	20	32	0	0	0	0	0	0	0	0	0	0	0
Selwyn District	2016	DOG	Huntaway	515	246	269	74	91	1	0	0	0	0	0	0	0	0	0	0
Selwyn District	2016	DOG	Maltese	66	33	33	35	49	0	0	0	0	0	0	0	0	0	0	0
Selwyn District	2016	DOG	Poodle, Miniature	70	32	38	25	52	0	0	0	0	0	0	0	0	0	0	0
Selwyn District	2016	DOG	Poodle, Toy	56	31	25	29	40	0	0	0	0	0	0	0	0	0	0	0
Selwyn District	2016	DOG	Retriever, Golden	359	169	190	128	300	0	0	0	0	0	0	0	0	0	0	0
Selwyn District	2016	DOG	Retriever, Labrador	1120	544	576	460	859	2	0	0	0	0	0	0	0	0	0	0
Selwyn District	2016	DOG	Rottweiler	104	61	43	40	84	2	0	0	0	0	0	0	0	0	0	0
Selwyn District	2016	DOG	Schnauzer, Miniature	172	85	87	70	157	0	0	0	0	0	0	0	0	0	0	0
Selwyn District	2016	DOG	Shepherd, German	335	176	159	107	279	3	0	0	0	0	0	0	0	0	0	0
Selwyn District	2016	DOG	Shih Tzu	41	20	21	18	38	0	0	0	0	0	0	0	0	0	0	0
Selwyn District	2016	DOG	Spaniel, Cavalier King Charles	74	36	38	23	60	0	0	0	0	0	0	0	0	0	0	0
Selwyn District	2016	DOG	Spaniel, Cocker	181	78	103	84	146	0	0	0	0	0	0	0	0	0	0	0
Selwyn District	2016	DOG	Spaniel, English Springer	123	59	64	46	106	0	0	0	0	0	0	0	0	0	0	0
Selwyn District	2016	DOG	Terrier, American Pit Bull	16	2	14	6	14	15	0	0	0	0	0	0	0	0	0	0
Selwyn District	2016	DOG	Terrier, Fox (Smooth)	251	123	128	98	186	0	0	0	0	0	0	0	0	0	0	0
Selwyn District	2016	DOG	Terrier, Jack Russell	497	252	245	258	372	2	0	0	0	0	0	0	0	0	0	0
Selwyn District	2016	DOG	Terrier, Staffordshire Bull	214	120	94	98	184	1	0	0	0	0	0	0	0	0	0	0
Selwyn District	2016	DOG	Terrier, West Highland White	86	37	49	46	70	1	0	0	0	0	0	0	0	0	0	0
Selwyn District	2016	DOG	_Unidentified_	2120	1054	1066	821	1729	12	1	0	0	0	0	0	0	0	0	0
Selwyn District	2016	OWN	_	0	0	0	0	0	0	0	0	0	8011	60	0	0	0	0	0
South Taranaki District	2001	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	14	6315	0
South Taranaki District	2002	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	16	811	0
South Taranaki District	2003	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	13	621	0
South Taranaki District	2004	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	64	121274	0
South Taranaki District	2005	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	70	6079	0
South Taranaki District	2006	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	80	8334	24963
South Taranaki District	2007	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	79	18794	23217
South Taranaki District	2008	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	68	9540	37181
South Taranaki District	2009	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	79	35730	61442
South Taranaki District	2010	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	77	8526	31099
South Taranaki District	2011	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	57	3387	4938
South Taranaki District	2012	JST	_	0	0	0	0	0	0	0	0	0	0	0	3	0	0	0	0
South Taranaki District	2012	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	62	23745	7862
South Taranaki District	2013	DOG	_ALL-PURE_	3239	1620	1619	1172	1564	82	0	0	0	0	0	0	0	0	0	0
South Taranaki District	2013	DOG	_ALL-CROSS_	1518	727	791	742	908	54	0	0	0	0	0	0	0	0	0	0
South Taranaki District	2013	DOG	_ALL-DOGS_	4757	2347	2410	1914	2472	136	0	0	0	0	0	0	0	0	0	0
South Taranaki District	2013	DOG	Beagle	30	19	11	17	23	1	0	0	0	0	0	0	0	0	0	0
South Taranaki District	2013	DOG	Bichon Frise	62	32	30	39	51	0	0	0	0	0	0	0	0	0	0	0
South Taranaki District	2013	DOG	Boxer	52	29	23	30	31	0	0	0	0	0	0	0	0	0	0	0
South Taranaki District	2013	DOG	Cattle, Australian	37	13	24	14	20	0	0	0	0	0	0	0	0	0	0	0
South Taranaki District	2013	DOG	Chihuahua, Long Coat	59	32	27	18	39	0	0	0	0	0	0	0	0	0	0	0
South Taranaki District	2013	DOG	Chihuahua, Smooth Coat	23	12	11	5	11	0	0	0	0	0	0	0	0	0	0	0
South Taranaki District	2013	DOG	Collie, Bearded	27	13	14	11	9	0	0	0	0	0	0	0	0	0	0	0
South Taranaki District	2013	DOG	Collie, Border	147	72	75	56	58	0	0	0	0	0	0	0	0	0	0	0
South Taranaki District	2013	DOG	Collie, Rough	14	9	5	4	5	0	0	0	0	0	0	0	0	0	0	0
South Taranaki District	2013	DOG	Collie, Smooth	2	1	1	1	0	0	0	0	0	0	0	0	0	0	0	0
South Taranaki District	2013	DOG	Greyhound	41	30	11	1	22	0	0	0	0	0	0	0	0	0	0	0
South Taranaki District	2013	DOG	Heading	341	194	147	20	18	1	0	0	0	0	0	0	0	0	0	0
South Taranaki District	2013	DOG	Huntaway	451	203	248	49	25	2	0	0	0	0	0	0	0	0	0	0
South Taranaki District	2013	DOG	Maltese	35	20	15	11	27	0	0	0	0	0	0	0	0	0	0	0
South Taranaki District	2013	DOG	Poodle, Miniature	19	10	9	11	13	0	0	0	0	0	0	0	0	0	0	0
South Taranaki District	2013	DOG	Poodle, Toy	24	13	11	10	16	0	0	0	0	0	0	0	0	0	0	0
South Taranaki District	2013	DOG	Retriever, Golden	51	24	27	27	30	0	0	0	0	0	0	0	0	0	0	0
South Taranaki District	2013	DOG	Retriever, Labrador	369	175	194	179	220	2	0	0	0	0	0	0	0	0	0	0
South Taranaki District	2013	DOG	Rottweiler	149	66	83	57	111	11	0	0	0	0	0	0	0	0	0	0
South Taranaki District	2013	DOG	Schnauzer, Miniature	17	8	9	7	14	0	0	0	0	0	0	0	0	0	0	0
South Taranaki District	2013	DOG	Shepherd, German	102	55	47	51	53	0	0	0	0	0	0	0	0	0	0	0
South Taranaki District	2013	DOG	Shih Tzu	15	7	8	7	14	0	0	0	0	0	0	0	0	0	0	0
South Taranaki District	2013	DOG	Spaniel, Cavalier King Charles	17	6	11	8	10	0	0	0	0	0	0	0	0	0	0	0
South Taranaki District	2013	DOG	Spaniel, Cocker	24	15	9	16	9	0	0	0	0	0	0	0	0	0	0	0
South Taranaki District	2013	DOG	Spaniel, English Springer	11	5	6	4	8	0	0	0	0	0	0	0	0	0	0	0
South Taranaki District	2013	DOG	Terrier, American Pit Bull	52	27	25	44	49	48	0	0	0	0	0	0	0	0	0	0
South Taranaki District	2013	DOG	Terrier, Fox (Smooth)	215	113	102	116	115	1	0	0	0	0	0	0	0	0	0	0
South Taranaki District	2013	DOG	Terrier, Jack Russell	167	81	86	85	93	1	0	0	0	0	0	0	0	0	0	0
South Taranaki District	2013	DOG	Terrier, Staffordshire Bull	82	49	33	40	55	5	0	0	0	0	0	0	0	0	0	0
South Taranaki District	2013	DOG	Terrier, West Highland White	13	5	8	6	8	0	0	0	0	0	0	0	0	0	0	0
South Taranaki District	2013	DOG	_Unidentified_	591	282	309	228	407	10	0	0	0	0	0	0	0	0	0	0
South Taranaki District	2013	OWN	_	0	0	0	0	0	0	0	0	0	3100	44	0	0	0	0	0
South Taranaki District	2013	JST	_	0	0	0	0	0	0	0	0	0	0	0	9	1	0	0	0
South Taranaki District	2013	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	52	6009	10862
South Taranaki District	2014	DOG	_ALL-PURE_	2797	1377	1420	979	1558	63	0	0	0	0	0	0	0	0	0	0
South Taranaki District	2014	DOG	_ALL-CROSS_	1252	598	654	625	828	63	0	0	0	0	0	0	0	0	0	0
South Taranaki District	2014	DOG	_ALL-DOGS_	4049	1975	2074	1604	2386	126	0	0	0	0	0	0	0	0	0	0
South Taranaki District	2014	DOG	Beagle	30	19	11	10	24	1	0	0	0	0	0	0	0	0	0	0
South Taranaki District	2014	DOG	Bichon Frise	53	25	28	32	43	0	0	0	0	0	0	0	0	0	0	0
South Taranaki District	2014	DOG	Boxer	44	23	21	23	30	0	0	0	0	0	0	0	0	0	0	0
South Taranaki District	2014	DOG	Cattle, Australian	31	10	21	13	17	1	0	0	0	0	0	0	0	0	0	0
South Taranaki District	2014	DOG	Chihuahua, Long Coat	34	22	12	15	20	0	0	0	0	0	0	0	0	0	0	0
South Taranaki District	2014	DOG	Chihuahua, Smooth Coat	15	7	8	5	8	0	0	0	0	0	0	0	0	0	0	0
South Taranaki District	2014	DOG	Collie, Bearded	23	12	11	9	9	0	0	0	0	0	0	0	0	0	0	0
South Taranaki District	2014	DOG	Collie, Border	141	74	67	52	71	0	0	0	0	0	0	0	0	0	0	0
South Taranaki District	2014	DOG	Collie, Rough	12	5	7	2	6	0	0	0	0	0	0	0	0	0	0	0
South Taranaki District	2014	DOG	Collie, Smooth	2	1	1	1	0	0	0	0	0	0	0	0	0	0	0	0
South Taranaki District	2014	DOG	Greyhound	65	46	19	1	59	0	0	0	0	0	0	0	0	0	0	0
South Taranaki District	2014	DOG	Heading	286	151	135	14	23	0	0	0	0	0	0	0	0	0	0	0
South Taranaki District	2014	DOG	Huntaway	385	171	214	41	28	1	0	0	0	0	0	0	0	0	0	0
South Taranaki District	2014	DOG	Maltese	37	19	18	15	33	0	0	0	0	0	0	0	0	0	0	0
South Taranaki District	2014	DOG	Poodle, Miniature	12	5	7	6	9	0	0	0	0	0	0	0	0	0	0	0
South Taranaki District	2014	DOG	Poodle, Toy	20	11	9	7	13	0	0	0	0	0	0	0	0	0	0	0
South Taranaki District	2014	DOG	Retriever, Golden	45	27	18	24	29	0	0	0	0	0	0	0	0	0	0	0
South Taranaki District	2014	DOG	Retriever, Labrador	330	147	183	150	223	2	0	0	0	0	0	0	0	0	0	0
South Taranaki District	2014	DOG	Rottweiler	129	60	69	42	110	7	0	0	0	0	0	0	0	0	0	0
South Taranaki District	2014	DOG	Schnauzer, Miniature	13	7	6	5	11	0	0	0	0	0	0	0	0	0	0	0
South Taranaki District	2014	DOG	Shepherd, German	87	44	43	41	58	1	0	0	0	0	0	0	0	0	0	0
South Taranaki District	2014	DOG	Shih Tzu	22	11	11	9	20	0	0	0	0	0	0	0	0	0	0	0
South Taranaki District	2014	DOG	Spaniel, Cavalier King Charles	14	6	8	8	8	0	0	0	0	0	0	0	0	0	0	0
South Taranaki District	2014	DOG	Spaniel, Cocker	12	9	3	7	5	0	0	0	0	0	0	0	0	0	0	0
South Taranaki District	2014	DOG	Spaniel, English Springer	11	4	7	6	9	0	0	0	0	0	0	0	0	0	0	0
South Taranaki District	2014	DOG	Terrier, American Pit Bull	43	23	20	36	40	41	0	0	0	0	0	0	0	0	0	0
South Taranaki District	2014	DOG	Terrier, Fox (Smooth)	165	85	80	87	102	2	0	0	0	0	0	0	0	0	0	0
South Taranaki District	2014	DOG	Terrier, Jack Russell	144	71	73	73	96	1	0	0	0	0	0	0	0	0	0	0
South Taranaki District	2014	DOG	Terrier, Staffordshire Bull	64	30	34	28	50	3	0	0	0	0	0	0	0	0	0	0
South Taranaki District	2014	DOG	Terrier, West Highland White	13	6	7	6	10	0	0	0	0	0	0	0	0	0	0	0
South Taranaki District	2014	DOG	_Unidentified_	515	246	269	211	394	3	0	0	0	0	0	0	0	0	0	0
South Taranaki District	2014	OWN	_	0	0	0	0	0	0	0	1	4	2625	59	0	0	0	0	0
South Taranaki District	2014	JST	_	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
South Taranaki District	2014	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	56	2935	20110
South Taranaki District	2015	DOG	_ALL-PURE_	3117	1556	1561	1201	1935	82	0	0	0	0	0	0	0	0	0	0
South Taranaki District	2015	DOG	_ALL-CROSS_	1445	698	747	799	1071	84	0	0	0	0	0	0	0	0	0	0
South Taranaki District	2015	DOG	_ALL-DOGS_	4562	2254	2308	2000	3006	166	0	0	0	0	0	0	0	0	0	0
South Taranaki District	2015	DOG	Beagle	18	11	7	13	13	0	0	0	0	0	0	0	0	0	0	0
South Taranaki District	2015	DOG	Bichon Frise	65	35	30	47	60	0	0	0	0	0	0	0	0	0	0	0
South Taranaki District	2015	DOG	Boxer	46	21	25	28	38	0	0	0	0	0	0	0	0	0	0	0
South Taranaki District	2015	DOG	Cattle, Australian	36	15	21	15	22	1	0	0	0	0	0	0	0	0	0	0
South Taranaki District	2015	DOG	Chihuahua, Long Coat	55	30	25	21	42	0	0	0	0	0	0	0	0	0	0	0
South Taranaki District	2015	DOG	Chihuahua, Smooth Coat	26	10	16	8	16	0	0	0	0	0	0	0	0	0	0	0
South Taranaki District	2015	DOG	Collie, Bearded	30	15	15	10	14	1	0	0	0	0	0	0	0	0	0	0
South Taranaki District	2015	DOG	Collie, Border	156	79	77	58	94	0	0	0	0	0	0	0	0	0	0	0
South Taranaki District	2015	DOG	Collie, Rough	13	7	6	3	10	0	0	0	0	0	0	0	0	0	0	0
South Taranaki District	2015	DOG	Collie, Smooth	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
South Taranaki District	2015	DOG	Greyhound	77	51	26	1	71	0	0	0	0	0	0	0	0	0	0	0
South Taranaki District	2015	DOG	Heading	284	148	136	12	21	0	0	0	0	0	0	0	0	0	0	0
South Taranaki District	2015	DOG	Huntaway	413	183	230	41	31	1	0	0	0	0	0	0	0	0	0	0
South Taranaki District	2015	DOG	Maltese	44	21	23	24	41	0	0	0	0	0	0	0	0	0	0	0
South Taranaki District	2015	DOG	Poodle, Miniature	15	9	6	11	11	0	0	0	0	0	0	0	0	0	0	0
South Taranaki District	2015	DOG	Poodle, Toy	25	13	12	11	19	0	0	0	0	0	0	0	0	0	0	0
South Taranaki District	2015	DOG	Retriever, Golden	42	22	20	24	31	0	0	0	0	0	0	0	0	0	0	0
South Taranaki District	2015	DOG	Retriever, Labrador	365	174	191	175	273	1	0	0	0	0	0	0	0	0	0	0
South Taranaki District	2015	DOG	Rottweiler	138	65	73	60	123	6	0	0	0	0	0	0	0	0	0	0
South Taranaki District	2015	DOG	Schnauzer, Miniature	18	10	8	9	15	0	0	0	0	0	0	0	0	0	0	0
South Taranaki District	2015	DOG	Shepherd, German	94	48	46	47	72	2	0	0	0	0	0	0	0	0	0	0
South Taranaki District	2015	DOG	Shih Tzu	34	17	17	19	32	0	0	0	0	0	0	0	0	0	0	0
South Taranaki District	2015	DOG	Spaniel, Cavalier King Charles	12	4	8	8	7	0	0	0	0	0	0	0	0	0	0	0
South Taranaki District	2015	DOG	Spaniel, Cocker	17	10	7	11	12	0	0	0	0	0	0	0	0	0	0	0
South Taranaki District	2015	DOG	Spaniel, English Springer	12	3	9	5	10	0	0	0	0	0	0	0	0	0	0	0
South Taranaki District	2015	DOG	Terrier, American Pit Bull	55	32	23	47	51	54	0	0	0	0	0	0	0	0	0	0
South Taranaki District	2015	DOG	Terrier, Fox (Smooth)	182	94	88	97	134	2	0	0	0	0	0	0	0	0	0	0
South Taranaki District	2015	DOG	Terrier, Jack Russell	163	78	85	91	115	2	0	0	0	0	0	0	0	0	0	0
South Taranaki District	2015	DOG	Terrier, Staffordshire Bull	78	45	33	38	66	6	0	0	0	0	0	0	0	0	0	0
South Taranaki District	2015	DOG	Terrier, West Highland White	13	7	6	8	9	0	0	0	0	0	0	0	0	0	0	0
South Taranaki District	2015	DOG	_Unidentified_	591	299	292	259	482	6	0	0	0	0	0	0	0	0	0	0
South Taranaki District	2015	OWN	_	0	0	0	0	0	0	0	0	11	3050	47	0	0	0	0	0
South Taranaki District	2015	JST	_	0	0	0	0	0	0	0	0	0	0	0	8	0	0	0	0
South Taranaki District	2015	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	59	17313	18834
South Taranaki District	2016	DOG	_ALL-PURE_	3048	1528	1520	1204	2050	78	0	0	0	0	0	0	0	0	0	0
South Taranaki District	2016	DOG	_ALL-CROSS_	1416	692	724	800	1113	94	0	0	0	0	0	0	0	0	0	0
South Taranaki District	2016	DOG	_ALL-DOGS_	4464	2220	2244	2004	3163	172	0	0	0	0	0	0	0	0	0	0
South Taranaki District	2016	DOG	Beagle	14	9	5	10	11	0	0	0	0	0	0	0	0	0	0	0
South Taranaki District	2016	DOG	Bichon Frise	63	34	29	46	58	0	0	0	0	0	0	0	0	0	0	0
South Taranaki District	2016	DOG	Boxer	47	21	26	26	41	0	0	0	0	0	0	0	0	0	0	0
South Taranaki District	2016	DOG	Cattle, Australian	36	19	17	17	24	1	0	0	0	0	0	0	0	0	0	0
South Taranaki District	2016	DOG	Chihuahua, Long Coat	55	29	26	24	42	0	0	0	0	0	0	0	0	0	0	0
South Taranaki District	2016	DOG	Chihuahua, Smooth Coat	25	12	13	8	20	0	0	0	0	0	0	0	0	0	0	0
South Taranaki District	2016	DOG	Collie, Bearded	38	19	19	11	22	1	0	0	0	0	0	0	0	0	0	0
South Taranaki District	2016	DOG	Collie, Border	158	84	74	71	109	0	0	0	0	0	0	0	0	0	0	0
South Taranaki District	2016	DOG	Collie, Rough	13	6	7	6	11	0	0	0	0	0	0	0	0	0	0	0
South Taranaki District	2016	DOG	Collie, Smooth	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
South Taranaki District	2016	DOG	Greyhound	80	47	33	1	74	0	0	0	0	0	0	0	0	0	0	0
South Taranaki District	2016	DOG	Heading	271	140	131	11	20	0	0	0	0	0	0	0	0	0	0	0
South Taranaki District	2016	DOG	Huntaway	381	175	206	40	33	0	0	0	0	0	0	0	0	0	0	0
South Taranaki District	2016	DOG	Maltese	43	16	27	21	41	0	0	0	0	0	0	0	0	0	0	0
South Taranaki District	2016	DOG	Poodle, Miniature	15	9	6	10	12	0	0	0	0	0	0	0	0	0	0	0
South Taranaki District	2016	DOG	Poodle, Toy	24	14	10	12	20	0	0	0	0	0	0	0	0	0	0	0
South Taranaki District	2016	DOG	Retriever, Golden	42	20	22	26	32	0	0	0	0	0	0	0	0	0	0	0
South Taranaki District	2016	DOG	Retriever, Labrador	367	173	194	166	297	1	0	0	0	0	0	0	0	0	0	0
South Taranaki District	2016	DOG	Rottweiler	123	57	66	56	118	6	0	0	0	0	0	0	0	0	0	0
South Taranaki District	2016	DOG	Schnauzer, Miniature	18	9	9	12	17	0	0	0	0	0	0	0	0	0	0	0
South Taranaki District	2016	DOG	Shepherd, German	83	42	41	41	71	3	0	0	0	0	0	0	0	0	0	0
South Taranaki District	2016	DOG	Shih Tzu	38	20	18	23	37	0	0	0	0	0	0	0	0	0	0	0
South Taranaki District	2016	DOG	Spaniel, Cavalier King Charles	10	2	8	7	8	0	0	0	0	0	0	0	0	0	0	0
South Taranaki District	2016	DOG	Spaniel, Cocker	15	10	5	11	11	0	0	0	0	0	0	0	0	0	0	0
South Taranaki District	2016	DOG	Spaniel, English Springer	11	4	7	3	9	0	0	0	0	0	0	0	0	0	0	0
South Taranaki District	2016	DOG	Terrier, American Pit Bull	55	34	21	43	49	55	0	0	0	0	0	0	0	0	0	0
South Taranaki District	2016	DOG	Terrier, Fox (Smooth)	165	90	75	86	131	1	0	0	0	0	0	0	0	0	0	0
South Taranaki District	2016	DOG	Terrier, Jack Russell	166	77	89	98	125	2	0	0	0	0	0	0	0	0	0	0
South Taranaki District	2016	DOG	Terrier, Staffordshire Bull	89	46	43	37	77	3	0	0	0	0	0	0	0	0	0	0
South Taranaki District	2016	DOG	Terrier, West Highland White	12	7	5	7	8	0	0	0	0	0	0	0	0	0	0	0
South Taranaki District	2016	DOG	_Unidentified_	591	303	288	274	522	5	0	0	0	0	0	0	0	0	0	0
South Taranaki District	2016	OWN	_	0	0	0	0	0	0	0	0	12	3708	32	0	0	0	0	0
South Waikato District	2001	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	16	16632	0
South Waikato District	2002	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	21	4453	0
South Waikato District	2003	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	17	5045	0
South Waikato District	2004	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	47	3322	0
South Waikato District	2005	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	52	7276	0
South Waikato District	2006	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	49	5966	6344
South Waikato District	2007	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	70	42023	15725
South Waikato District	2008	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	82	30993	41142
South Waikato District	2009	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	75	14626	29507
South Waikato District	2010	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	89	56631	62285
South Waikato District	2011	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	72	5903	15914
South Waikato District	2012	JST	_	0	0	0	0	0	0	0	0	0	0	0	3	1	0	0	0
South Waikato District	2012	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	74	23333	29139
South Waikato District	2013	DOG	_ALL-PURE_	2457	1220	1237	766	1235	49	0	0	0	0	0	0	0	0	0	0
South Waikato District	2013	DOG	_ALL-CROSS_	1334	687	647	477	731	75	1	0	0	0	0	0	0	0	0	0
South Waikato District	2013	DOG	_ALL-DOGS_	3791	1907	1884	1243	1966	124	1	0	0	0	0	0	0	0	0	0
South Waikato District	2013	DOG	Beagle	16	6	10	8	16	0	0	0	0	0	0	0	0	0	0	0
South Waikato District	2013	DOG	Bichon Frise	34	20	14	19	23	0	0	0	0	0	0	0	0	0	0	0
South Waikato District	2013	DOG	Boxer	45	19	26	16	31	0	0	0	0	0	0	0	0	0	0	0
South Waikato District	2013	DOG	Cattle, Australian	46	21	25	6	13	0	0	0	0	0	0	0	0	0	0	0
South Waikato District	2013	DOG	Chihuahua, Long Coat	34	20	14	20	15	0	0	0	0	0	0	0	0	0	0	0
South Waikato District	2013	DOG	Chihuahua, Smooth Coat	63	35	28	22	45	0	0	0	0	0	0	0	0	0	0	0
South Waikato District	2013	DOG	Collie, Bearded	23	11	12	3	5	0	0	0	0	0	0	0	0	0	0	0
South Waikato District	2013	DOG	Collie, Border	139	61	78	25	64	0	0	0	0	0	0	0	0	0	0	0
South Waikato District	2013	DOG	Collie, Rough	4	2	2	0	3	0	0	0	0	0	0	0	0	0	0	0
South Waikato District	2013	DOG	Collie, Smooth	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
South Waikato District	2013	DOG	Greyhound	115	60	55	6	16	0	0	0	0	0	0	0	0	0	0	0
South Waikato District	2013	DOG	Heading	67	33	34	2	6	0	0	0	0	0	0	0	0	0	0	0
South Waikato District	2013	DOG	Huntaway	169	76	93	27	26	0	0	0	0	0	0	0	0	0	0	0
South Waikato District	2013	DOG	Maltese	41	17	24	15	29	0	0	0	0	0	0	0	0	0	0	0
South Waikato District	2013	DOG	Poodle, Miniature	21	14	7	14	10	0	0	0	0	0	0	0	0	0	0	0
South Waikato District	2013	DOG	Poodle, Toy	27	13	14	7	18	0	0	0	0	0	0	0	0	0	0	0
South Waikato District	2013	DOG	Retriever, Golden	20	7	13	5	6	0	0	0	0	0	0	0	0	0	0	0
South Waikato District	2013	DOG	Retriever, Labrador	312	156	156	112	163	0	0	0	0	0	0	0	0	0	0	0
South Waikato District	2013	DOG	Rottweiler	76	48	28	22	54	0	0	0	0	0	0	0	0	0	0	0
South Waikato District	2013	DOG	Schnauzer, Miniature	13	7	6	9	10	0	0	0	0	0	0	0	0	0	0	0
South Waikato District	2013	DOG	Shepherd, German	118	53	65	37	80	3	0	0	0	0	0	0	0	0	0	0
South Waikato District	2013	DOG	Shih Tzu	38	24	14	13	27	0	0	0	0	0	0	0	0	0	0	0
South Waikato District	2013	DOG	Spaniel, Cavalier King Charles	10	5	5	7	6	0	0	0	0	0	0	0	0	0	0	0
South Waikato District	2013	DOG	Spaniel, Cocker	24	11	13	12	15	0	0	0	0	0	0	0	0	0	0	0
South Waikato District	2013	DOG	Spaniel, English Springer	14	8	6	3	3	0	0	0	0	0	0	0	0	0	0	0
South Waikato District	2013	DOG	Terrier, American Pit Bull	44	18	26	10	34	43	0	0	0	0	0	0	0	0	0	0
South Waikato District	2013	DOG	Terrier, Fox (Smooth)	162	95	67	76	70	1	0	0	0	0	0	0	0	0	0	0
South Waikato District	2013	DOG	Terrier, Jack Russell	97	34	63	45	50	0	0	0	0	0	0	0	0	0	0	0
South Waikato District	2013	DOG	Terrier, Staffordshire Bull	84	47	37	31	54	0	0	0	0	0	0	0	0	0	0	0
South Waikato District	2013	DOG	Terrier, West Highland White	14	8	6	10	9	0	0	0	0	0	0	0	0	0	0	0
South Waikato District	2013	DOG	_Unidentified_	587	291	296	184	334	2	0	0	0	0	0	0	0	0	0	0
South Waikato District	2013	OWN	_	0	0	0	0	0	0	0	0	0	2448	58	0	0	0	0	0
South Waikato District	2013	JST	_	0	0	0	0	0	0	0	0	0	0	0	1	1	0	0	0
South Waikato District	2013	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	77	13167	12388
South Waikato District	2014	DOG	_ALL-PURE_	2458	1194	1264	765	1382	48	0	0	0	0	0	0	0	0	0	0
South Waikato District	2014	DOG	_ALL-CROSS_	1281	661	620	496	763	71	1	0	0	0	0	0	0	0	0	0
South Waikato District	2014	DOG	_ALL-DOGS_	3739	1855	1884	1261	2145	119	1	0	0	0	0	0	0	0	0	0
South Waikato District	2014	DOG	Beagle	18	6	12	8	17	0	0	0	0	0	0	0	0	0	0	0
South Waikato District	2014	DOG	Bichon Frise	31	19	12	15	24	0	0	0	0	0	0	0	0	0	0	0
South Waikato District	2014	DOG	Boxer	46	20	26	15	32	0	0	0	0	0	0	0	0	0	0	0
South Waikato District	2014	DOG	Cattle, Australian	51	21	30	6	20	0	0	0	0	0	0	0	0	0	0	0
South Waikato District	2014	DOG	Chihuahua, Long Coat	40	25	15	22	21	0	0	0	0	0	0	0	0	0	0	0
South Waikato District	2014	DOG	Chihuahua, Smooth Coat	50	25	25	24	34	0	0	0	0	0	0	0	0	0	0	0
South Waikato District	2014	DOG	Collie, Bearded	24	12	12	4	7	0	0	0	0	0	0	0	0	0	0	0
South Waikato District	2014	DOG	Collie, Border	139	57	82	25	68	0	0	0	0	0	0	0	0	0	0	0
South Waikato District	2014	DOG	Collie, Rough	5	2	3	0	3	0	0	0	0	0	0	0	0	0	0	0
South Waikato District	2014	DOG	Collie, Smooth	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
South Waikato District	2014	DOG	Greyhound	115	61	54	4	32	0	0	0	0	0	0	0	0	0	0	0
South Waikato District	2014	DOG	Heading	64	31	33	2	8	0	0	0	0	0	0	0	0	0	0	0
South Waikato District	2014	DOG	Huntaway	154	62	92	18	26	1	0	0	0	0	0	0	0	0	0	0
South Waikato District	2014	DOG	Maltese	47	19	28	19	34	0	0	0	0	0	0	0	0	0	0	0
South Waikato District	2014	DOG	Poodle, Miniature	17	12	5	13	7	0	0	0	0	0	0	0	0	0	0	0
South Waikato District	2014	DOG	Poodle, Toy	29	12	17	7	24	0	0	0	0	0	0	0	0	0	0	0
South Waikato District	2014	DOG	Retriever, Golden	23	9	14	7	9	0	0	0	0	0	0	0	0	0	0	0
South Waikato District	2014	DOG	Retriever, Labrador	303	151	152	108	178	0	0	0	0	0	0	0	0	0	0	0
South Waikato District	2014	DOG	Rottweiler	72	37	35	17	51	1	0	0	0	0	0	0	0	0	0	0
South Waikato District	2014	DOG	Schnauzer, Miniature	14	6	8	8	11	0	0	0	0	0	0	0	0	0	0	0
South Waikato District	2014	DOG	Shepherd, German	120	56	64	36	85	3	0	0	0	0	0	0	0	0	0	0
South Waikato District	2014	DOG	Shih Tzu	45	25	20	16	33	0	0	0	0	0	0	0	0	0	0	0
South Waikato District	2014	DOG	Spaniel, Cavalier King Charles	14	6	8	9	10	0	0	0	0	0	0	0	0	0	0	0
South Waikato District	2014	DOG	Spaniel, Cocker	22	10	12	13	15	0	0	0	0	0	0	0	0	0	0	0
South Waikato District	2014	DOG	Spaniel, English Springer	19	11	8	5	7	0	0	0	0	0	0	0	0	0	0	0
South Waikato District	2014	DOG	Terrier, American Pit Bull	41	18	23	14	37	39	0	0	0	0	0	0	0	0	0	0
South Waikato District	2014	DOG	Terrier, Fox (Smooth)	158	89	69	75	78	1	0	0	0	0	0	0	0	0	0	0
South Waikato District	2014	DOG	Terrier, Jack Russell	94	39	55	46	59	0	0	0	0	0	0	0	0	0	0	0
South Waikato District	2014	DOG	Terrier, Staffordshire Bull	94	45	49	36	64	0	0	0	0	0	0	0	0	0	0	0
South Waikato District	2014	DOG	Terrier, West Highland White	17	10	7	11	12	0	0	0	0	0	0	0	0	0	0	0
South Waikato District	2014	DOG	_Unidentified_	592	298	294	182	376	3	0	0	0	0	0	0	0	0	0	0
South Waikato District	2014	OWN	_	0	0	0	0	0	0	0	0	0	2432	72	0	0	0	0	0
South Waikato District	2014	JST	_	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
South Waikato District	2014	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	88	18909	17767
South Waikato District	2015	DOG	_ALL-PURE_	2432	1183	1249	792	1558	58	0	0	0	0	0	0	0	0	0	0
South Waikato District	2015	DOG	_ALL-CROSS_	1242	632	610	471	813	54	0	0	0	0	0	0	0	0	0	0
South Waikato District	2015	DOG	_ALL-DOGS_	3674	1815	1859	1263	2371	112	0	0	0	0	0	0	0	0	0	0
South Waikato District	2015	DOG	Beagle	16	6	10	7	14	0	0	0	0	0	0	0	0	0	0	0
South Waikato District	2015	DOG	Bichon Frise	36	18	18	20	26	0	0	0	0	0	0	0	0	0	0	0
South Waikato District	2015	DOG	Boxer	38	15	23	14	29	0	0	0	0	0	0	0	0	0	0	0
South Waikato District	2015	DOG	Cattle, Australian	53	23	30	7	21	0	0	0	0	0	0	0	0	0	0	0
South Waikato District	2015	DOG	Chihuahua, Long Coat	41	25	16	24	24	0	0	0	0	0	0	0	0	0	0	0
South Waikato District	2015	DOG	Chihuahua, Smooth Coat	41	20	21	21	28	0	0	0	0	0	0	0	0	0	0	0
South Waikato District	2015	DOG	Collie, Bearded	26	15	11	5	10	0	0	0	0	0	0	0	0	0	0	0
South Waikato District	2015	DOG	Collie, Border	138	69	69	25	69	0	0	0	0	0	0	0	0	0	0	0
South Waikato District	2015	DOG	Collie, Rough	5	2	3	0	4	0	0	0	0	0	0	0	0	0	0	0
South Waikato District	2015	DOG	Collie, Smooth	1	0	1	1	1	0	0	0	0	0	0	0	0	0	0	0
South Waikato District	2015	DOG	Greyhound	90	41	49	6	71	0	0	0	0	0	0	0	0	0	0	0
South Waikato District	2015	DOG	Heading	67	33	34	3	9	0	0	0	0	0	0	0	0	0	0	0
South Waikato District	2015	DOG	Huntaway	155	60	95	20	37	1	0	0	0	0	0	0	0	0	0	0
South Waikato District	2015	DOG	Maltese	46	20	26	19	41	0	0	0	0	0	0	0	0	0	0	0
South Waikato District	2015	DOG	Poodle, Miniature	17	10	7	12	9	0	0	0	0	0	0	0	0	0	0	0
South Waikato District	2015	DOG	Poodle, Toy	34	13	21	15	31	0	0	0	0	0	0	0	0	0	0	0
South Waikato District	2015	DOG	Retriever, Golden	22	10	12	5	13	0	0	0	0	0	0	0	0	0	0	0
South Waikato District	2015	DOG	Retriever, Labrador	302	147	155	112	204	0	0	0	0	0	0	0	0	0	0	0
South Waikato District	2015	DOG	Rottweiler	77	43	34	18	62	1	0	0	0	0	0	0	0	0	0	0
South Waikato District	2015	DOG	Schnauzer, Miniature	14	7	7	8	13	0	0	0	0	0	0	0	0	0	0	0
South Waikato District	2015	DOG	Shepherd, German	104	52	52	28	79	3	0	0	0	0	0	0	0	0	0	0
South Waikato District	2015	DOG	Shih Tzu	47	28	19	22	37	0	0	0	0	0	0	0	0	0	0	0
South Waikato District	2015	DOG	Spaniel, Cavalier King Charles	11	6	5	8	8	0	0	0	0	0	0	0	0	0	0	0
South Waikato District	2015	DOG	Spaniel, Cocker	20	8	12	13	13	0	0	0	0	0	0	0	0	0	0	0
South Waikato District	2015	DOG	Spaniel, English Springer	20	10	10	6	11	0	0	0	0	0	0	0	0	0	0	0
South Waikato District	2015	DOG	Terrier, American Pit Bull	50	22	28	19	42	49	0	0	0	0	0	0	0	0	0	0
South Waikato District	2015	DOG	Terrier, Fox (Smooth)	136	83	53	65	77	1	0	0	0	0	0	0	0	0	0	0
South Waikato District	2015	DOG	Terrier, Jack Russell	103	40	63	49	71	0	0	0	0	0	0	0	0	0	0	0
South Waikato District	2015	DOG	Terrier, Staffordshire Bull	111	55	56	41	84	0	0	0	0	0	0	0	0	0	0	0
South Waikato District	2015	DOG	Terrier, West Highland White	11	5	6	7	9	0	0	0	0	0	0	0	0	0	0	0
South Waikato District	2015	DOG	_Unidentified_	600	297	303	192	411	3	0	0	0	0	0	0	0	0	0	0
South Waikato District	2015	OWN	_	0	0	0	0	0	0	0	0	0	2446	73	0	0	0	0	0
South Waikato District	2015	JST	_	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
South Waikato District	2015	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	99	10656	11951
South Waikato District	2016	DOG	_ALL-PURE_	2487	1215	1272	837	1754	70	0	0	0	0	0	0	0	0	0	0
South Waikato District	2016	DOG	_ALL-CROSS_	1290	653	637	507	921	51	0	0	0	0	0	0	0	0	0	0
South Waikato District	2016	DOG	_ALL-DOGS_	3777	1868	1909	1344	2675	121	0	0	0	0	0	0	0	0	0	0
South Waikato District	2016	DOG	Beagle	15	6	9	6	14	0	0	0	0	0	0	0	0	0	0	0
South Waikato District	2016	DOG	Bichon Frise	32	18	14	20	26	0	0	0	0	0	0	0	0	0	0	0
South Waikato District	2016	DOG	Boxer	43	21	22	15	36	0	0	0	0	0	0	0	0	0	0	0
South Waikato District	2016	DOG	Cattle, Australian	53	25	28	8	17	0	0	0	0	0	0	0	0	0	0	0
South Waikato District	2016	DOG	Chihuahua, Long Coat	42	27	15	25	27	0	0	0	0	0	0	0	0	0	0	0
South Waikato District	2016	DOG	Chihuahua, Smooth Coat	43	22	21	22	35	0	0	0	0	0	0	0	0	0	0	0
South Waikato District	2016	DOG	Collie, Bearded	25	14	11	4	9	0	0	0	0	0	0	0	0	0	0	0
South Waikato District	2016	DOG	Collie, Border	144	68	76	32	82	0	0	0	0	0	0	0	0	0	0	0
South Waikato District	2016	DOG	Collie, Rough	5	2	3	1	4	0	0	0	0	0	0	0	0	0	0	0
South Waikato District	2016	DOG	Collie, Smooth	1	0	1	1	1	0	0	0	0	0	0	0	0	0	0	0
South Waikato District	2016	DOG	Greyhound	96	43	53	6	83	0	0	0	0	0	0	0	0	0	0	0
South Waikato District	2016	DOG	Heading	56	30	26	1	9	0	0	0	0	0	0	0	0	0	0	0
South Waikato District	2016	DOG	Huntaway	142	60	82	21	38	2	0	0	0	0	0	0	0	0	0	0
South Waikato District	2016	DOG	Maltese	54	24	30	20	47	0	0	0	0	0	0	0	0	0	0	0
South Waikato District	2016	DOG	Poodle, Miniature	18	11	7	13	11	0	0	0	0	0	0	0	0	0	0	0
South Waikato District	2016	DOG	Poodle, Toy	35	13	22	18	32	0	0	0	0	0	0	0	0	0	0	0
South Waikato District	2016	DOG	Retriever, Golden	16	7	9	5	12	0	0	0	0	0	0	0	0	0	0	0
South Waikato District	2016	DOG	Retriever, Labrador	284	127	157	112	204	0	0	0	0	0	0	0	0	0	0	0
South Waikato District	2016	DOG	Rottweiler	88	45	43	20	74	1	0	0	0	0	0	0	0	0	0	0
South Waikato District	2016	DOG	Schnauzer, Miniature	20	9	11	10	18	0	0	0	0	0	0	0	0	0	0	0
South Waikato District	2016	DOG	Shepherd, German	101	51	50	29	82	2	0	0	0	0	0	0	0	0	0	0
South Waikato District	2016	DOG	Shih Tzu	49	28	21	22	42	0	0	0	0	0	0	0	0	0	0	0
South Waikato District	2016	DOG	Spaniel, Cavalier King Charles	11	6	5	8	10	0	0	0	0	0	0	0	0	0	0	0
South Waikato District	2016	DOG	Spaniel, Cocker	14	6	8	7	12	0	0	0	0	0	0	0	0	0	0	0
South Waikato District	2016	DOG	Spaniel, English Springer	22	11	11	5	15	0	0	0	0	0	0	0	0	0	0	0
South Waikato District	2016	DOG	Terrier, American Pit Bull	59	25	34	24	52	55	0	0	0	0	0	0	0	0	0	0
South Waikato District	2016	DOG	Terrier, Fox (Smooth)	132	82	50	66	87	0	0	0	0	0	0	0	0	0	0	0
South Waikato District	2016	DOG	Terrier, Jack Russell	104	41	63	42	75	1	0	0	0	0	0	0	0	0	0	0
South Waikato District	2016	DOG	Terrier, Staffordshire Bull	113	64	49	50	85	0	0	0	0	0	0	0	0	0	0	0
South Waikato District	2016	DOG	Terrier, West Highland White	8	4	4	6	8	0	0	0	0	0	0	0	0	0	0	0
South Waikato District	2016	DOG	_Unidentified_	662	325	337	218	507	9	0	0	0	0	0	0	0	0	0	0
South Waikato District	2016	OWN	_	0	0	0	0	0	0	0	0	0	2522	65	0	0	0	0	0
South Wairarapa District	2002	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	4	5117	0
South Wairarapa District	2003	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	6	306	0
South Wairarapa District	2004	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	11	373	0
South Wairarapa District	2005	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	30	3116	0
South Wairarapa District	2006	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	25	2775	2560
South Wairarapa District	2007	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	28	9785	7069
South Wairarapa District	2008	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	26	4237	5931
South Wairarapa District	2009	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	23	3040	4205
South Wairarapa District	2010	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	40	3600	3621
South Wairarapa District	2011	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	34	7506	6545
South Wairarapa District	2012	JST	_	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
South Wairarapa District	2012	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	37	8004	8332
South Wairarapa District	2013	DOG	_ALL-PURE_	2216	1096	1120	793	777	14	0	0	0	0	0	0	0	0	0	0
South Wairarapa District	2013	DOG	_ALL-CROSS_	631	310	321	379	350	8	0	0	0	0	0	0	0	0	0	0
South Wairarapa District	2013	DOG	_ALL-DOGS_	2847	1406	1441	1172	1127	22	0	0	0	0	0	0	0	0	0	0
South Wairarapa District	2013	DOG	Beagle	16	7	9	12	11	0	0	0	0	0	0	0	0	0	0	0
South Wairarapa District	2013	DOG	Bichon Frise	22	12	10	17	12	0	0	0	0	0	0	0	0	0	0	0
South Wairarapa District	2013	DOG	Boxer	12	8	4	9	7	0	0	0	0	0	0	0	0	0	0	0
South Wairarapa District	2013	DOG	Cattle, Australian	75	42	33	14	11	1	0	0	0	0	0	0	0	0	0	0
South Wairarapa District	2013	DOG	Chihuahua, Long Coat	9	4	5	3	8	0	0	0	0	0	0	0	0	0	0	0
South Wairarapa District	2013	DOG	Chihuahua, Smooth Coat	17	10	7	10	9	0	0	0	0	0	0	0	0	0	0	0
South Wairarapa District	2013	DOG	Collie, Bearded	16	6	10	6	5	0	0	0	0	0	0	0	0	0	0	0
South Wairarapa District	2013	DOG	Collie, Border	168	79	89	57	39	0	0	0	0	0	0	0	0	0	0	0
South Wairarapa District	2013	DOG	Collie, Rough	9	5	4	1	3	0	0	0	0	0	0	0	0	0	0	0
South Wairarapa District	2013	DOG	Collie, Smooth	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
South Wairarapa District	2013	DOG	Greyhound	15	10	5	10	8	0	0	0	0	0	0	0	0	0	0	0
South Wairarapa District	2013	DOG	Heading	209	119	90	8	7	0	0	0	0	0	0	0	0	0	0	0
South Wairarapa District	2013	DOG	Huntaway	420	189	231	38	19	0	0	0	0	0	0	0	0	0	0	0
South Wairarapa District	2013	DOG	Maltese	9	6	3	7	5	0	0	0	0	0	0	0	0	0	0	0
South Wairarapa District	2013	DOG	Poodle, Miniature	19	7	12	11	14	0	0	0	0	0	0	0	0	0	0	0
South Wairarapa District	2013	DOG	Poodle, Toy	10	6	4	6	6	0	0	0	0	0	0	0	0	0	0	0
South Wairarapa District	2013	DOG	Retriever, Golden	41	19	22	14	16	0	0	0	0	0	0	0	0	0	0	0
South Wairarapa District	2013	DOG	Retriever, Labrador	275	127	148	137	136	1	0	0	0	0	0	0	0	0	0	0
South Wairarapa District	2013	DOG	Rottweiler	22	9	13	7	17	1	0	0	0	0	0	0	0	0	0	0
South Wairarapa District	2013	DOG	Schnauzer, Miniature	6	3	3	4	3	0	0	0	0	0	0	0	0	0	0	0
South Wairarapa District	2013	DOG	Shepherd, German	51	27	24	32	33	2	0	0	0	0	0	0	0	0	0	0
South Wairarapa District	2013	DOG	Shih Tzu	10	4	6	5	6	0	0	0	0	0	0	0	0	0	0	0
South Wairarapa District	2013	DOG	Spaniel, Cavalier King Charles	21	11	10	13	14	0	0	0	0	0	0	0	0	0	0	0
South Wairarapa District	2013	DOG	Spaniel, Cocker	30	15	15	20	15	0	0	0	0	0	0	0	0	0	0	0
South Wairarapa District	2013	DOG	Spaniel, English Springer	11	7	4	4	7	0	0	0	0	0	0	0	0	0	0	0
South Wairarapa District	2013	DOG	Terrier, American Pit Bull	4	1	3	1	3	4	0	0	0	0	0	0	0	0	0	0
South Wairarapa District	2013	DOG	Terrier, Fox (Smooth)	170	93	77	94	57	1	0	0	0	0	0	0	0	0	0	0
South Wairarapa District	2013	DOG	Terrier, Jack Russell	106	51	55	58	60	0	0	0	0	0	0	0	0	0	0	0
South Wairarapa District	2013	DOG	Terrier, Staffordshire Bull	40	24	16	20	27	0	0	0	0	0	0	0	0	0	0	0
South Wairarapa District	2013	DOG	Terrier, West Highland White	14	7	7	9	10	0	0	0	0	0	0	0	0	0	0	0
South Wairarapa District	2013	DOG	_Unidentified_	389	188	201	166	209	4	0	0	0	0	0	0	0	0	0	0
South Wairarapa District	2013	OWN	_	0	0	0	0	0	0	0	0	0	1594	7	0	0	0	0	0
South Wairarapa District	2013	JST	_	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
South Wairarapa District	2013	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	42	6378	6599
South Wairarapa District	2014	DOG	_ALL-PURE_	2195	1091	1104	897	863	13	0	0	0	0	0	0	0	0	0	0
South Wairarapa District	2014	DOG	_ALL-CROSS_	661	329	332	426	414	8	2	0	0	0	0	0	0	0	0	0
South Wairarapa District	2014	DOG	_ALL-DOGS_	2856	1420	1436	1323	1277	21	2	0	0	0	0	0	0	0	0	0
South Wairarapa District	2014	DOG	Beagle	15	6	9	11	11	0	0	0	0	0	0	0	0	0	0	0
South Wairarapa District	2014	DOG	Bichon Frise	25	13	12	20	15	0	0	0	0	0	0	0	0	0	0	0
South Wairarapa District	2014	DOG	Boxer	14	9	5	10	10	0	0	0	0	0	0	0	0	0	0	0
South Wairarapa District	2014	DOG	Cattle, Australian	65	37	28	18	13	1	0	0	0	0	0	0	0	0	0	0
South Wairarapa District	2014	DOG	Chihuahua, Long Coat	15	9	6	8	11	0	0	0	0	0	0	0	0	0	0	0
South Wairarapa District	2014	DOG	Chihuahua, Smooth Coat	14	5	9	8	10	0	0	0	0	0	0	0	0	0	0	0
South Wairarapa District	2014	DOG	Collie, Bearded	18	7	11	7	5	0	0	0	0	0	0	0	0	0	0	0
South Wairarapa District	2014	DOG	Collie, Border	150	76	74	65	41	0	0	0	0	0	0	0	0	0	0	0
South Wairarapa District	2014	DOG	Collie, Rough	7	3	4	2	2	0	0	0	0	0	0	0	0	0	0	0
South Wairarapa District	2014	DOG	Collie, Smooth	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
South Wairarapa District	2014	DOG	Greyhound	16	8	8	11	12	0	0	0	0	0	0	0	0	0	0	0
South Wairarapa District	2014	DOG	Heading	237	134	103	13	6	0	0	0	0	0	0	0	0	0	0	0
South Wairarapa District	2014	DOG	Huntaway	409	190	219	38	22	0	0	0	0	0	0	0	0	0	0	0
South Wairarapa District	2014	DOG	Maltese	8	4	4	5	7	0	0	0	0	0	0	0	0	0	0	0
South Wairarapa District	2014	DOG	Poodle, Miniature	22	10	12	12	16	0	0	0	0	0	0	0	0	0	0	0
South Wairarapa District	2014	DOG	Poodle, Toy	11	6	5	8	7	0	0	0	0	0	0	0	0	0	0	0
South Wairarapa District	2014	DOG	Retriever, Golden	34	13	21	16	16	0	0	0	0	0	0	0	0	0	0	0
South Wairarapa District	2014	DOG	Retriever, Labrador	253	114	139	145	142	1	0	0	0	0	0	0	0	0	0	0
South Wairarapa District	2014	DOG	Rottweiler	22	10	12	9	17	1	0	0	0	0	0	0	0	0	0	0
South Wairarapa District	2014	DOG	Schnauzer, Miniature	11	5	6	9	8	0	0	0	0	0	0	0	0	0	0	0
South Wairarapa District	2014	DOG	Shepherd, German	50	29	21	35	33	2	0	0	0	0	0	0	0	0	0	0
South Wairarapa District	2014	DOG	Shih Tzu	10	5	5	8	4	0	0	0	0	0	0	0	0	0	0	0
South Wairarapa District	2014	DOG	Spaniel, Cavalier King Charles	21	11	10	12	15	0	0	0	0	0	0	0	0	0	0	0
South Wairarapa District	2014	DOG	Spaniel, Cocker	29	13	16	18	15	0	0	0	0	0	0	0	0	0	0	0
South Wairarapa District	2014	DOG	Spaniel, English Springer	17	12	5	9	12	0	0	0	0	0	0	0	0	0	0	0
South Wairarapa District	2014	DOG	Terrier, American Pit Bull	5	1	4	1	4	5	0	0	0	0	0	0	0	0	0	0
South Wairarapa District	2014	DOG	Terrier, Fox (Smooth)	161	86	75	105	66	1	0	0	0	0	0	0	0	0	0	0
South Wairarapa District	2014	DOG	Terrier, Jack Russell	114	59	55	74	71	0	0	0	0	0	0	0	0	0	0	0
South Wairarapa District	2014	DOG	Terrier, Staffordshire Bull	44	24	20	25	33	0	0	0	0	0	0	0	0	0	0	0
South Wairarapa District	2014	DOG	Terrier, West Highland White	11	6	5	7	8	0	0	0	0	0	0	0	0	0	0	0
South Wairarapa District	2014	DOG	_Unidentified_	387	186	201	188	231	2	0	0	0	0	0	0	0	0	0	0
South Wairarapa District	2014	OWN	_	0	0	0	0	0	0	0	0	0	1605	9	0	0	0	0	0
South Wairarapa District	2014	JST	_	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
South Wairarapa District	2014	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	48	5215	5249
South Wairarapa District	2015	DOG	_ALL-PURE_	2166	1077	1089	930	949	13	0	0	0	0	0	0	0	0	0	0
South Wairarapa District	2015	DOG	_ALL-CROSS_	711	358	353	472	492	8	1	0	0	0	0	0	0	0	0	0
South Wairarapa District	2015	DOG	_ALL-DOGS_	2877	1435	1442	1402	1441	21	1	0	0	0	0	0	0	0	0	0
South Wairarapa District	2015	DOG	Beagle	14	6	8	13	11	0	0	0	0	0	0	0	0	0	0	0
South Wairarapa District	2015	DOG	Bichon Frise	24	14	10	19	15	0	0	0	0	0	0	0	0	0	0	0
South Wairarapa District	2015	DOG	Boxer	16	11	5	13	12	0	0	0	0	0	0	0	0	0	0	0
South Wairarapa District	2015	DOG	Cattle, Australian	51	31	20	16	14	1	0	0	0	0	0	0	0	0	0	0
South Wairarapa District	2015	DOG	Chihuahua, Long Coat	15	8	7	8	11	0	0	0	0	0	0	0	0	0	0	0
South Wairarapa District	2015	DOG	Chihuahua, Smooth Coat	14	3	11	7	11	0	0	0	0	0	0	0	0	0	0	0
South Wairarapa District	2015	DOG	Collie, Bearded	20	9	11	10	5	0	0	0	0	0	0	0	0	0	0	0
South Wairarapa District	2015	DOG	Collie, Border	140	80	60	64	48	0	0	0	0	0	0	0	0	0	0	0
South Wairarapa District	2015	DOG	Collie, Rough	9	4	5	4	4	0	0	0	0	0	0	0	0	0	0	0
South Wairarapa District	2015	DOG	Collie, Smooth	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
South Wairarapa District	2015	DOG	Greyhound	16	8	8	13	14	0	0	0	0	0	0	0	0	0	0	0
South Wairarapa District	2015	DOG	Heading	265	140	125	14	6	0	0	0	0	0	0	0	0	0	0	0
South Wairarapa District	2015	DOG	Huntaway	412	198	214	43	21	0	0	0	0	0	0	0	0	0	0	0
South Wairarapa District	2015	DOG	Maltese	9	4	5	7	8	0	0	0	0	0	0	0	0	0	0	0
South Wairarapa District	2015	DOG	Poodle, Miniature	18	9	9	11	14	0	0	0	0	0	0	0	0	0	0	0
South Wairarapa District	2015	DOG	Poodle, Toy	12	5	7	10	9	0	0	0	0	0	0	0	0	0	0	0
South Wairarapa District	2015	DOG	Retriever, Golden	28	10	18	14	16	0	0	0	0	0	0	0	0	0	0	0
South Wairarapa District	2015	DOG	Retriever, Labrador	246	112	134	146	154	1	0	0	0	0	0	0	0	0	0	0
South Wairarapa District	2015	DOG	Rottweiler	21	8	13	10	17	1	0	0	0	0	0	0	0	0	0	0
South Wairarapa District	2015	DOG	Schnauzer, Miniature	14	6	8	12	12	0	0	0	0	0	0	0	0	0	0	0
South Wairarapa District	2015	DOG	Shepherd, German	45	26	19	30	32	2	0	0	0	0	0	0	0	0	0	0
South Wairarapa District	2015	DOG	Shih Tzu	9	5	4	7	6	0	0	0	0	0	0	0	0	0	0	0
South Wairarapa District	2015	DOG	Spaniel, Cavalier King Charles	20	11	9	14	15	0	0	0	0	0	0	0	0	0	0	0
South Wairarapa District	2015	DOG	Spaniel, Cocker	33	17	16	22	22	0	0	0	0	0	0	0	0	0	0	0
South Wairarapa District	2015	DOG	Spaniel, English Springer	18	11	7	9	14	0	0	0	0	0	0	0	0	0	0	0
South Wairarapa District	2015	DOG	Terrier, American Pit Bull	4	0	4	1	3	4	0	0	0	0	0	0	0	0	0	0
South Wairarapa District	2015	DOG	Terrier, Fox (Smooth)	157	80	77	99	75	1	0	0	0	0	0	0	0	0	0	0
South Wairarapa District	2015	DOG	Terrier, Jack Russell	109	55	54	80	76	0	0	0	0	0	0	0	0	0	0	0
South Wairarapa District	2015	DOG	Terrier, Staffordshire Bull	47	24	23	27	40	0	0	0	0	0	0	0	0	0	0	0
South Wairarapa District	2015	DOG	Terrier, West Highland White	15	6	9	12	11	0	0	0	0	0	0	0	0	0	0	0
South Wairarapa District	2015	DOG	_Unidentified_	365	176	189	195	253	3	0	0	0	0	0	0	0	0	0	0
South Wairarapa District	2015	OWN	_	0	0	0	0	0	0	0	0	0	1642	10	0	0	0	0	0
South Wairarapa District	2015	JST	_	0	0	0	0	0	0	0	0	0	0	0	10	0	0	0	0
South Wairarapa District	2015	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	37	5277	5862
South Wairarapa District	2016	DOG	_ALL-PURE_	2113	1056	1057	942	1051	13	0	0	0	0	0	0	0	0	0	0
South Wairarapa District	2016	DOG	_ALL-CROSS_	738	368	370	515	549	10	1	0	0	0	0	0	0	0	0	0
South Wairarapa District	2016	DOG	_ALL-DOGS_	2851	1424	1427	1457	1600	23	1	0	0	0	0	0	0	0	0	0
South Wairarapa District	2016	DOG	Beagle	14	5	9	12	11	0	0	0	0	0	0	0	0	0	0	0
South Wairarapa District	2016	DOG	Bichon Frise	20	13	7	15	13	0	0	0	0	0	0	0	0	0	0	0
South Wairarapa District	2016	DOG	Boxer	10	6	4	9	9	0	0	0	0	0	0	0	0	0	0	0
South Wairarapa District	2016	DOG	Cattle, Australian	45	30	15	20	15	1	0	0	0	0	0	0	0	0	0	0
South Wairarapa District	2016	DOG	Chihuahua, Long Coat	10	6	4	4	8	0	0	0	0	0	0	0	0	0	0	0
South Wairarapa District	2016	DOG	Chihuahua, Smooth Coat	16	3	13	10	14	0	0	0	0	0	0	0	0	0	0	0
South Wairarapa District	2016	DOG	Collie, Bearded	18	9	9	11	6	0	0	0	0	0	0	0	0	0	0	0
South Wairarapa District	2016	DOG	Collie, Border	140	85	55	67	59	0	0	0	0	0	0	0	0	0	0	0
South Wairarapa District	2016	DOG	Collie, Rough	5	3	2	2	2	0	0	0	0	0	0	0	0	0	0	0
South Wairarapa District	2016	DOG	Collie, Smooth	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
South Wairarapa District	2016	DOG	Greyhound	20	12	8	13	15	0	0	0	0	0	0	0	0	0	0	0
South Wairarapa District	2016	DOG	Heading	270	136	134	19	7	0	0	0	0	0	0	0	0	0	0	0
South Wairarapa District	2016	DOG	Huntaway	388	191	197	51	21	0	0	0	0	0	0	0	0	0	0	0
South Wairarapa District	2016	DOG	Maltese	7	3	4	5	6	0	0	0	0	0	0	0	0	0	0	0
South Wairarapa District	2016	DOG	Poodle, Miniature	18	10	8	13	15	0	0	0	0	0	0	0	0	0	0	0
South Wairarapa District	2016	DOG	Poodle, Toy	12	5	7	9	9	0	0	0	0	0	0	0	0	0	0	0
South Wairarapa District	2016	DOG	Retriever, Golden	27	9	18	16	18	0	0	0	0	0	0	0	0	0	0	0
South Wairarapa District	2016	DOG	Retriever, Labrador	236	104	132	133	168	1	0	0	0	0	0	0	0	0	0	0
South Wairarapa District	2016	DOG	Rottweiler	21	6	15	8	19	1	0	0	0	0	0	0	0	0	0	0
South Wairarapa District	2016	DOG	Schnauzer, Miniature	19	7	12	15	17	0	0	0	0	0	0	0	0	0	0	0
South Wairarapa District	2016	DOG	Shepherd, German	45	29	16	34	37	2	0	0	0	0	0	0	0	0	0	0
South Wairarapa District	2016	DOG	Shih Tzu	13	6	7	10	10	0	0	0	0	0	0	0	0	0	0	0
South Wairarapa District	2016	DOG	Spaniel, Cavalier King Charles	18	10	8	15	14	0	0	0	0	0	0	0	0	0	0	0
South Wairarapa District	2016	DOG	Spaniel, Cocker	27	13	14	17	19	0	0	0	0	0	0	0	0	0	0	0
South Wairarapa District	2016	DOG	Spaniel, English Springer	21	12	9	11	19	0	0	0	0	0	0	0	0	0	0	0
South Wairarapa District	2016	DOG	Terrier, American Pit Bull	4	0	4	1	4	4	0	0	0	0	0	0	0	0	0	0
South Wairarapa District	2016	DOG	Terrier, Fox (Smooth)	146	75	71	90	86	1	0	0	0	0	0	0	0	0	0	0
South Wairarapa District	2016	DOG	Terrier, Jack Russell	111	56	55	83	84	0	0	0	0	0	0	0	0	0	0	0
South Wairarapa District	2016	DOG	Terrier, Staffordshire Bull	46	24	22	26	40	1	0	0	0	0	0	0	0	0	0	0
South Wairarapa District	2016	DOG	Terrier, West Highland White	14	5	9	12	10	0	0	0	0	0	0	0	0	0	0	0
South Wairarapa District	2016	DOG	_Unidentified_	372	183	189	211	296	2	0	0	0	0	0	0	0	0	0	0
South Wairarapa District	2016	OWN	_	0	0	0	0	0	0	0	0	0	1667	2	0	0	0	0	0
Southland District	2001	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	27	4750	0
Southland District	2002	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	25	5987	0
Southland District	2003	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	32	2326	0
Southland District	2004	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	40	28613	0
Southland District	2005	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	35	4361	0
Southland District	2006	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	53	12054	11010
Southland District	2007	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	99	5970	19290
Southland District	2008	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	106	15477	19371
Southland District	2009	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	116	14998	18210
Southland District	2010	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	112	26042	16184
Southland District	2011	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	130	22341	34447
Southland District	2012	JST	_	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Southland District	2012	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	71	23584	32407
Southland District	2013	DOG	_ALL-PURE_	10591	5258	5333	290	2769	22	3	0	0	0	0	0	0	0	0	0
Southland District	2013	DOG	_ALL-CROSS_	2555	1285	1270	159	1407	22	5	0	0	0	0	0	0	0	0	0
Southland District	2013	DOG	_ALL-DOGS_	13146	6543	6603	449	4176	44	8	0	0	0	0	0	0	0	0	0
Southland District	2013	DOG	Beagle	29	15	14	2	20	0	0	0	0	0	0	0	0	0	0	0
Southland District	2013	DOG	Bichon Frise	142	83	59	12	99	0	0	0	0	0	0	0	0	0	0	0
Southland District	2013	DOG	Boxer	63	39	24	6	36	0	0	0	0	0	0	0	0	0	0	0
Southland District	2013	DOG	Cattle, Australian	53	28	25	3	21	0	0	0	0	0	0	0	0	0	0	0
Southland District	2013	DOG	Chihuahua, Long Coat	17	10	7	1	15	0	0	0	0	0	0	0	0	0	0	0
Southland District	2013	DOG	Chihuahua, Smooth Coat	31	18	13	0	22	0	0	0	0	0	0	0	0	0	0	0
Southland District	2013	DOG	Collie, Bearded	183	91	92	1	21	0	0	0	0	0	0	0	0	0	0	0
Southland District	2013	DOG	Collie, Border	353	186	167	11	92	0	0	0	0	0	0	0	0	0	0	0
Southland District	2013	DOG	Collie, Rough	86	33	53	3	6	0	0	0	0	0	0	0	0	0	0	0
Southland District	2013	DOG	Collie, Smooth	2319	1076	1243	7	79	0	0	0	0	0	0	0	0	0	0	0
Southland District	2013	DOG	Greyhound	12	7	5	1	8	0	0	0	0	0	0	0	0	0	0	0
Southland District	2013	DOG	Heading	1135	574	561	2	43	0	0	0	0	0	0	0	0	0	0	0
Southland District	2013	DOG	Huntaway	2091	941	1150	11	84	0	0	0	0	0	0	0	0	0	0	0
Southland District	2013	DOG	Maltese	50	28	22	4	27	0	0	0	0	0	0	0	0	0	0	0
Southland District	2013	DOG	Poodle, Miniature	18	9	9	1	11	0	0	0	0	0	0	0	0	0	0	0
Southland District	2013	DOG	Poodle, Toy	13	6	7	1	6	0	0	0	0	0	0	0	0	0	0	0
Southland District	2013	DOG	Retriever, Golden	119	77	42	3	50	0	0	0	0	0	0	0	0	0	0	0
Southland District	2013	DOG	Retriever, Labrador	1255	644	611	48	639	4	0	0	0	0	0	0	0	0	0	0
Southland District	2013	DOG	Rottweiler	99	60	39	0	74	2	1	0	0	0	0	0	0	0	0	0
Southland District	2013	DOG	Schnauzer, Miniature	42	20	22	2	32	0	0	0	0	0	0	0	0	0	0	0
Southland District	2013	DOG	Shepherd, German	99	58	41	3	66	0	1	0	0	0	0	0	0	0	0	0
Southland District	2013	DOG	Shih Tzu	19	11	8	0	15	0	0	0	0	0	0	0	0	0	0	0
Southland District	2013	DOG	Spaniel, Cavalier King Charles	25	11	14	1	21	0	0	0	0	0	0	0	0	0	0	0
Southland District	2013	DOG	Spaniel, Cocker	95	51	44	8	55	0	0	0	0	0	0	0	0	0	0	0
Southland District	2013	DOG	Spaniel, English Springer	134	62	72	7	77	0	0	0	0	0	0	0	0	0	0	0
Southland District	2013	DOG	Terrier, American Pit Bull	12	5	7	5	10	12	0	0	0	0	0	0	0	0	0	0
Southland District	2013	DOG	Terrier, Fox (Smooth)	395	217	178	36	186	0	0	0	0	0	0	0	0	0	0	0
Southland District	2013	DOG	Terrier, Jack Russell	576	302	274	40	314	1	0	0	0	0	0	0	0	0	0	0
Southland District	2013	DOG	Terrier, Staffordshire Bull	90	46	44	3	53	1	0	0	0	0	0	0	0	0	0	0
Southland District	2013	DOG	Terrier, West Highland White	13	10	3	0	8	0	0	0	0	0	0	0	0	0	0	0
Southland District	2013	DOG	_Unidentified_	1023	540	483	68	579	2	1	0	0	0	0	0	0	0	0	0
Southland District	2013	OWN	_	0	0	0	0	0	0	0	0	0	6198	103	0	0	0	0	0
Southland District	2013	JST	_	0	0	0	0	0	0	0	0	0	0	0	1	0	0	0	0
Southland District	2013	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	69	14776	16467
Southland District	2014	DOG	_ALL-PURE_	10237	5087	5150	273	2809	25	8	0	0	0	0	0	0	0	0	0
Southland District	2014	DOG	_ALL-CROSS_	2606	1331	1275	151	1430	23	4	0	0	0	0	0	0	0	0	0
Southland District	2014	DOG	_ALL-DOGS_	12843	6418	6425	424	4239	48	12	0	0	0	0	0	0	0	0	0
Southland District	2014	DOG	Beagle	32	17	15	2	23	0	0	0	0	0	0	0	0	0	0	0
Southland District	2014	DOG	Bichon Frise	140	84	56	9	97	1	0	0	0	0	0	0	0	0	0	0
Southland District	2014	DOG	Boxer	55	32	23	5	31	1	0	0	0	0	0	0	0	0	0	0
Southland District	2014	DOG	Cattle, Australian	52	26	26	2	24	0	0	0	0	0	0	0	0	0	0	0
Southland District	2014	DOG	Chihuahua, Long Coat	22	13	9	1	17	0	0	0	0	0	0	0	0	0	0	0
Southland District	2014	DOG	Chihuahua, Smooth Coat	40	23	17	1	31	0	0	0	0	0	0	0	0	0	0	0
Southland District	2014	DOG	Collie, Bearded	160	76	84	1	17	0	1	0	0	0	0	0	0	0	0	0
Southland District	2014	DOG	Collie, Border	374	199	175	10	102	0	0	0	0	0	0	0	0	0	0	0
Southland District	2014	DOG	Collie, Rough	80	35	45	4	6	0	0	0	0	0	0	0	0	0	0	0
Southland District	2014	DOG	Collie, Smooth	2077	972	1105	4	71	0	0	0	0	0	0	0	0	0	0	0
Southland District	2014	DOG	Greyhound	14	11	3	3	6	0	0	0	0	0	0	0	0	0	0	0
Southland District	2014	DOG	Heading	1115	566	549	1	39	0	0	0	0	0	0	0	0	0	0	0
Southland District	2014	DOG	Huntaway	2115	952	1163	15	86	0	0	0	0	0	0	0	0	0	0	0
Southland District	2014	DOG	Maltese	51	29	22	5	31	0	0	0	0	0	0	0	0	0	0	0
Southland District	2014	DOG	Poodle, Miniature	19	10	9	1	14	0	0	0	0	0	0	0	0	0	0	0
Southland District	2014	DOG	Poodle, Toy	13	6	7	0	6	0	0	0	0	0	0	0	0	0	0	0
Southland District	2014	DOG	Retriever, Golden	110	71	39	2	52	0	0	0	0	0	0	0	0	0	0	0
Southland District	2014	DOG	Retriever, Labrador	1213	624	589	42	654	3	0	0	0	0	0	0	0	0	0	0
Southland District	2014	DOG	Rottweiler	90	53	37	1	69	1	3	0	0	0	0	0	0	0	0	0
Southland District	2014	DOG	Schnauzer, Miniature	47	24	23	2	35	0	0	0	0	0	0	0	0	0	0	0
Southland District	2014	DOG	Shepherd, German	98	55	43	2	69	0	1	0	0	0	0	0	0	0	0	0
Southland District	2014	DOG	Shih Tzu	24	13	11	1	18	0	0	0	0	0	0	0	0	0	0	0
Southland District	2014	DOG	Spaniel, Cavalier King Charles	24	12	12	1	20	0	0	0	0	0	0	0	0	0	0	0
Southland District	2014	DOG	Spaniel, Cocker	86	47	39	5	52	0	0	0	0	0	0	0	0	0	0	0
Southland District	2014	DOG	Spaniel, English Springer	128	60	68	6	77	0	0	0	0	0	0	0	0	0	0	0
Southland District	2014	DOG	Terrier, American Pit Bull	15	8	7	6	10	13	1	0	0	0	0	0	0	0	0	0
Southland District	2014	DOG	Terrier, Fox (Smooth)	381	209	172	31	200	1	0	0	0	0	0	0	0	0	0	0
Southland District	2014	DOG	Terrier, Jack Russell	565	289	276	36	319	0	0	0	0	0	0	0	0	0	0	0
Southland District	2014	DOG	Terrier, Staffordshire Bull	79	36	43	4	43	1	1	0	0	0	0	0	0	0	0	0
Southland District	2014	DOG	Terrier, West Highland White	10	8	2	0	8	0	0	0	0	0	0	0	0	0	0	0
Southland District	2014	DOG	_Unidentified_	1008	527	481	70	582	4	1	0	0	0	0	0	0	0	0	0
Southland District	2014	OWN	_	0	0	0	0	0	0	0	0	2	6136	122	0	0	0	0	0
Southland District	2014	JST	_	0	0	0	0	0	0	0	0	0	0	0	1	0	0	0	0
Southland District	2014	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	63	65738	19974
Southland District	2015	DOG	_ALL-PURE_	10097	5081	5016	260	3532	27	14	0	0	0	0	0	0	0	0	0
Southland District	2015	DOG	_ALL-CROSS_	2824	1429	1395	161	1902	36	8	0	0	0	0	0	0	0	0	0
Southland District	2015	DOG	_ALL-DOGS_	12921	6510	6411	421	5434	63	22	0	0	0	0	0	0	0	0	0
Southland District	2015	DOG	Beagle	33	19	14	2	26	0	0	0	0	0	0	0	0	0	0	0
Southland District	2015	DOG	Bichon Frise	132	79	53	9	101	1	0	0	0	0	0	0	0	0	0	0
Southland District	2015	DOG	Boxer	43	23	20	4	32	1	1	0	0	0	0	0	0	0	0	0
Southland District	2015	DOG	Cattle, Australian	55	26	29	2	28	0	1	0	0	0	0	0	0	0	0	0
Southland District	2015	DOG	Chihuahua, Long Coat	24	16	8	2	23	0	0	0	0	0	0	0	0	0	0	0
Southland District	2015	DOG	Chihuahua, Smooth Coat	44	23	21	2	40	0	0	0	0	0	0	0	0	0	0	0
Southland District	2015	DOG	Collie, Bearded	153	83	70	1	23	0	1	0	0	0	0	0	0	0	0	0
Southland District	2015	DOG	Collie, Border	349	186	163	9	127	0	0	0	0	0	0	0	0	0	0	0
Southland District	2015	DOG	Collie, Rough	64	33	31	1	4	1	0	0	0	0	0	0	0	0	0	0
Southland District	2015	DOG	Collie, Smooth	1880	888	992	2	86	0	0	0	0	0	0	0	0	0	0	0
Southland District	2015	DOG	Greyhound	15	10	5	1	11	0	0	0	0	0	0	0	0	0	0	0
Southland District	2015	DOG	Heading	1183	610	573	1	73	0	0	0	0	0	0	0	0	0	0	0
Southland District	2015	DOG	Huntaway	2114	973	1141	12	146	0	1	0	0	0	0	0	0	0	0	0
Southland District	2015	DOG	Maltese	59	28	31	5	40	0	0	0	0	0	0	0	0	0	0	0
Southland District	2015	DOG	Poodle, Miniature	20	11	9	1	18	0	0	0	0	0	0	0	0	0	0	0
Southland District	2015	DOG	Poodle, Toy	15	7	8	0	11	0	0	0	0	0	0	0	0	0	0	0
Southland District	2015	DOG	Retriever, Golden	96	63	33	0	64	0	0	0	0	0	0	0	0	0	0	0
Southland District	2015	DOG	Retriever, Labrador	1221	627	594	50	833	2	0	0	0	0	0	0	0	0	0	0
Southland District	2015	DOG	Rottweiler	100	59	41	2	79	1	3	0	0	0	0	0	0	0	0	0
Southland District	2015	DOG	Schnauzer, Miniature	51	27	24	1	43	0	0	0	0	0	0	0	0	0	0	0
Southland District	2015	DOG	Shepherd, German	110	62	48	2	89	1	3	0	0	0	0	0	0	0	0	0
Southland District	2015	DOG	Shih Tzu	32	17	15	2	27	0	0	0	0	0	0	0	0	0	0	0
Southland District	2015	DOG	Spaniel, Cavalier King Charles	26	14	12	1	23	0	0	0	0	0	0	0	0	0	0	0
Southland District	2015	DOG	Spaniel, Cocker	94	47	47	8	77	0	0	0	0	0	0	0	0	0	0	0
Southland District	2015	DOG	Spaniel, English Springer	129	65	64	4	97	0	0	0	0	0	0	0	0	0	0	0
Southland District	2015	DOG	Terrier, American Pit Bull	14	8	6	6	11	12	1	0	0	0	0	0	0	0	0	0
Southland District	2015	DOG	Terrier, Fox (Smooth)	376	206	170	30	242	1	0	0	0	0	0	0	0	0	0	0
Southland District	2015	DOG	Terrier, Jack Russell	544	286	258	32	376	0	0	0	0	0	0	0	0	0	0	0
Southland District	2015	DOG	Terrier, Staffordshire Bull	84	38	46	4	58	2	1	0	0	0	0	0	0	0	0	0
Southland District	2015	DOG	Terrier, West Highland White	9	7	2	0	7	0	0	0	0	0	0	0	0	0	0	0
Southland District	2015	DOG	_Unidentified_	1028	540	488	64	717	5	2	0	0	0	0	0	0	0	0	0
Southland District	2015	OWN	_	0	0	0	0	0	0	0	0	4	6278	96	0	0	0	0	0
Southland District	2015	JST	_	0	0	0	0	0	0	0	0	0	0	0	5	1	0	0	0
Southland District	2015	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	61	9990	63063
Southland District	2016	DOG	_ALL-PURE_	9799	4905	4894	273	3566	25	11	0	0	0	0	0	0	0	0	0
Southland District	2016	DOG	_ALL-CROSS_	2916	1507	1409	184	1971	35	11	0	0	0	0	0	0	0	0	0
Southland District	2016	DOG	_ALL-DOGS_	12715	6412	6303	457	5537	60	22	0	0	0	0	0	0	0	0	0
Southland District	2016	DOG	Beagle	27	15	12	1	22	0	0	0	0	0	0	0	0	0	0	0
Southland District	2016	DOG	Bichon Frise	128	78	50	9	100	0	0	0	0	0	0	0	0	0	0	0
Southland District	2016	DOG	Boxer	42	23	19	3	36	0	0	0	0	0	0	0	0	0	0	0
Southland District	2016	DOG	Cattle, Australian	52	25	27	0	22	0	0	0	0	0	0	0	0	0	0	0
Southland District	2016	DOG	Chihuahua, Long Coat	29	19	10	3	26	0	0	0	0	0	0	0	0	0	0	0
Southland District	2016	DOG	Chihuahua, Smooth Coat	46	26	20	2	40	0	0	0	0	0	0	0	0	0	0	0
Southland District	2016	DOG	Collie, Bearded	157	79	78	2	22	0	1	0	0	0	0	0	0	0	0	0
Southland District	2016	DOG	Collie, Border	322	163	159	9	126	0	0	0	0	0	0	0	0	0	0	0
Southland District	2016	DOG	Collie, Rough	61	31	30	1	3	0	0	0	0	0	0	0	0	0	0	0
Southland District	2016	DOG	Collie, Smooth	1646	788	858	3	85	0	1	0	0	0	0	0	0	0	0	0
Southland District	2016	DOG	Greyhound	24	14	10	3	18	0	0	0	0	0	0	0	0	0	0	0
Southland District	2016	DOG	Heading	1272	642	630	1	68	0	0	0	0	0	0	0	0	0	0	0
Southland District	2016	DOG	Huntaway	2092	930	1162	11	142	0	0	0	0	0	0	0	0	0	0	0
Southland District	2016	DOG	Maltese	51	27	24	5	38	0	0	0	0	0	0	0	0	0	0	0
Southland District	2016	DOG	Poodle, Miniature	22	12	10	1	19	0	0	0	0	0	0	0	0	0	0	0
Southland District	2016	DOG	Poodle, Toy	16	6	10	0	13	0	0	0	0	0	0	0	0	0	0	0
Southland District	2016	DOG	Retriever, Golden	96	59	37	2	71	0	0	0	0	0	0	0	0	0	0	0
Southland District	2016	DOG	Retriever, Labrador	1197	623	574	51	858	3	0	0	0	0	0	0	0	0	0	0
Southland District	2016	DOG	Rottweiler	95	54	41	2	76	1	2	0	0	0	0	0	0	0	0	0
Southland District	2016	DOG	Schnauzer, Miniature	56	32	24	1	50	0	0	0	0	0	0	0	0	0	0	0
Southland District	2016	DOG	Shepherd, German	113	63	50	3	87	1	2	0	0	0	0	0	0	0	0	0
Southland District	2016	DOG	Shih Tzu	41	23	18	3	33	0	0	0	0	0	0	0	0	0	0	0
Southland District	2016	DOG	Spaniel, Cavalier King Charles	23	12	11	1	18	0	0	0	0	0	0	0	0	0	0	0
Southland District	2016	DOG	Spaniel, Cocker	80	39	41	6	72	0	0	0	0	0	0	0	0	0	0	0
Southland District	2016	DOG	Spaniel, English Springer	120	63	57	6	95	0	0	0	0	0	0	0	0	0	0	0
Southland District	2016	DOG	Terrier, American Pit Bull	12	6	6	5	11	11	1	0	0	0	0	0	0	0	0	0
Southland District	2016	DOG	Terrier, Fox (Smooth)	345	187	158	29	237	1	0	0	0	0	0	0	0	0	0	0
Southland District	2016	DOG	Terrier, Jack Russell	507	271	236	30	363	0	0	0	0	0	0	0	0	0	0	0
Southland District	2016	DOG	Terrier, Staffordshire Bull	75	37	38	5	58	1	1	0	0	0	0	0	0	0	0	0
Southland District	2016	DOG	Terrier, West Highland White	9	7	2	0	8	0	0	0	0	0	0	0	0	0	0	0
Southland District	2016	DOG	_Unidentified_	1043	551	492	75	749	7	3	0	0	0	0	0	0	0	0	0
Southland District	2016	OWN	_	0	0	0	0	0	0	0	0	6	6261	96	0	0	0	0	0
Stratford District	2001	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	10	1458	0
Stratford District	2002	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	0	46	0
Stratford District	2003	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	12	3912	0
Stratford District	2004	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	27	4896	0
Stratford District	2005	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	27	4864	0
Stratford District	2006	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	24	2901	2535
Stratford District	2007	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	17	2024	2394
Stratford District	2008	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	26	3732	3546
Stratford District	2009	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	25	8806	8568
Stratford District	2010	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	17	1257	1939
Stratford District	2011	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	29	3796	3429
Stratford District	2012	JST	_	0	0	0	0	0	0	0	0	0	0	0	7	2	0	0	0
Stratford District	2012	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	21	2545	3119
Stratford District	2013	DOG	_ALL-PURE_	1810	875	935	405	356	9	1	0	0	0	0	0	0	0	0	0
Stratford District	2013	DOG	_ALL-CROSS_	368	169	199	104	94	4	0	0	0	0	0	0	0	0	0	0
Stratford District	2013	DOG	_ALL-DOGS_	2178	1044	1134	509	450	13	1	0	0	0	0	0	0	0	0	0
Stratford District	2013	DOG	Beagle	9	4	5	2	2	0	0	0	0	0	0	0	0	0	0	0
Stratford District	2013	DOG	Bichon Frise	47	29	18	25	25	0	0	0	0	0	0	0	0	0	0	0
Stratford District	2013	DOG	Boxer	34	17	17	10	8	0	0	0	0	0	0	0	0	0	0	0
Stratford District	2013	DOG	Cattle, Australian	33	15	18	6	2	0	0	0	0	0	0	0	0	0	0	0
Stratford District	2013	DOG	Chihuahua, Long Coat	17	9	8	5	1	0	0	0	0	0	0	0	0	0	0	0
Stratford District	2013	DOG	Chihuahua, Smooth Coat	18	9	9	11	3	0	0	0	0	0	0	0	0	0	0	0
Stratford District	2013	DOG	Collie, Bearded	20	11	9	1	1	0	0	0	0	0	0	0	0	0	0	0
Stratford District	2013	DOG	Collie, Border	127	62	65	17	28	0	0	0	0	0	0	0	0	0	0	0
Stratford District	2013	DOG	Collie, Rough	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Stratford District	2013	DOG	Collie, Smooth	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Stratford District	2013	DOG	Greyhound	5	2	3	0	1	0	0	0	0	0	0	0	0	0	0	0
Stratford District	2013	DOG	Heading	202	100	102	3	4	0	0	0	0	0	0	0	0	0	0	0
Stratford District	2013	DOG	Huntaway	410	181	229	10	11	1	1	0	0	0	0	0	0	0	0	0
Stratford District	2013	DOG	Maltese	17	8	9	7	9	0	0	0	0	0	0	0	0	0	0	0
Stratford District	2013	DOG	Poodle, Miniature	9	4	5	5	2	0	0	0	0	0	0	0	0	0	0	0
Stratford District	2013	DOG	Poodle, Toy	5	4	1	1	1	0	0	0	0	0	0	0	0	0	0	0
Stratford District	2013	DOG	Retriever, Golden	15	7	8	8	0	0	0	0	0	0	0	0	0	0	0	0
Stratford District	2013	DOG	Retriever, Labrador	189	95	94	63	46	0	0	0	0	0	0	0	0	0	0	0
Stratford District	2013	DOG	Rottweiler	47	23	24	16	17	0	0	0	0	0	0	0	0	0	0	0
Stratford District	2013	DOG	Schnauzer, Miniature	3	1	2	1	2	0	0	0	0	0	0	0	0	0	0	0
Stratford District	2013	DOG	Shepherd, German	37	18	19	17	12	0	0	0	0	0	0	0	0	0	0	0
Stratford District	2013	DOG	Shih Tzu	12	5	7	5	8	0	0	0	0	0	0	0	0	0	0	0
Stratford District	2013	DOG	Spaniel, Cavalier King Charles	11	5	6	6	5	0	0	0	0	0	0	0	0	0	0	0
Stratford District	2013	DOG	Spaniel, Cocker	10	3	7	7	3	1	0	0	0	0	0	0	0	0	0	0
Stratford District	2013	DOG	Spaniel, English Springer	8	4	4	4	0	0	0	0	0	0	0	0	0	0	0	0
Stratford District	2013	DOG	Terrier, American Pit Bull	10	6	4	4	9	7	0	0	0	0	0	0	0	0	0	0
Stratford District	2013	DOG	Terrier, Fox (Smooth)	89	49	40	29	21	0	0	0	0	0	0	0	0	0	0	0
Stratford District	2013	DOG	Terrier, Jack Russell	87	36	51	31	26	0	0	0	0	0	0	0	0	0	0	0
Stratford District	2013	DOG	Terrier, Staffordshire Bull	34	16	18	11	13	0	0	0	0	0	0	0	0	0	0	0
Stratford District	2013	DOG	Terrier, West Highland White	3	1	2	3	3	0	0	0	0	0	0	0	0	0	0	0
Stratford District	2013	DOG	_Unidentified_	302	151	151	97	93	0	0	0	0	0	0	0	0	0	0	0
Stratford District	2013	OWN	_	0	0	0	0	0	0	0	0	2	1198	12	0	0	0	0	0
Stratford District	2013	JST	_	0	0	0	0	0	0	0	0	0	0	0	7	0	0	0	0
Stratford District	2013	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	16	2043	1616
Stratford District	2014	DOG	_ALL-PURE_	1791	882	909	369	401	9	1	0	0	0	0	0	0	0	0	0
Stratford District	2014	DOG	_ALL-CROSS_	363	162	201	105	101	4	0	0	0	0	0	0	0	0	0	0
Stratford District	2014	DOG	_ALL-DOGS_	2154	1044	1110	474	502	13	1	0	0	0	0	0	0	0	0	0
Stratford District	2014	DOG	Beagle	7	3	4	2	2	0	0	0	0	0	0	0	0	0	0	0
Stratford District	2014	DOG	Bichon Frise	47	26	21	29	29	0	0	0	0	0	0	0	0	0	0	0
Stratford District	2014	DOG	Boxer	26	14	12	8	8	0	0	0	0	0	0	0	0	0	0	0
Stratford District	2014	DOG	Cattle, Australian	35	17	18	5	3	0	0	0	0	0	0	0	0	0	0	0
Stratford District	2014	DOG	Chihuahua, Long Coat	14	8	6	2	1	0	0	0	0	0	0	0	0	0	0	0
Stratford District	2014	DOG	Chihuahua, Smooth Coat	17	8	9	9	3	0	0	0	0	0	0	0	0	0	0	0
Stratford District	2014	DOG	Collie, Bearded	15	7	8	0	1	0	0	0	0	0	0	0	0	0	0	0
Stratford District	2014	DOG	Collie, Border	130	71	59	14	26	0	0	0	0	0	0	0	0	0	0	0
Stratford District	2014	DOG	Collie, Rough	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Stratford District	2014	DOG	Collie, Smooth	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Stratford District	2014	DOG	Greyhound	4	1	3	0	1	0	0	0	0	0	0	0	0	0	0	0
Stratford District	2014	DOG	Heading	219	116	103	2	4	0	0	0	0	0	0	0	0	0	0	0
Stratford District	2014	DOG	Huntaway	382	165	217	11	13	1	1	0	0	0	0	0	0	0	0	0
Stratford District	2014	DOG	Maltese	21	10	11	9	9	0	0	0	0	0	0	0	0	0	0	0
Stratford District	2014	DOG	Poodle, Miniature	8	5	3	3	2	0	0	0	0	0	0	0	0	0	0	0
Stratford District	2014	DOG	Poodle, Toy	7	5	2	1	2	0	0	0	0	0	0	0	0	0	0	0
Stratford District	2014	DOG	Retriever, Golden	14	8	6	7	1	0	0	0	0	0	0	0	0	0	0	0
Stratford District	2014	DOG	Retriever, Labrador	189	87	102	56	58	0	0	0	0	0	0	0	0	0	0	0
Stratford District	2014	DOG	Rottweiler	39	21	18	11	17	0	0	0	0	0	0	0	0	0	0	0
Stratford District	2014	DOG	Schnauzer, Miniature	5	3	2	1	3	0	0	0	0	0	0	0	0	0	0	0
Stratford District	2014	DOG	Shepherd, German	42	20	22	15	15	0	0	0	0	0	0	0	0	0	0	0
Stratford District	2014	DOG	Shih Tzu	15	7	8	7	11	0	0	0	0	0	0	0	0	0	0	0
Stratford District	2014	DOG	Spaniel, Cavalier King Charles	9	5	4	4	5	0	0	0	0	0	0	0	0	0	0	0
Stratford District	2014	DOG	Spaniel, Cocker	9	5	4	5	4	1	0	0	0	0	0	0	0	0	0	0
Stratford District	2014	DOG	Spaniel, English Springer	6	4	2	3	0	0	0	0	0	0	0	0	0	0	0	0
Stratford District	2014	DOG	Terrier, American Pit Bull	9	5	4	2	7	6	0	0	0	0	0	0	0	0	0	0
Stratford District	2014	DOG	Terrier, Fox (Smooth)	88	50	38	30	20	0	0	0	0	0	0	0	0	0	0	0
Stratford District	2014	DOG	Terrier, Jack Russell	86	33	53	27	32	0	0	0	0	0	0	0	0	0	0	0
Stratford District	2014	DOG	Terrier, Staffordshire Bull	36	20	16	12	15	0	0	0	0	0	0	0	0	0	0	0
Stratford District	2014	DOG	Terrier, West Highland White	4	2	2	3	3	0	0	0	0	0	0	0	0	0	0	0
Stratford District	2014	DOG	_Unidentified_	308	156	152	91	106	1	0	0	0	0	0	0	0	0	0	0
Stratford District	2014	OWN	_	0	0	0	0	0	0	0	0	5	1206	14	0	0	0	0	0
Stratford District	2014	JST	_	0	0	0	0	0	0	0	0	0	0	0	2	1	0	0	0
Stratford District	2014	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	34	3753	4047
Stratford District	2015	DOG	_ALL-PURE_	1759	870	889	348	412	10	1	0	0	0	0	0	0	0	0	0
Stratford District	2015	DOG	_ALL-CROSS_	355	161	194	101	118	4	0	0	0	0	0	0	0	0	0	0
Stratford District	2015	DOG	_ALL-DOGS_	2114	1031	1083	449	530	14	1	0	0	0	0	0	0	0	0	0
Stratford District	2015	DOG	Beagle	7	3	4	2	2	0	0	0	0	0	0	0	0	0	0	0
Stratford District	2015	DOG	Bichon Frise	53	29	24	30	30	0	0	0	0	0	0	0	0	0	0	0
Stratford District	2015	DOG	Boxer	28	13	15	8	8	0	0	0	0	0	0	0	0	0	0	0
Stratford District	2015	DOG	Cattle, Australian	33	17	16	5	3	0	0	0	0	0	0	0	0	0	0	0
Stratford District	2015	DOG	Chihuahua, Long Coat	19	10	9	2	3	0	0	0	0	0	0	0	0	0	0	0
Stratford District	2015	DOG	Chihuahua, Smooth Coat	16	8	8	9	3	0	0	0	0	0	0	0	0	0	0	0
Stratford District	2015	DOG	Collie, Bearded	16	7	9	1	2	0	0	0	0	0	0	0	0	0	0	0
Stratford District	2015	DOG	Collie, Border	138	73	65	13	25	0	0	0	0	0	0	0	0	0	0	0
Stratford District	2015	DOG	Collie, Rough	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Stratford District	2015	DOG	Collie, Smooth	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Stratford District	2015	DOG	Greyhound	3	1	2	0	1	0	0	0	0	0	0	0	0	0	0	0
Stratford District	2015	DOG	Heading	227	122	105	2	4	0	0	0	0	0	0	0	0	0	0	0
Stratford District	2015	DOG	Huntaway	371	172	199	9	15	1	1	0	0	0	0	0	0	0	0	0
Stratford District	2015	DOG	Maltese	19	8	11	8	8	0	0	0	0	0	0	0	0	0	0	0
Stratford District	2015	DOG	Poodle, Miniature	8	5	3	4	2	0	0	0	0	0	0	0	0	0	0	0
Stratford District	2015	DOG	Poodle, Toy	6	4	2	1	2	0	0	0	0	0	0	0	0	0	0	0
Stratford District	2015	DOG	Retriever, Golden	14	7	7	5	3	0	0	0	0	0	0	0	0	0	0	0
Stratford District	2015	DOG	Retriever, Labrador	175	87	88	49	59	1	0	0	0	0	0	0	0	0	0	0
Stratford District	2015	DOG	Rottweiler	38	19	19	11	22	0	0	0	0	0	0	0	0	0	0	0
Stratford District	2015	DOG	Schnauzer, Miniature	5	3	2	1	3	0	0	0	0	0	0	0	0	0	0	0
Stratford District	2015	DOG	Shepherd, German	34	17	17	10	13	0	0	0	0	0	0	0	0	0	0	0
Stratford District	2015	DOG	Shih Tzu	17	9	8	8	12	0	0	0	0	0	0	0	0	0	0	0
Stratford District	2015	DOG	Spaniel, Cavalier King Charles	10	6	4	4	5	0	0	0	0	0	0	0	0	0	0	0
Stratford District	2015	DOG	Spaniel, Cocker	8	5	3	4	4	1	0	0	0	0	0	0	0	0	0	0
Stratford District	2015	DOG	Spaniel, English Springer	8	4	4	4	0	0	0	0	0	0	0	0	0	0	0	0
Stratford District	2015	DOG	Terrier, American Pit Bull	6	1	5	2	4	3	0	0	0	0	0	0	0	0	0	0
Stratford District	2015	DOG	Terrier, Fox (Smooth)	82	43	39	27	21	0	0	0	0	0	0	0	0	0	0	0
Stratford District	2015	DOG	Terrier, Jack Russell	86	32	54	27	30	0	0	0	0	0	0	0	0	0	0	0
Stratford District	2015	DOG	Terrier, Staffordshire Bull	25	16	9	8	14	0	0	0	0	0	0	0	0	0	0	0
Stratford District	2015	DOG	Terrier, West Highland White	4	1	3	3	4	0	0	0	0	0	0	0	0	0	0	0
Stratford District	2015	DOG	_Unidentified_	303	148	155	91	110	4	0	0	0	0	0	0	0	0	0	0
Stratford District	2015	OWN	_	0	0	0	0	0	0	0	0	5	1179	12	0	0	0	0	0
Stratford District	2015	JST	_	0	0	0	0	0	0	0	0	0	0	0	4	0	0	0	0
Stratford District	2015	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	16	1560	1859
Stratford District	2016	DOG	_ALL-PURE_	1722	838	884	340	417	12	1	0	0	0	0	0	0	0	0	0
Stratford District	2016	DOG	_ALL-CROSS_	387	172	215	113	124	5	0	0	0	0	0	0	0	0	0	0
Stratford District	2016	DOG	_ALL-DOGS_	2109	1010	1099	453	541	17	1	0	0	0	0	0	0	0	0	0
Stratford District	2016	DOG	Beagle	6	1	5	0	2	0	0	0	0	0	0	0	0	0	0	0
Stratford District	2016	DOG	Bichon Frise	52	29	23	30	29	0	0	0	0	0	0	0	0	0	0	0
Stratford District	2016	DOG	Boxer	31	15	16	10	9	0	0	0	0	0	0	0	0	0	0	0
Stratford District	2016	DOG	Cattle, Australian	36	19	17	5	4	0	0	0	0	0	0	0	0	0	0	0
Stratford District	2016	DOG	Chihuahua, Long Coat	17	9	8	0	2	0	0	0	0	0	0	0	0	0	0	0
Stratford District	2016	DOG	Chihuahua, Smooth Coat	11	5	6	6	2	0	0	0	0	0	0	0	0	0	0	0
Stratford District	2016	DOG	Collie, Bearded	20	10	10	1	1	0	0	0	0	0	0	0	0	0	0	0
Stratford District	2016	DOG	Collie, Border	136	63	73	15	24	0	0	0	0	0	0	0	0	0	0	0
Stratford District	2016	DOG	Collie, Rough	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Stratford District	2016	DOG	Collie, Smooth	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Stratford District	2016	DOG	Greyhound	6	3	3	1	2	0	0	0	0	0	0	0	0	0	0	0
Stratford District	2016	DOG	Heading	239	128	111	2	4	0	0	0	0	0	0	0	0	0	0	0
Stratford District	2016	DOG	Huntaway	337	155	182	8	11	1	1	0	0	0	0	0	0	0	0	0
Stratford District	2016	DOG	Maltese	19	8	11	8	8	0	0	0	0	0	0	0	0	0	0	0
Stratford District	2016	DOG	Poodle, Miniature	9	6	3	5	3	0	0	0	0	0	0	0	0	0	0	0
Stratford District	2016	DOG	Poodle, Toy	9	5	4	2	3	0	0	0	0	0	0	0	0	0	0	0
Stratford District	2016	DOG	Retriever, Golden	13	7	6	2	4	0	0	0	0	0	0	0	0	0	0	0
Stratford District	2016	DOG	Retriever, Labrador	174	85	89	50	63	1	0	0	0	0	0	0	0	0	0	0
Stratford District	2016	DOG	Rottweiler	31	15	16	6	16	0	0	0	0	0	0	0	0	0	0	0
Stratford District	2016	DOG	Schnauzer, Miniature	4	2	2	1	2	0	0	0	0	0	0	0	0	0	0	0
Stratford District	2016	DOG	Shepherd, German	35	20	15	8	14	0	0	0	0	0	0	0	0	0	0	0
Stratford District	2016	DOG	Shih Tzu	18	10	8	8	15	0	0	0	0	0	0	0	0	0	0	0
Stratford District	2016	DOG	Spaniel, Cavalier King Charles	9	5	4	5	5	0	0	0	0	0	0	0	0	0	0	0
Stratford District	2016	DOG	Spaniel, Cocker	7	4	3	4	4	1	0	0	0	0	0	0	0	0	0	0
Stratford District	2016	DOG	Spaniel, English Springer	6	2	4	3	0	0	0	0	0	0	0	0	0	0	0	0
Stratford District	2016	DOG	Terrier, American Pit Bull	7	4	3	2	4	4	0	0	0	0	0	0	0	0	0	0
Stratford District	2016	DOG	Terrier, Fox (Smooth)	83	41	42	29	23	0	0	0	0	0	0	0	0	0	0	0
Stratford District	2016	DOG	Terrier, Jack Russell	84	27	57	24	33	0	0	0	0	0	0	0	0	0	0	0
Stratford District	2016	DOG	Terrier, Staffordshire Bull	20	12	8	8	12	0	0	0	0	0	0	0	0	0	0	0
Stratford District	2016	DOG	Terrier, West Highland White	6	3	3	3	4	0	0	0	0	0	0	0	0	0	0	0
Stratford District	2016	DOG	_Unidentified_	297	145	152	94	114	5	0	0	0	0	0	0	0	0	0	0
Stratford District	2016	OWN	_	0	0	0	0	0	0	0	0	5	1188	5	0	0	0	0	0
Tararua District	2001	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	3	609	0
Tararua District	2002	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	10	527	0
Tararua District	2003	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	23	6954	0
Tararua District	2004	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	17	1043	0
Tararua District	2005	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	28	4068	0
Tararua District	2006	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	27	4201	4121
Tararua District	2007	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	37	3571	4577
Tararua District	2008	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	44	4143	5149
Tararua District	2009	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	40	48563	7485
Tararua District	2010	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	57	6463	6733
Tararua District	2011	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	69	15219	22014
Tararua District	2012	JST	_	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Tararua District	2012	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	42	10991	13552
Tararua District	2013	DOG	_ALL-PURE_	5430	2737	2693	742	1170	38	3	0	0	0	0	0	0	0	0	0
Tararua District	2013	DOG	_ALL-CROSS_	1087	532	555	355	549	29	4	0	0	0	0	0	0	0	0	0
Tararua District	2013	DOG	_ALL-DOGS_	6517	3269	3248	1097	1719	67	7	0	0	0	0	0	0	0	0	0
Tararua District	2013	DOG	Beagle	21	7	14	11	17	0	0	0	0	0	0	0	0	0	0	0
Tararua District	2013	DOG	Bichon Frise	25	14	11	14	16	0	0	0	0	0	0	0	0	0	0	0
Tararua District	2013	DOG	Boxer	35	21	14	9	24	0	0	0	0	0	0	0	0	0	0	0
Tararua District	2013	DOG	Cattle, Australian	65	34	31	10	5	0	0	0	0	0	0	0	0	0	0	0
Tararua District	2013	DOG	Chihuahua, Long Coat	8	4	4	2	4	0	0	0	0	0	0	0	0	0	0	0
Tararua District	2013	DOG	Chihuahua, Smooth Coat	14	6	8	5	9	0	0	0	0	0	0	0	0	0	0	0
Tararua District	2013	DOG	Collie, Bearded	33	15	18	8	3	0	0	0	0	0	0	0	0	0	0	0
Tararua District	2013	DOG	Collie, Border	259	141	118	26	23	0	0	0	0	0	0	0	0	0	0	0
Tararua District	2013	DOG	Collie, Rough	10	6	4	1	3	0	0	0	0	0	0	0	0	0	0	0
Tararua District	2013	DOG	Collie, Smooth	7	3	4	0	0	0	0	0	0	0	0	0	0	0	0	0
Tararua District	2013	DOG	Greyhound	18	10	8	4	11	0	0	0	0	0	0	0	0	0	0	0
Tararua District	2013	DOG	Heading	1385	705	680	49	21	0	0	0	0	0	0	0	0	0	0	0
Tararua District	2013	DOG	Huntaway	1628	756	872	76	34	0	0	0	0	0	0	0	0	0	0	0
Tararua District	2013	DOG	Maltese	7	4	3	3	5	0	0	0	0	0	0	0	0	0	0	0
Tararua District	2013	DOG	Poodle, Miniature	9	8	1	5	2	0	0	0	0	0	0	0	0	0	0	0
Tararua District	2013	DOG	Poodle, Toy	13	8	5	5	10	0	0	0	0	0	0	0	0	0	0	0
Tararua District	2013	DOG	Retriever, Golden	24	14	10	6	15	0	0	0	0	0	0	0	0	0	0	0
Tararua District	2013	DOG	Retriever, Labrador	414	212	202	114	215	0	0	0	0	0	0	0	0	0	0	0
Tararua District	2013	DOG	Rottweiler	58	27	31	15	40	0	2	0	0	0	0	0	0	0	0	0
Tararua District	2013	DOG	Schnauzer, Miniature	8	6	2	1	8	0	0	0	0	0	0	0	0	0	0	0
Tararua District	2013	DOG	Shepherd, German	68	43	25	21	35	1	0	0	0	0	0	0	0	0	0	0
Tararua District	2013	DOG	Shih Tzu	27	18	9	9	21	0	0	0	0	0	0	0	0	0	0	0
Tararua District	2013	DOG	Spaniel, Cavalier King Charles	16	8	8	9	11	0	0	0	0	0	0	0	0	0	0	0
Tararua District	2013	DOG	Spaniel, Cocker	27	16	11	5	13	0	0	0	0	0	0	0	0	0	0	0
Tararua District	2013	DOG	Spaniel, English Springer	19	6	13	6	12	0	0	0	0	0	0	0	0	0	0	0
Tararua District	2013	DOG	Terrier, American Pit Bull	29	12	17	5	22	29	0	0	0	0	0	0	0	0	0	0
Tararua District	2013	DOG	Terrier, Fox (Smooth)	374	187	187	118	167	1	0	0	0	0	0	0	0	0	0	0
Tararua District	2013	DOG	Terrier, Jack Russell	215	115	100	61	91	0	0	0	0	0	0	0	0	0	0	0
Tararua District	2013	DOG	Terrier, Staffordshire Bull	47	23	24	15	19	2	0	0	0	0	0	0	0	0	0	0
Tararua District	2013	DOG	Terrier, West Highland White	10	5	5	3	10	0	0	0	0	0	0	0	0	0	0	0
Tararua District	2013	DOG	_Unidentified_	557	303	254	126	304	5	1	0	0	0	0	0	0	0	0	0
Tararua District	2013	OWN	_	0	0	0	0	0	0	0	0	0	2858	27	0	0	0	0	0
Tararua District	2013	JST	_	0	0	0	0	0	0	0	0	0	0	0	1	0	0	0	0
Tararua District	2013	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	63	13897	11219
Tararua District	2014	DOG	_ALL-PURE_	5342	2763	2579	795	1283	18	4	0	0	0	0	0	0	0	0	0
Tararua District	2014	DOG	_ALL-CROSS_	1124	561	563	394	613	16	4	0	0	0	0	0	0	0	0	0
Tararua District	2014	DOG	_ALL-DOGS_	6466	3324	3142	1189	1896	34	8	0	0	0	0	0	0	0	0	0
Tararua District	2014	DOG	Beagle	38	19	19	12	36	0	0	0	0	0	0	0	0	0	0	0
Tararua District	2014	DOG	Bichon Frise	28	14	14	16	17	0	0	0	0	0	0	0	0	0	0	0
Tararua District	2014	DOG	Boxer	41	22	19	13	28	0	0	0	0	0	0	0	0	0	0	0
Tararua District	2014	DOG	Cattle, Australian	56	30	26	9	6	0	0	0	0	0	0	0	0	0	0	0
Tararua District	2014	DOG	Chihuahua, Long Coat	5	2	3	2	3	0	0	0	0	0	0	0	0	0	0	0
Tararua District	2014	DOG	Chihuahua, Smooth Coat	23	12	11	8	16	0	0	0	0	0	0	0	0	0	0	0
Tararua District	2014	DOG	Collie, Bearded	29	10	19	7	2	0	0	0	0	0	0	0	0	0	0	0
Tararua District	2014	DOG	Collie, Border	250	133	117	26	31	0	0	0	0	0	0	0	0	0	0	0
Tararua District	2014	DOG	Collie, Rough	10	6	4	1	3	0	0	0	0	0	0	0	0	0	0	0
Tararua District	2014	DOG	Collie, Smooth	7	3	4	0	0	0	0	0	0	0	0	0	0	0	0	0
Tararua District	2014	DOG	Greyhound	27	16	11	8	18	0	0	0	0	0	0	0	0	0	0	0
Tararua District	2014	DOG	Heading	1329	698	631	49	25	0	0	0	0	0	0	0	0	0	0	0
Tararua District	2014	DOG	Huntaway	1606	776	830	85	41	0	0	0	0	0	0	0	0	0	0	0
Tararua District	2014	DOG	Maltese	12	9	3	5	8	0	0	0	0	0	0	0	0	0	0	0
Tararua District	2014	DOG	Poodle, Miniature	11	9	2	8	4	0	0	0	0	0	0	0	0	0	0	0
Tararua District	2014	DOG	Poodle, Toy	17	11	6	9	13	0	0	0	0	0	0	0	0	0	0	0
Tararua District	2014	DOG	Retriever, Golden	25	14	11	5	17	0	0	0	0	0	0	0	0	0	0	0
Tararua District	2014	DOG	Retriever, Labrador	414	215	199	116	239	0	0	0	0	0	0	0	0	0	0	0
Tararua District	2014	DOG	Rottweiler	65	31	34	20	48	0	2	0	0	0	0	0	0	0	0	0
Tararua District	2014	DOG	Schnauzer, Miniature	7	4	3	3	6	0	0	0	0	0	0	0	0	0	0	0
Tararua District	2014	DOG	Shepherd, German	67	42	25	19	41	1	0	0	0	0	0	0	0	0	0	0
Tararua District	2014	DOG	Shih Tzu	34	22	12	12	26	0	0	0	0	0	0	0	0	0	0	0
Tararua District	2014	DOG	Spaniel, Cavalier King Charles	17	9	8	11	13	0	0	0	0	0	0	0	0	0	0	0
Tararua District	2014	DOG	Spaniel, Cocker	24	16	8	5	14	0	0	0	0	0	0	0	0	0	0	0
Tararua District	2014	DOG	Spaniel, English Springer	15	4	11	4	11	0	0	0	0	0	0	0	0	0	0	0
Tararua District	2014	DOG	Terrier, American Pit Bull	31	13	18	5	24	12	1	0	0	0	0	0	0	0	0	0
Tararua District	2014	DOG	Terrier, Fox (Smooth)	358	185	173	122	162	0	0	0	0	0	0	0	0	0	0	0
Tararua District	2014	DOG	Terrier, Jack Russell	199	106	93	64	95	0	0	0	0	0	0	0	0	0	0	0
Tararua District	2014	DOG	Terrier, Staffordshire Bull	46	26	20	18	22	2	0	0	0	0	0	0	0	0	0	0
Tararua District	2014	DOG	Terrier, West Highland White	11	5	6	5	9	0	0	0	0	0	0	0	0	0	0	0
Tararua District	2014	DOG	_Unidentified_	540	301	239	128	305	3	1	0	0	0	0	0	0	0	0	0
Tararua District	2014	OWN	_	0	0	0	0	0	0	0	0	1	2867	40	0	0	0	0	0
Tararua District	2014	JST	_	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Tararua District	2014	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	51	9863	42987
Tararua District	2015	DOG	_ALL-PURE_	5298	2741	2557	851	1333	15	1	0	0	0	0	0	0	0	0	0
Tararua District	2015	DOG	_ALL-CROSS_	1154	583	571	413	637	20	4	0	0	0	0	0	0	0	0	0
Tararua District	2015	DOG	_ALL-DOGS_	6452	3324	3128	1264	1970	35	5	0	0	0	0	0	0	0	0	0
Tararua District	2015	DOG	Beagle	37	20	17	12	35	0	0	0	0	0	0	0	0	0	0	0
Tararua District	2015	DOG	Bichon Frise	28	16	12	16	18	0	0	0	0	0	0	0	0	0	0	0
Tararua District	2015	DOG	Boxer	39	20	19	12	30	0	0	0	0	0	0	0	0	0	0	0
Tararua District	2015	DOG	Cattle, Australian	51	29	22	8	5	0	0	0	0	0	0	0	0	0	0	0
Tararua District	2015	DOG	Chihuahua, Long Coat	8	3	5	5	6	0	0	0	0	0	0	0	0	0	0	0
Tararua District	2015	DOG	Chihuahua, Smooth Coat	21	11	10	9	15	0	0	0	0	0	0	0	0	0	0	0
Tararua District	2015	DOG	Collie, Bearded	34	15	19	10	4	0	0	0	0	0	0	0	0	0	0	0
Tararua District	2015	DOG	Collie, Border	232	130	102	26	27	0	0	0	0	0	0	0	0	0	0	0
Tararua District	2015	DOG	Collie, Rough	4	2	2	0	3	0	0	0	0	0	0	0	0	0	0	0
Tararua District	2015	DOG	Collie, Smooth	7	2	5	0	0	0	0	0	0	0	0	0	0	0	0	0
Tararua District	2015	DOG	Greyhound	25	12	13	2	13	0	0	0	0	0	0	0	0	0	0	0
Tararua District	2015	DOG	Heading	1322	708	614	59	25	0	0	0	0	0	0	0	0	0	0	0
Tararua District	2015	DOG	Huntaway	1583	753	830	92	42	0	0	0	0	0	0	0	0	0	0	0
Tararua District	2015	DOG	Maltese	14	10	4	6	10	0	0	0	0	0	0	0	0	0	0	0
Tararua District	2015	DOG	Poodle, Miniature	12	9	3	8	5	0	0	0	0	0	0	0	0	0	0	0
Tararua District	2015	DOG	Poodle, Toy	18	12	6	8	14	0	0	0	0	0	0	0	0	0	0	0
Tararua District	2015	DOG	Retriever, Golden	21	13	8	4	15	0	0	0	0	0	0	0	0	0	0	0
Tararua District	2015	DOG	Retriever, Labrador	432	222	210	136	257	0	0	0	0	0	0	0	0	0	0	0
Tararua District	2015	DOG	Rottweiler	68	33	35	23	49	0	0	0	0	0	0	0	0	0	0	0
Tararua District	2015	DOG	Schnauzer, Miniature	12	7	5	6	9	0	0	0	0	0	0	0	0	0	0	0
Tararua District	2015	DOG	Shepherd, German	70	42	28	16	41	1	0	0	0	0	0	0	0	0	0	0
Tararua District	2015	DOG	Shih Tzu	30	19	11	12	23	0	0	0	0	0	0	0	0	0	0	0
Tararua District	2015	DOG	Spaniel, Cavalier King Charles	17	8	9	11	14	0	0	0	0	0	0	0	0	0	0	0
Tararua District	2015	DOG	Spaniel, Cocker	26	18	8	6	16	0	0	0	0	0	0	0	0	0	0	0
Tararua District	2015	DOG	Spaniel, English Springer	17	6	11	6	13	0	0	0	0	0	0	0	0	0	0	0
Tararua District	2015	DOG	Terrier, American Pit Bull	29	12	17	5	23	10	1	0	0	0	0	0	0	0	0	0
Tararua District	2015	DOG	Terrier, Fox (Smooth)	338	181	157	125	169	0	0	0	0	0	0	0	0	0	0	0
Tararua District	2015	DOG	Terrier, Jack Russell	195	101	94	67	95	0	0	0	0	0	0	0	0	0	0	0
Tararua District	2015	DOG	Terrier, Staffordshire Bull	33	18	15	14	19	0	0	0	0	0	0	0	0	0	0	0
Tararua District	2015	DOG	Terrier, West Highland White	11	4	7	5	8	0	0	0	0	0	0	0	0	0	0	0
Tararua District	2015	DOG	_Unidentified_	564	305	259	142	330	4	0	0	0	0	0	0	0	0	0	0
Tararua District	2015	OWN	_	0	0	0	0	0	0	0	0	1	2855	37	0	0	0	0	0
Tararua District	2015	JST	_	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Tararua District	2015	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	48	5596	7370
Tararua District	2016	DOG	_ALL-PURE_	5331	2780	2551	896	1447	35	2	0	0	0	0	0	0	0	0	0
Tararua District	2016	DOG	_ALL-CROSS_	1236	637	599	449	770	71	3	0	0	0	0	0	0	0	0	0
Tararua District	2016	DOG	_ALL-DOGS_	6567	3417	3150	1345	2217	106	5	0	0	0	0	0	0	0	0	0
Tararua District	2016	DOG	Beagle	30	14	16	11	24	0	0	0	0	0	0	0	0	0	0	0
Tararua District	2016	DOG	Bichon Frise	26	13	13	13	17	0	0	0	0	0	0	0	0	0	0	0
Tararua District	2016	DOG	Boxer	38	20	18	12	30	0	0	0	0	0	0	0	0	0	0	0
Tararua District	2016	DOG	Cattle, Australian	62	38	24	8	9	0	0	0	0	0	0	0	0	0	0	0
Tararua District	2016	DOG	Chihuahua, Long Coat	8	2	6	5	7	0	0	0	0	0	0	0	0	0	0	0
Tararua District	2016	DOG	Chihuahua, Smooth Coat	28	15	13	12	19	0	0	0	0	0	0	0	0	0	0	0
Tararua District	2016	DOG	Collie, Bearded	33	17	16	12	3	0	0	0	0	0	0	0	0	0	0	0
Tararua District	2016	DOG	Collie, Border	218	123	95	33	33	0	0	0	0	0	0	0	0	0	0	0
Tararua District	2016	DOG	Collie, Rough	6	2	4	1	5	0	0	0	0	0	0	0	0	0	0	0
Tararua District	2016	DOG	Collie, Smooth	5	1	4	0	0	0	0	0	0	0	0	0	0	0	0	0
Tararua District	2016	DOG	Greyhound	40	26	14	3	22	0	0	0	0	0	0	0	0	0	0	0
Tararua District	2016	DOG	Heading	1330	736	594	55	29	0	0	0	0	0	0	0	0	0	0	0
Tararua District	2016	DOG	Huntaway	1599	758	841	99	44	0	0	0	0	0	0	0	0	0	0	0
Tararua District	2016	DOG	Maltese	14	9	5	6	10	0	0	0	0	0	0	0	0	0	0	0
Tararua District	2016	DOG	Poodle, Miniature	12	7	5	8	5	0	0	0	0	0	0	0	0	0	0	0
Tararua District	2016	DOG	Poodle, Toy	17	11	6	8	13	0	0	0	0	0	0	0	0	0	0	0
Tararua District	2016	DOG	Retriever, Golden	27	18	9	6	17	0	0	0	0	0	0	0	0	0	0	0
Tararua District	2016	DOG	Retriever, Labrador	408	199	209	134	264	0	0	0	0	0	0	0	0	0	0	0
Tararua District	2016	DOG	Rottweiler	68	36	32	27	54	1	1	0	0	0	0	0	0	0	0	0
Tararua District	2016	DOG	Schnauzer, Miniature	12	7	5	9	8	0	0	0	0	0	0	0	0	0	0	0
Tararua District	2016	DOG	Shepherd, German	70	45	25	15	45	1	0	0	0	0	0	0	0	0	0	0
Tararua District	2016	DOG	Shih Tzu	30	19	11	17	23	0	0	0	0	0	0	0	0	0	0	0
Tararua District	2016	DOG	Spaniel, Cavalier King Charles	17	7	10	12	14	0	0	0	0	0	0	0	0	0	0	0
Tararua District	2016	DOG	Spaniel, Cocker	20	14	6	5	14	0	0	0	0	0	0	0	0	0	0	0
Tararua District	2016	DOG	Spaniel, English Springer	18	6	12	5	15	0	0	0	0	0	0	0	0	0	0	0
Tararua District	2016	DOG	Terrier, American Pit Bull	27	9	18	7	25	24	0	0	0	0	0	0	0	0	0	0
Tararua District	2016	DOG	Terrier, Fox (Smooth)	335	185	150	127	183	1	0	0	0	0	0	0	0	0	0	0
Tararua District	2016	DOG	Terrier, Jack Russell	192	101	91	67	102	0	0	0	0	0	0	0	0	0	0	0
Tararua District	2016	DOG	Terrier, Staffordshire Bull	41	24	17	14	24	0	0	0	0	0	0	0	0	0	0	0
Tararua District	2016	DOG	Terrier, West Highland White	11	4	7	5	10	0	0	0	0	0	0	0	0	0	0	0
Tararua District	2016	DOG	_Unidentified_	589	314	275	160	379	8	1	0	0	0	0	0	0	0	0	0
Tararua District	2016	OWN	_	0	0	0	0	0	0	0	0	1	2931	37	0	0	0	0	0
Tasman District	2001	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	12	5769	0
Tasman District	2002	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	17	5964	0
Tasman District	2003	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	7	660	0
Tasman District	2004	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	45	13009	0
Tasman District	2005	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	64	10212	0
Tasman District	2006	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	70	6278	6812
Tasman District	2007	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	71	8397	6727
Tasman District	2008	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	95	18525	19761
Tasman District	2009	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	75	12401	13639
Tasman District	2010	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	84	16471	10598
Tasman District	2011	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	80	15843	15476
Tasman District	2012	JST	_	0	0	0	0	0	0	0	0	0	0	0	7	0	0	0	0
Tasman District	2012	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	94	35446	13297
Tasman District	2013	DOG	_ALL-PURE_	6013	3070	2943	2247	2792	46	3	0	0	0	0	0	0	0	0	0
Tasman District	2013	DOG	_ALL-CROSS_	3946	2017	1929	1559	2286	34	5	0	0	0	0	0	0	0	0	0
Tasman District	2013	DOG	_ALL-DOGS_	9959	5087	4872	3806	5078	80	8	0	0	0	0	0	0	0	0	0
Tasman District	2013	DOG	Beagle	50	27	23	30	33	0	0	0	0	0	0	0	0	0	0	0
Tasman District	2013	DOG	Bichon Frise	110	61	49	64	79	0	0	0	0	0	0	0	0	0	0	0
Tasman District	2013	DOG	Boxer	95	55	40	51	62	0	0	0	0	0	0	0	0	0	0	0
Tasman District	2013	DOG	Cattle, Australian	179	87	92	33	50	1	0	0	0	0	0	0	0	0	0	0
Tasman District	2013	DOG	Chihuahua, Long Coat	24	16	8	8	21	0	0	0	0	0	0	0	0	0	0	0
Tasman District	2013	DOG	Chihuahua, Smooth Coat	23	15	8	11	15	0	0	0	0	0	0	0	0	0	0	0
Tasman District	2013	DOG	Collie, Bearded	84	37	47	18	20	0	0	0	0	0	0	0	0	0	0	0
Tasman District	2013	DOG	Collie, Border	637	334	303	185	204	4	0	0	0	0	0	0	0	0	0	0
Tasman District	2013	DOG	Collie, Rough	26	12	14	9	6	0	0	0	0	0	0	0	0	0	0	0
Tasman District	2013	DOG	Collie, Smooth	362	162	200	27	23	1	0	0	0	0	0	0	0	0	0	0
Tasman District	2013	DOG	Greyhound	21	7	14	10	14	0	0	0	0	0	0	0	0	0	0	0
Tasman District	2013	DOG	Heading	137	72	65	17	18	0	0	0	0	0	0	0	0	0	0	0
Tasman District	2013	DOG	Huntaway	516	227	289	74	60	0	0	0	0	0	0	0	0	0	0	0
Tasman District	2013	DOG	Maltese	55	26	29	26	47	0	0	0	0	0	0	0	0	0	0	0
Tasman District	2013	DOG	Poodle, Miniature	30	16	14	17	23	0	0	0	0	0	0	0	0	0	0	0
Tasman District	2013	DOG	Poodle, Toy	40	21	19	20	27	0	0	0	0	0	0	0	0	0	0	0
Tasman District	2013	DOG	Retriever, Golden	195	91	104	101	116	1	0	0	0	0	0	0	0	0	0	0
Tasman District	2013	DOG	Retriever, Labrador	572	308	264	257	305	3	0	0	0	0	0	0	0	0	0	0
Tasman District	2013	DOG	Rottweiler	81	43	38	22	62	2	1	0	0	0	0	0	0	0	0	0
Tasman District	2013	DOG	Schnauzer, Miniature	77	42	35	36	63	0	0	0	0	0	0	0	0	0	0	0
Tasman District	2013	DOG	Shepherd, German	174	94	80	83	115	4	0	0	0	0	0	0	0	0	0	0
Tasman District	2013	DOG	Shih Tzu	32	16	16	15	27	0	0	0	0	0	0	0	0	0	0	0
Tasman District	2013	DOG	Spaniel, Cavalier King Charles	47	24	23	15	26	0	0	0	0	0	0	0	0	0	0	0
Tasman District	2013	DOG	Spaniel, Cocker	88	58	30	35	53	0	0	0	0	0	0	0	0	0	0	0
Tasman District	2013	DOG	Spaniel, English Springer	62	28	34	26	38	1	0	0	0	0	0	0	0	0	0	0
Tasman District	2013	DOG	Terrier, American Pit Bull	17	9	8	10	13	14	1	0	0	0	0	0	0	0	0	0
Tasman District	2013	DOG	Terrier, Fox (Smooth)	228	115	113	116	102	1	0	0	0	0	0	0	0	0	0	0
Tasman District	2013	DOG	Terrier, Jack Russell	415	222	193	209	197	2	0	0	0	0	0	0	0	0	0	0
Tasman District	2013	DOG	Terrier, Staffordshire Bull	183	101	82	87	118	3	0	0	0	0	0	0	0	0	0	0
Tasman District	2013	DOG	Terrier, West Highland White	92	45	47	52	55	0	0	0	0	0	0	0	0	0	0	0
Tasman District	2013	DOG	_Unidentified_	1361	699	662	583	800	9	1	0	0	0	0	0	0	0	0	0
Tasman District	2013	OWN	_	0	0	0	0	0	0	0	1	1	6380	105	0	0	0	0	0
Tasman District	2013	JST	_	0	0	0	0	0	0	0	0	0	0	0	2	0	0	0	0
Tasman District	2013	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	108	28298	39775
Tasman District	2014	DOG	_ALL-PURE_	6149	3119	3030	2330	3093	48	3	0	0	0	0	0	0	0	0	0
Tasman District	2014	DOG	_ALL-CROSS_	4172	2143	2029	1702	2542	29	6	0	0	0	0	0	0	0	0	0
Tasman District	2014	DOG	_ALL-DOGS_	10321	5262	5059	4032	5635	77	9	0	0	0	0	0	0	0	0	0
Tasman District	2014	DOG	Beagle	45	24	21	28	31	0	0	0	0	0	0	0	0	0	0	0
Tasman District	2014	DOG	Bichon Frise	118	56	62	75	85	0	0	0	0	0	0	0	0	0	0	0
Tasman District	2014	DOG	Boxer	96	55	41	49	74	0	0	0	0	0	0	0	0	0	0	0
Tasman District	2014	DOG	Cattle, Australian	188	95	93	34	61	1	0	0	0	0	0	0	0	0	0	0
Tasman District	2014	DOG	Chihuahua, Long Coat	26	17	9	10	21	0	0	0	0	0	0	0	0	0	0	0
Tasman District	2014	DOG	Chihuahua, Smooth Coat	32	20	12	16	19	0	0	0	0	0	0	0	0	0	0	0
Tasman District	2014	DOG	Collie, Bearded	87	37	50	20	22	0	0	0	0	0	0	0	0	0	0	0
Tasman District	2014	DOG	Collie, Border	640	336	304	182	220	4	0	0	0	0	0	0	0	0	0	0
Tasman District	2014	DOG	Collie, Rough	28	11	17	11	7	0	0	0	0	0	0	0	0	0	0	0
Tasman District	2014	DOG	Collie, Smooth	319	144	175	26	21	1	0	0	0	0	0	0	0	0	0	0
Tasman District	2014	DOG	Greyhound	20	8	12	7	13	0	0	0	0	0	0	0	0	0	0	0
Tasman District	2014	DOG	Heading	168	91	77	18	23	0	0	0	0	0	0	0	0	0	0	0
Tasman District	2014	DOG	Huntaway	508	219	289	77	65	0	1	0	0	0	0	0	0	0	0	0
Tasman District	2014	DOG	Maltese	60	29	31	31	51	0	0	0	0	0	0	0	0	0	0	0
Tasman District	2014	DOG	Poodle, Miniature	39	24	15	26	30	0	0	0	0	0	0	0	0	0	0	0
Tasman District	2014	DOG	Poodle, Toy	46	24	22	21	31	0	0	0	0	0	0	0	0	0	0	0
Tasman District	2014	DOG	Retriever, Golden	188	94	94	102	117	1	0	0	0	0	0	0	0	0	0	0
Tasman District	2014	DOG	Retriever, Labrador	567	307	260	262	341	4	0	0	0	0	0	0	0	0	0	0
Tasman District	2014	DOG	Rottweiler	82	44	38	28	60	1	2	0	0	0	0	0	0	0	0	0
Tasman District	2014	DOG	Schnauzer, Miniature	83	44	39	41	70	1	0	0	0	0	0	0	0	0	0	0
Tasman District	2014	DOG	Shepherd, German	205	103	102	95	146	6	0	0	0	0	0	0	0	0	0	0
Tasman District	2014	DOG	Shih Tzu	30	13	17	17	26	0	0	0	0	0	0	0	0	0	0	0
Tasman District	2014	DOG	Spaniel, Cavalier King Charles	48	26	22	17	27	0	0	0	0	0	0	0	0	0	0	0
Tasman District	2014	DOG	Spaniel, Cocker	91	56	35	36	60	0	0	0	0	0	0	0	0	0	0	0
Tasman District	2014	DOG	Spaniel, English Springer	70	30	40	25	46	1	0	0	0	0	0	0	0	0	0	0
Tasman District	2014	DOG	Terrier, American Pit Bull	15	4	11	9	14	15	0	0	0	0	0	0	0	0	0	0
Tasman District	2014	DOG	Terrier, Fox (Smooth)	214	109	105	108	107	1	0	0	0	0	0	0	0	0	0	0
Tasman District	2014	DOG	Terrier, Jack Russell	419	218	201	214	214	2	0	0	0	0	0	0	0	0	0	0
Tasman District	2014	DOG	Terrier, Staffordshire Bull	193	108	85	81	128	0	0	0	0	0	0	0	0	0	0	0
Tasman District	2014	DOG	Terrier, West Highland White	97	51	46	50	66	0	0	0	0	0	0	0	0	0	0	0
Tasman District	2014	DOG	_Unidentified_	1427	722	705	614	897	10	0	0	0	0	0	0	0	0	0	0
Tasman District	2014	OWN	_	0	0	0	0	0	0	0	0	2	6658	86	0	0	0	0	0
Tasman District	2014	JST	_	0	0	0	0	0	0	0	0	0	0	0	8	0	0	0	0
Tasman District	2014	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	112	18630	30092
Tasman District	2015	DOG	_ALL-PURE_	6146	3129	3017	2326	3306	40	3	0	0	0	0	0	0	0	0	0
Tasman District	2015	DOG	_ALL-CROSS_	4236	2159	2077	1741	2698	28	7	0	0	0	0	0	0	0	0	0
Tasman District	2015	DOG	_ALL-DOGS_	10382	5288	5094	4067	6004	68	10	0	0	0	0	0	0	0	0	0
Tasman District	2015	DOG	Beagle	47	26	21	33	38	0	0	0	0	0	0	0	0	0	0	0
Tasman District	2015	DOG	Bichon Frise	116	56	60	71	87	0	0	0	0	0	0	0	0	0	0	0
Tasman District	2015	DOG	Boxer	87	50	37	44	73	0	0	0	0	0	0	0	0	0	0	0
Tasman District	2015	DOG	Cattle, Australian	179	91	88	32	60	1	0	0	0	0	0	0	0	0	0	0
Tasman District	2015	DOG	Chihuahua, Long Coat	27	17	10	12	24	0	0	0	0	0	0	0	0	0	0	0
Tasman District	2015	DOG	Chihuahua, Smooth Coat	33	19	14	19	20	0	0	0	0	0	0	0	0	0	0	0
Tasman District	2015	DOG	Collie, Bearded	85	40	45	21	23	0	0	0	0	0	0	0	0	0	0	0
Tasman District	2015	DOG	Collie, Border	648	336	312	185	246	4	0	0	0	0	0	0	0	0	0	0
Tasman District	2015	DOG	Collie, Rough	24	10	14	7	5	0	0	0	0	0	0	0	0	0	0	0
Tasman District	2015	DOG	Collie, Smooth	283	123	160	22	22	1	0	0	0	0	0	0	0	0	0	0
Tasman District	2015	DOG	Greyhound	37	18	19	9	23	0	0	0	0	0	0	0	0	0	0	0
Tasman District	2015	DOG	Heading	181	99	82	18	22	0	0	0	0	0	0	0	0	0	0	0
Tasman District	2015	DOG	Huntaway	532	225	307	75	69	0	1	0	0	0	0	0	0	0	0	0
Tasman District	2015	DOG	Maltese	58	26	32	32	51	0	0	0	0	0	0	0	0	0	0	0
Tasman District	2015	DOG	Poodle, Miniature	41	27	14	24	30	0	0	0	0	0	0	0	0	0	0	0
Tasman District	2015	DOG	Poodle, Toy	42	21	21	22	33	0	0	0	0	0	0	0	0	0	0	0
Tasman District	2015	DOG	Retriever, Golden	175	86	89	95	122	1	0	0	0	0	0	0	0	0	0	0
Tasman District	2015	DOG	Retriever, Labrador	583	313	270	263	370	3	0	0	0	0	0	0	0	0	0	0
Tasman District	2015	DOG	Rottweiler	77	38	39	26	57	2	1	0	0	0	0	0	0	0	0	0
Tasman District	2015	DOG	Schnauzer, Miniature	86	46	40	45	74	1	0	0	0	0	0	0	0	0	0	0
Tasman District	2015	DOG	Shepherd, German	209	105	104	92	150	4	0	0	0	0	0	0	0	0	0	0
Tasman District	2015	DOG	Shih Tzu	35	15	20	16	32	0	0	0	0	0	0	0	0	0	0	0
Tasman District	2015	DOG	Spaniel, Cavalier King Charles	40	23	17	15	25	0	0	0	0	0	0	0	0	0	0	0
Tasman District	2015	DOG	Spaniel, Cocker	92	57	35	38	64	0	0	0	0	0	0	0	0	0	0	0
Tasman District	2015	DOG	Spaniel, English Springer	68	32	36	27	49	1	0	0	0	0	0	0	0	0	0	0
Tasman District	2015	DOG	Terrier, American Pit Bull	11	2	9	6	11	11	0	0	0	0	0	0	0	0	0	0
Tasman District	2015	DOG	Terrier, Fox (Smooth)	197	100	97	101	109	1	0	0	0	0	0	0	0	0	0	0
Tasman District	2015	DOG	Terrier, Jack Russell	412	212	200	215	234	1	0	0	0	0	0	0	0	0	0	0
Tasman District	2015	DOG	Terrier, Staffordshire Bull	201	115	86	81	141	0	0	0	0	0	0	0	0	0	0	0
Tasman District	2015	DOG	Terrier, West Highland White	99	51	48	50	73	0	0	0	0	0	0	0	0	0	0	0
Tasman District	2015	DOG	_Unidentified_	1441	750	691	630	969	9	1	0	0	0	0	0	0	0	0	0
Tasman District	2015	OWN	_	0	0	0	0	0	0	0	0	1	6781	86	0	0	0	0	0
Tasman District	2015	JST	_	0	0	0	0	0	0	0	0	0	0	0	3	1	0	0	0
Tasman District	2015	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	108	36620	43438
Tasman District	2016	DOG	_ALL-PURE_	6094	3128	2966	2367	3585	33	6	0	0	0	0	0	0	0	0	0
Tasman District	2016	DOG	_ALL-CROSS_	4411	2292	2119	1870	2938	37	10	0	0	0	0	0	0	0	0	0
Tasman District	2016	DOG	_ALL-DOGS_	10505	5420	5085	4237	6523	70	16	0	0	0	0	0	0	0	0	0
Tasman District	2016	DOG	Beagle	43	23	20	32	36	0	0	0	0	0	0	0	0	0	0	0
Tasman District	2016	DOG	Bichon Frise	117	62	55	73	93	0	0	0	0	0	0	0	0	0	0	0
Tasman District	2016	DOG	Boxer	83	46	37	49	69	0	0	0	0	0	0	0	0	0	0	0
Tasman District	2016	DOG	Cattle, Australian	169	90	79	33	69	2	0	0	0	0	0	0	0	0	0	0
Tasman District	2016	DOG	Chihuahua, Long Coat	30	20	10	12	27	0	0	0	0	0	0	0	0	0	0	0
Tasman District	2016	DOG	Chihuahua, Smooth Coat	30	16	14	18	22	0	0	0	0	0	0	0	0	0	0	0
Tasman District	2016	DOG	Collie, Bearded	88	40	48	21	26	0	0	0	0	0	0	0	0	0	0	0
Tasman District	2016	DOG	Collie, Border	642	341	301	187	273	4	0	0	0	0	0	0	0	0	0	0
Tasman District	2016	DOG	Collie, Rough	24	10	14	4	7	0	0	0	0	0	0	0	0	0	0	0
Tasman District	2016	DOG	Collie, Smooth	257	114	143	21	23	1	0	0	0	0	0	0	0	0	0	0
Tasman District	2016	DOG	Greyhound	43	23	20	16	28	0	0	0	0	0	0	0	0	0	0	0
Tasman District	2016	DOG	Heading	205	112	93	22	30	0	0	0	0	0	0	0	0	0	0	0
Tasman District	2016	DOG	Huntaway	508	216	292	75	76	0	1	0	0	0	0	0	0	0	0	0
Tasman District	2016	DOG	Maltese	59	29	30	36	52	1	0	0	0	0	0	0	0	0	0	0
Tasman District	2016	DOG	Poodle, Miniature	38	23	15	22	28	0	0	0	0	0	0	0	0	0	0	0
Tasman District	2016	DOG	Poodle, Toy	48	23	25	23	36	0	0	0	0	0	0	0	0	0	0	0
Tasman District	2016	DOG	Retriever, Golden	173	91	82	94	124	1	0	0	0	0	0	0	0	0	0	0
Tasman District	2016	DOG	Retriever, Labrador	581	325	256	285	419	1	0	0	0	0	0	0	0	0	0	0
Tasman District	2016	DOG	Rottweiler	82	43	39	25	65	2	2	0	0	0	0	0	0	0	0	0
Tasman District	2016	DOG	Schnauzer, Miniature	94	53	41	51	83	0	0	0	0	0	0	0	0	0	0	0
Tasman District	2016	DOG	Shepherd, German	199	99	100	93	156	1	1	0	0	0	0	0	0	0	0	0
Tasman District	2016	DOG	Shih Tzu	39	18	21	16	32	0	0	0	0	0	0	0	0	0	0	0
Tasman District	2016	DOG	Spaniel, Cavalier King Charles	35	18	17	12	26	0	0	0	0	0	0	0	0	0	0	0
Tasman District	2016	DOG	Spaniel, Cocker	99	58	41	41	69	0	0	0	0	0	0	0	0	0	0	0
Tasman District	2016	DOG	Spaniel, English Springer	72	34	38	28	60	1	0	0	0	0	0	0	0	0	0	0
Tasman District	2016	DOG	Terrier, American Pit Bull	10	3	7	4	10	8	1	0	0	0	0	0	0	0	0	0
Tasman District	2016	DOG	Terrier, Fox (Smooth)	186	91	95	92	116	1	0	0	0	0	0	0	0	0	0	0
Tasman District	2016	DOG	Terrier, Jack Russell	399	200	199	209	258	1	0	0	0	0	0	0	0	0	0	0
Tasman District	2016	DOG	Terrier, Staffordshire Bull	196	107	89	81	144	0	0	0	0	0	0	0	0	0	0	0
Tasman District	2016	DOG	Terrier, West Highland White	99	56	43	55	78	0	0	0	0	0	0	0	0	0	0	0
Tasman District	2016	DOG	_Unidentified_	1446	744	702	637	1050	9	1	0	0	0	0	0	0	0	0	0
Tasman District	2016	OWN	_	0	0	0	0	0	0	0	0	2	6900	92	0	0	0	0	0
Taupo District	2001	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	29	3272	0
Taupo District	2002	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	24	1970	0
Taupo District	2003	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	29	1418	0
Taupo District	2004	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	79	14428	0
Taupo District	2005	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	95	8672	0
Taupo District	2006	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	108	14829	14004
Taupo District	2007	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	119	14375	15202
Taupo District	2008	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	122	16210	16161
Taupo District	2009	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	122	14746	15235
Taupo District	2010	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	119	14197	14664
Taupo District	2011	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	132	15468	16590
Taupo District	2012	JST	_	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Taupo District	2012	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	129	26650	17083
Taupo District	2013	DOG	_ALL-PURE_	3753	1856	1897	1422	1889	22	8	0	0	0	0	0	0	0	0	0
Taupo District	2013	DOG	_ALL-CROSS_	2582	1333	1249	1106	1863	43	9	0	0	0	0	0	0	0	0	0
Taupo District	2013	DOG	_ALL-DOGS_	6335	3189	3146	2528	3752	65	17	0	0	0	0	0	0	0	0	0
Taupo District	2013	DOG	Beagle	11	6	5	6	9	0	0	0	0	0	0	0	0	0	0	0
Taupo District	2013	DOG	Bichon Frise	34	15	19	19	25	0	0	0	0	0	0	0	0	0	0	0
Taupo District	2013	DOG	Boxer	40	22	18	25	30	0	0	0	0	0	0	0	0	0	0	0
Taupo District	2013	DOG	Cattle, Australian	64	34	30	22	22	0	0	0	0	0	0	0	0	0	0	0
Taupo District	2013	DOG	Chihuahua, Long Coat	31	22	9	17	17	0	0	0	0	0	0	0	0	0	0	0
Taupo District	2013	DOG	Chihuahua, Smooth Coat	24	11	13	7	22	0	0	0	0	0	0	0	0	0	0	0
Taupo District	2013	DOG	Collie, Bearded	19	9	10	5	5	0	0	0	0	0	0	0	0	0	0	0
Taupo District	2013	DOG	Collie, Border	140	75	65	69	60	0	0	0	0	0	0	0	0	0	0	0
Taupo District	2013	DOG	Collie, Rough	20	11	9	3	5	0	0	0	0	0	0	0	0	0	0	0
Taupo District	2013	DOG	Collie, Smooth	2	1	1	1	1	0	0	0	0	0	0	0	0	0	0	0
Taupo District	2013	DOG	Greyhound	23	10	13	7	20	0	0	0	0	0	0	0	0	0	0	0
Taupo District	2013	DOG	Heading	427	228	199	26	38	0	0	0	0	0	0	0	0	0	0	0
Taupo District	2013	DOG	Huntaway	543	228	315	47	22	0	0	0	0	0	0	0	0	0	0	0
Taupo District	2013	DOG	Maltese	22	9	13	13	17	0	0	0	0	0	0	0	0	0	0	0
Taupo District	2013	DOG	Poodle, Miniature	32	11	21	26	18	0	0	0	0	0	0	0	0	0	0	0
Taupo District	2013	DOG	Poodle, Toy	51	35	16	38	32	0	0	0	0	0	0	0	0	0	0	0
Taupo District	2013	DOG	Retriever, Golden	63	31	32	36	43	0	0	0	0	0	0	0	0	0	0	0
Taupo District	2013	DOG	Retriever, Labrador	504	257	247	238	333	1	2	0	0	0	0	0	0	0	0	0
Taupo District	2013	DOG	Rottweiler	87	43	44	24	69	0	2	0	0	0	0	0	0	0	0	0
Taupo District	2013	DOG	Schnauzer, Miniature	65	35	30	32	56	0	0	0	0	0	0	0	0	0	0	0
Taupo District	2013	DOG	Shepherd, German	120	61	59	45	79	0	2	0	0	0	0	0	0	0	0	0
Taupo District	2013	DOG	Shih Tzu	24	11	13	15	18	0	0	0	0	0	0	0	0	0	0	0
Taupo District	2013	DOG	Spaniel, Cavalier King Charles	19	9	10	14	13	0	0	0	0	0	0	0	0	0	0	0
Taupo District	2013	DOG	Spaniel, Cocker	48	24	24	30	34	0	0	0	0	0	0	0	0	0	0	0
Taupo District	2013	DOG	Spaniel, English Springer	28	12	16	13	18	0	0	0	0	0	0	0	0	0	0	0
Taupo District	2013	DOG	Terrier, American Pit Bull	22	13	9	6	20	19	2	0	0	0	0	0	0	0	0	0
Taupo District	2013	DOG	Terrier, Fox (Smooth)	256	142	114	143	155	0	0	0	0	0	0	0	0	0	0	0
Taupo District	2013	DOG	Terrier, Jack Russell	173	82	91	107	97	0	0	0	0	0	0	0	0	0	0	0
Taupo District	2013	DOG	Terrier, Staffordshire Bull	76	30	46	34	57	0	0	0	0	0	0	0	0	0	0	0
Taupo District	2013	DOG	Terrier, West Highland White	29	8	21	15	13	0	0	0	0	0	0	0	0	0	0	0
Taupo District	2013	DOG	_Unidentified_	756	371	385	339	541	2	0	0	0	0	0	0	0	0	0	0
Taupo District	2013	OWN	_	0	0	0	0	0	0	0	0	27	4122	48	0	0	0	0	0
Taupo District	2013	JST	_	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Taupo District	2013	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	127	21417	28829
Taupo District	2014	DOG	_ALL-PURE_	3784	1906	1878	1455	2078	30	4	0	0	0	0	0	0	0	0	0
Taupo District	2014	DOG	_ALL-CROSS_	2662	1368	1294	1225	2032	52	7	0	0	0	0	0	0	0	0	0
Taupo District	2014	DOG	_ALL-DOGS_	6446	3274	3172	2680	4110	82	11	0	0	0	0	0	0	0	0	0
Taupo District	2014	DOG	Beagle	12	7	5	7	11	0	0	0	0	0	0	0	0	0	0	0
Taupo District	2014	DOG	Bichon Frise	41	20	21	24	34	1	0	0	0	0	0	0	0	0	0	0
Taupo District	2014	DOG	Boxer	42	24	18	28	32	0	0	0	0	0	0	0	0	0	0	0
Taupo District	2014	DOG	Cattle, Australian	57	32	25	21	24	0	0	0	0	0	0	0	0	0	0	0
Taupo District	2014	DOG	Chihuahua, Long Coat	30	23	7	16	18	0	0	0	0	0	0	0	0	0	0	0
Taupo District	2014	DOG	Chihuahua, Smooth Coat	32	14	18	11	29	0	0	0	0	0	0	0	0	0	0	0
Taupo District	2014	DOG	Collie, Bearded	20	9	11	5	5	0	0	0	0	0	0	0	0	0	0	0
Taupo District	2014	DOG	Collie, Border	151	84	67	72	71	0	0	0	0	0	0	0	0	0	0	0
Taupo District	2014	DOG	Collie, Rough	18	9	9	3	5	0	0	0	0	0	0	0	0	0	0	0
Taupo District	2014	DOG	Collie, Smooth	3	1	2	1	1	0	0	0	0	0	0	0	0	0	0	0
Taupo District	2014	DOG	Greyhound	26	13	13	7	24	0	0	0	0	0	0	0	0	0	0	0
Taupo District	2014	DOG	Heading	433	225	208	27	37	0	0	0	0	0	0	0	0	0	0	0
Taupo District	2014	DOG	Huntaway	530	239	291	44	27	0	0	0	0	0	0	0	0	0	0	0
Taupo District	2014	DOG	Maltese	27	12	15	17	21	0	0	0	0	0	0	0	0	0	0	0
Taupo District	2014	DOG	Poodle, Miniature	31	14	17	25	19	0	0	0	0	0	0	0	0	0	0	0
Taupo District	2014	DOG	Poodle, Toy	48	32	16	37	31	0	0	0	0	0	0	0	0	0	0	0
Taupo District	2014	DOG	Retriever, Golden	65	32	33	40	48	0	0	0	0	0	0	0	0	0	0	0
Taupo District	2014	DOG	Retriever, Labrador	498	241	257	234	361	1	1	0	0	0	0	0	0	0	0	0
Taupo District	2014	DOG	Rottweiler	84	44	40	28	73	2	0	0	0	0	0	0	0	0	0	0
Taupo District	2014	DOG	Schnauzer, Miniature	66	36	30	35	59	0	0	0	0	0	0	0	0	0	0	0
Taupo District	2014	DOG	Shepherd, German	111	58	53	43	77	0	2	0	0	0	0	0	0	0	0	0
Taupo District	2014	DOG	Shih Tzu	37	15	22	23	30	0	0	0	0	0	0	0	0	0	0	0
Taupo District	2014	DOG	Spaniel, Cavalier King Charles	18	10	8	14	14	0	0	0	0	0	0	0	0	0	0	0
Taupo District	2014	DOG	Spaniel, Cocker	51	30	21	37	40	0	0	0	0	0	0	0	0	0	0	0
Taupo District	2014	DOG	Spaniel, English Springer	37	15	22	14	28	0	0	0	0	0	0	0	0	0	0	0
Taupo District	2014	DOG	Terrier, American Pit Bull	23	12	11	8	21	22	0	0	0	0	0	0	0	0	0	0
Taupo District	2014	DOG	Terrier, Fox (Smooth)	255	140	115	141	167	0	0	0	0	0	0	0	0	0	0	0
Taupo District	2014	DOG	Terrier, Jack Russell	181	88	93	109	114	0	0	0	0	0	0	0	0	0	0	0
Taupo District	2014	DOG	Terrier, Staffordshire Bull	79	34	45	33	63	0	0	0	0	0	0	0	0	0	0	0
Taupo District	2014	DOG	Terrier, West Highland White	26	7	19	14	13	0	0	0	0	0	0	0	0	0	0	0
Taupo District	2014	DOG	_Unidentified_	752	386	366	337	581	4	1	0	0	0	0	0	0	0	0	0
Taupo District	2014	OWN	_	0	0	0	0	0	0	0	7	44	4167	42	0	0	0	0	0
Taupo District	2014	JST	_	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Taupo District	2014	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	124	17281	17386
Taupo District	2015	DOG	_ALL-PURE_	3805	1920	1885	1467	2264	29	5	0	0	0	0	0	0	0	0	0
Taupo District	2015	DOG	_ALL-CROSS_	2838	1453	1385	1290	2242	73	8	0	0	0	0	0	0	0	0	0
Taupo District	2015	DOG	_ALL-DOGS_	6643	3373	3270	2757	4506	102	13	0	0	0	0	0	0	0	0	0
Taupo District	2015	DOG	Beagle	15	10	5	9	14	0	0	0	0	0	0	0	0	0	0	0
Taupo District	2015	DOG	Bichon Frise	41	19	22	27	34	1	0	0	0	0	0	0	0	0	0	0
Taupo District	2015	DOG	Boxer	41	24	17	27	32	0	0	0	0	0	0	0	0	0	0	0
Taupo District	2015	DOG	Cattle, Australian	67	37	30	30	39	0	0	0	0	0	0	0	0	0	0	0
Taupo District	2015	DOG	Chihuahua, Long Coat	26	19	7	16	16	0	0	0	0	0	0	0	0	0	0	0
Taupo District	2015	DOG	Chihuahua, Smooth Coat	40	22	18	13	34	0	0	0	0	0	0	0	0	0	0	0
Taupo District	2015	DOG	Collie, Bearded	19	8	11	5	6	0	0	0	0	0	0	0	0	0	0	0
Taupo District	2015	DOG	Collie, Border	159	88	71	71	85	1	0	0	0	0	0	0	0	0	0	0
Taupo District	2015	DOG	Collie, Rough	17	9	8	3	5	0	0	0	0	0	0	0	0	0	0	0
Taupo District	2015	DOG	Collie, Smooth	3	1	2	1	1	0	0	0	0	0	0	0	0	0	0	0
Taupo District	2015	DOG	Greyhound	24	11	13	10	22	0	0	0	0	0	0	0	0	0	0	0
Taupo District	2015	DOG	Heading	414	215	199	28	36	0	0	0	0	0	0	0	0	0	0	0
Taupo District	2015	DOG	Huntaway	505	224	281	41	28	0	0	0	0	0	0	0	0	0	0	0
Taupo District	2015	DOG	Maltese	30	16	14	17	26	0	0	0	0	0	0	0	0	0	0	0
Taupo District	2015	DOG	Poodle, Miniature	30	13	17	25	20	0	0	0	0	0	0	0	0	0	0	0
Taupo District	2015	DOG	Poodle, Toy	50	33	17	39	32	0	0	0	0	0	0	0	0	0	0	0
Taupo District	2015	DOG	Retriever, Golden	70	35	35	49	56	0	0	0	0	0	0	0	0	0	0	0
Taupo District	2015	DOG	Retriever, Labrador	495	250	245	226	380	1	1	0	0	0	0	0	0	0	0	0
Taupo District	2015	DOG	Rottweiler	96	46	50	28	85	1	1	0	0	0	0	0	0	0	0	0
Taupo District	2015	DOG	Schnauzer, Miniature	79	45	34	40	71	0	0	0	0	0	0	0	0	0	0	0
Taupo District	2015	DOG	Shepherd, German	111	58	53	41	84	0	1	0	0	0	0	0	0	0	0	0
Taupo District	2015	DOG	Shih Tzu	40	16	24	21	34	0	0	0	0	0	0	0	0	0	0	0
Taupo District	2015	DOG	Spaniel, Cavalier King Charles	19	11	8	13	15	0	0	0	0	0	0	0	0	0	0	0
Taupo District	2015	DOG	Spaniel, Cocker	52	30	22	37	44	0	0	0	0	0	0	0	0	0	0	0
Taupo District	2015	DOG	Spaniel, English Springer	44	21	23	17	36	0	0	0	0	0	0	0	0	0	0	0
Taupo District	2015	DOG	Terrier, American Pit Bull	22	10	12	7	19	21	0	0	0	0	0	0	0	0	0	0
Taupo District	2015	DOG	Terrier, Fox (Smooth)	245	139	106	140	177	0	1	0	0	0	0	0	0	0	0	0
Taupo District	2015	DOG	Terrier, Jack Russell	169	84	85	103	116	0	0	0	0	0	0	0	0	0	0	0
Taupo District	2015	DOG	Terrier, Staffordshire Bull	73	27	46	33	62	0	0	0	0	0	0	0	0	0	0	0
Taupo District	2015	DOG	Terrier, West Highland White	22	8	14	9	13	0	0	0	0	0	0	0	0	0	0	0
Taupo District	2015	DOG	_Unidentified_	787	391	396	341	642	4	1	0	0	0	0	0	0	0	0	0
Taupo District	2015	OWN	_	0	0	0	0	0	0	0	13	43	4364	52	0	0	0	0	0
Taupo District	2015	JST	_	0	0	0	0	0	0	0	0	0	0	0	2	1	0	0	0
Taupo District	2015	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	152	17543	20224
Taupo District	2016	DOG	_ALL-PURE_	3919	1963	1956	1562	2542	34	11	0	0	0	0	0	0	0	0	0
Taupo District	2016	DOG	_ALL-CROSS_	2983	1541	1442	1348	2454	88	9	0	0	0	0	0	0	0	0	0
Taupo District	2016	DOG	_ALL-DOGS_	6902	3504	3398	2910	4996	122	20	0	0	0	0	0	0	0	0	0
Taupo District	2016	DOG	Beagle	14	9	5	10	13	0	0	0	0	0	0	0	0	0	0	0
Taupo District	2016	DOG	Bichon Frise	42	21	21	31	36	1	0	0	0	0	0	0	0	0	0	0
Taupo District	2016	DOG	Boxer	37	21	16	24	30	0	0	0	0	0	0	0	0	0	0	0
Taupo District	2016	DOG	Cattle, Australian	61	36	25	26	36	0	0	0	0	0	0	0	0	0	0	0
Taupo District	2016	DOG	Chihuahua, Long Coat	26	18	8	18	17	0	0	0	0	0	0	0	0	0	0	0
Taupo District	2016	DOG	Chihuahua, Smooth Coat	46	23	23	19	41	0	0	0	0	0	0	0	0	0	0	0
Taupo District	2016	DOG	Collie, Bearded	21	10	11	5	7	0	0	0	0	0	0	0	0	0	0	0
Taupo District	2016	DOG	Collie, Border	178	103	75	87	109	1	0	0	0	0	0	0	0	0	0	0
Taupo District	2016	DOG	Collie, Rough	18	9	9	4	7	0	0	0	0	0	0	0	0	0	0	0
Taupo District	2016	DOG	Collie, Smooth	2	1	1	1	1	0	0	0	0	0	0	0	0	0	0	0
Taupo District	2016	DOG	Greyhound	29	16	13	11	24	1	0	0	0	0	0	0	0	0	0	0
Taupo District	2016	DOG	Heading	401	204	197	29	41	0	0	0	0	0	0	0	0	0	0	0
Taupo District	2016	DOG	Huntaway	498	211	287	40	43	0	0	0	0	0	0	0	0	0	0	0
Taupo District	2016	DOG	Maltese	30	16	14	17	25	0	0	0	0	0	0	0	0	0	0	0
Taupo District	2016	DOG	Poodle, Miniature	27	10	17	22	21	0	0	0	0	0	0	0	0	0	0	0
Taupo District	2016	DOG	Poodle, Toy	41	24	17	34	32	0	0	0	0	0	0	0	0	0	0	0
Taupo District	2016	DOG	Retriever, Golden	62	31	31	46	52	0	0	0	0	0	0	0	0	0	0	0
Taupo District	2016	DOG	Retriever, Labrador	525	262	263	250	443	1	1	0	0	0	0	0	0	0	0	0
Taupo District	2016	DOG	Rottweiler	97	46	51	24	87	2	0	0	0	0	0	0	0	0	0	0
Taupo District	2016	DOG	Schnauzer, Miniature	82	45	37	46	77	0	0	0	0	0	0	0	0	0	0	0
Taupo District	2016	DOG	Shepherd, German	113	53	60	43	90	0	2	0	0	0	0	0	0	0	0	0
Taupo District	2016	DOG	Shih Tzu	50	22	28	25	45	1	0	0	0	0	0	0	0	0	0	0
Taupo District	2016	DOG	Spaniel, Cavalier King Charles	18	10	8	13	16	0	0	0	0	0	0	0	0	0	0	0
Taupo District	2016	DOG	Spaniel, Cocker	59	35	24	40	52	0	0	0	0	0	0	0	0	0	0	0
Taupo District	2016	DOG	Spaniel, English Springer	42	21	21	15	35	0	0	0	0	0	0	0	0	0	0	0
Taupo District	2016	DOG	Terrier, American Pit Bull	24	14	10	5	22	21	1	0	0	0	0	0	0	0	0	0
Taupo District	2016	DOG	Terrier, Fox (Smooth)	257	145	112	148	192	0	1	0	0	0	0	0	0	0	0	0
Taupo District	2016	DOG	Terrier, Jack Russell	175	82	93	111	128	0	0	0	0	0	0	0	0	0	0	0
Taupo District	2016	DOG	Terrier, Staffordshire Bull	70	29	41	36	64	0	0	0	0	0	0	0	0	0	0	0
Taupo District	2016	DOG	Terrier, West Highland White	25	9	16	15	17	0	0	0	0	0	0	0	0	0	0	0
Taupo District	2016	DOG	_Unidentified_	849	427	422	367	739	6	6	0	0	0	0	0	0	0	0	0
Taupo District	2016	OWN	_	0	0	0	0	0	0	0	9	27	4540	58	0	0	0	0	0
Tauranga City	2001	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	75	26932	0
Tauranga City	2002	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	57	14292	0
Tauranga City	2003	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	80	21669	0
Tauranga City	2004	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	256	129577	0
Tauranga City	2005	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	306	47462	0
Tauranga City	2006	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	311	34596	40538
Tauranga City	2007	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	297	34346	37020
Tauranga City	2008	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	329	69040	54223
Tauranga City	2009	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	308	76387	59362
Tauranga City	2010	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	332	123407	122795
Tauranga City	2011	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	326	86945	79146
Tauranga City	2012	JST	_	0	0	0	0	0	0	0	0	0	0	0	8	7	0	0	0
Tauranga City	2012	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	372	65765	71927
Tauranga City	2013	DOG	_ALL-PURE_	5621	2840	2781	3504	3536	50	11	0	0	0	0	0	0	0	0	0
Tauranga City	2013	DOG	_ALL-CROSS_	4461	2263	2198	2945	3158	67	14	0	0	0	0	0	0	0	0	0
Tauranga City	2013	DOG	_ALL-DOGS_	10082	5103	4979	6449	6694	117	25	0	0	0	0	0	0	0	0	0
Tauranga City	2013	DOG	Beagle	45	21	24	40	32	0	0	0	0	0	0	0	0	0	0	0
Tauranga City	2013	DOG	Bichon Frise	193	97	96	135	120	0	0	0	0	0	0	0	0	0	0	0
Tauranga City	2013	DOG	Boxer	135	64	71	81	92	0	1	0	0	0	0	0	0	0	0	0
Tauranga City	2013	DOG	Cattle, Australian	46	24	22	35	22	0	0	0	0	0	0	0	0	0	0	0
Tauranga City	2013	DOG	Chihuahua, Long Coat	96	44	52	48	49	0	0	0	0	0	0	0	0	0	0	0
Tauranga City	2013	DOG	Chihuahua, Smooth Coat	61	34	27	30	46	0	0	0	0	0	0	0	0	0	0	0
Tauranga City	2013	DOG	Collie, Bearded	7	2	5	5	5	0	0	0	0	0	0	0	0	0	0	0
Tauranga City	2013	DOG	Collie, Border	235	123	112	153	143	0	0	0	0	0	0	0	0	0	0	0
Tauranga City	2013	DOG	Collie, Rough	19	9	10	14	8	0	0	0	0	0	0	0	0	0	0	0
Tauranga City	2013	DOG	Collie, Smooth	11	5	6	6	7	0	0	0	0	0	0	0	0	0	0	0
Tauranga City	2013	DOG	Greyhound	14	9	5	12	9	0	0	0	0	0	0	0	0	0	0	0
Tauranga City	2013	DOG	Heading	15	12	3	10	9	0	0	0	0	0	0	0	0	0	0	0
Tauranga City	2013	DOG	Huntaway	35	21	14	25	16	0	0	0	0	0	0	0	0	0	0	0
Tauranga City	2013	DOG	Maltese	166	99	67	84	116	0	0	0	0	0	0	0	0	0	0	0
Tauranga City	2013	DOG	Poodle, Miniature	123	63	60	95	71	0	0	0	0	0	0	0	0	0	0	0
Tauranga City	2013	DOG	Poodle, Toy	117	62	55	75	81	0	0	0	0	0	0	0	0	0	0	0
Tauranga City	2013	DOG	Retriever, Golden	225	114	111	138	138	0	0	0	0	0	0	0	0	0	0	0
Tauranga City	2013	DOG	Retriever, Labrador	771	394	377	504	492	0	1	0	0	0	0	0	0	0	0	0
Tauranga City	2013	DOG	Rottweiler	123	56	67	53	89	0	2	0	0	0	0	0	0	0	0	0
Tauranga City	2013	DOG	Schnauzer, Miniature	167	73	94	103	118	0	0	0	0	0	0	0	0	0	0	0
Tauranga City	2013	DOG	Shepherd, German	177	107	70	96	111	0	2	0	0	0	0	0	0	0	0	0
Tauranga City	2013	DOG	Shih Tzu	104	50	54	50	81	0	0	0	0	0	0	0	0	0	0	0
Tauranga City	2013	DOG	Spaniel, Cavalier King Charles	71	35	36	52	51	0	0	0	0	0	0	0	0	0	0	0
Tauranga City	2013	DOG	Spaniel, Cocker	107	50	57	66	68	0	0	0	0	0	0	0	0	0	0	0
Tauranga City	2013	DOG	Spaniel, English Springer	55	32	23	33	31	0	0	0	0	0	0	0	0	0	0	0
Tauranga City	2013	DOG	Terrier, American Pit Bull	50	16	34	15	41	47	1	0	0	0	0	0	0	0	0	0
Tauranga City	2013	DOG	Terrier, Fox (Smooth)	380	189	191	267	171	0	0	0	0	0	0	0	0	0	0	0
Tauranga City	2013	DOG	Terrier, Jack Russell	314	146	168	231	160	0	0	0	0	0	0	0	0	0	0	0
Tauranga City	2013	DOG	Terrier, Staffordshire Bull	187	100	87	102	134	0	2	0	0	0	0	0	0	0	0	0
Tauranga City	2013	DOG	Terrier, West Highland White	78	45	33	54	41	0	0	0	0	0	0	0	0	0	0	0
Tauranga City	2013	DOG	_Unidentified_	1494	744	750	892	984	3	2	0	0	0	0	0	0	0	0	0
Tauranga City	2013	OWN	_	0	0	0	0	0	0	0	0	5	8809	116	0	0	0	0	0
Tauranga City	2013	JST	_	0	0	0	0	0	0	0	0	0	0	0	4	0	0	0	0
Tauranga City	2013	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	388	99135	101025
Tauranga City	2014	DOG	_ALL-PURE_	5735	2870	2865	3581	3847	57	13	0	0	0	0	0	0	0	0	0
Tauranga City	2014	DOG	_ALL-CROSS_	4846	2474	2372	3248	3584	74	20	0	0	0	0	0	0	0	0	0
Tauranga City	2014	DOG	_ALL-DOGS_	10581	5344	5237	6829	7431	131	33	0	0	0	0	0	0	0	0	0
Tauranga City	2014	DOG	Beagle	46	20	26	41	32	0	0	0	0	0	0	0	0	0	0	0
Tauranga City	2014	DOG	Bichon Frise	178	85	93	124	114	0	0	0	0	0	0	0	0	0	0	0
Tauranga City	2014	DOG	Boxer	125	57	68	78	91	0	1	0	0	0	0	0	0	0	0	0
Tauranga City	2014	DOG	Cattle, Australian	49	24	25	37	22	0	0	0	0	0	0	0	0	0	0	0
Tauranga City	2014	DOG	Chihuahua, Long Coat	99	42	57	55	66	0	0	0	0	0	0	0	0	0	0	0
Tauranga City	2014	DOG	Chihuahua, Smooth Coat	68	38	30	31	49	0	0	0	0	0	0	0	0	0	0	0
Tauranga City	2014	DOG	Collie, Bearded	7	3	4	6	6	0	0	0	0	0	0	0	0	0	0	0
Tauranga City	2014	DOG	Collie, Border	255	130	125	158	167	0	1	0	0	0	0	0	0	0	0	0
Tauranga City	2014	DOG	Collie, Rough	16	6	10	12	8	0	0	0	0	0	0	0	0	0	0	0
Tauranga City	2014	DOG	Collie, Smooth	10	4	6	6	9	0	0	0	0	0	0	0	0	0	0	0
Tauranga City	2014	DOG	Greyhound	12	6	6	11	8	0	0	0	0	0	0	0	0	0	0	0
Tauranga City	2014	DOG	Heading	17	12	5	11	11	0	0	0	0	0	0	0	0	0	0	0
Tauranga City	2014	DOG	Huntaway	34	18	16	22	16	0	0	0	0	0	0	0	0	0	0	0
Tauranga City	2014	DOG	Maltese	165	95	70	91	120	0	0	0	0	0	0	0	0	0	0	0
Tauranga City	2014	DOG	Poodle, Miniature	118	64	54	92	76	0	0	0	0	0	0	0	0	0	0	0
Tauranga City	2014	DOG	Poodle, Toy	119	63	56	80	84	0	0	0	0	0	0	0	0	0	0	0
Tauranga City	2014	DOG	Retriever, Golden	223	114	109	144	158	0	0	0	0	0	0	0	0	0	0	0
Tauranga City	2014	DOG	Retriever, Labrador	795	403	392	516	531	0	1	0	0	0	0	0	0	0	0	0
Tauranga City	2014	DOG	Rottweiler	129	62	67	57	93	0	2	0	0	0	0	0	0	0	0	0
Tauranga City	2014	DOG	Schnauzer, Miniature	193	85	108	122	147	0	0	0	0	0	0	0	0	0	0	0
Tauranga City	2014	DOG	Shepherd, German	184	103	81	100	125	0	3	0	0	0	0	0	0	0	0	0
Tauranga City	2014	DOG	Shih Tzu	109	56	53	64	89	0	0	0	0	0	0	0	0	0	0	0
Tauranga City	2014	DOG	Spaniel, Cavalier King Charles	71	38	33	53	53	0	0	0	0	0	0	0	0	0	0	0
Tauranga City	2014	DOG	Spaniel, Cocker	109	54	55	64	77	0	0	0	0	0	0	0	0	0	0	0
Tauranga City	2014	DOG	Spaniel, English Springer	58	35	23	32	33	0	0	0	0	0	0	0	0	0	0	0
Tauranga City	2014	DOG	Terrier, American Pit Bull	54	19	35	20	42	53	0	0	0	0	0	0	0	0	0	0
Tauranga City	2014	DOG	Terrier, Fox (Smooth)	362	178	184	257	192	0	0	0	0	0	0	0	0	0	0	0
Tauranga City	2014	DOG	Terrier, Jack Russell	323	146	177	234	181	0	0	0	0	0	0	0	0	0	0	0
Tauranga City	2014	DOG	Terrier, Staffordshire Bull	187	101	86	102	141	1	2	0	0	0	0	0	0	0	0	0
Tauranga City	2014	DOG	Terrier, West Highland White	72	42	30	50	46	0	0	0	0	0	0	0	0	0	0	0
Tauranga City	2014	DOG	_Unidentified_	1548	767	781	911	1060	3	3	0	0	0	0	0	0	0	0	0
Tauranga City	2014	OWN	_	0	0	0	0	0	0	0	0	10	9219	111	0	0	0	0	0
Tauranga City	2014	JST	_	0	0	0	0	0	0	0	0	0	0	0	7	2	0	0	0
Tauranga City	2014	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	422	102758	92473
Tauranga City	2015	DOG	_ALL-PURE_	5933	2949	2984	3656	4109	60	9	0	0	0	0	0	0	0	0	0
Tauranga City	2015	DOG	_ALL-CROSS_	5208	2629	2579	3496	3937	77	15	0	0	0	0	0	0	0	0	0
Tauranga City	2015	DOG	_ALL-DOGS_	11141	5578	5563	7152	8046	137	24	0	0	0	0	0	0	0	0	0
Tauranga City	2015	DOG	Beagle	46	20	26	38	31	0	0	0	0	0	0	0	0	0	0	0
Tauranga City	2015	DOG	Bichon Frise	182	88	94	127	121	0	0	0	0	0	0	0	0	0	0	0
Tauranga City	2015	DOG	Boxer	126	59	67	77	94	0	1	0	0	0	0	0	0	0	0	0
Tauranga City	2015	DOG	Cattle, Australian	49	23	26	34	28	1	0	0	0	0	0	0	0	0	0	0
Tauranga City	2015	DOG	Chihuahua, Long Coat	103	46	57	56	72	0	0	0	0	0	0	0	0	0	0	0
Tauranga City	2015	DOG	Chihuahua, Smooth Coat	75	38	37	29	54	0	0	0	0	0	0	0	0	0	0	0
Tauranga City	2015	DOG	Collie, Bearded	11	4	7	8	9	0	0	0	0	0	0	0	0	0	0	0
Tauranga City	2015	DOG	Collie, Border	264	132	132	169	173	0	1	0	0	0	0	0	0	0	0	0
Tauranga City	2015	DOG	Collie, Rough	13	4	9	9	7	0	0	0	0	0	0	0	0	0	0	0
Tauranga City	2015	DOG	Collie, Smooth	9	4	5	5	9	0	0	0	0	0	0	0	0	0	0	0
Tauranga City	2015	DOG	Greyhound	18	7	11	16	14	0	0	0	0	0	0	0	0	0	0	0
Tauranga City	2015	DOG	Heading	13	8	5	9	9	0	0	0	0	0	0	0	0	0	0	0
Tauranga City	2015	DOG	Huntaway	43	23	20	28	24	0	0	0	0	0	0	0	0	0	0	0
Tauranga City	2015	DOG	Maltese	177	94	83	98	130	1	0	0	0	0	0	0	0	0	0	0
Tauranga City	2015	DOG	Poodle, Miniature	117	62	55	93	75	0	0	0	0	0	0	0	0	0	0	0
Tauranga City	2015	DOG	Poodle, Toy	124	69	55	88	92	0	0	0	0	0	0	0	0	0	0	0
Tauranga City	2015	DOG	Retriever, Golden	228	113	115	141	171	0	0	0	0	0	0	0	0	0	0	0
Tauranga City	2015	DOG	Retriever, Labrador	781	391	390	504	544	0	1	0	0	0	0	0	0	0	0	0
Tauranga City	2015	DOG	Rottweiler	144	74	70	65	99	0	1	0	0	0	0	0	0	0	0	0
Tauranga City	2015	DOG	Schnauzer, Miniature	213	93	120	136	160	0	0	0	0	0	0	0	0	0	0	0
Tauranga City	2015	DOG	Shepherd, German	186	105	81	91	123	0	1	0	0	0	0	0	0	0	0	0
Tauranga City	2015	DOG	Shih Tzu	128	68	60	79	105	0	0	0	0	0	0	0	0	0	0	0
Tauranga City	2015	DOG	Spaniel, Cavalier King Charles	78	37	41	52	60	0	0	0	0	0	0	0	0	0	0	0
Tauranga City	2015	DOG	Spaniel, Cocker	118	57	61	72	82	0	0	0	0	0	0	0	0	0	0	0
Tauranga City	2015	DOG	Spaniel, English Springer	63	38	25	34	40	0	0	0	0	0	0	0	0	0	0	0
Tauranga City	2015	DOG	Terrier, American Pit Bull	50	19	31	14	37	49	0	0	0	0	0	0	0	0	0	0
Tauranga City	2015	DOG	Terrier, Fox (Smooth)	362	189	173	260	207	1	0	0	0	0	0	0	0	0	0	0
Tauranga City	2015	DOG	Terrier, Jack Russell	326	147	179	238	190	0	0	0	0	0	0	0	0	0	0	0
Tauranga City	2015	DOG	Terrier, Staffordshire Bull	190	100	90	109	146	0	2	0	0	0	0	0	0	0	0	0
Tauranga City	2015	DOG	Terrier, West Highland White	80	46	34	55	56	0	0	0	0	0	0	0	0	0	0	0
Tauranga City	2015	DOG	_Unidentified_	1616	791	825	922	1147	8	2	0	0	0	0	0	0	0	0	0
Tauranga City	2015	OWN	_	0	0	0	0	0	0	0	0	11	9620	101	0	0	0	0	0
Tauranga City	2015	JST	_	0	0	0	0	0	0	0	0	0	0	0	12	2	0	0	0
Tauranga City	2015	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	393	73214	121298
Tauranga City	2016	DOG	_ALL-PURE_	6147	3047	3100	3729	4456	66	10	0	0	0	0	0	0	0	0	0
Tauranga City	2016	DOG	_ALL-CROSS_	5604	2858	2746	3806	4359	87	16	0	0	0	0	0	0	0	0	0
Tauranga City	2016	DOG	_ALL-DOGS_	11751	5905	5846	7535	8815	153	26	0	0	0	0	0	0	0	0	0
Tauranga City	2016	DOG	Beagle	47	23	24	38	34	0	0	0	0	0	0	0	0	0	0	0
Tauranga City	2016	DOG	Bichon Frise	169	82	87	124	122	0	0	0	0	0	0	0	0	0	0	0
Tauranga City	2016	DOG	Boxer	128	60	68	74	102	0	1	0	0	0	0	0	0	0	0	0
Tauranga City	2016	DOG	Cattle, Australian	48	23	25	34	30	1	0	0	0	0	0	0	0	0	0	0
Tauranga City	2016	DOG	Chihuahua, Long Coat	97	42	55	55	72	0	0	0	0	0	0	0	0	0	0	0
Tauranga City	2016	DOG	Chihuahua, Smooth Coat	87	47	40	36	68	0	0	0	0	0	0	0	0	0	0	0
Tauranga City	2016	DOG	Collie, Bearded	15	6	9	12	13	0	0	0	0	0	0	0	0	0	0	0
Tauranga City	2016	DOG	Collie, Border	266	140	126	171	184	0	1	0	0	0	0	0	0	0	0	0
Tauranga City	2016	DOG	Collie, Rough	12	4	8	10	8	0	0	0	0	0	0	0	0	0	0	0
Tauranga City	2016	DOG	Collie, Smooth	9	4	5	5	9	0	0	0	0	0	0	0	0	0	0	0
Tauranga City	2016	DOG	Greyhound	22	10	12	19	17	0	0	0	0	0	0	0	0	0	0	0
Tauranga City	2016	DOG	Heading	13	8	5	8	8	0	0	0	0	0	0	0	0	0	0	0
Tauranga City	2016	DOG	Huntaway	47	28	19	30	28	0	0	0	0	0	0	0	0	0	0	0
Tauranga City	2016	DOG	Maltese	183	96	87	103	136	0	0	0	0	0	0	0	0	0	0	0
Tauranga City	2016	DOG	Poodle, Miniature	116	55	61	91	76	0	0	0	0	0	0	0	0	0	0	0
Tauranga City	2016	DOG	Poodle, Toy	112	62	50	80	89	0	0	0	0	0	0	0	0	0	0	0
Tauranga City	2016	DOG	Retriever, Golden	240	122	118	142	182	0	0	0	0	0	0	0	0	0	0	0
Tauranga City	2016	DOG	Retriever, Labrador	799	402	397	511	573	0	1	0	0	0	0	0	0	0	0	0
Tauranga City	2016	DOG	Rottweiler	149	75	74	61	101	2	0	0	0	0	0	0	0	0	0	0
Tauranga City	2016	DOG	Schnauzer, Miniature	233	102	131	138	183	0	0	0	0	0	0	0	0	0	0	0
Tauranga City	2016	DOG	Shepherd, German	188	99	89	91	136	0	4	0	0	0	0	0	0	0	0	0
Tauranga City	2016	DOG	Shih Tzu	152	78	74	88	125	0	0	0	0	0	0	0	0	0	0	0
Tauranga City	2016	DOG	Spaniel, Cavalier King Charles	83	39	44	60	67	0	0	0	0	0	0	0	0	0	0	0
Tauranga City	2016	DOG	Spaniel, Cocker	120	58	62	78	94	0	0	0	0	0	0	0	0	0	0	0
Tauranga City	2016	DOG	Spaniel, English Springer	65	40	25	36	43	1	0	0	0	0	0	0	0	0	0	0
Tauranga City	2016	DOG	Terrier, American Pit Bull	49	19	30	15	37	48	1	0	0	0	0	0	0	0	0	0
Tauranga City	2016	DOG	Terrier, Fox (Smooth)	338	178	160	247	210	0	0	0	0	0	0	0	0	0	0	0
Tauranga City	2016	DOG	Terrier, Jack Russell	334	150	184	239	214	0	0	0	0	0	0	0	0	0	0	0
Tauranga City	2016	DOG	Terrier, Staffordshire Bull	206	107	99	117	157	1	2	0	0	0	0	0	0	0	0	0
Tauranga City	2016	DOG	Terrier, West Highland White	82	47	35	60	61	0	0	0	0	0	0	0	0	0	0	0
Tauranga City	2016	DOG	_Unidentified_	1738	841	897	956	1277	13	0	0	0	0	0	0	0	0	0	0
Tauranga City	2016	OWN	_	0	0	0	0	0	0	0	0	11	10120	86	0	0	0	0	0
Thames-Coromandel District	2001	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	39	4248	0
Thames-Coromandel District	2002	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	22	21377	0
Thames-Coromandel District	2003	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	19	12826	0
Thames-Coromandel District	2004	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	91	10522	0
Thames-Coromandel District	2005	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	80	14227	0
Thames-Coromandel District	2006	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	98	19561	15373
Thames-Coromandel District	2007	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	93	11436	13649
Thames-Coromandel District	2008	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	90	20887	20782
Thames-Coromandel District	2009	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	94	29194	19308
Thames-Coromandel District	2010	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	117	12817	24432
Thames-Coromandel District	2011	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	124	46348	33253
Thames-Coromandel District	2012	JST	_	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Thames-Coromandel District	2012	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	116	24180	37416
Thames-Coromandel District	2013	DOG	_ALL-PURE_	2466	1225	1241	537	1172	26	1	0	0	0	0	0	0	0	0	0
Thames-Coromandel District	2013	DOG	_ALL-CROSS_	1788	950	838	420	1105	25	3	0	0	0	0	0	0	0	0	0
Thames-Coromandel District	2013	DOG	_ALL-DOGS_	4254	2175	2079	957	2277	51	4	0	0	0	0	0	0	0	0	0
Thames-Coromandel District	2013	DOG	Beagle	18	11	7	4	13	0	0	0	0	0	0	0	0	0	0	0
Thames-Coromandel District	2013	DOG	Bichon Frise	35	16	19	17	23	0	0	0	0	0	0	0	0	0	0	0
Thames-Coromandel District	2013	DOG	Boxer	22	9	13	5	15	0	0	0	0	0	0	0	0	0	0	0
Thames-Coromandel District	2013	DOG	Cattle, Australian	205	83	122	12	26	0	0	0	0	0	0	0	0	0	0	0
Thames-Coromandel District	2013	DOG	Chihuahua, Long Coat	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Thames-Coromandel District	2013	DOG	Chihuahua, Smooth Coat	39	24	15	19	21	0	0	0	0	0	0	0	0	0	0	0
Thames-Coromandel District	2013	DOG	Collie, Bearded	18	9	9	2	5	0	0	0	0	0	0	0	0	0	0	0
Thames-Coromandel District	2013	DOG	Collie, Border	185	100	85	32	63	0	0	0	0	0	0	0	0	0	0	0
Thames-Coromandel District	2013	DOG	Collie, Rough	5	2	3	1	3	0	0	0	0	0	0	0	0	0	0	0
Thames-Coromandel District	2013	DOG	Collie, Smooth	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Thames-Coromandel District	2013	DOG	Greyhound	12	6	6	1	8	0	0	0	0	0	0	0	0	0	0	0
Thames-Coromandel District	2013	DOG	Heading	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Thames-Coromandel District	2013	DOG	Huntaway	226	117	109	16	30	1	0	0	0	0	0	0	0	0	0	0
Thames-Coromandel District	2013	DOG	Maltese	29	15	14	4	19	0	0	0	0	0	0	0	0	0	0	0
Thames-Coromandel District	2013	DOG	Poodle, Miniature	16	6	10	6	8	0	0	0	0	0	0	0	0	0	0	0
Thames-Coromandel District	2013	DOG	Poodle, Toy	40	19	21	5	28	0	0	0	0	0	0	0	0	0	0	0
Thames-Coromandel District	2013	DOG	Retriever, Golden	53	25	28	12	20	0	0	0	0	0	0	0	0	0	0	0
Thames-Coromandel District	2013	DOG	Retriever, Labrador	329	169	160	82	170	0	0	0	0	0	0	0	0	0	0	0
Thames-Coromandel District	2013	DOG	Rottweiler	41	24	17	9	24	0	0	0	0	0	0	0	0	0	0	0
Thames-Coromandel District	2013	DOG	Schnauzer, Miniature	45	25	20	11	34	0	0	0	0	0	0	0	0	0	0	0
Thames-Coromandel District	2013	DOG	Shepherd, German	63	49	14	14	32	0	0	0	0	0	0	0	0	0	0	0
Thames-Coromandel District	2013	DOG	Shih Tzu	39	16	23	6	31	0	0	0	0	0	0	0	0	0	0	0
Thames-Coromandel District	2013	DOG	Spaniel, Cavalier King Charles	7	3	4	2	3	0	0	0	0	0	0	0	0	0	0	0
Thames-Coromandel District	2013	DOG	Spaniel, Cocker	46	21	25	10	30	0	0	0	0	0	0	0	0	0	0	0
Thames-Coromandel District	2013	DOG	Spaniel, English Springer	25	14	11	5	17	0	0	0	0	0	0	0	0	0	0	0
Thames-Coromandel District	2013	DOG	Terrier, American Pit Bull	24	10	14	12	18	20	0	0	0	0	0	0	0	0	0	0
Thames-Coromandel District	2013	DOG	Terrier, Fox (Smooth)	210	101	109	69	108	0	0	0	0	0	0	0	0	0	0	0
Thames-Coromandel District	2013	DOG	Terrier, Jack Russell	150	75	75	34	64	0	0	0	0	0	0	0	0	0	0	0
Thames-Coromandel District	2013	DOG	Terrier, Staffordshire Bull	51	18	33	10	31	0	0	0	0	0	0	0	0	0	0	0
Thames-Coromandel District	2013	DOG	Terrier, West Highland White	19	7	12	7	11	0	0	0	0	0	0	0	0	0	0	0
Thames-Coromandel District	2013	DOG	_Unidentified_	514	251	263	130	317	5	1	0	0	0	0	0	0	0	0	0
Thames-Coromandel District	2013	OWN	_	0	0	0	0	0	0	0	0	0	3258	53	0	0	0	0	0
Thames-Coromandel District	2013	JST	_	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Thames-Coromandel District	2013	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	135	21828	22471
Thames-Coromandel District	2014	DOG	_ALL-PURE_	2485	1242	1243	573	1318	18	3	0	0	0	0	0	0	0	0	0
Thames-Coromandel District	2014	DOG	_ALL-CROSS_	1959	1038	921	501	1302	23	4	0	0	0	0	0	0	0	0	0
Thames-Coromandel District	2014	DOG	_ALL-DOGS_	4444	2280	2164	1074	2620	41	7	0	0	0	0	0	0	0	0	0
Thames-Coromandel District	2014	DOG	Beagle	17	10	7	6	13	0	0	0	0	0	0	0	0	0	0	0
Thames-Coromandel District	2014	DOG	Bichon Frise	38	19	19	16	29	0	0	0	0	0	0	0	0	0	0	0
Thames-Coromandel District	2014	DOG	Boxer	27	13	14	9	21	0	0	0	0	0	0	0	0	0	0	0
Thames-Coromandel District	2014	DOG	Cattle, Australian	192	81	111	14	38	0	0	0	0	0	0	0	0	0	0	0
Thames-Coromandel District	2014	DOG	Chihuahua, Long Coat	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Thames-Coromandel District	2014	DOG	Chihuahua, Smooth Coat	47	26	21	19	27	0	0	0	0	0	0	0	0	0	0	0
Thames-Coromandel District	2014	DOG	Collie, Bearded	22	11	11	2	7	0	0	0	0	0	0	0	0	0	0	0
Thames-Coromandel District	2014	DOG	Collie, Border	171	89	82	28	65	0	0	0	0	0	0	0	0	0	0	0
Thames-Coromandel District	2014	DOG	Collie, Rough	4	2	2	0	3	0	0	0	0	0	0	0	0	0	0	0
Thames-Coromandel District	2014	DOG	Collie, Smooth	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Thames-Coromandel District	2014	DOG	Greyhound	17	10	7	1	12	0	0	0	0	0	0	0	0	0	0	0
Thames-Coromandel District	2014	DOG	Heading	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Thames-Coromandel District	2014	DOG	Huntaway	243	122	121	14	40	0	1	0	0	0	0	0	0	0	0	0
Thames-Coromandel District	2014	DOG	Maltese	29	14	15	6	22	0	0	0	0	0	0	0	0	0	0	0
Thames-Coromandel District	2014	DOG	Poodle, Miniature	14	6	8	6	6	0	0	0	0	0	0	0	0	0	0	0
Thames-Coromandel District	2014	DOG	Poodle, Toy	41	19	22	10	29	0	0	0	0	0	0	0	0	0	0	0
Thames-Coromandel District	2014	DOG	Retriever, Golden	46	21	25	12	25	0	0	0	0	0	0	0	0	0	0	0
Thames-Coromandel District	2014	DOG	Retriever, Labrador	330	163	167	89	192	0	0	0	0	0	0	0	0	0	0	0
Thames-Coromandel District	2014	DOG	Rottweiler	41	26	15	5	25	0	0	0	0	0	0	0	0	0	0	0
Thames-Coromandel District	2014	DOG	Schnauzer, Miniature	44	25	19	13	34	0	0	0	0	0	0	0	0	0	0	0
Thames-Coromandel District	2014	DOG	Shepherd, German	63	46	17	14	36	0	0	0	0	0	0	0	0	0	0	0
Thames-Coromandel District	2014	DOG	Shih Tzu	41	17	24	8	34	0	1	0	0	0	0	0	0	0	0	0
Thames-Coromandel District	2014	DOG	Spaniel, Cavalier King Charles	6	2	4	3	4	0	0	0	0	0	0	0	0	0	0	0
Thames-Coromandel District	2014	DOG	Spaniel, Cocker	43	21	22	13	29	0	0	0	0	0	0	0	0	0	0	0
Thames-Coromandel District	2014	DOG	Spaniel, English Springer	26	15	11	5	19	0	0	0	0	0	0	0	0	0	0	0
Thames-Coromandel District	2014	DOG	Terrier, American Pit Bull	23	10	13	16	21	13	0	0	0	0	0	0	0	0	0	0
Thames-Coromandel District	2014	DOG	Terrier, Fox (Smooth)	209	104	105	67	111	0	0	0	0	0	0	0	0	0	0	0
Thames-Coromandel District	2014	DOG	Terrier, Jack Russell	158	82	76	45	74	0	0	0	0	0	0	0	0	0	0	0
Thames-Coromandel District	2014	DOG	Terrier, Staffordshire Bull	52	20	32	11	38	2	0	0	0	0	0	0	0	0	0	0
Thames-Coromandel District	2014	DOG	Terrier, West Highland White	22	8	14	8	14	0	0	0	0	0	0	0	0	0	0	0
Thames-Coromandel District	2014	DOG	_Unidentified_	519	260	259	133	350	3	1	0	0	0	0	0	0	0	0	0
Thames-Coromandel District	2014	OWN	_	0	0	0	0	0	0	0	0	2	3402	52	0	0	0	0	0
Thames-Coromandel District	2014	JST	_	0	0	0	0	0	0	0	0	0	0	0	3	1	0	0	0
Thames-Coromandel District	2014	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	118	56975	54642
Thames-Coromandel District	2015	DOG	_ALL-PURE_	2542	1275	1267	624	1447	17	3	0	0	0	0	0	0	0	0	0
Thames-Coromandel District	2015	DOG	_ALL-CROSS_	2003	1077	926	570	1406	15	6	0	0	0	0	0	0	0	0	0
Thames-Coromandel District	2015	DOG	_ALL-DOGS_	4545	2352	2193	1194	2853	32	9	0	0	0	0	0	0	0	0	0
Thames-Coromandel District	2015	DOG	Beagle	17	9	8	6	13	0	0	0	0	0	0	0	0	0	0	0
Thames-Coromandel District	2015	DOG	Bichon Frise	39	16	23	19	30	0	0	0	0	0	0	0	0	0	0	0
Thames-Coromandel District	2015	DOG	Boxer	31	16	15	10	24	0	0	0	0	0	0	0	0	0	0	0
Thames-Coromandel District	2015	DOG	Cattle, Australian	179	70	109	11	32	0	0	0	0	0	0	0	0	0	0	0
Thames-Coromandel District	2015	DOG	Chihuahua, Long Coat	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Thames-Coromandel District	2015	DOG	Chihuahua, Smooth Coat	53	30	23	22	37	0	0	0	0	0	0	0	0	0	0	0
Thames-Coromandel District	2015	DOG	Collie, Bearded	23	11	12	2	8	0	0	0	0	0	0	0	0	0	0	0
Thames-Coromandel District	2015	DOG	Collie, Border	189	102	87	43	79	0	0	0	0	0	0	0	0	0	0	0
Thames-Coromandel District	2015	DOG	Collie, Rough	7	5	2	2	5	0	0	0	0	0	0	0	0	0	0	0
Thames-Coromandel District	2015	DOG	Collie, Smooth	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Thames-Coromandel District	2015	DOG	Greyhound	18	11	7	3	12	0	0	0	0	0	0	0	0	0	0	0
Thames-Coromandel District	2015	DOG	Heading	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Thames-Coromandel District	2015	DOG	Huntaway	253	137	116	17	42	0	1	0	0	0	0	0	0	0	0	0
Thames-Coromandel District	2015	DOG	Maltese	33	17	16	10	26	0	0	0	0	0	0	0	0	0	0	0
Thames-Coromandel District	2015	DOG	Poodle, Miniature	13	7	6	7	8	0	0	0	0	0	0	0	0	0	0	0
Thames-Coromandel District	2015	DOG	Poodle, Toy	38	17	21	9	26	0	0	0	0	0	0	0	0	0	0	0
Thames-Coromandel District	2015	DOG	Retriever, Golden	38	20	18	9	22	0	0	0	0	0	0	0	0	0	0	0
Thames-Coromandel District	2015	DOG	Retriever, Labrador	319	162	157	84	204	0	0	0	0	0	0	0	0	0	0	0
Thames-Coromandel District	2015	DOG	Rottweiler	38	24	14	4	28	0	0	0	0	0	0	0	0	0	0	0
Thames-Coromandel District	2015	DOG	Schnauzer, Miniature	41	22	19	13	31	0	0	0	0	0	0	0	0	0	0	0
Thames-Coromandel District	2015	DOG	Shepherd, German	59	40	19	18	41	0	0	0	0	0	0	0	0	0	0	0
Thames-Coromandel District	2015	DOG	Shih Tzu	46	22	24	11	38	0	1	0	0	0	0	0	0	0	0	0
Thames-Coromandel District	2015	DOG	Spaniel, Cavalier King Charles	7	1	6	3	4	0	0	0	0	0	0	0	0	0	0	0
Thames-Coromandel District	2015	DOG	Spaniel, Cocker	40	16	24	15	30	0	0	0	0	0	0	0	0	0	0	0
Thames-Coromandel District	2015	DOG	Spaniel, English Springer	25	15	10	5	19	0	0	0	0	0	0	0	0	0	0	0
Thames-Coromandel District	2015	DOG	Terrier, American Pit Bull	22	11	11	16	22	13	0	0	0	0	0	0	0	0	0	0
Thames-Coromandel District	2015	DOG	Terrier, Fox (Smooth)	208	97	111	68	121	0	0	0	0	0	0	0	0	0	0	0
Thames-Coromandel District	2015	DOG	Terrier, Jack Russell	159	80	79	45	81	0	0	0	0	0	0	0	0	0	0	0
Thames-Coromandel District	2015	DOG	Terrier, Staffordshire Bull	62	27	35	11	48	2	0	0	0	0	0	0	0	0	0	0
Thames-Coromandel District	2015	DOG	Terrier, West Highland White	19	7	12	7	15	0	0	0	0	0	0	0	0	0	0	0
Thames-Coromandel District	2015	DOG	_Unidentified_	566	283	283	154	401	2	1	0	0	0	0	0	0	0	0	0
Thames-Coromandel District	2015	OWN	_	0	0	0	0	0	0	0	1	2	3509	47	0	0	0	0	0
Thames-Coromandel District	2015	JST	_	0	0	0	0	0	0	0	0	0	0	0	4	0	0	0	0
Thames-Coromandel District	2015	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	154	30009	40770
Thames-Coromandel District	2016	DOG	_ALL-PURE_	2619	1344	1275	643	1590	15	2	0	0	0	0	0	0	0	0	0
Thames-Coromandel District	2016	DOG	_ALL-CROSS_	2114	1118	996	620	1513	14	5	0	0	0	0	0	0	0	0	0
Thames-Coromandel District	2016	DOG	_ALL-DOGS_	4733	2462	2271	1263	3103	29	7	0	0	0	0	0	0	0	0	0
Thames-Coromandel District	2016	DOG	Beagle	15	7	8	6	13	0	0	0	0	0	0	0	0	0	0	0
Thames-Coromandel District	2016	DOG	Bichon Frise	37	14	23	19	27	0	0	0	0	0	0	0	0	0	0	0
Thames-Coromandel District	2016	DOG	Boxer	32	17	15	12	23	0	0	0	0	0	0	0	0	0	0	0
Thames-Coromandel District	2016	DOG	Cattle, Australian	174	70	104	8	35	0	0	0	0	0	0	0	0	0	0	0
Thames-Coromandel District	2016	DOG	Chihuahua, Long Coat	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Thames-Coromandel District	2016	DOG	Chihuahua, Smooth Coat	53	30	23	21	36	0	0	0	0	0	0	0	0	0	0	0
Thames-Coromandel District	2016	DOG	Collie, Bearded	25	14	11	4	9	0	0	0	0	0	0	0	0	0	0	0
Thames-Coromandel District	2016	DOG	Collie, Border	191	108	83	45	89	0	0	0	0	0	0	0	0	0	0	0
Thames-Coromandel District	2016	DOG	Collie, Rough	7	5	2	2	6	0	0	0	0	0	0	0	0	0	0	0
Thames-Coromandel District	2016	DOG	Collie, Smooth	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Thames-Coromandel District	2016	DOG	Greyhound	25	17	8	7	17	0	0	0	0	0	0	0	0	0	0	0
Thames-Coromandel District	2016	DOG	Heading	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Thames-Coromandel District	2016	DOG	Huntaway	250	141	109	13	49	0	1	0	0	0	0	0	0	0	0	0
Thames-Coromandel District	2016	DOG	Maltese	36	18	18	10	26	0	0	0	0	0	0	0	0	0	0	0
Thames-Coromandel District	2016	DOG	Poodle, Miniature	10	5	5	5	6	0	0	0	0	0	0	0	0	0	0	0
Thames-Coromandel District	2016	DOG	Poodle, Toy	33	15	18	6	26	0	0	0	0	0	0	0	0	0	0	0
Thames-Coromandel District	2016	DOG	Retriever, Golden	44	21	23	9	30	0	0	0	0	0	0	0	0	0	0	0
Thames-Coromandel District	2016	DOG	Retriever, Labrador	305	161	144	76	211	0	0	0	0	0	0	0	0	0	0	0
Thames-Coromandel District	2016	DOG	Rottweiler	48	28	20	3	34	0	0	0	0	0	0	0	0	0	0	0
Thames-Coromandel District	2016	DOG	Schnauzer, Miniature	48	28	20	14	38	0	0	0	0	0	0	0	0	0	0	0
Thames-Coromandel District	2016	DOG	Shepherd, German	55	37	18	13	36	0	0	0	0	0	0	0	0	0	0	0
Thames-Coromandel District	2016	DOG	Shih Tzu	58	27	31	17	46	0	0	0	0	0	0	0	0	0	0	0
Thames-Coromandel District	2016	DOG	Spaniel, Cavalier King Charles	5	1	4	2	3	0	0	0	0	0	0	0	0	0	0	0
Thames-Coromandel District	2016	DOG	Spaniel, Cocker	35	14	21	13	28	0	0	0	0	0	0	0	0	0	0	0
Thames-Coromandel District	2016	DOG	Spaniel, English Springer	30	18	12	5	25	0	0	0	0	0	0	0	0	0	0	0
Thames-Coromandel District	2016	DOG	Terrier, American Pit Bull	28	14	14	22	26	11	0	0	0	0	0	0	0	0	0	0
Thames-Coromandel District	2016	DOG	Terrier, Fox (Smooth)	216	101	115	65	132	0	0	0	0	0	0	0	0	0	0	0
Thames-Coromandel District	2016	DOG	Terrier, Jack Russell	156	80	76	42	92	0	0	0	0	0	0	0	0	0	0	0
Thames-Coromandel District	2016	DOG	Terrier, Staffordshire Bull	70	33	37	16	56	2	0	0	0	0	0	0	0	0	0	0
Thames-Coromandel District	2016	DOG	Terrier, West Highland White	18	8	10	9	15	0	0	0	0	0	0	0	0	0	0	0
Thames-Coromandel District	2016	DOG	_Unidentified_	615	312	303	179	456	2	1	0	0	0	0	0	0	0	0	0
Thames-Coromandel District	2016	OWN	_	0	0	0	0	0	0	0	0	2	3651	40	0	0	0	0	0
Timaru District	2001	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	35	14528	0
Timaru District	2002	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	26	4934	0
Timaru District	2003	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	29	13839	0
Timaru District	2004	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	34	1802	0
Timaru District	2005	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	52	5935	0
Timaru District	2006	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	82	12874	10961
Timaru District	2007	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	75	11401	12143
Timaru District	2008	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	81	18104	15005
Timaru District	2009	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	69	37091	35155
Timaru District	2010	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	82	9856	16617
Timaru District	2011	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	86	22797	10211
Timaru District	2012	JST	_	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Timaru District	2012	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	96	14962	24073
Timaru District	2013	DOG	_ALL-PURE_	6286	3181	3105	2686	3222	20	3	0	0	0	0	0	0	0	0	0
Timaru District	2013	DOG	_ALL-CROSS_	2425	1215	1210	1452	1506	32	3	0	0	0	0	0	0	0	0	0
Timaru District	2013	DOG	_ALL-DOGS_	8711	4396	4315	4138	4728	52	6	0	0	0	0	0	0	0	0	0
Timaru District	2013	DOG	Beagle	49	28	21	32	35	0	0	0	0	0	0	0	0	0	0	0
Timaru District	2013	DOG	Bichon Frise	214	94	120	128	123	0	0	0	0	0	0	0	0	0	0	0
Timaru District	2013	DOG	Boxer	116	58	58	73	87	0	0	0	0	0	0	0	0	0	0	0
Timaru District	2013	DOG	Cattle, Australian	29	14	15	13	8	0	0	0	0	0	0	0	0	0	0	0
Timaru District	2013	DOG	Chihuahua, Long Coat	70	40	30	38	43	0	0	0	0	0	0	0	0	0	0	0
Timaru District	2013	DOG	Chihuahua, Smooth Coat	36	18	18	13	27	0	0	0	0	0	0	0	0	0	0	0
Timaru District	2013	DOG	Collie, Bearded	63	29	34	13	12	0	0	0	0	0	0	0	0	0	0	0
Timaru District	2013	DOG	Collie, Border	385	193	192	144	182	1	0	0	0	0	0	0	0	0	0	0
Timaru District	2013	DOG	Collie, Rough	58	26	32	12	14	0	0	0	0	0	0	0	0	0	0	0
Timaru District	2013	DOG	Collie, Smooth	659	311	348	23	8	0	0	0	0	0	0	0	0	0	0	0
Timaru District	2013	DOG	Greyhound	11	6	5	7	8	0	0	0	0	0	0	0	0	0	0	0
Timaru District	2013	DOG	Heading	102	42	60	3	8	0	0	0	0	0	0	0	0	0	0	0
Timaru District	2013	DOG	Huntaway	327	148	179	35	28	0	0	0	0	0	0	0	0	0	0	0
Timaru District	2013	DOG	Maltese	113	56	57	68	77	0	0	0	0	0	0	0	0	0	0	0
Timaru District	2013	DOG	Poodle, Miniature	29	21	8	20	22	0	0	0	0	0	0	0	0	0	0	0
Timaru District	2013	DOG	Poodle, Toy	48	29	19	18	34	0	0	0	0	0	0	0	0	0	0	0
Timaru District	2013	DOG	Retriever, Golden	182	109	73	96	119	0	0	0	0	0	0	0	0	0	0	0
Timaru District	2013	DOG	Retriever, Labrador	813	424	389	429	502	1	0	0	0	0	0	0	0	0	0	0
Timaru District	2013	DOG	Rottweiler	105	53	52	41	75	0	0	0	0	0	0	0	0	0	0	0
Timaru District	2013	DOG	Schnauzer, Miniature	93	53	40	51	82	0	0	0	0	0	0	0	0	0	0	0
Timaru District	2013	DOG	Shepherd, German	196	93	103	90	133	1	1	0	0	0	0	0	0	0	0	0
Timaru District	2013	DOG	Shih Tzu	30	12	18	16	26	0	0	0	0	0	0	0	0	0	0	0
Timaru District	2013	DOG	Spaniel, Cavalier King Charles	45	28	17	40	33	0	0	0	0	0	0	0	0	0	0	0
Timaru District	2013	DOG	Spaniel, Cocker	121	67	54	75	90	0	0	0	0	0	0	0	0	0	0	0
Timaru District	2013	DOG	Spaniel, English Springer	88	55	33	35	49	0	0	0	0	0	0	0	0	0	0	0
Timaru District	2013	DOG	Terrier, American Pit Bull	9	5	4	8	8	9	0	0	0	0	0	0	0	0	0	0
Timaru District	2013	DOG	Terrier, Fox (Smooth)	268	149	119	163	139	0	0	0	0	0	0	0	0	0	0	0
Timaru District	2013	DOG	Terrier, Jack Russell	482	229	253	257	267	0	0	0	0	0	0	0	0	0	0	0
Timaru District	2013	DOG	Terrier, Staffordshire Bull	222	118	104	119	147	1	0	0	0	0	0	0	0	0	0	0
Timaru District	2013	DOG	Terrier, West Highland White	101	48	53	65	55	0	0	0	0	0	0	0	0	0	0	0
Timaru District	2013	DOG	_Unidentified_	1222	625	597	561	781	7	2	0	0	0	0	0	0	0	0	0
Timaru District	2013	OWN	_	0	0	0	0	0	0	0	0	0	5938	64	0	0	0	0	0
Timaru District	2013	JST	_	0	0	0	0	0	0	0	0	0	0	0	2	0	0	0	0
Timaru District	2013	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	107	22855	25060
Timaru District	2014	DOG	_ALL-PURE_	6290	3215	3075	2762	3506	21	4	0	0	0	0	0	0	0	0	0
Timaru District	2014	DOG	_ALL-CROSS_	2552	1275	1277	1552	1720	30	2	0	0	0	0	0	0	0	0	0
Timaru District	2014	DOG	_ALL-DOGS_	8842	4490	4352	4314	5226	51	6	0	0	0	0	0	0	0	0	0
Timaru District	2014	DOG	Beagle	53	29	24	35	39	0	0	0	0	0	0	0	0	0	0	0
Timaru District	2014	DOG	Bichon Frise	213	97	116	130	138	0	0	0	0	0	0	0	0	0	0	0
Timaru District	2014	DOG	Boxer	103	56	47	69	79	0	0	0	0	0	0	0	0	0	0	0
Timaru District	2014	DOG	Cattle, Australian	29	13	16	11	11	0	0	0	0	0	0	0	0	0	0	0
Timaru District	2014	DOG	Chihuahua, Long Coat	69	39	30	37	51	0	0	0	0	0	0	0	0	0	0	0
Timaru District	2014	DOG	Chihuahua, Smooth Coat	36	18	18	16	28	0	0	0	0	0	0	0	0	0	0	0
Timaru District	2014	DOG	Collie, Bearded	59	26	33	12	13	0	0	0	0	0	0	0	0	0	0	0
Timaru District	2014	DOG	Collie, Border	402	207	195	155	193	1	0	0	0	0	0	0	0	0	0	0
Timaru District	2014	DOG	Collie, Rough	61	29	32	12	18	0	0	0	0	0	0	0	0	0	0	0
Timaru District	2014	DOG	Collie, Smooth	579	281	298	21	9	0	0	0	0	0	0	0	0	0	0	0
Timaru District	2014	DOG	Greyhound	15	8	7	13	13	0	0	0	0	0	0	0	0	0	0	0
Timaru District	2014	DOG	Heading	100	44	56	3	5	0	0	0	0	0	0	0	0	0	0	0
Timaru District	2014	DOG	Huntaway	328	150	178	33	33	0	0	0	0	0	0	0	0	0	0	0
Timaru District	2014	DOG	Maltese	115	57	58	73	84	0	0	0	0	0	0	0	0	0	0	0
Timaru District	2014	DOG	Poodle, Miniature	35	21	14	21	27	0	0	0	0	0	0	0	0	0	0	0
Timaru District	2014	DOG	Poodle, Toy	46	29	17	22	35	0	0	0	0	0	0	0	0	0	0	0
Timaru District	2014	DOG	Retriever, Golden	172	101	71	89	115	0	0	0	0	0	0	0	0	0	0	0
Timaru District	2014	DOG	Retriever, Labrador	836	440	396	427	543	1	0	0	0	0	0	0	0	0	0	0
Timaru District	2014	DOG	Rottweiler	113	56	57	44	87	0	0	0	0	0	0	0	0	0	0	0
Timaru District	2014	DOG	Schnauzer, Miniature	116	64	52	66	103	0	0	0	0	0	0	0	0	0	0	0
Timaru District	2014	DOG	Shepherd, German	195	94	101	85	143	1	1	0	0	0	0	0	0	0	0	0
Timaru District	2014	DOG	Shih Tzu	29	16	13	17	25	0	0	0	0	0	0	0	0	0	0	0
Timaru District	2014	DOG	Spaniel, Cavalier King Charles	44	28	16	39	32	0	0	0	0	0	0	0	0	0	0	0
Timaru District	2014	DOG	Spaniel, Cocker	112	59	53	76	86	0	0	0	0	0	0	0	0	0	0	0
Timaru District	2014	DOG	Spaniel, English Springer	86	53	33	27	54	0	0	0	0	0	0	0	0	0	0	0
Timaru District	2014	DOG	Terrier, American Pit Bull	11	4	7	8	10	11	0	0	0	0	0	0	0	0	0	0
Timaru District	2014	DOG	Terrier, Fox (Smooth)	255	137	118	155	144	0	0	0	0	0	0	0	0	0	0	0
Timaru District	2014	DOG	Terrier, Jack Russell	469	219	250	256	295	0	0	0	0	0	0	0	0	0	0	0
Timaru District	2014	DOG	Terrier, Staffordshire Bull	249	138	111	136	177	1	0	0	0	0	0	0	0	0	0	0
Timaru District	2014	DOG	Terrier, West Highland White	105	51	54	72	59	0	0	0	0	0	0	0	0	0	0	0
Timaru District	2014	DOG	_Unidentified_	1255	651	604	602	857	6	3	0	0	0	0	0	0	0	0	0
Timaru District	2014	OWN	_	0	0	0	0	0	0	0	0	0	6070	87	0	0	0	0	0
Timaru District	2014	JST	_	0	0	0	0	0	0	0	0	0	0	0	3	1	0	0	0
Timaru District	2014	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	125	12994	22092
Timaru District	2015	DOG	_ALL-PURE_	6249	3187	3062	2860	3754	16	4	0	0	0	0	0	0	0	0	0
Timaru District	2015	DOG	_ALL-CROSS_	2571	1303	1268	1630	1834	23	2	0	0	0	0	0	0	0	0	0
Timaru District	2015	DOG	_ALL-DOGS_	8820	4490	4330	4490	5588	39	6	0	0	0	0	0	0	0	0	0
Timaru District	2015	DOG	Beagle	50	27	23	33	37	0	0	0	0	0	0	0	0	0	0	0
Timaru District	2015	DOG	Bichon Frise	212	91	121	134	144	0	0	0	0	0	0	0	0	0	0	0
Timaru District	2015	DOG	Boxer	100	54	46	65	79	0	0	0	0	0	0	0	0	0	0	0
Timaru District	2015	DOG	Cattle, Australian	25	12	13	11	10	0	0	0	0	0	0	0	0	0	0	0
Timaru District	2015	DOG	Chihuahua, Long Coat	66	38	28	35	48	0	0	0	0	0	0	0	0	0	0	0
Timaru District	2015	DOG	Chihuahua, Smooth Coat	49	27	22	22	40	0	0	0	0	0	0	0	0	0	0	0
Timaru District	2015	DOG	Collie, Bearded	58	29	29	15	14	0	0	0	0	0	0	0	0	0	0	0
Timaru District	2015	DOG	Collie, Border	405	210	195	162	200	1	0	0	0	0	0	0	0	0	0	0
Timaru District	2015	DOG	Collie, Rough	57	26	31	11	17	0	0	0	0	0	0	0	0	0	0	0
Timaru District	2015	DOG	Collie, Smooth	533	258	275	19	11	0	0	0	0	0	0	0	0	0	0	0
Timaru District	2015	DOG	Greyhound	19	11	8	13	15	0	0	0	0	0	0	0	0	0	0	0
Timaru District	2015	DOG	Heading	111	52	59	4	8	0	0	0	0	0	0	0	0	0	0	0
Timaru District	2015	DOG	Huntaway	337	166	171	36	45	0	0	0	0	0	0	0	0	0	0	0
Timaru District	2015	DOG	Maltese	112	58	54	72	85	0	0	0	0	0	0	0	0	0	0	0
Timaru District	2015	DOG	Poodle, Miniature	35	19	16	23	30	0	0	0	0	0	0	0	0	0	0	0
Timaru District	2015	DOG	Poodle, Toy	51	32	19	28	40	0	0	0	0	0	0	0	0	0	0	0
Timaru District	2015	DOG	Retriever, Golden	172	103	69	90	126	0	0	0	0	0	0	0	0	0	0	0
Timaru District	2015	DOG	Retriever, Labrador	809	421	388	431	566	1	0	0	0	0	0	0	0	0	0	0
Timaru District	2015	DOG	Rottweiler	110	53	57	46	91	0	0	0	0	0	0	0	0	0	0	0
Timaru District	2015	DOG	Schnauzer, Miniature	128	70	58	84	112	0	0	0	0	0	0	0	0	0	0	0
Timaru District	2015	DOG	Shepherd, German	205	96	109	92	158	1	1	0	0	0	0	0	0	0	0	0
Timaru District	2015	DOG	Shih Tzu	39	22	17	24	34	0	0	0	0	0	0	0	0	0	0	0
Timaru District	2015	DOG	Spaniel, Cavalier King Charles	41	24	17	36	31	0	0	0	0	0	0	0	0	0	0	0
Timaru District	2015	DOG	Spaniel, Cocker	112	57	55	78	94	0	0	0	0	0	0	0	0	0	0	0
Timaru District	2015	DOG	Spaniel, English Springer	90	56	34	35	66	0	0	0	0	0	0	0	0	0	0	0
Timaru District	2015	DOG	Terrier, American Pit Bull	6	3	3	6	6	6	0	0	0	0	0	0	0	0	0	0
Timaru District	2015	DOG	Terrier, Fox (Smooth)	249	133	116	159	154	0	0	0	0	0	0	0	0	0	0	0
Timaru District	2015	DOG	Terrier, Jack Russell	478	216	262	269	315	0	0	0	0	0	0	0	0	0	0	0
Timaru District	2015	DOG	Terrier, Staffordshire Bull	233	124	109	145	180	0	0	0	0	0	0	0	0	0	0	0
Timaru District	2015	DOG	Terrier, West Highland White	97	49	48	64	62	0	0	0	0	0	0	0	0	0	0	0
Timaru District	2015	DOG	_Unidentified_	1260	650	610	618	936	7	3	0	0	0	0	0	0	0	0	0
Timaru District	2015	OWN	_	0	0	0	0	0	0	0	0	0	6079	68	0	0	0	0	0
Timaru District	2015	JST	_	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Timaru District	2015	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	115	15563	16302
Timaru District	2016	DOG	_ALL-PURE_	6177	3133	3044	2907	3964	17	2	0	0	0	0	0	0	0	0	0
Timaru District	2016	DOG	_ALL-CROSS_	2682	1363	1319	1706	2022	22	2	0	0	0	0	0	0	0	0	0
Timaru District	2016	DOG	_ALL-DOGS_	8859	4496	4363	4613	5986	39	4	0	0	0	0	0	0	0	0	0
Timaru District	2016	DOG	Beagle	51	26	25	34	38	0	0	0	0	0	0	0	0	0	0	0
Timaru District	2016	DOG	Bichon Frise	214	97	117	135	154	0	0	0	0	0	0	0	0	0	0	0
Timaru District	2016	DOG	Boxer	94	51	43	64	74	0	0	0	0	0	0	0	0	0	0	0
Timaru District	2016	DOG	Cattle, Australian	25	11	14	12	15	0	0	0	0	0	0	0	0	0	0	0
Timaru District	2016	DOG	Chihuahua, Long Coat	70	41	29	36	54	0	0	0	0	0	0	0	0	0	0	0
Timaru District	2016	DOG	Chihuahua, Smooth Coat	50	29	21	31	42	0	0	0	0	0	0	0	0	0	0	0
Timaru District	2016	DOG	Collie, Bearded	61	35	26	15	15	0	0	0	0	0	0	0	0	0	0	0
Timaru District	2016	DOG	Collie, Border	416	209	207	168	216	1	0	0	0	0	0	0	0	0	0	0
Timaru District	2016	DOG	Collie, Rough	47	21	26	10	16	0	0	0	0	0	0	0	0	0	0	0
Timaru District	2016	DOG	Collie, Smooth	481	242	239	16	9	0	0	0	0	0	0	0	0	0	0	0
Timaru District	2016	DOG	Greyhound	20	11	9	14	16	0	0	0	0	0	0	0	0	0	0	0
Timaru District	2016	DOG	Heading	111	48	63	3	9	0	0	0	0	0	0	0	0	0	0	0
Timaru District	2016	DOG	Huntaway	339	162	177	39	48	0	0	0	0	0	0	0	0	0	0	0
Timaru District	2016	DOG	Maltese	99	54	45	66	79	0	0	0	0	0	0	0	0	0	0	0
Timaru District	2016	DOG	Poodle, Miniature	34	20	14	25	30	0	0	0	0	0	0	0	0	0	0	0
Timaru District	2016	DOG	Poodle, Toy	54	32	22	33	41	0	0	0	0	0	0	0	0	0	0	0
Timaru District	2016	DOG	Retriever, Golden	178	105	73	86	144	0	0	0	0	0	0	0	0	0	0	0
Timaru District	2016	DOG	Retriever, Labrador	781	397	384	436	593	1	0	0	0	0	0	0	0	0	0	0
Timaru District	2016	DOG	Rottweiler	108	55	53	48	94	0	0	0	0	0	0	0	0	0	0	0
Timaru District	2016	DOG	Schnauzer, Miniature	138	79	59	93	124	0	0	0	0	0	0	0	0	0	0	0
Timaru District	2016	DOG	Shepherd, German	205	93	112	86	169	1	0	0	0	0	0	0	0	0	0	0
Timaru District	2016	DOG	Shih Tzu	39	23	16	25	34	0	0	0	0	0	0	0	0	0	0	0
Timaru District	2016	DOG	Spaniel, Cavalier King Charles	45	25	20	35	36	0	0	0	0	0	0	0	0	0	0	0
Timaru District	2016	DOG	Spaniel, Cocker	126	63	63	84	109	0	0	0	0	0	0	0	0	0	0	0
Timaru District	2016	DOG	Spaniel, English Springer	87	52	35	33	66	0	0	0	0	0	0	0	0	0	0	0
Timaru District	2016	DOG	Terrier, American Pit Bull	8	3	5	5	8	8	0	0	0	0	0	0	0	0	0	0
Timaru District	2016	DOG	Terrier, Fox (Smooth)	235	128	107	153	162	0	0	0	0	0	0	0	0	0	0	0
Timaru District	2016	DOG	Terrier, Jack Russell	471	216	255	279	322	0	0	0	0	0	0	0	0	0	0	0
Timaru District	2016	DOG	Terrier, Staffordshire Bull	226	121	105	145	182	0	0	0	0	0	0	0	0	0	0	0
Timaru District	2016	DOG	Terrier, West Highland White	92	47	45	59	64	0	0	0	0	0	0	0	0	0	0	0
Timaru District	2016	DOG	_Unidentified_	1272	637	635	639	1001	6	2	0	0	0	0	0	0	0	0	0
Timaru District	2016	OWN	_	0	0	0	0	0	0	0	0	0	6123	54	0	0	0	0	0
Upper Hutt City	2001	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	22	4124	0
Upper Hutt City	2002	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	27	3111	0
Upper Hutt City	2003	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	30	4444	0
Upper Hutt City	2004	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	81	18873	0
Upper Hutt City	2005	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	82	28501	0
Upper Hutt City	2006	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	87	9157	16754
Upper Hutt City	2007	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	81	8195	12533
Upper Hutt City	2008	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	70	62977	18831
Upper Hutt City	2009	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	72	13198	44184
Upper Hutt City	2010	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	62	7849	26161
Upper Hutt City	2011	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	91	15651	11530
Upper Hutt City	2012	JST	_	0	0	0	0	0	0	0	0	0	0	0	4	1	0	0	0
Upper Hutt City	2012	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	92	52058	52922
Upper Hutt City	2013	DOG	_ALL-PURE_	3136	1509	1627	2161	1931	22	11	0	0	0	0	0	0	0	0	0
Upper Hutt City	2013	DOG	_ALL-CROSS_	2263	1159	1104	1653	1431	44	10	0	0	0	0	0	0	0	0	0
Upper Hutt City	2013	DOG	_ALL-DOGS_	5399	2668	2731	3814	3362	66	21	0	0	0	0	0	0	0	0	0
Upper Hutt City	2013	DOG	Beagle	50	24	26	39	35	0	0	0	0	0	0	0	0	0	0	0
Upper Hutt City	2013	DOG	Bichon Frise	118	42	76	102	88	0	0	0	0	0	0	0	0	0	0	0
Upper Hutt City	2013	DOG	Boxer	61	25	36	47	42	1	0	0	0	0	0	0	0	0	0	0
Upper Hutt City	2013	DOG	Cattle, Australian	35	13	22	19	18	0	0	0	0	0	0	0	0	0	0	0
Upper Hutt City	2013	DOG	Chihuahua, Long Coat	51	25	26	37	31	0	0	0	0	0	0	0	0	0	0	0
Upper Hutt City	2013	DOG	Chihuahua, Smooth Coat	31	17	14	22	10	0	0	0	0	0	0	0	0	0	0	0
Upper Hutt City	2013	DOG	Collie, Bearded	12	8	4	7	6	0	0	0	0	0	0	0	0	0	0	0
Upper Hutt City	2013	DOG	Collie, Border	172	85	87	124	84	1	2	0	0	0	0	0	0	0	0	0
Upper Hutt City	2013	DOG	Collie, Rough	8	3	5	6	5	0	0	0	0	0	0	0	0	0	0	0
Upper Hutt City	2013	DOG	Collie, Smooth	4	1	3	4	1	0	0	0	0	0	0	0	0	0	0	0
Upper Hutt City	2013	DOG	Greyhound	42	26	16	32	34	0	0	0	0	0	0	0	0	0	0	0
Upper Hutt City	2013	DOG	Heading	20	11	9	9	15	0	0	0	0	0	0	0	0	0	0	0
Upper Hutt City	2013	DOG	Huntaway	38	22	16	25	13	0	0	0	0	0	0	0	0	0	0	0
Upper Hutt City	2013	DOG	Maltese	26	9	17	19	18	0	0	0	0	0	0	0	0	0	0	0
Upper Hutt City	2013	DOG	Poodle, Miniature	54	28	26	34	31	0	0	0	0	0	0	0	0	0	0	0
Upper Hutt City	2013	DOG	Poodle, Toy	22	10	12	18	13	0	0	0	0	0	0	0	0	0	0	0
Upper Hutt City	2013	DOG	Retriever, Golden	104	50	54	76	55	0	0	0	0	0	0	0	0	0	0	0
Upper Hutt City	2013	DOG	Retriever, Labrador	427	210	217	307	245	0	0	0	0	0	0	0	0	0	0	0
Upper Hutt City	2013	DOG	Rottweiler	101	50	51	54	76	3	1	0	0	0	0	0	0	0	0	0
Upper Hutt City	2013	DOG	Schnauzer, Miniature	35	15	20	25	28	0	0	0	0	0	0	0	0	0	0	0
Upper Hutt City	2013	DOG	Shepherd, German	225	124	101	108	154	4	0	0	0	0	0	0	0	0	0	0
Upper Hutt City	2013	DOG	Shih Tzu	45	24	21	32	33	0	0	0	0	0	0	0	0	0	0	0
Upper Hutt City	2013	DOG	Spaniel, Cavalier King Charles	66	30	36	42	45	0	0	0	0	0	0	0	0	0	0	0
Upper Hutt City	2013	DOG	Spaniel, Cocker	50	23	27	42	33	0	0	0	0	0	0	0	0	0	0	0
Upper Hutt City	2013	DOG	Spaniel, English Springer	38	18	20	24	20	0	1	0	0	0	0	0	0	0	0	0
Upper Hutt City	2013	DOG	Terrier, American Pit Bull	16	9	7	13	15	10	3	0	0	0	0	0	0	0	0	0
Upper Hutt City	2013	DOG	Terrier, Fox (Smooth)	165	85	80	125	94	0	0	0	0	0	0	0	0	0	0	0
Upper Hutt City	2013	DOG	Terrier, Jack Russell	180	82	98	148	92	0	0	0	0	0	0	0	0	0	0	0
Upper Hutt City	2013	DOG	Terrier, Staffordshire Bull	78	38	40	49	57	0	0	0	0	0	0	0	0	0	0	0
Upper Hutt City	2013	DOG	Terrier, West Highland White	34	17	17	26	21	0	0	0	0	0	0	0	0	0	0	0
Upper Hutt City	2013	DOG	_Unidentified_	828	385	443	546	519	3	4	0	0	0	0	0	0	0	0	0
Upper Hutt City	2013	OWN	_	0	0	0	0	0	0	0	0	2	4104	60	0	0	0	0	0
Upper Hutt City	2013	JST	_	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Upper Hutt City	2013	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	124	73769	20334
Upper Hutt City	2014	DOG	_ALL-PURE_	3084	1480	1604	2108	2044	19	7	0	0	0	0	0	0	0	0	0
Upper Hutt City	2014	DOG	_ALL-CROSS_	2310	1161	1149	1733	1573	38	10	0	0	0	0	0	0	0	0	0
Upper Hutt City	2014	DOG	_ALL-DOGS_	5394	2641	2753	3841	3617	57	17	0	0	0	0	0	0	0	0	0
Upper Hutt City	2014	DOG	Beagle	47	23	24	37	33	0	0	0	0	0	0	0	0	0	0	0
Upper Hutt City	2014	DOG	Bichon Frise	119	41	78	102	93	0	0	0	0	0	0	0	0	0	0	0
Upper Hutt City	2014	DOG	Boxer	58	24	34	45	43	1	0	0	0	0	0	0	0	0	0	0
Upper Hutt City	2014	DOG	Cattle, Australian	35	14	21	22	17	0	0	0	0	0	0	0	0	0	0	0
Upper Hutt City	2014	DOG	Chihuahua, Long Coat	58	27	31	40	38	0	0	0	0	0	0	0	0	0	0	0
Upper Hutt City	2014	DOG	Chihuahua, Smooth Coat	36	21	15	28	16	0	0	0	0	0	0	0	0	0	0	0
Upper Hutt City	2014	DOG	Collie, Bearded	10	5	5	6	6	0	0	0	0	0	0	0	0	0	0	0
Upper Hutt City	2014	DOG	Collie, Border	158	82	76	113	91	0	1	0	0	0	0	0	0	0	0	0
Upper Hutt City	2014	DOG	Collie, Rough	5	2	3	4	2	0	0	0	0	0	0	0	0	0	0	0
Upper Hutt City	2014	DOG	Collie, Smooth	3	0	3	3	1	0	0	0	0	0	0	0	0	0	0	0
Upper Hutt City	2014	DOG	Greyhound	38	20	18	33	31	0	0	0	0	0	0	0	0	0	0	0
Upper Hutt City	2014	DOG	Heading	17	9	8	7	13	0	0	0	0	0	0	0	0	0	0	0
Upper Hutt City	2014	DOG	Huntaway	40	22	18	30	19	0	0	0	0	0	0	0	0	0	0	0
Upper Hutt City	2014	DOG	Maltese	19	5	14	16	15	0	0	0	0	0	0	0	0	0	0	0
Upper Hutt City	2014	DOG	Poodle, Miniature	45	23	22	29	26	0	0	0	0	0	0	0	0	0	0	0
Upper Hutt City	2014	DOG	Poodle, Toy	24	11	13	19	18	0	0	0	0	0	0	0	0	0	0	0
Upper Hutt City	2014	DOG	Retriever, Golden	105	52	53	75	62	0	0	0	0	0	0	0	0	0	0	0
Upper Hutt City	2014	DOG	Retriever, Labrador	421	201	220	300	260	0	0	0	0	0	0	0	0	0	0	0
Upper Hutt City	2014	DOG	Rottweiler	112	59	53	57	86	3	0	0	0	0	0	0	0	0	0	0
Upper Hutt City	2014	DOG	Schnauzer, Miniature	45	22	23	22	35	0	0	0	0	0	0	0	0	0	0	0
Upper Hutt City	2014	DOG	Shepherd, German	226	133	93	104	168	4	0	0	0	0	0	0	0	0	0	0
Upper Hutt City	2014	DOG	Shih Tzu	54	25	29	38	40	0	0	0	0	0	0	0	0	0	0	0
Upper Hutt City	2014	DOG	Spaniel, Cavalier King Charles	66	32	34	45	47	0	0	0	0	0	0	0	0	0	0	0
Upper Hutt City	2014	DOG	Spaniel, Cocker	50	22	28	40	35	0	0	0	0	0	0	0	0	0	0	0
Upper Hutt City	2014	DOG	Spaniel, English Springer	38	17	21	26	23	0	0	0	0	0	0	0	0	0	0	0
Upper Hutt City	2014	DOG	Terrier, American Pit Bull	14	8	6	12	14	8	2	0	0	0	0	0	0	0	0	0
Upper Hutt City	2014	DOG	Terrier, Fox (Smooth)	156	77	79	118	93	0	0	0	0	0	0	0	0	0	0	0
Upper Hutt City	2014	DOG	Terrier, Jack Russell	172	80	92	136	96	0	0	0	0	0	0	0	0	0	0	0
Upper Hutt City	2014	DOG	Terrier, Staffordshire Bull	84	44	40	56	64	0	0	0	0	0	0	0	0	0	0	0
Upper Hutt City	2014	DOG	Terrier, West Highland White	32	15	17	28	23	0	0	0	0	0	0	0	0	0	0	0
Upper Hutt City	2014	DOG	_Unidentified_	797	364	433	517	536	3	4	0	0	0	0	0	0	0	0	0
Upper Hutt City	2014	OWN	_	0	0	0	0	0	0	0	0	1	4112	58	0	0	0	0	0
Upper Hutt City	2014	JST	_	0	0	0	0	0	0	0	0	0	0	0	1	1	0	0	0
Upper Hutt City	2014	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	97	40940	39606
Upper Hutt City	2015	DOG	_ALL-PURE_	3104	1522	1582	2132	2160	18	7	0	0	0	0	0	0	0	0	0
Upper Hutt City	2015	DOG	_ALL-CROSS_	2406	1234	1172	1861	1718	30	8	0	0	0	0	0	0	0	0	0
Upper Hutt City	2015	DOG	_ALL-DOGS_	5510	2756	2754	3993	3878	48	15	0	0	0	0	0	0	0	0	0
Upper Hutt City	2015	DOG	Beagle	46	23	23	38	34	0	0	0	0	0	0	0	0	0	0	0
Upper Hutt City	2015	DOG	Bichon Frise	113	41	72	100	87	0	0	0	0	0	0	0	0	0	0	0
Upper Hutt City	2015	DOG	Boxer	53	24	29	43	41	1	0	0	0	0	0	0	0	0	0	0
Upper Hutt City	2015	DOG	Cattle, Australian	35	14	21	22	16	0	0	0	0	0	0	0	0	0	0	0
Upper Hutt City	2015	DOG	Chihuahua, Long Coat	53	29	24	33	34	0	0	0	0	0	0	0	0	0	0	0
Upper Hutt City	2015	DOG	Chihuahua, Smooth Coat	33	17	16	26	16	0	0	0	0	0	0	0	0	0	0	0
Upper Hutt City	2015	DOG	Collie, Bearded	19	13	6	9	9	0	0	0	0	0	0	0	0	0	0	0
Upper Hutt City	2015	DOG	Collie, Border	155	83	72	108	101	0	1	0	0	0	0	0	0	0	0	0
Upper Hutt City	2015	DOG	Collie, Rough	8	3	5	6	5	0	0	0	0	0	0	0	0	0	0	0
Upper Hutt City	2015	DOG	Collie, Smooth	6	3	3	4	1	0	0	0	0	0	0	0	0	0	0	0
Upper Hutt City	2015	DOG	Greyhound	39	19	20	36	32	0	0	0	0	0	0	0	0	0	0	0
Upper Hutt City	2015	DOG	Heading	22	12	10	11	17	0	0	0	0	0	0	0	0	0	0	0
Upper Hutt City	2015	DOG	Huntaway	35	21	14	24	16	0	0	0	0	0	0	0	0	0	0	0
Upper Hutt City	2015	DOG	Maltese	22	7	15	18	18	0	0	0	0	0	0	0	0	0	0	0
Upper Hutt City	2015	DOG	Poodle, Miniature	44	21	23	31	29	0	0	0	0	0	0	0	0	0	0	0
Upper Hutt City	2015	DOG	Poodle, Toy	17	7	10	16	14	0	0	0	0	0	0	0	0	0	0	0
Upper Hutt City	2015	DOG	Retriever, Golden	102	52	50	73	62	0	0	0	0	0	0	0	0	0	0	0
Upper Hutt City	2015	DOG	Retriever, Labrador	418	202	216	298	284	0	0	0	0	0	0	0	0	0	0	0
Upper Hutt City	2015	DOG	Rottweiler	107	56	51	57	90	3	0	0	0	0	0	0	0	0	0	0
Upper Hutt City	2015	DOG	Schnauzer, Miniature	58	28	30	33	48	0	0	0	0	0	0	0	0	0	0	0
Upper Hutt City	2015	DOG	Shepherd, German	200	124	76	90	153	2	0	0	0	0	0	0	0	0	0	0
Upper Hutt City	2015	DOG	Shih Tzu	62	31	31	45	45	0	0	0	0	0	0	0	0	0	0	0
Upper Hutt City	2015	DOG	Spaniel, Cavalier King Charles	62	29	33	46	43	0	0	0	0	0	0	0	0	0	0	0
Upper Hutt City	2015	DOG	Spaniel, Cocker	44	19	25	36	32	0	0	0	0	0	0	0	0	0	0	0
Upper Hutt City	2015	DOG	Spaniel, English Springer	39	14	25	27	25	0	0	0	0	0	0	0	0	0	0	0
Upper Hutt City	2015	DOG	Terrier, American Pit Bull	13	6	7	8	11	9	0	0	0	0	0	0	0	0	0	0
Upper Hutt City	2015	DOG	Terrier, Fox (Smooth)	151	71	80	117	94	0	0	0	0	0	0	0	0	0	0	0
Upper Hutt City	2015	DOG	Terrier, Jack Russell	171	84	87	140	106	1	0	0	0	0	0	0	0	0	0	0
Upper Hutt City	2015	DOG	Terrier, Staffordshire Bull	95	50	45	62	74	0	0	0	0	0	0	0	0	0	0	0
Upper Hutt City	2015	DOG	Terrier, West Highland White	34	17	17	30	25	0	0	0	0	0	0	0	0	0	0	0
Upper Hutt City	2015	DOG	_Unidentified_	848	402	446	545	598	2	6	0	0	0	0	0	0	0	0	0
Upper Hutt City	2015	OWN	_	0	0	0	0	0	0	0	0	1	4199	42	0	0	0	0	0
Upper Hutt City	2015	JST	_	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Upper Hutt City	2015	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	104	24582	82649
Upper Hutt City	2016	DOG	_ALL-PURE_	3142	1531	1611	2189	2302	14	5	0	0	0	0	0	0	0	0	0
Upper Hutt City	2016	DOG	_ALL-CROSS_	2455	1248	1207	1909	1829	25	6	0	0	0	0	0	0	0	0	0
Upper Hutt City	2016	DOG	_ALL-DOGS_	5597	2779	2818	4098	4131	39	11	0	0	0	0	0	0	0	0	0
Upper Hutt City	2016	DOG	Beagle	42	17	25	34	33	0	0	0	0	0	0	0	0	0	0	0
Upper Hutt City	2016	DOG	Bichon Frise	110	38	72	100	88	0	0	0	0	0	0	0	0	0	0	0
Upper Hutt City	2016	DOG	Boxer	48	18	30	37	39	1	0	0	0	0	0	0	0	0	0	0
Upper Hutt City	2016	DOG	Cattle, Australian	36	16	20	22	20	0	0	0	0	0	0	0	0	0	0	0
Upper Hutt City	2016	DOG	Chihuahua, Long Coat	50	26	24	36	36	0	0	0	0	0	0	0	0	0	0	0
Upper Hutt City	2016	DOG	Chihuahua, Smooth Coat	37	20	17	29	20	0	0	0	0	0	0	0	0	0	0	0
Upper Hutt City	2016	DOG	Collie, Bearded	20	13	7	11	10	0	0	0	0	0	0	0	0	0	0	0
Upper Hutt City	2016	DOG	Collie, Border	171	90	81	111	122	0	0	0	0	0	0	0	0	0	0	0
Upper Hutt City	2016	DOG	Collie, Rough	8	2	6	7	5	0	0	0	0	0	0	0	0	0	0	0
Upper Hutt City	2016	DOG	Collie, Smooth	2	0	2	2	1	0	0	0	0	0	0	0	0	0	0	0
Upper Hutt City	2016	DOG	Greyhound	41	19	22	38	33	0	0	0	0	0	0	0	0	0	0	0
Upper Hutt City	2016	DOG	Heading	21	13	8	11	14	0	0	0	0	0	0	0	0	0	0	0
Upper Hutt City	2016	DOG	Huntaway	43	22	21	28	21	0	0	0	0	0	0	0	0	0	0	0
Upper Hutt City	2016	DOG	Maltese	21	8	13	15	17	0	0	0	0	0	0	0	0	0	0	0
Upper Hutt City	2016	DOG	Poodle, Miniature	41	21	20	27	25	0	0	0	0	0	0	0	0	0	0	0
Upper Hutt City	2016	DOG	Poodle, Toy	20	6	14	17	15	0	0	0	0	0	0	0	0	0	0	0
Upper Hutt City	2016	DOG	Retriever, Golden	103	55	48	73	69	0	0	0	0	0	0	0	0	0	0	0
Upper Hutt City	2016	DOG	Retriever, Labrador	406	191	215	304	295	0	0	0	0	0	0	0	0	0	0	0
Upper Hutt City	2016	DOG	Rottweiler	111	57	54	61	95	2	0	0	0	0	0	0	0	0	0	0
Upper Hutt City	2016	DOG	Schnauzer, Miniature	63	31	32	40	55	0	0	0	0	0	0	0	0	0	0	0
Upper Hutt City	2016	DOG	Shepherd, German	216	140	76	99	175	2	0	0	0	0	0	0	0	0	0	0
Upper Hutt City	2016	DOG	Shih Tzu	66	33	33	53	47	0	0	0	0	0	0	0	0	0	0	0
Upper Hutt City	2016	DOG	Spaniel, Cavalier King Charles	62	27	35	42	48	0	0	0	0	0	0	0	0	0	0	0
Upper Hutt City	2016	DOG	Spaniel, Cocker	45	16	29	39	35	0	0	0	0	0	0	0	0	0	0	0
Upper Hutt City	2016	DOG	Spaniel, English Springer	44	16	28	29	29	0	0	0	0	0	0	0	0	0	0	0
Upper Hutt City	2016	DOG	Terrier, American Pit Bull	10	6	4	7	9	6	0	0	0	0	0	0	0	0	0	0
Upper Hutt City	2016	DOG	Terrier, Fox (Smooth)	153	75	78	118	99	0	0	0	0	0	0	0	0	0	0	0
Upper Hutt City	2016	DOG	Terrier, Jack Russell	170	76	94	136	106	1	0	0	0	0	0	0	0	0	0	0
Upper Hutt City	2016	DOG	Terrier, Staffordshire Bull	101	51	50	72	84	0	0	0	0	0	0	0	0	0	0	0
Upper Hutt City	2016	DOG	Terrier, West Highland White	32	15	17	26	25	0	0	0	0	0	0	0	0	0	0	0
Upper Hutt City	2016	DOG	_Unidentified_	849	413	436	565	632	2	5	0	0	0	0	0	0	0	0	0
Upper Hutt City	2016	OWN	_	0	0	0	0	0	0	0	0	0	4242	38	0	0	0	0	0
Waikato District	2001	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	34	7750	0
Waikato District	2002	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	46	9069	0
Waikato District	2003	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	47	17776	0
Waikato District	2004	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	98	14750	0
Waikato District	2005	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	135	32058	0
Waikato District	2006	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	176	97817	47016
Waikato District	2007	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	165	30585	65701
Waikato District	2008	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	157	42069	40048
Waikato District	2009	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	164	68888	78188
Waikato District	2010	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	145	41343	53758
Waikato District	2011	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	188	34681	35649
Waikato District	2012	JST	_	0	0	0	0	0	0	0	0	0	0	0	4	2	0	0	0
Waikato District	2012	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	153	36942	34246
Waikato District	2013	DOG	_ALL-PURE_	9166	4787	4379	3645	3962	72	3	0	0	0	0	0	0	0	0	0
Waikato District	2013	DOG	_ALL-CROSS_	3624	1871	1753	1912	1990	66	2	0	0	0	0	0	0	0	0	0
Waikato District	2013	DOG	_ALL-DOGS_	12790	6658	6132	5557	5952	138	5	0	0	0	0	0	0	0	0	0
Waikato District	2013	DOG	Beagle	48	25	23	36	30	0	0	0	0	0	0	0	0	0	0	0
Waikato District	2013	DOG	Bichon Frise	90	56	34	47	46	0	0	0	0	0	0	0	0	0	0	0
Waikato District	2013	DOG	Boxer	139	65	74	95	83	0	0	0	0	0	0	0	0	0	0	0
Waikato District	2013	DOG	Cattle, Australian	296	155	141	96	66	0	0	0	0	0	0	0	0	0	0	0
Waikato District	2013	DOG	Chihuahua, Long Coat	78	39	39	31	50	0	0	0	0	0	0	0	0	0	0	0
Waikato District	2013	DOG	Chihuahua, Smooth Coat	50	29	21	22	23	0	0	0	0	0	0	0	0	0	0	0
Waikato District	2013	DOG	Collie, Bearded	123	64	59	38	25	0	0	0	0	0	0	0	0	0	0	0
Waikato District	2013	DOG	Collie, Border	564	321	243	238	225	0	0	0	0	0	0	0	0	0	0	0
Waikato District	2013	DOG	Collie, Rough	21	14	7	6	13	0	0	0	0	0	0	0	0	0	0	0
Waikato District	2013	DOG	Collie, Smooth	8	3	5	1	5	0	0	0	0	0	0	0	0	0	0	0
Waikato District	2013	DOG	Greyhound	197	89	108	20	64	0	0	0	0	0	0	0	0	0	0	0
Waikato District	2013	DOG	Heading	658	352	306	63	38	0	0	0	0	0	0	0	0	0	0	0
Waikato District	2013	DOG	Huntaway	946	426	520	149	74	0	0	0	0	0	0	0	0	0	0	0
Waikato District	2013	DOG	Maltese	61	38	23	22	33	0	0	0	0	0	0	0	0	0	0	0
Waikato District	2013	DOG	Poodle, Miniature	44	21	23	28	25	0	0	0	0	0	0	0	0	0	0	0
Waikato District	2013	DOG	Poodle, Toy	62	27	35	28	28	0	0	0	0	0	0	0	0	0	0	0
Waikato District	2013	DOG	Retriever, Golden	191	100	91	117	90	0	0	0	0	0	0	0	0	0	0	0
Waikato District	2013	DOG	Retriever, Labrador	1217	659	558	594	657	2	0	0	0	0	0	0	0	0	0	0
Waikato District	2013	DOG	Rottweiler	225	113	112	96	139	2	1	0	0	0	0	0	0	0	0	0
Waikato District	2013	DOG	Schnauzer, Miniature	81	40	41	43	56	0	0	0	0	0	0	0	0	0	0	0
Waikato District	2013	DOG	Shepherd, German	395	194	201	181	213	0	0	0	0	0	0	0	0	0	0	0
Waikato District	2013	DOG	Shih Tzu	60	30	30	22	42	0	0	0	0	0	0	0	0	0	0	0
Waikato District	2013	DOG	Spaniel, Cavalier King Charles	40	25	15	14	21	0	0	0	0	0	0	0	0	0	0	0
Waikato District	2013	DOG	Spaniel, Cocker	93	51	42	44	53	0	0	0	0	0	0	0	0	0	0	0
Waikato District	2013	DOG	Spaniel, English Springer	64	26	38	33	32	0	0	0	0	0	0	0	0	0	0	0
Waikato District	2013	DOG	Terrier, American Pit Bull	85	37	48	47	72	48	1	0	0	0	0	0	0	0	0	0
Waikato District	2013	DOG	Terrier, Fox (Smooth)	449	256	193	273	246	1	0	0	0	0	0	0	0	0	0	0
Waikato District	2013	DOG	Terrier, Jack Russell	386	189	197	240	192	1	0	0	0	0	0	0	0	0	0	0
Waikato District	2013	DOG	Terrier, Staffordshire Bull	162	80	82	65	97	5	0	0	0	0	0	0	0	0	0	0
Waikato District	2013	DOG	Terrier, West Highland White	65	37	28	29	30	0	0	0	0	0	0	0	0	0	0	0
Waikato District	2013	DOG	_Unidentified_	2268	1226	1042	927	1194	13	1	0	0	0	0	0	0	0	0	0
Waikato District	2013	OWN	_	0	0	0	0	0	0	0	0	13	7976	116	0	0	0	0	0
Waikato District	2013	JST	_	0	0	0	0	0	0	0	0	0	0	0	2	1	0	0	0
Waikato District	2013	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	178	35980	40414
Waikato District	2014	DOG	_ALL-PURE_	9171	4777	4394	3607	4207	95	2	0	0	0	0	0	0	0	0	0
Waikato District	2014	DOG	_ALL-CROSS_	3917	1989	1928	2087	2192	91	2	0	0	0	0	0	0	0	0	0
Waikato District	2014	DOG	_ALL-DOGS_	13088	6766	6322	5694	6399	186	4	0	0	0	0	0	0	0	0	0
Waikato District	2014	DOG	Beagle	54	27	27	38	31	0	0	0	0	0	0	0	0	0	0	0
Waikato District	2014	DOG	Bichon Frise	94	55	39	54	58	0	0	0	0	0	0	0	0	0	0	0
Waikato District	2014	DOG	Boxer	129	63	66	84	82	0	0	0	0	0	0	0	0	0	0	0
Waikato District	2014	DOG	Cattle, Australian	275	141	134	84	63	0	0	0	0	0	0	0	0	0	0	0
Waikato District	2014	DOG	Chihuahua, Long Coat	68	32	36	29	40	0	0	0	0	0	0	0	0	0	0	0
Waikato District	2014	DOG	Chihuahua, Smooth Coat	55	33	22	21	21	0	0	0	0	0	0	0	0	0	0	0
Waikato District	2014	DOG	Collie, Bearded	122	65	57	37	27	0	0	0	0	0	0	0	0	0	0	0
Waikato District	2014	DOG	Collie, Border	578	334	244	259	241	0	0	0	0	0	0	0	0	0	0	0
Waikato District	2014	DOG	Collie, Rough	23	13	10	7	12	0	0	0	0	0	0	0	0	0	0	0
Waikato District	2014	DOG	Collie, Smooth	2	0	2	0	1	0	0	0	0	0	0	0	0	0	0	0
Waikato District	2014	DOG	Greyhound	212	93	119	22	87	0	0	0	0	0	0	0	0	0	0	0
Waikato District	2014	DOG	Heading	665	373	292	65	41	0	0	0	0	0	0	0	0	0	0	0
Waikato District	2014	DOG	Huntaway	932	392	540	138	85	0	0	0	0	0	0	0	0	0	0	0
Waikato District	2014	DOG	Maltese	53	33	20	23	31	0	0	0	0	0	0	0	0	0	0	0
Waikato District	2014	DOG	Poodle, Miniature	45	18	27	24	30	0	0	0	0	0	0	0	0	0	0	0
Waikato District	2014	DOG	Poodle, Toy	69	34	35	31	32	0	0	0	0	0	0	0	0	0	0	0
Waikato District	2014	DOG	Retriever, Golden	176	89	87	108	96	0	0	0	0	0	0	0	0	0	0	0
Waikato District	2014	DOG	Retriever, Labrador	1209	636	573	591	716	2	0	0	0	0	0	0	0	0	0	0
Waikato District	2014	DOG	Rottweiler	225	117	108	83	148	1	1	0	0	0	0	0	0	0	0	0
Waikato District	2014	DOG	Schnauzer, Miniature	90	46	44	46	65	0	0	0	0	0	0	0	0	0	0	0
Waikato District	2014	DOG	Shepherd, German	414	217	197	186	234	2	0	0	0	0	0	0	0	0	0	0
Waikato District	2014	DOG	Shih Tzu	73	37	36	36	53	0	0	0	0	0	0	0	0	0	0	0
Waikato District	2014	DOG	Spaniel, Cavalier King Charles	39	24	15	15	23	0	0	0	0	0	0	0	0	0	0	0
Waikato District	2014	DOG	Spaniel, Cocker	95	52	43	46	56	0	0	0	0	0	0	0	0	0	0	0
Waikato District	2014	DOG	Spaniel, English Springer	63	28	35	31	33	0	0	0	0	0	0	0	0	0	0	0
Waikato District	2014	DOG	Terrier, American Pit Bull	79	37	42	48	69	73	0	0	0	0	0	0	0	0	0	0
Waikato District	2014	DOG	Terrier, Fox (Smooth)	447	252	195	272	256	1	0	0	0	0	0	0	0	0	0	0
Waikato District	2014	DOG	Terrier, Jack Russell	381	181	200	232	193	0	0	0	0	0	0	0	0	0	0	0
Waikato District	2014	DOG	Terrier, Staffordshire Bull	176	94	82	71	117	3	0	0	0	0	0	0	0	0	0	0
Waikato District	2014	DOG	Terrier, West Highland White	76	45	31	32	35	0	0	0	0	0	0	0	0	0	0	0
Waikato District	2014	DOG	_Unidentified_	2252	1216	1036	894	1231	13	1	0	0	0	0	0	0	0	0	0
Waikato District	2014	OWN	_	0	0	0	0	0	0	0	0	9	8141	111	0	0	0	0	0
Waikato District	2014	JST	_	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Waikato District	2014	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	190	43962	36782
Waikato District	2015	DOG	_ALL-PURE_	9599	5004	4595	3856	4682	97	5	0	0	0	0	0	0	0	0	0
Waikato District	2015	DOG	_ALL-CROSS_	4264	2147	2117	2340	2523	90	3	0	0	0	0	0	0	0	0	0
Waikato District	2015	DOG	_ALL-DOGS_	13863	7151	6712	6196	7205	187	8	0	0	0	0	0	0	0	0	0
Waikato District	2015	DOG	Beagle	52	23	29	37	31	0	0	0	0	0	0	0	0	0	0	0
Waikato District	2015	DOG	Bichon Frise	95	52	43	56	60	0	0	0	0	0	0	0	0	0	0	0
Waikato District	2015	DOG	Boxer	138	66	72	93	98	0	0	0	0	0	0	0	0	0	0	0
Waikato District	2015	DOG	Cattle, Australian	278	149	129	90	72	0	0	0	0	0	0	0	0	0	0	0
Waikato District	2015	DOG	Chihuahua, Long Coat	87	44	43	33	48	0	0	0	0	0	0	0	0	0	0	0
Waikato District	2015	DOG	Chihuahua, Smooth Coat	80	42	38	32	27	0	0	0	0	0	0	0	0	0	0	0
Waikato District	2015	DOG	Collie, Bearded	122	64	58	41	32	0	0	0	0	0	0	0	0	0	0	0
Waikato District	2015	DOG	Collie, Border	591	334	257	266	262	1	0	0	0	0	0	0	0	0	0	0
Waikato District	2015	DOG	Collie, Rough	20	13	7	5	11	0	0	0	0	0	0	0	0	0	0	0
Waikato District	2015	DOG	Collie, Smooth	4	1	3	0	2	0	0	0	0	0	0	0	0	0	0	0
Waikato District	2015	DOG	Greyhound	257	118	139	44	133	0	0	0	0	0	0	0	0	0	0	0
Waikato District	2015	DOG	Heading	688	378	310	76	50	0	0	0	0	0	0	0	0	0	0	0
Waikato District	2015	DOG	Huntaway	967	421	546	159	93	0	0	0	0	0	0	0	0	0	0	0
Waikato District	2015	DOG	Maltese	66	39	27	29	40	0	0	0	0	0	0	0	0	0	0	0
Waikato District	2015	DOG	Poodle, Miniature	46	20	26	28	31	0	0	0	0	0	0	0	0	0	0	0
Waikato District	2015	DOG	Poodle, Toy	72	36	36	33	36	0	0	0	0	0	0	0	0	0	0	0
Waikato District	2015	DOG	Retriever, Golden	167	91	76	104	107	0	0	0	0	0	0	0	0	0	0	0
Waikato District	2015	DOG	Retriever, Labrador	1260	667	593	615	781	3	0	0	0	0	0	0	0	0	0	0
Waikato District	2015	DOG	Rottweiler	258	136	122	100	169	1	2	0	0	0	0	0	0	0	0	0
Waikato District	2015	DOG	Schnauzer, Miniature	98	49	49	47	69	0	0	0	0	0	0	0	0	0	0	0
Waikato District	2015	DOG	Shepherd, German	417	222	195	192	268	3	0	0	0	0	0	0	0	0	0	0
Waikato District	2015	DOG	Shih Tzu	90	46	44	46	66	0	0	0	0	0	0	0	0	0	0	0
Waikato District	2015	DOG	Spaniel, Cavalier King Charles	39	25	14	18	26	0	0	0	0	0	0	0	0	0	0	0
Waikato District	2015	DOG	Spaniel, Cocker	88	50	38	48	52	0	0	0	0	0	0	0	0	0	0	0
Waikato District	2015	DOG	Spaniel, English Springer	64	31	33	30	34	0	0	0	0	0	0	0	0	0	0	0
Waikato District	2015	DOG	Terrier, American Pit Bull	94	40	54	53	72	71	0	0	0	0	0	0	0	0	0	0
Waikato District	2015	DOG	Terrier, Fox (Smooth)	456	252	204	271	263	2	0	0	0	0	0	0	0	0	0	0
Waikato District	2015	DOG	Terrier, Jack Russell	391	189	202	235	200	0	0	0	0	0	0	0	0	0	0	0
Waikato District	2015	DOG	Terrier, Staffordshire Bull	201	102	99	94	143	4	1	0	0	0	0	0	0	0	0	0
Waikato District	2015	DOG	Terrier, West Highland White	80	49	31	37	36	0	0	0	0	0	0	0	0	0	0	0
Waikato District	2015	DOG	_Unidentified_	2333	1255	1078	944	1370	12	2	0	0	0	0	0	0	0	0	0
Waikato District	2015	OWN	_	0	0	0	0	0	0	0	0	7	8591	101	0	0	0	0	0
Waikato District	2015	JST	_	0	0	0	0	0	0	0	0	0	0	0	9	3	0	0	0
Waikato District	2015	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	202	65226	70850
Waikato District	2016	DOG	_ALL-PURE_	9135	4765	4370	3866	4764	79	3	0	0	0	0	0	0	0	0	0
Waikato District	2016	DOG	_ALL-CROSS_	4402	2192	2210	2571	2730	91	2	0	0	0	0	0	0	0	0	0
Waikato District	2016	DOG	_ALL-DOGS_	13537	6957	6580	6437	7494	170	5	0	0	0	0	0	0	0	0	0
Waikato District	2016	DOG	Beagle	49	30	19	30	36	0	0	0	0	0	0	0	0	0	0	0
Waikato District	2016	DOG	Bichon Frise	83	46	37	56	55	0	0	0	0	0	0	0	0	0	0	0
Waikato District	2016	DOG	Boxer	140	70	70	93	107	0	0	0	0	0	0	0	0	0	0	0
Waikato District	2016	DOG	Cattle, Australian	240	122	118	81	77	0	1	0	0	0	0	0	0	0	0	0
Waikato District	2016	DOG	Chihuahua, Long Coat	91	49	42	45	51	0	0	0	0	0	0	0	0	0	0	0
Waikato District	2016	DOG	Chihuahua, Smooth Coat	76	36	40	34	31	0	0	0	0	0	0	0	0	0	0	0
Waikato District	2016	DOG	Collie, Bearded	111	62	49	32	30	0	0	0	0	0	0	0	0	0	0	0
Waikato District	2016	DOG	Collie, Border	567	325	242	270	273	1	0	0	0	0	0	0	0	0	0	0
Waikato District	2016	DOG	Collie, Rough	22	15	7	7	13	0	0	0	0	0	0	0	0	0	0	0
Waikato District	2016	DOG	Collie, Smooth	5	2	3	0	3	0	0	0	0	0	0	0	0	0	0	0
Waikato District	2016	DOG	Greyhound	256	113	143	83	134	0	0	0	0	0	0	0	0	0	0	0
Waikato District	2016	DOG	Heading	645	362	283	72	46	1	0	0	0	0	0	0	0	0	0	0
Waikato District	2016	DOG	Huntaway	912	413	499	169	102	0	0	0	0	0	0	0	0	0	0	0
Waikato District	2016	DOG	Maltese	71	41	30	29	37	0	0	0	0	0	0	0	0	0	0	0
Waikato District	2016	DOG	Poodle, Miniature	42	16	26	31	26	0	0	0	0	0	0	0	0	0	0	0
Waikato District	2016	DOG	Poodle, Toy	65	33	32	33	33	0	0	0	0	0	0	0	0	0	0	0
Waikato District	2016	DOG	Retriever, Golden	158	81	77	100	112	0	0	0	0	0	0	0	0	0	0	0
Waikato District	2016	DOG	Retriever, Labrador	1193	626	567	593	787	4	0	0	0	0	0	0	0	0	0	0
Waikato District	2016	DOG	Rottweiler	244	120	124	100	171	1	0	0	0	0	0	0	0	0	0	0
Waikato District	2016	DOG	Schnauzer, Miniature	99	50	49	46	68	0	0	0	0	0	0	0	0	0	0	0
Waikato District	2016	DOG	Shepherd, German	421	236	185	188	310	2	0	0	0	0	0	0	0	0	0	0
Waikato District	2016	DOG	Shih Tzu	93	45	48	54	67	0	0	0	0	0	0	0	0	0	0	0
Waikato District	2016	DOG	Spaniel, Cavalier King Charles	39	24	15	16	29	0	0	0	0	0	0	0	0	0	0	0
Waikato District	2016	DOG	Spaniel, Cocker	72	42	30	41	49	0	0	0	0	0	0	0	0	0	0	0
Waikato District	2016	DOG	Spaniel, English Springer	62	32	30	27	37	0	0	0	0	0	0	0	0	0	0	0
Waikato District	2016	DOG	Terrier, American Pit Bull	72	33	39	45	63	54	0	0	0	0	0	0	0	0	0	0
Waikato District	2016	DOG	Terrier, Fox (Smooth)	428	239	189	267	254	1	0	0	0	0	0	0	0	0	0	0
Waikato District	2016	DOG	Terrier, Jack Russell	351	168	183	235	200	0	0	0	0	0	0	0	0	0	0	0
Waikato District	2016	DOG	Terrier, Staffordshire Bull	205	96	109	102	146	4	1	0	0	0	0	0	0	0	0	0
Waikato District	2016	DOG	Terrier, West Highland White	67	39	28	34	37	0	0	0	0	0	0	0	0	0	0	0
Waikato District	2016	DOG	_Unidentified_	2256	1199	1057	953	1380	11	1	0	0	0	0	0	0	0	0	0
Waikato District	2016	OWN	_	0	0	0	0	0	0	0	0	12	9998	102	0	0	0	0	0
Waimakariri District	2001	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	22	1588	0
Waimakariri District	2002	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	25	4801	0
Waimakariri District	2003	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	30	6023	0
Waimakariri District	2004	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	58	5919	0
Waimakariri District	2005	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	70	18134	0
Waimakariri District	2006	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	78	14468	11946
Waimakariri District	2007	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	89	14247	13791
Waimakariri District	2008	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	84	32815	14685
Waimakariri District	2009	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	94	15751	22982
Waimakariri District	2010	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	99	13568	19404
Waimakariri District	2011	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	100	18905	27922
Waimakariri District	2012	JST	_	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Waimakariri District	2012	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	105	12824	12210
Waimakariri District	2013	DOG	_ALL-PURE_	7910	4093	3817	4447	4033	23	5	0	0	0	0	0	0	0	0	0
Waimakariri District	2013	DOG	_ALL-CROSS_	2858	1406	1452	2078	1673	30	7	0	0	0	0	0	0	0	0	0
Waimakariri District	2013	DOG	_ALL-DOGS_	10768	5499	5269	6525	5706	53	12	0	0	0	0	0	0	0	0	0
Waimakariri District	2013	DOG	Beagle	55	25	30	43	28	0	0	0	0	0	0	0	0	0	0	0
Waimakariri District	2013	DOG	Bichon Frise	284	153	131	201	183	0	0	0	0	0	0	0	0	0	0	0
Waimakariri District	2013	DOG	Boxer	133	65	68	82	82	0	0	0	0	0	0	0	0	0	0	0
Waimakariri District	2013	DOG	Cattle, Australian	55	26	29	37	24	0	0	0	0	0	0	0	0	0	0	0
Waimakariri District	2013	DOG	Chihuahua, Long Coat	59	29	30	32	45	0	0	0	0	0	0	0	0	0	0	0
Waimakariri District	2013	DOG	Chihuahua, Smooth Coat	47	27	20	38	39	0	0	0	0	0	0	0	0	0	0	0
Waimakariri District	2013	DOG	Collie, Bearded	107	55	52	52	36	0	0	0	0	0	0	0	0	0	0	0
Waimakariri District	2013	DOG	Collie, Border	960	518	442	410	281	1	0	0	0	0	0	0	0	0	0	0
Waimakariri District	2013	DOG	Collie, Rough	28	13	15	10	7	1	0	0	0	0	0	0	0	0	0	0
Waimakariri District	2013	DOG	Collie, Smooth	29	16	13	7	2	0	0	0	0	0	0	0	0	0	0	0
Waimakariri District	2013	DOG	Greyhound	329	181	148	52	178	0	0	0	0	0	0	0	0	0	0	0
Waimakariri District	2013	DOG	Heading	102	60	42	24	6	0	0	0	0	0	0	0	0	0	0	0
Waimakariri District	2013	DOG	Huntaway	341	160	181	105	69	0	0	0	0	0	0	0	0	0	0	0
Waimakariri District	2013	DOG	Maltese	80	38	42	55	46	0	0	0	0	0	0	0	0	0	0	0
Waimakariri District	2013	DOG	Poodle, Miniature	71	36	35	50	42	0	0	0	0	0	0	0	0	0	0	0
Waimakariri District	2013	DOG	Poodle, Toy	75	51	24	54	46	0	0	0	0	0	0	0	0	0	0	0
Waimakariri District	2013	DOG	Retriever, Golden	252	124	128	171	148	0	0	0	0	0	0	0	0	0	0	0
Waimakariri District	2013	DOG	Retriever, Labrador	874	451	423	576	506	3	1	0	0	0	0	0	0	0	0	0
Waimakariri District	2013	DOG	Rottweiler	111	47	64	52	63	2	0	0	0	0	0	0	0	0	0	0
Waimakariri District	2013	DOG	Schnauzer, Miniature	79	41	38	59	61	0	0	0	0	0	0	0	0	0	0	0
Waimakariri District	2013	DOG	Shepherd, German	278	152	126	150	158	4	1	0	0	0	0	0	0	0	0	0
Waimakariri District	2013	DOG	Shih Tzu	36	15	21	21	29	0	0	0	0	0	0	0	0	0	0	0
Waimakariri District	2013	DOG	Spaniel, Cavalier King Charles	81	40	41	49	57	0	0	0	0	0	0	0	0	0	0	0
Waimakariri District	2013	DOG	Spaniel, Cocker	174	89	85	113	112	0	0	0	0	0	0	0	0	0	0	0
Waimakariri District	2013	DOG	Spaniel, English Springer	100	53	47	52	64	0	0	0	0	0	0	0	0	0	0	0
Waimakariri District	2013	DOG	Terrier, American Pit Bull	9	4	5	8	5	8	0	0	0	0	0	0	0	0	0	0
Waimakariri District	2013	DOG	Terrier, Fox (Smooth)	300	154	146	216	147	0	0	0	0	0	0	0	0	0	0	0
Waimakariri District	2013	DOG	Terrier, Jack Russell	544	270	274	390	262	1	1	0	0	0	0	0	0	0	0	0
Waimakariri District	2013	DOG	Terrier, Staffordshire Bull	187	98	89	112	108	1	0	0	0	0	0	0	0	0	0	0
Waimakariri District	2013	DOG	Terrier, West Highland White	116	60	56	78	75	0	0	0	0	0	0	0	0	0	0	0
Waimakariri District	2013	DOG	_Unidentified_	2014	1042	972	1148	1124	2	2	0	0	0	0	0	0	0	0	0
Waimakariri District	2013	OWN	_	0	0	0	0	0	0	0	0	0	6772	89	0	0	0	0	0
Waimakariri District	2013	JST	_	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Waimakariri District	2013	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	120	29481	23288
Waimakariri District	2014	DOG	_ALL-PURE_	8060	4100	3960	4682	4537	25	4	0	0	0	0	0	0	0	0	0
Waimakariri District	2014	DOG	_ALL-CROSS_	3148	1546	1602	2345	1961	33	6	0	0	0	0	0	0	0	0	0
Waimakariri District	2014	DOG	_ALL-DOGS_	11208	5646	5562	7027	6498	58	10	0	0	0	0	0	0	0	0	0
Waimakariri District	2014	DOG	Beagle	55	26	29	44	31	0	0	0	0	0	0	0	0	0	0	0
Waimakariri District	2014	DOG	Bichon Frise	285	140	145	210	193	0	0	0	0	0	0	0	0	0	0	0
Waimakariri District	2014	DOG	Boxer	137	71	66	85	91	0	0	0	0	0	0	0	0	0	0	0
Waimakariri District	2014	DOG	Cattle, Australian	50	24	26	34	22	0	0	0	0	0	0	0	0	0	0	0
Waimakariri District	2014	DOG	Chihuahua, Long Coat	62	26	36	36	43	0	0	0	0	0	0	0	0	0	0	0
Waimakariri District	2014	DOG	Chihuahua, Smooth Coat	53	33	20	39	42	0	0	0	0	0	0	0	0	0	0	0
Waimakariri District	2014	DOG	Collie, Bearded	108	54	54	52	38	0	0	0	0	0	0	0	0	0	0	0
Waimakariri District	2014	DOG	Collie, Border	943	497	446	414	304	1	0	0	0	0	0	0	0	0	0	0
Waimakariri District	2014	DOG	Collie, Rough	29	16	13	10	12	1	0	0	0	0	0	0	0	0	0	0
Waimakariri District	2014	DOG	Collie, Smooth	31	19	12	8	2	0	0	0	0	0	0	0	0	0	0	0
Waimakariri District	2014	DOG	Greyhound	397	213	184	65	284	0	0	0	0	0	0	0	0	0	0	0
Waimakariri District	2014	DOG	Heading	103	55	48	27	10	0	0	0	0	0	0	0	0	0	0	0
Waimakariri District	2014	DOG	Huntaway	321	146	175	115	74	0	0	0	0	0	0	0	0	0	0	0
Waimakariri District	2014	DOG	Maltese	79	36	43	57	49	0	0	0	0	0	0	0	0	0	0	0
Waimakariri District	2014	DOG	Poodle, Miniature	70	34	36	46	47	0	0	0	0	0	0	0	0	0	0	0
Waimakariri District	2014	DOG	Poodle, Toy	77	48	29	52	48	0	0	0	0	0	0	0	0	0	0	0
Waimakariri District	2014	DOG	Retriever, Golden	257	129	128	180	163	0	0	0	0	0	0	0	0	0	0	0
Waimakariri District	2014	DOG	Retriever, Labrador	905	456	449	620	562	3	0	0	0	0	0	0	0	0	0	0
Waimakariri District	2014	DOG	Rottweiler	105	48	57	48	67	2	0	0	0	0	0	0	0	0	0	0
Waimakariri District	2014	DOG	Schnauzer, Miniature	92	46	46	68	76	0	0	0	0	0	0	0	0	0	0	0
Waimakariri District	2014	DOG	Shepherd, German	277	145	132	150	185	4	1	0	0	0	0	0	0	0	0	0
Waimakariri District	2014	DOG	Shih Tzu	46	16	30	32	34	0	0	0	0	0	0	0	0	0	0	0
Waimakariri District	2014	DOG	Spaniel, Cavalier King Charles	76	38	38	49	53	0	0	0	0	0	0	0	0	0	0	0
Waimakariri District	2014	DOG	Spaniel, Cocker	168	84	84	115	114	0	0	0	0	0	0	0	0	0	0	0
Waimakariri District	2014	DOG	Spaniel, English Springer	108	57	51	57	77	0	0	0	0	0	0	0	0	0	0	0
Waimakariri District	2014	DOG	Terrier, American Pit Bull	11	5	6	9	8	9	0	0	0	0	0	0	0	0	0	0
Waimakariri District	2014	DOG	Terrier, Fox (Smooth)	298	152	146	220	158	0	0	0	0	0	0	0	0	0	0	0
Waimakariri District	2014	DOG	Terrier, Jack Russell	552	276	276	400	295	1	1	0	0	0	0	0	0	0	0	0
Waimakariri District	2014	DOG	Terrier, Staffordshire Bull	206	105	101	130	129	1	0	0	0	0	0	0	0	0	0	0
Waimakariri District	2014	DOG	Terrier, West Highland White	116	58	58	89	81	0	0	0	0	0	0	0	0	0	0	0
Waimakariri District	2014	DOG	_Unidentified_	2043	1047	996	1221	1245	3	2	0	0	0	0	0	0	0	0	0
Waimakariri District	2014	OWN	_	0	0	0	0	0	0	0	0	0	7077	69	0	0	0	0	0
Waimakariri District	2014	JST	_	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Waimakariri District	2014	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	124	60132	45684
Waimakariri District	2015	DOG	_ALL-PURE_	8128	4128	4000	4776	5006	23	4	0	0	0	0	0	0	0	0	0
Waimakariri District	2015	DOG	_ALL-CROSS_	3367	1653	1714	2533	2271	30	7	0	0	0	0	0	0	0	0	0
Waimakariri District	2015	DOG	_ALL-DOGS_	11495	5781	5714	7309	7277	53	11	0	0	0	0	0	0	0	0	0
Waimakariri District	2015	DOG	Beagle	49	23	26	38	32	0	0	0	0	0	0	0	0	0	0	0
Waimakariri District	2015	DOG	Bichon Frise	282	134	148	217	208	0	0	0	0	0	0	0	0	0	0	0
Waimakariri District	2015	DOG	Boxer	140	71	69	88	98	0	0	0	0	0	0	0	0	0	0	0
Waimakariri District	2015	DOG	Cattle, Australian	50	25	25	31	22	0	0	0	0	0	0	0	0	0	0	0
Waimakariri District	2015	DOG	Chihuahua, Long Coat	70	31	39	43	52	0	0	0	0	0	0	0	0	0	0	0
Waimakariri District	2015	DOG	Chihuahua, Smooth Coat	57	35	22	44	46	0	0	0	0	0	0	0	0	0	0	0
Waimakariri District	2015	DOG	Collie, Bearded	100	46	54	50	37	0	0	0	0	0	0	0	0	0	0	0
Waimakariri District	2015	DOG	Collie, Border	889	471	418	402	332	1	0	0	0	0	0	0	0	0	0	0
Waimakariri District	2015	DOG	Collie, Rough	31	18	13	9	17	1	0	0	0	0	0	0	0	0	0	0
Waimakariri District	2015	DOG	Collie, Smooth	33	18	15	6	2	0	0	0	0	0	0	0	0	0	0	0
Waimakariri District	2015	DOG	Greyhound	486	255	231	94	385	0	0	0	0	0	0	0	0	0	0	0
Waimakariri District	2015	DOG	Heading	119	60	59	25	13	0	0	0	0	0	0	0	0	0	0	0
Waimakariri District	2015	DOG	Huntaway	332	154	178	115	80	0	0	0	0	0	0	0	0	0	0	0
Waimakariri District	2015	DOG	Maltese	74	35	39	52	50	0	0	0	0	0	0	0	0	0	0	0
Waimakariri District	2015	DOG	Poodle, Miniature	65	35	30	44	46	0	0	0	0	0	0	0	0	0	0	0
Waimakariri District	2015	DOG	Poodle, Toy	81	50	31	56	55	0	0	0	0	0	0	0	0	0	0	0
Waimakariri District	2015	DOG	Retriever, Golden	231	111	120	172	161	0	0	0	0	0	0	0	0	0	0	0
Waimakariri District	2015	DOG	Retriever, Labrador	899	450	449	632	617	3	0	0	0	0	0	0	0	0	0	0
Waimakariri District	2015	DOG	Rottweiler	104	46	58	55	74	0	0	0	0	0	0	0	0	0	0	0
Waimakariri District	2015	DOG	Schnauzer, Miniature	105	52	53	79	92	0	0	0	0	0	0	0	0	0	0	0
Waimakariri District	2015	DOG	Shepherd, German	260	137	123	145	193	4	2	0	0	0	0	0	0	0	0	0
Waimakariri District	2015	DOG	Shih Tzu	49	19	30	36	35	0	0	0	0	0	0	0	0	0	0	0
Waimakariri District	2015	DOG	Spaniel, Cavalier King Charles	83	43	40	54	62	0	0	0	0	0	0	0	0	0	0	0
Waimakariri District	2015	DOG	Spaniel, Cocker	169	88	81	120	124	0	0	0	0	0	0	0	0	0	0	0
Waimakariri District	2015	DOG	Spaniel, English Springer	118	62	56	61	90	0	0	0	0	0	0	0	0	0	0	0
Waimakariri District	2015	DOG	Terrier, American Pit Bull	9	4	5	8	7	8	0	0	0	0	0	0	0	0	0	0
Waimakariri District	2015	DOG	Terrier, Fox (Smooth)	288	145	143	213	172	0	0	0	0	0	0	0	0	0	0	0
Waimakariri District	2015	DOG	Terrier, Jack Russell	535	268	267	399	306	1	1	0	0	0	0	0	0	0	0	0
Waimakariri District	2015	DOG	Terrier, Staffordshire Bull	219	106	113	143	153	2	0	0	0	0	0	0	0	0	0	0
Waimakariri District	2015	DOG	Terrier, West Highland White	113	61	52	85	82	0	0	0	0	0	0	0	0	0	0	0
Waimakariri District	2015	DOG	_Unidentified_	2088	1075	1013	1260	1363	3	1	0	0	0	0	0	0	0	0	0
Waimakariri District	2015	OWN	_	0	0	0	0	0	0	0	0	0	7265	57	0	0	0	0	0
Waimakariri District	2015	JST	_	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Waimakariri District	2015	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	121	35222	63148
Waimakariri District	2016	DOG	_ALL-PURE_	8059	4058	4001	4843	5417	22	6	0	0	0	0	0	0	0	0	0
Waimakariri District	2016	DOG	_ALL-CROSS_	3677	1806	1871	2800	2669	36	8	0	0	0	0	0	0	0	0	0
Waimakariri District	2016	DOG	_ALL-DOGS_	11736	5864	5872	7643	8086	58	14	0	0	0	0	0	0	0	0	0
Waimakariri District	2016	DOG	Beagle	49	23	26	36	36	0	0	0	0	0	0	0	0	0	0	0
Waimakariri District	2016	DOG	Bichon Frise	283	137	146	225	215	0	0	0	0	0	0	0	0	0	0	0
Waimakariri District	2016	DOG	Boxer	127	61	66	80	97	0	0	0	0	0	0	0	0	0	0	0
Waimakariri District	2016	DOG	Cattle, Australian	51	26	25	28	26	0	0	0	0	0	0	0	0	0	0	0
Waimakariri District	2016	DOG	Chihuahua, Long Coat	82	36	46	49	63	0	0	0	0	0	0	0	0	0	0	0
Waimakariri District	2016	DOG	Chihuahua, Smooth Coat	66	38	28	43	51	0	0	0	0	0	0	0	0	0	0	0
Waimakariri District	2016	DOG	Collie, Bearded	101	46	55	52	41	0	0	0	0	0	0	0	0	0	0	0
Waimakariri District	2016	DOG	Collie, Border	840	431	409	402	357	2	0	0	0	0	0	0	0	0	0	0
Waimakariri District	2016	DOG	Collie, Rough	26	14	12	8	18	1	0	0	0	0	0	0	0	0	0	0
Waimakariri District	2016	DOG	Collie, Smooth	28	14	14	6	2	0	0	0	0	0	0	0	0	0	0	0
Waimakariri District	2016	DOG	Greyhound	428	229	199	62	350	0	0	0	0	0	0	0	0	0	0	0
Waimakariri District	2016	DOG	Heading	112	53	59	27	18	0	0	0	0	0	0	0	0	0	0	0
Waimakariri District	2016	DOG	Huntaway	343	166	177	126	96	0	0	0	0	0	0	0	0	0	0	0
Waimakariri District	2016	DOG	Maltese	80	39	41	59	54	0	0	0	0	0	0	0	0	0	0	0
Waimakariri District	2016	DOG	Poodle, Miniature	66	34	32	47	50	0	0	0	0	0	0	0	0	0	0	0
Waimakariri District	2016	DOG	Poodle, Toy	80	54	26	53	60	0	0	0	0	0	0	0	0	0	0	0
Waimakariri District	2016	DOG	Retriever, Golden	231	111	120	163	173	0	0	0	0	0	0	0	0	0	0	0
Waimakariri District	2016	DOG	Retriever, Labrador	905	451	454	651	671	2	0	0	0	0	0	0	0	0	0	0
Waimakariri District	2016	DOG	Rottweiler	111	52	59	62	86	0	0	0	0	0	0	0	0	0	0	0
Waimakariri District	2016	DOG	Schnauzer, Miniature	107	57	50	82	98	0	0	0	0	0	0	0	0	0	0	0
Waimakariri District	2016	DOG	Shepherd, German	277	142	135	167	216	4	3	0	0	0	0	0	0	0	0	0
Waimakariri District	2016	DOG	Shih Tzu	65	24	41	50	53	0	0	0	0	0	0	0	0	0	0	0
Waimakariri District	2016	DOG	Spaniel, Cavalier King Charles	83	44	39	51	67	0	0	0	0	0	0	0	0	0	0	0
Waimakariri District	2016	DOG	Spaniel, Cocker	175	90	85	129	134	0	0	0	0	0	0	0	0	0	0	0
Waimakariri District	2016	DOG	Spaniel, English Springer	113	61	52	58	86	0	0	0	0	0	0	0	0	0	0	0
Waimakariri District	2016	DOG	Terrier, American Pit Bull	10	5	5	9	8	8	1	0	0	0	0	0	0	0	0	0
Waimakariri District	2016	DOG	Terrier, Fox (Smooth)	266	135	131	204	179	0	0	0	0	0	0	0	0	0	0	0
Waimakariri District	2016	DOG	Terrier, Jack Russell	526	262	264	388	351	0	1	0	0	0	0	0	0	0	0	0
Waimakariri District	2016	DOG	Terrier, Staffordshire Bull	221	112	109	159	170	1	0	0	0	0	0	0	0	0	0	0
Waimakariri District	2016	DOG	Terrier, West Highland White	110	56	54	87	89	0	0	0	0	0	0	0	0	0	0	0
Waimakariri District	2016	DOG	_Unidentified_	2097	1055	1042	1280	1502	4	1	0	0	0	0	0	0	0	0	0
Waimakariri District	2016	OWN	_	0	0	0	0	0	0	0	0	0	7526	75	0	0	0	0	0
Waimate District	2001	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	4	6959	0
Waimate District	2002	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	4	120	0
Waimate District	2003	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	6	5671	0
Waimate District	2004	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	5	1366	0
Waimate District	2005	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	13	888	0
Waimate District	2006	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	13	1182	1610
Waimate District	2007	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	8	4665	3382
Waimate District	2008	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	20	8347	12134
Waimate District	2009	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	14	761	758
Waimate District	2010	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	9	584	716
Waimate District	2011	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	22	3130	3152
Waimate District	2012	JST	_	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Waimate District	2012	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	21	16273	14849
Waimate District	2013	DOG	_ALL-PURE_	2495	1214	1281	187	741	9	0	0	0	0	0	0	0	0	0	0
Waimate District	2013	DOG	_ALL-CROSS_	567	271	296	93	315	3	1	0	0	0	0	0	0	0	0	0
Waimate District	2013	DOG	_ALL-DOGS_	3062	1485	1577	280	1056	12	1	0	0	0	0	0	0	0	0	0
Waimate District	2013	DOG	Beagle	12	5	7	3	8	0	0	0	0	0	0	0	0	0	0	0
Waimate District	2013	DOG	Bichon Frise	35	21	14	8	27	0	0	0	0	0	0	0	0	0	0	0
Waimate District	2013	DOG	Boxer	20	12	8	3	12	1	0	0	0	0	0	0	0	0	0	0
Waimate District	2013	DOG	Cattle, Australian	9	2	7	2	0	0	0	0	0	0	0	0	0	0	0	0
Waimate District	2013	DOG	Chihuahua, Long Coat	7	2	5	0	7	0	0	0	0	0	0	0	0	0	0	0
Waimate District	2013	DOG	Chihuahua, Smooth Coat	9	6	3	1	5	0	0	0	0	0	0	0	0	0	0	0
Waimate District	2013	DOG	Collie, Bearded	57	25	32	2	2	0	0	0	0	0	0	0	0	0	0	0
Waimate District	2013	DOG	Collie, Border	126	63	63	6	25	0	0	0	0	0	0	0	0	0	0	0
Waimate District	2013	DOG	Collie, Rough	8	5	3	0	0	0	0	0	0	0	0	0	0	0	0	0
Waimate District	2013	DOG	Collie, Smooth	586	266	320	9	4	0	0	0	0	0	0	0	0	0	0	0
Waimate District	2013	DOG	Greyhound	15	8	7	1	12	0	0	0	0	0	0	0	0	0	0	0
Waimate District	2013	DOG	Heading	110	54	56	1	0	0	0	0	0	0	0	0	0	0	0	0
Waimate District	2013	DOG	Huntaway	319	131	188	13	10	0	0	0	0	0	0	0	0	0	0	0
Waimate District	2013	DOG	Maltese	13	6	7	0	10	0	0	0	0	0	0	0	0	0	0	0
Waimate District	2013	DOG	Poodle, Miniature	8	4	4	2	6	0	0	0	0	0	0	0	0	0	0	0
Waimate District	2013	DOG	Poodle, Toy	10	7	3	3	7	0	0	0	0	0	0	0	0	0	0	0
Waimate District	2013	DOG	Retriever, Golden	56	29	27	2	30	0	0	0	0	0	0	0	0	0	0	0
Waimate District	2013	DOG	Retriever, Labrador	242	119	123	25	112	0	0	0	0	0	0	0	0	0	0	0
Waimate District	2013	DOG	Rottweiler	14	8	6	1	10	0	0	0	0	0	0	0	0	0	0	0
Waimate District	2013	DOG	Schnauzer, Miniature	11	4	7	1	8	0	0	0	0	0	0	0	0	0	0	0
Waimate District	2013	DOG	Shepherd, German	37	16	21	6	21	0	0	0	0	0	0	0	0	0	0	0
Waimate District	2013	DOG	Shih Tzu	12	6	6	3	5	0	0	0	0	0	0	0	0	0	0	0
Waimate District	2013	DOG	Spaniel, Cavalier King Charles	5	3	2	0	4	0	0	0	0	0	0	0	0	0	0	0
Waimate District	2013	DOG	Spaniel, Cocker	34	19	15	0	18	0	0	0	0	0	0	0	0	0	0	0
Waimate District	2013	DOG	Spaniel, English Springer	25	12	13	2	11	0	0	0	0	0	0	0	0	0	0	0
Waimate District	2013	DOG	Terrier, American Pit Bull	4	3	1	1	4	4	0	0	0	0	0	0	0	0	0	0
Waimate District	2013	DOG	Terrier, Fox (Smooth)	87	43	44	17	37	0	0	0	0	0	0	0	0	0	0	0
Waimate District	2013	DOG	Terrier, Jack Russell	133	59	74	18	61	0	0	0	0	0	0	0	0	0	0	0
Waimate District	2013	DOG	Terrier, Staffordshire Bull	54	34	20	3	35	0	0	0	0	0	0	0	0	0	0	0
Waimate District	2013	DOG	Terrier, West Highland White	28	20	8	2	22	0	0	0	0	0	0	0	0	0	0	0
Waimate District	2013	DOG	_Unidentified_	409	222	187	52	228	4	0	0	0	0	0	0	0	0	0	0
Waimate District	2013	OWN	_	0	0	0	0	0	0	0	0	0	1477	27	0	0	0	0	0
Waimate District	2013	JST	_	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Waimate District	2013	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	16	2273	3762
Waimate District	2014	DOG	_ALL-PURE_	2382	1161	1221	164	804	14	0	0	0	0	0	0	0	0	0	0
Waimate District	2014	DOG	_ALL-CROSS_	595	291	304	96	349	9	1	0	0	0	0	0	0	0	0	0
Waimate District	2014	DOG	_ALL-DOGS_	2977	1452	1525	260	1153	23	1	0	0	0	0	0	0	0	0	0
Waimate District	2014	DOG	Beagle	9	4	5	2	7	0	0	0	0	0	0	0	0	0	0	0
Waimate District	2014	DOG	Bichon Frise	35	23	12	7	28	0	0	0	0	0	0	0	0	0	0	0
Waimate District	2014	DOG	Boxer	17	11	6	3	10	1	0	0	0	0	0	0	0	0	0	0
Waimate District	2014	DOG	Cattle, Australian	10	2	8	2	1	0	0	0	0	0	0	0	0	0	0	0
Waimate District	2014	DOG	Chihuahua, Long Coat	6	2	4	1	6	0	0	0	0	0	0	0	0	0	0	0
Waimate District	2014	DOG	Chihuahua, Smooth Coat	11	7	4	2	6	0	0	0	0	0	0	0	0	0	0	0
Waimate District	2014	DOG	Collie, Bearded	48	19	29	1	4	0	0	0	0	0	0	0	0	0	0	0
Waimate District	2014	DOG	Collie, Border	123	52	71	4	29	0	0	0	0	0	0	0	0	0	0	0
Waimate District	2014	DOG	Collie, Rough	8	4	4	0	0	0	0	0	0	0	0	0	0	0	0	0
Waimate District	2014	DOG	Collie, Smooth	510	236	274	6	4	0	0	0	0	0	0	0	0	0	0	0
Waimate District	2014	DOG	Greyhound	15	8	7	1	12	0	0	0	0	0	0	0	0	0	0	0
Waimate District	2014	DOG	Heading	122	62	60	1	1	0	0	0	0	0	0	0	0	0	0	0
Waimate District	2014	DOG	Huntaway	307	126	181	10	11	0	0	0	0	0	0	0	0	0	0	0
Waimate District	2014	DOG	Maltese	15	7	8	2	13	0	0	0	0	0	0	0	0	0	0	0
Waimate District	2014	DOG	Poodle, Miniature	9	4	5	2	7	0	0	0	0	0	0	0	0	0	0	0
Waimate District	2014	DOG	Poodle, Toy	10	7	3	3	7	0	0	0	0	0	0	0	0	0	0	0
Waimate District	2014	DOG	Retriever, Golden	52	25	27	6	32	0	0	0	0	0	0	0	0	0	0	0
Waimate District	2014	DOG	Retriever, Labrador	227	120	107	20	119	1	0	0	0	0	0	0	0	0	0	0
Waimate District	2014	DOG	Rottweiler	17	8	9	1	11	1	0	0	0	0	0	0	0	0	0	0
Waimate District	2014	DOG	Schnauzer, Miniature	12	3	9	1	10	0	0	0	0	0	0	0	0	0	0	0
Waimate District	2014	DOG	Shepherd, German	39	17	22	5	26	0	0	0	0	0	0	0	0	0	0	0
Waimate District	2014	DOG	Shih Tzu	13	8	5	2	6	0	0	0	0	0	0	0	0	0	0	0
Waimate District	2014	DOG	Spaniel, Cavalier King Charles	5	3	2	0	4	0	0	0	0	0	0	0	0	0	0	0
Waimate District	2014	DOG	Spaniel, Cocker	32	18	14	0	17	0	0	0	0	0	0	0	0	0	0	0
Waimate District	2014	DOG	Spaniel, English Springer	27	13	14	2	14	0	0	0	0	0	0	0	0	0	0	0
Waimate District	2014	DOG	Terrier, American Pit Bull	4	1	3	1	3	4	0	0	0	0	0	0	0	0	0	0
Waimate District	2014	DOG	Terrier, Fox (Smooth)	80	43	37	14	36	0	0	0	0	0	0	0	0	0	0	0
Waimate District	2014	DOG	Terrier, Jack Russell	132	58	74	15	65	0	0	0	0	0	0	0	0	0	0	0
Waimate District	2014	DOG	Terrier, Staffordshire Bull	53	35	18	5	34	1	0	0	0	0	0	0	0	0	0	0
Waimate District	2014	DOG	Terrier, West Highland White	27	21	6	3	22	0	0	0	0	0	0	0	0	0	0	0
Waimate District	2014	DOG	_Unidentified_	407	214	193	42	259	6	0	0	0	0	0	0	0	0	0	0
Waimate District	2014	OWN	_	0	0	0	0	0	0	0	0	0	1461	33	0	0	0	0	0
Waimate District	2014	JST	_	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Waimate District	2014	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	29	4317	4149
Waimate District	2015	DOG	_ALL-PURE_	2292	1111	1181	171	902	16	3	0	0	0	0	0	0	0	0	0
Waimate District	2015	DOG	_ALL-CROSS_	610	306	304	106	416	8	2	0	0	0	0	0	0	0	0	0
Waimate District	2015	DOG	_ALL-DOGS_	2902	1417	1485	277	1318	24	5	0	0	0	0	0	0	0	0	0
Waimate District	2015	DOG	Beagle	8	3	5	2	6	0	0	0	0	0	0	0	0	0	0	0
Waimate District	2015	DOG	Bichon Frise	37	22	15	9	31	0	0	0	0	0	0	0	0	0	0	0
Waimate District	2015	DOG	Boxer	16	11	5	2	12	1	0	0	0	0	0	0	0	0	0	0
Waimate District	2015	DOG	Cattle, Australian	8	1	7	2	1	0	0	0	0	0	0	0	0	0	0	0
Waimate District	2015	DOG	Chihuahua, Long Coat	9	5	4	1	9	0	0	0	0	0	0	0	0	0	0	0
Waimate District	2015	DOG	Chihuahua, Smooth Coat	17	8	9	5	15	0	0	0	0	0	0	0	0	0	0	0
Waimate District	2015	DOG	Collie, Bearded	30	15	15	1	2	0	0	0	0	0	0	0	0	0	0	0
Waimate District	2015	DOG	Collie, Border	118	54	64	10	34	0	0	0	0	0	0	0	0	0	0	0
Waimate District	2015	DOG	Collie, Rough	7	5	2	0	1	0	0	0	0	0	0	0	0	0	0	0
Waimate District	2015	DOG	Collie, Smooth	456	201	255	5	4	0	0	0	0	0	0	0	0	0	0	0
Waimate District	2015	DOG	Greyhound	13	7	6	1	11	0	0	0	0	0	0	0	0	0	0	0
Waimate District	2015	DOG	Heading	127	65	62	0	2	0	0	0	0	0	0	0	0	0	0	0
Waimate District	2015	DOG	Huntaway	322	136	186	10	16	0	0	0	0	0	0	0	0	0	0	0
Waimate District	2015	DOG	Maltese	16	6	10	2	13	0	0	0	0	0	0	0	0	0	0	0
Waimate District	2015	DOG	Poodle, Miniature	10	4	6	2	8	0	0	0	0	0	0	0	0	0	0	0
Waimate District	2015	DOG	Poodle, Toy	9	7	2	4	7	0	0	0	0	0	0	0	0	0	0	0
Waimate District	2015	DOG	Retriever, Golden	45	22	23	5	30	0	0	0	0	0	0	0	0	0	0	0
Waimate District	2015	DOG	Retriever, Labrador	222	111	111	15	127	2	0	0	0	0	0	0	0	0	0	0
Waimate District	2015	DOG	Rottweiler	16	8	8	1	14	1	0	0	0	0	0	0	0	0	0	0
Waimate District	2015	DOG	Schnauzer, Miniature	12	5	7	1	11	0	0	0	0	0	0	0	0	0	0	0
Waimate District	2015	DOG	Shepherd, German	30	13	17	2	23	0	0	0	0	0	0	0	0	0	0	0
Waimate District	2015	DOG	Shih Tzu	10	6	4	3	6	0	0	0	0	0	0	0	0	0	0	0
Waimate District	2015	DOG	Spaniel, Cavalier King Charles	3	2	1	0	2	0	0	0	0	0	0	0	0	0	0	0
Waimate District	2015	DOG	Spaniel, Cocker	27	14	13	1	18	0	0	0	0	0	0	0	0	0	0	0
Waimate District	2015	DOG	Spaniel, English Springer	29	16	13	3	18	0	0	0	0	0	0	0	0	0	0	0
Waimate District	2015	DOG	Terrier, American Pit Bull	6	4	2	2	5	4	2	0	0	0	0	0	0	0	0	0
Waimate District	2015	DOG	Terrier, Fox (Smooth)	73	39	34	12	38	0	0	0	0	0	0	0	0	0	0	0
Waimate District	2015	DOG	Terrier, Jack Russell	116	50	66	15	70	1	0	0	0	0	0	0	0	0	0	0
Waimate District	2015	DOG	Terrier, Staffordshire Bull	54	35	19	4	38	1	0	0	0	0	0	0	0	0	0	0
Waimate District	2015	DOG	Terrier, West Highland White	28	22	6	4	25	0	0	0	0	0	0	0	0	0	0	0
Waimate District	2015	DOG	_Unidentified_	418	214	204	47	305	6	1	0	0	0	0	0	0	0	0	0
Waimate District	2015	OWN	_	0	0	0	0	0	0	0	0	0	1442	25	0	0	0	0	0
Waimate District	2015	JST	_	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Waimate District	2015	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	17	2492	2660
Waimate District	2016	DOG	_ALL-PURE_	2300	1133	1167	500	940	11	4	0	0	0	0	0	0	0	0	0
Waimate District	2016	DOG	_ALL-CROSS_	635	323	312	285	426	7	5	0	0	0	0	0	0	0	0	0
Waimate District	2016	DOG	_ALL-DOGS_	2935	1456	1479	785	1366	18	9	0	0	0	0	0	0	0	0	0
Waimate District	2016	DOG	Beagle	7	3	4	3	6	0	0	0	0	0	0	0	0	0	0	0
Waimate District	2016	DOG	Bichon Frise	32	19	13	25	29	0	0	0	0	0	0	0	0	0	0	0
Waimate District	2016	DOG	Boxer	17	12	5	6	14	1	0	0	0	0	0	0	0	0	0	0
Waimate District	2016	DOG	Cattle, Australian	7	1	6	1	1	0	0	0	0	0	0	0	0	0	0	0
Waimate District	2016	DOG	Chihuahua, Long Coat	11	6	5	6	10	0	0	0	0	0	0	0	0	0	0	0
Waimate District	2016	DOG	Chihuahua, Smooth Coat	19	10	9	10	16	0	0	0	0	0	0	0	0	0	0	0
Waimate District	2016	DOG	Collie, Bearded	34	19	15	6	6	0	0	0	0	0	0	0	0	0	0	0
Waimate District	2016	DOG	Collie, Border	114	57	57	27	38	0	0	0	0	0	0	0	0	0	0	0
Waimate District	2016	DOG	Collie, Rough	8	6	2	1	1	0	0	0	0	0	0	0	0	0	0	0
Waimate District	2016	DOG	Collie, Smooth	408	175	233	14	4	0	0	0	0	0	0	0	0	0	0	0
Waimate District	2016	DOG	Greyhound	13	7	6	2	11	0	0	0	0	0	0	0	0	0	0	0
Waimate District	2016	DOG	Heading	163	83	80	2	2	0	0	0	0	0	0	0	0	0	0	0
Waimate District	2016	DOG	Huntaway	340	146	194	19	14	0	0	0	0	0	0	0	0	0	0	0
Waimate District	2016	DOG	Maltese	12	4	8	7	11	0	0	0	0	0	0	0	0	0	0	0
Waimate District	2016	DOG	Poodle, Miniature	9	4	5	4	8	0	0	0	0	0	0	0	0	0	0	0
Waimate District	2016	DOG	Poodle, Toy	11	7	4	8	9	0	0	0	0	0	0	0	0	0	0	0
Waimate District	2016	DOG	Retriever, Golden	47	25	22	16	34	0	0	0	0	0	0	0	0	0	0	0
Waimate District	2016	DOG	Retriever, Labrador	222	119	103	70	144	1	0	0	0	0	0	0	0	0	0	0
Waimate District	2016	DOG	Rottweiler	18	10	8	4	16	0	0	0	0	0	0	0	0	0	0	0
Waimate District	2016	DOG	Schnauzer, Miniature	13	5	8	5	11	0	0	0	0	0	0	0	0	0	0	0
Waimate District	2016	DOG	Shepherd, German	30	12	18	9	20	0	1	0	0	0	0	0	0	0	0	0
Waimate District	2016	DOG	Shih Tzu	11	6	5	9	7	0	0	0	0	0	0	0	0	0	0	0
Waimate District	2016	DOG	Spaniel, Cavalier King Charles	3	1	2	1	3	0	0	0	0	0	0	0	0	0	0	0
Waimate District	2016	DOG	Spaniel, Cocker	26	15	11	2	18	0	0	0	0	0	0	0	0	0	0	0
Waimate District	2016	DOG	Spaniel, English Springer	28	13	15	7	19	0	0	0	0	0	0	0	0	0	0	0
Waimate District	2016	DOG	Terrier, American Pit Bull	7	4	3	3	5	4	2	0	0	0	0	0	0	0	0	0
Waimate District	2016	DOG	Terrier, Fox (Smooth)	70	34	36	30	44	0	0	0	0	0	0	0	0	0	0	0
Waimate District	2016	DOG	Terrier, Jack Russell	120	59	61	46	74	2	0	0	0	0	0	0	0	0	0	0
Waimate District	2016	DOG	Terrier, Staffordshire Bull	56	30	26	27	41	0	0	0	0	0	0	0	0	0	0	0
Waimate District	2016	DOG	Terrier, West Highland White	30	21	9	8	26	0	0	0	0	0	0	0	0	0	0	0
Waimate District	2016	DOG	_Unidentified_	414	220	194	122	298	3	1	0	0	0	0	0	0	0	0	0
Waimate District	2016	OWN	_	0	0	0	0	0	0	0	0	0	1477	17	0	0	0	0	0
Waipa District	2001	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	14	714	0
Waipa District	2002	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	17	7024	0
Waipa District	2003	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	13	645	0
Waipa District	2004	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	23	6343	0
Waipa District	2005	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	26	9677	0
Waipa District	2006	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	44	49238	12283
Waipa District	2007	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	38	4868	40904
Waipa District	2008	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	67	11593	24984
Waipa District	2009	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	66	13979	12670
Waipa District	2010	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	67	11022	10627
Waipa District	2011	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	84	18511	22837
Waipa District	2012	JST	_	0	0	0	0	0	0	0	0	0	0	0	1	1	0	0	0
Waipa District	2012	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	74	8543	8774
Waipa District	2013	DOG	_ALL-PURE_	4744	2467	2277	2178	2983	18	5	0	0	0	0	0	0	0	0	0
Waipa District	2013	DOG	_ALL-CROSS_	2377	1188	1189	1363	1593	26	3	0	0	0	0	0	0	0	0	0
Waipa District	2013	DOG	_ALL-DOGS_	7121	3655	3466	3541	4576	44	8	0	0	0	0	0	0	0	0	0
Waipa District	2013	DOG	Beagle	39	22	17	27	35	0	0	0	0	0	0	0	0	0	0	0
Waipa District	2013	DOG	Bichon Frise	92	48	44	63	76	0	0	0	0	0	0	0	0	0	0	0
Waipa District	2013	DOG	Boxer	94	45	49	50	76	0	0	0	0	0	0	0	0	0	0	0
Waipa District	2013	DOG	Cattle, Australian	56	30	26	21	28	0	0	0	0	0	0	0	0	0	0	0
Waipa District	2013	DOG	Chihuahua, Long Coat	88	48	40	31	55	0	0	0	0	0	0	0	0	0	0	0
Waipa District	2013	DOG	Chihuahua, Smooth Coat	33	19	14	15	29	0	0	0	0	0	0	0	0	0	0	0
Waipa District	2013	DOG	Collie, Bearded	38	21	17	9	11	0	0	0	0	0	0	0	0	0	0	0
Waipa District	2013	DOG	Collie, Border	286	153	133	113	138	0	1	0	0	0	0	0	0	0	0	0
Waipa District	2013	DOG	Collie, Rough	12	5	7	3	10	0	0	0	0	0	0	0	0	0	0	0
Waipa District	2013	DOG	Collie, Smooth	10	5	5	4	5	0	0	0	0	0	0	0	0	0	0	0
Waipa District	2013	DOG	Greyhound	60	38	22	13	32	0	0	0	0	0	0	0	0	0	0	0
Waipa District	2013	DOG	Heading	162	82	80	12	14	0	0	0	0	0	0	0	0	0	0	0
Waipa District	2013	DOG	Huntaway	274	138	136	31	39	0	0	0	0	0	0	0	0	0	0	0
Waipa District	2013	DOG	Maltese	76	44	32	36	61	0	0	0	0	0	0	0	0	0	0	0
Waipa District	2013	DOG	Poodle, Miniature	38	14	24	31	26	0	0	0	0	0	0	0	0	0	0	0
Waipa District	2013	DOG	Poodle, Toy	35	17	18	22	23	0	0	0	0	0	0	0	0	0	0	0
Waipa District	2013	DOG	Retriever, Golden	146	80	66	87	102	0	1	0	0	0	0	0	0	0	0	0
Waipa District	2013	DOG	Retriever, Labrador	785	401	384	369	531	0	0	0	0	0	0	0	0	0	0	0
Waipa District	2013	DOG	Rottweiler	91	51	40	48	79	2	1	0	0	0	0	0	0	0	0	0
Waipa District	2013	DOG	Schnauzer, Miniature	87	49	38	46	68	0	0	0	0	0	0	0	0	0	0	0
Waipa District	2013	DOG	Shepherd, German	160	83	77	71	115	0	0	0	0	0	0	0	0	0	0	0
Waipa District	2013	DOG	Shih Tzu	38	22	16	15	31	0	0	0	0	0	0	0	0	0	0	0
Waipa District	2013	DOG	Spaniel, Cavalier King Charles	47	25	22	27	34	0	0	0	0	0	0	0	0	0	0	0
Waipa District	2013	DOG	Spaniel, Cocker	78	45	33	46	57	0	0	0	0	0	0	0	0	0	0	0
Waipa District	2013	DOG	Spaniel, English Springer	42	23	19	19	35	0	0	0	0	0	0	0	0	0	0	0
Waipa District	2013	DOG	Terrier, American Pit Bull	12	2	10	8	11	12	0	0	0	0	0	0	0	0	0	0
Waipa District	2013	DOG	Terrier, Fox (Smooth)	375	198	177	218	221	0	0	0	0	0	0	0	0	0	0	0
Waipa District	2013	DOG	Terrier, Jack Russell	283	144	139	157	174	0	0	0	0	0	0	0	0	0	0	0
Waipa District	2013	DOG	Terrier, Staffordshire Bull	77	42	35	33	56	0	0	0	0	0	0	0	0	0	0	0
Waipa District	2013	DOG	Terrier, West Highland White	54	29	25	37	45	0	0	0	0	0	0	0	0	0	0	0
Waipa District	2013	DOG	_Unidentified_	1076	544	532	516	766	4	2	0	0	0	0	0	0	0	0	0
Waipa District	2013	OWN	_	0	0	0	0	0	0	0	0	1	5160	84	0	0	0	0	0
Waipa District	2013	JST	_	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Waipa District	2013	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	89	28807	18886
Waipa District	2014	DOG	_ALL-PURE_	4791	2529	2262	2270	3292	23	3	0	0	0	0	0	0	0	0	0
Waipa District	2014	DOG	_ALL-CROSS_	2450	1224	1226	1458	1827	36	4	0	0	0	0	0	0	0	0	0
Waipa District	2014	DOG	_ALL-DOGS_	7241	3753	3488	3728	5119	59	7	0	0	0	0	0	0	0	0	0
Waipa District	2014	DOG	Beagle	31	17	14	22	28	0	0	0	0	0	0	0	0	0	0	0
Waipa District	2014	DOG	Bichon Frise	95	51	44	66	81	0	0	0	0	0	0	0	0	0	0	0
Waipa District	2014	DOG	Boxer	105	52	53	54	88	0	0	0	0	0	0	0	0	0	0	0
Waipa District	2014	DOG	Cattle, Australian	54	28	26	20	27	0	0	0	0	0	0	0	0	0	0	0
Waipa District	2014	DOG	Chihuahua, Long Coat	86	46	40	30	55	0	0	0	0	0	0	0	0	0	0	0
Waipa District	2014	DOG	Chihuahua, Smooth Coat	33	16	17	16	25	0	0	0	0	0	0	0	0	0	0	0
Waipa District	2014	DOG	Collie, Bearded	38	22	16	14	17	0	0	0	0	0	0	0	0	0	0	0
Waipa District	2014	DOG	Collie, Border	277	147	130	121	153	0	0	0	0	0	0	0	0	0	0	0
Waipa District	2014	DOG	Collie, Rough	12	5	7	3	10	0	0	0	0	0	0	0	0	0	0	0
Waipa District	2014	DOG	Collie, Smooth	11	5	6	5	7	0	0	0	0	0	0	0	0	0	0	0
Waipa District	2014	DOG	Greyhound	85	53	32	25	72	0	0	0	0	0	0	0	0	0	0	0
Waipa District	2014	DOG	Heading	172	89	83	15	24	0	0	0	0	0	0	0	0	0	0	0
Waipa District	2014	DOG	Huntaway	291	146	145	33	44	0	0	0	0	0	0	0	0	0	0	0
Waipa District	2014	DOG	Maltese	77	43	34	40	64	0	0	0	0	0	0	0	0	0	0	0
Waipa District	2014	DOG	Poodle, Miniature	38	14	24	30	25	0	0	0	0	0	0	0	0	0	0	0
Waipa District	2014	DOG	Poodle, Toy	37	21	16	29	25	0	0	0	0	0	0	0	0	0	0	0
Waipa District	2014	DOG	Retriever, Golden	144	79	65	90	105	0	1	0	0	0	0	0	0	0	0	0
Waipa District	2014	DOG	Retriever, Labrador	780	397	383	386	567	0	0	0	0	0	0	0	0	0	0	0
Waipa District	2014	DOG	Rottweiler	98	54	44	45	83	1	0	0	0	0	0	0	0	0	0	0
Waipa District	2014	DOG	Schnauzer, Miniature	87	51	36	50	72	0	0	0	0	0	0	0	0	0	0	0
Waipa District	2014	DOG	Shepherd, German	167	95	72	72	135	0	0	0	0	0	0	0	0	0	0	0
Waipa District	2014	DOG	Shih Tzu	51	30	21	24	49	0	0	0	0	0	0	0	0	0	0	0
Waipa District	2014	DOG	Spaniel, Cavalier King Charles	42	21	21	26	34	0	0	0	0	0	0	0	0	0	0	0
Waipa District	2014	DOG	Spaniel, Cocker	79	44	35	52	62	0	0	0	0	0	0	0	0	0	0	0
Waipa District	2014	DOG	Spaniel, English Springer	49	25	24	21	43	0	0	0	0	0	0	0	0	0	0	0
Waipa District	2014	DOG	Terrier, American Pit Bull	16	7	9	9	16	15	0	0	0	0	0	0	0	0	0	0
Waipa District	2014	DOG	Terrier, Fox (Smooth)	363	200	163	222	242	1	0	0	0	0	0	0	0	0	0	0
Waipa District	2014	DOG	Terrier, Jack Russell	275	140	135	155	188	0	0	0	0	0	0	0	0	0	0	0
Waipa District	2014	DOG	Terrier, Staffordshire Bull	75	47	28	39	63	0	0	0	0	0	0	0	0	0	0	0
Waipa District	2014	DOG	Terrier, West Highland White	57	33	24	42	47	0	0	0	0	0	0	0	0	0	0	0
Waipa District	2014	DOG	_Unidentified_	1066	551	515	514	841	6	2	0	0	0	0	0	0	0	0	0
Waipa District	2014	OWN	_	0	0	0	0	0	0	0	0	3	5245	74	0	0	0	0	0
Waipa District	2014	JST	_	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Waipa District	2014	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	82	24023	17770
Waipa District	2015	DOG	_ALL-PURE_	4871	2547	2324	2321	3563	28	4	0	0	0	0	0	0	0	0	0
Waipa District	2015	DOG	_ALL-CROSS_	2562	1306	1256	1566	2024	35	5	0	0	0	0	0	0	0	0	0
Waipa District	2015	DOG	_ALL-DOGS_	7433	3853	3580	3887	5587	63	9	0	0	0	0	0	0	0	0	0
Waipa District	2015	DOG	Beagle	32	19	13	22	29	0	0	0	0	0	0	0	0	0	0	0
Waipa District	2015	DOG	Bichon Frise	94	51	43	66	81	0	0	0	0	0	0	0	0	0	0	0
Waipa District	2015	DOG	Boxer	105	47	58	53	93	0	0	0	0	0	0	0	0	0	0	0
Waipa District	2015	DOG	Cattle, Australian	56	29	27	20	31	0	0	0	0	0	0	0	0	0	0	0
Waipa District	2015	DOG	Chihuahua, Long Coat	86	48	38	33	56	0	0	0	0	0	0	0	0	0	0	0
Waipa District	2015	DOG	Chihuahua, Smooth Coat	39	21	18	23	32	0	0	0	0	0	0	0	0	0	0	0
Waipa District	2015	DOG	Collie, Bearded	43	23	20	16	25	0	0	0	0	0	0	0	0	0	0	0
Waipa District	2015	DOG	Collie, Border	284	152	132	129	173	0	0	0	0	0	0	0	0	0	0	0
Waipa District	2015	DOG	Collie, Rough	13	4	9	4	11	0	0	0	0	0	0	0	0	0	0	0
Waipa District	2015	DOG	Collie, Smooth	9	4	5	5	6	0	0	0	0	0	0	0	0	0	0	0
Waipa District	2015	DOG	Greyhound	88	49	39	21	81	0	0	0	0	0	0	0	0	0	0	0
Waipa District	2015	DOG	Heading	169	91	78	14	29	0	0	0	0	0	0	0	0	0	0	0
Waipa District	2015	DOG	Huntaway	296	149	147	38	64	0	0	0	0	0	0	0	0	0	0	0
Waipa District	2015	DOG	Maltese	90	47	43	51	81	0	0	0	0	0	0	0	0	0	0	0
Waipa District	2015	DOG	Poodle, Miniature	40	15	25	32	28	0	0	0	0	0	0	0	0	0	0	0
Waipa District	2015	DOG	Poodle, Toy	34	19	15	25	25	0	0	0	0	0	0	0	0	0	0	0
Waipa District	2015	DOG	Retriever, Golden	137	74	63	86	106	0	1	0	0	0	0	0	0	0	0	0
Waipa District	2015	DOG	Retriever, Labrador	775	393	382	383	608	0	0	0	0	0	0	0	0	0	0	0
Waipa District	2015	DOG	Rottweiler	105	59	46	49	95	1	0	0	0	0	0	0	0	0	0	0
Waipa District	2015	DOG	Schnauzer, Miniature	92	51	41	54	77	0	0	0	0	0	0	0	0	0	0	0
Waipa District	2015	DOG	Shepherd, German	160	89	71	65	138	2	0	0	0	0	0	0	0	0	0	0
Waipa District	2015	DOG	Shih Tzu	54	29	25	29	50	0	0	0	0	0	0	0	0	0	0	0
Waipa District	2015	DOG	Spaniel, Cavalier King Charles	38	15	23	25	36	0	0	0	0	0	0	0	0	0	0	0
Waipa District	2015	DOG	Spaniel, Cocker	79	46	33	51	64	0	0	0	0	0	0	0	0	0	0	0
Waipa District	2015	DOG	Spaniel, English Springer	53	30	23	22	45	0	0	0	0	0	0	0	0	0	0	0
Waipa District	2015	DOG	Terrier, American Pit Bull	10	3	7	7	10	10	0	0	0	0	0	0	0	0	0	0
Waipa District	2015	DOG	Terrier, Fox (Smooth)	352	192	160	210	239	1	0	0	0	0	0	0	0	0	0	0
Waipa District	2015	DOG	Terrier, Jack Russell	268	138	130	157	197	0	0	0	0	0	0	0	0	0	0	0
Waipa District	2015	DOG	Terrier, Staffordshire Bull	82	49	33	42	74	0	0	0	0	0	0	0	0	0	0	0
Waipa District	2015	DOG	Terrier, West Highland White	55	27	28	40	48	0	0	0	0	0	0	0	0	0	0	0
Waipa District	2015	DOG	_Unidentified_	1133	584	549	549	931	14	3	0	0	0	0	0	0	0	0	0
Waipa District	2015	OWN	_	0	0	0	0	0	0	0	0	3	5401	76	0	0	0	0	0
Waipa District	2015	JST	_	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Waipa District	2015	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	100	21284	36749
Waipa District	2016	DOG	_ALL-PURE_	4070	2121	1949	1938	3201	34	4	0	0	0	0	0	0	0	0	0
Waipa District	2016	DOG	_ALL-CROSS_	2262	1130	1132	1409	1895	40	3	0	0	0	0	0	0	0	0	0
Waipa District	2016	DOG	_ALL-DOGS_	6332	3251	3081	3347	5096	74	7	0	0	0	0	0	0	0	0	0
Waipa District	2016	DOG	Beagle	28	17	11	19	28	0	0	0	0	0	0	0	0	0	0	0
Waipa District	2016	DOG	Bichon Frise	75	34	41	59	69	0	0	0	0	0	0	0	0	0	0	0
Waipa District	2016	DOG	Boxer	78	36	42	36	72	0	0	0	0	0	0	0	0	0	0	0
Waipa District	2016	DOG	Cattle, Australian	45	23	22	17	32	0	0	0	0	0	0	0	0	0	0	0
Waipa District	2016	DOG	Chihuahua, Long Coat	72	41	31	29	56	0	0	0	0	0	0	0	0	0	0	0
Waipa District	2016	DOG	Chihuahua, Smooth Coat	41	23	18	25	36	0	0	0	0	0	0	0	0	0	0	0
Waipa District	2016	DOG	Collie, Bearded	39	22	17	16	22	0	0	0	0	0	0	0	0	0	0	0
Waipa District	2016	DOG	Collie, Border	239	131	108	100	150	0	0	0	0	0	0	0	0	0	0	0
Waipa District	2016	DOG	Collie, Rough	16	7	9	4	15	0	0	0	0	0	0	0	0	0	0	0
Waipa District	2016	DOG	Collie, Smooth	4	3	1	1	2	0	0	0	0	0	0	0	0	0	0	0
Waipa District	2016	DOG	Greyhound	72	43	29	15	68	0	0	0	0	0	0	0	0	0	0	0
Waipa District	2016	DOG	Heading	125	69	56	10	23	0	0	0	0	0	0	0	0	0	0	0
Waipa District	2016	DOG	Huntaway	221	105	116	26	45	0	0	0	0	0	0	0	0	0	0	0
Waipa District	2016	DOG	Maltese	77	48	29	45	72	0	0	0	0	0	0	0	0	0	0	0
Waipa District	2016	DOG	Poodle, Miniature	27	11	16	22	22	0	0	0	0	0	0	0	0	0	0	0
Waipa District	2016	DOG	Poodle, Toy	31	15	16	22	28	0	0	0	0	0	0	0	0	0	0	0
Waipa District	2016	DOG	Retriever, Golden	99	53	46	64	83	0	1	0	0	0	0	0	0	0	0	0
Waipa District	2016	DOG	Retriever, Labrador	644	328	316	315	543	0	0	0	0	0	0	0	0	0	0	0
Waipa District	2016	DOG	Rottweiler	97	55	42	49	91	1	2	0	0	0	0	0	0	0	0	0
Waipa District	2016	DOG	Schnauzer, Miniature	72	42	30	41	64	0	0	0	0	0	0	0	0	0	0	0
Waipa District	2016	DOG	Shepherd, German	135	73	62	48	123	1	0	0	0	0	0	0	0	0	0	0
Waipa District	2016	DOG	Shih Tzu	50	25	25	31	48	0	0	0	0	0	0	0	0	0	0	0
Waipa District	2016	DOG	Spaniel, Cavalier King Charles	33	13	20	23	32	0	0	0	0	0	0	0	0	0	0	0
Waipa District	2016	DOG	Spaniel, Cocker	72	41	31	46	60	0	0	0	0	0	0	0	0	0	0	0
Waipa District	2016	DOG	Spaniel, English Springer	46	23	23	20	39	0	0	0	0	0	0	0	0	0	0	0
Waipa District	2016	DOG	Terrier, American Pit Bull	17	9	8	8	14	17	0	0	0	0	0	0	0	0	0	0
Waipa District	2016	DOG	Terrier, Fox (Smooth)	266	147	119	162	196	1	0	0	0	0	0	0	0	0	0	0
Waipa District	2016	DOG	Terrier, Jack Russell	225	107	118	136	177	0	0	0	0	0	0	0	0	0	0	0
Waipa District	2016	DOG	Terrier, Staffordshire Bull	82	55	27	43	77	0	0	0	0	0	0	0	0	0	0	0
Waipa District	2016	DOG	Terrier, West Highland White	42	23	19	29	40	0	0	0	0	0	0	0	0	0	0	0
Waipa District	2016	DOG	_Unidentified_	1000	499	501	477	874	14	1	0	0	0	0	0	0	0	0	0
Waipa District	2016	OWN	_	0	0	0	0	0	0	0	0	1	4548	67	0	0	0	0	0
Wairoa District	2001	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	11	4262	0
Wairoa District	2002	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	5	245	0
Wairoa District	2003	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	3	72	0
Wairoa District	2004	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	5	124	0
Wairoa District	2005	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	13	827	0
Wairoa District	2006	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	11	527	594
Wairoa District	2007	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	34	4837	4413
Wairoa District	2008	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	45	4984	3471
Wairoa District	2009	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	37	11356	12457
Wairoa District	2010	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	30	5475	6303
Wairoa District	2011	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	38	2674	2491
Wairoa District	2012	JST	_	0	0	0	0	0	0	0	0	0	0	0	0	1	0	0	0
Wairoa District	2012	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	42	6498	5430
Wairoa District	2013	DOG	_ALL-PURE_	2709	1284	1425	30	417	33	1	0	0	0	0	0	0	0	0	0
Wairoa District	2013	DOG	_ALL-CROSS_	649	323	326	12	211	25	0	0	0	0	0	0	0	0	0	0
Wairoa District	2013	DOG	_ALL-DOGS_	3358	1607	1751	42	628	58	1	0	0	0	0	0	0	0	0	0
Wairoa District	2013	DOG	Beagle	4	1	3	0	1	0	0	0	0	0	0	0	0	0	0	0
Wairoa District	2013	DOG	Bichon Frise	9	4	5	0	5	0	0	0	0	0	0	0	0	0	0	0
Wairoa District	2013	DOG	Boxer	11	6	5	0	4	0	0	0	0	0	0	0	0	0	0	0
Wairoa District	2013	DOG	Cattle, Australian	49	26	23	0	6	0	0	0	0	0	0	0	0	0	0	0
Wairoa District	2013	DOG	Chihuahua, Long Coat	3	1	2	0	1	0	0	0	0	0	0	0	0	0	0	0
Wairoa District	2013	DOG	Chihuahua, Smooth Coat	2	2	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Wairoa District	2013	DOG	Collie, Bearded	4	2	2	0	0	0	0	0	0	0	0	0	0	0	0	0
Wairoa District	2013	DOG	Collie, Border	39	24	15	3	10	0	0	0	0	0	0	0	0	0	0	0
Wairoa District	2013	DOG	Collie, Rough	2	1	1	0	0	0	0	0	0	0	0	0	0	0	0	0
Wairoa District	2013	DOG	Collie, Smooth	1	1	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Wairoa District	2013	DOG	Greyhound	17	8	9	0	5	0	0	0	0	0	0	0	0	0	0	0
Wairoa District	2013	DOG	Heading	700	345	355	6	12	0	0	0	0	0	0	0	0	0	0	0
Wairoa District	2013	DOG	Huntaway	1005	425	580	2	10	0	0	0	0	0	0	0	0	0	0	0
Wairoa District	2013	DOG	Maltese	4	3	1	0	2	0	0	0	0	0	0	0	0	0	0	0
Wairoa District	2013	DOG	Poodle, Miniature	1	1	0	0	1	0	0	0	0	0	0	0	0	0	0	0
Wairoa District	2013	DOG	Poodle, Toy	3	2	1	0	2	0	0	0	0	0	0	0	0	0	0	0
Wairoa District	2013	DOG	Retriever, Golden	20	9	11	0	6	0	0	0	0	0	0	0	0	0	0	0
Wairoa District	2013	DOG	Retriever, Labrador	145	84	61	3	48	0	0	0	0	0	0	0	0	0	0	0
Wairoa District	2013	DOG	Rottweiler	54	22	32	3	33	1	0	0	0	0	0	0	0	0	0	0
Wairoa District	2013	DOG	Schnauzer, Miniature	1	1	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Wairoa District	2013	DOG	Shepherd, German	71	33	38	0	33	2	0	0	0	0	0	0	0	0	0	0
Wairoa District	2013	DOG	Shih Tzu	6	5	1	0	6	0	0	0	0	0	0	0	0	0	0	0
Wairoa District	2013	DOG	Spaniel, Cavalier King Charles	2	2	0	0	2	0	0	0	0	0	0	0	0	0	0	0
Wairoa District	2013	DOG	Spaniel, Cocker	5	4	1	0	1	0	0	0	0	0	0	0	0	0	0	0
Wairoa District	2013	DOG	Spaniel, English Springer	12	9	3	0	2	0	0	0	0	0	0	0	0	0	0	0
Wairoa District	2013	DOG	Terrier, American Pit Bull	22	12	10	2	16	22	0	0	0	0	0	0	0	0	0	0
Wairoa District	2013	DOG	Terrier, Fox (Smooth)	153	80	73	5	62	0	0	0	0	0	0	0	0	0	0	0
Wairoa District	2013	DOG	Terrier, Jack Russell	115	47	68	1	43	1	0	0	0	0	0	0	0	0	0	0
Wairoa District	2013	DOG	Terrier, Staffordshire Bull	19	7	12	0	8	1	0	0	0	0	0	0	0	0	0	0
Wairoa District	2013	DOG	Terrier, West Highland White	1	1	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Wairoa District	2013	DOG	_Unidentified_	229	116	113	5	98	6	1	0	0	0	0	0	0	0	0	0
Wairoa District	2013	OWN	_	0	0	0	0	0	0	0	0	0	1352	23	0	0	0	0	0
Wairoa District	2013	JST	_	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Wairoa District	2013	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	36	20566	11653
Wairoa District	2014	DOG	_ALL-PURE_	2583	1223	1360	37	455	36	0	0	0	0	0	0	0	0	0	0
Wairoa District	2014	DOG	_ALL-CROSS_	659	342	317	16	232	30	0	0	0	0	0	0	0	0	0	0
Wairoa District	2014	DOG	_ALL-DOGS_	3242	1565	1677	53	687	66	0	0	0	0	0	0	0	0	0	0
Wairoa District	2014	DOG	Beagle	1	0	1	0	0	0	0	0	0	0	0	0	0	0	0	0
Wairoa District	2014	DOG	Bichon Frise	8	4	4	0	5	0	0	0	0	0	0	0	0	0	0	0
Wairoa District	2014	DOG	Boxer	11	3	8	0	4	0	0	0	0	0	0	0	0	0	0	0
Wairoa District	2014	DOG	Cattle, Australian	40	21	19	0	4	0	0	0	0	0	0	0	0	0	0	0
Wairoa District	2014	DOG	Chihuahua, Long Coat	4	1	3	0	1	0	0	0	0	0	0	0	0	0	0	0
Wairoa District	2014	DOG	Chihuahua, Smooth Coat	6	4	2	0	2	0	0	0	0	0	0	0	0	0	0	0
Wairoa District	2014	DOG	Collie, Bearded	3	1	2	0	0	0	0	0	0	0	0	0	0	0	0	0
Wairoa District	2014	DOG	Collie, Border	30	14	16	3	10	0	0	0	0	0	0	0	0	0	0	0
Wairoa District	2014	DOG	Collie, Rough	2	1	1	0	0	0	0	0	0	0	0	0	0	0	0	0
Wairoa District	2014	DOG	Collie, Smooth	1	1	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Wairoa District	2014	DOG	Greyhound	15	7	8	0	8	1	0	0	0	0	0	0	0	0	0	0
Wairoa District	2014	DOG	Heading	673	327	346	7	8	0	0	0	0	0	0	0	0	0	0	0
Wairoa District	2014	DOG	Huntaway	958	405	553	2	7	0	0	0	0	0	0	0	0	0	0	0
Wairoa District	2014	DOG	Maltese	5	3	2	0	1	0	0	0	0	0	0	0	0	0	0	0
Wairoa District	2014	DOG	Poodle, Miniature	2	2	0	0	1	0	0	0	0	0	0	0	0	0	0	0
Wairoa District	2014	DOG	Poodle, Toy	2	1	1	0	1	0	0	0	0	0	0	0	0	0	0	0
Wairoa District	2014	DOG	Retriever, Golden	26	13	13	1	8	0	0	0	0	0	0	0	0	0	0	0
Wairoa District	2014	DOG	Retriever, Labrador	128	69	59	3	52	1	0	0	0	0	0	0	0	0	0	0
Wairoa District	2014	DOG	Rottweiler	43	18	25	3	32	2	0	0	0	0	0	0	0	0	0	0
Wairoa District	2014	DOG	Schnauzer, Miniature	3	2	1	0	2	0	0	0	0	0	0	0	0	0	0	0
Wairoa District	2014	DOG	Shepherd, German	69	29	40	1	35	2	0	0	0	0	0	0	0	0	0	0
Wairoa District	2014	DOG	Shih Tzu	8	6	2	0	8	0	0	0	0	0	0	0	0	0	0	0
Wairoa District	2014	DOG	Spaniel, Cavalier King Charles	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Wairoa District	2014	DOG	Spaniel, Cocker	4	3	1	0	0	0	0	0	0	0	0	0	0	0	0	0
Wairoa District	2014	DOG	Spaniel, English Springer	11	8	3	0	2	0	0	0	0	0	0	0	0	0	0	0
Wairoa District	2014	DOG	Terrier, American Pit Bull	25	17	8	2	21	25	0	0	0	0	0	0	0	0	0	0
Wairoa District	2014	DOG	Terrier, Fox (Smooth)	155	84	71	6	69	1	0	0	0	0	0	0	0	0	0	0
Wairoa District	2014	DOG	Terrier, Jack Russell	113	48	65	3	52	0	0	0	0	0	0	0	0	0	0	0
Wairoa District	2014	DOG	Terrier, Staffordshire Bull	15	6	9	1	9	0	0	0	0	0	0	0	0	0	0	0
Wairoa District	2014	DOG	Terrier, West Highland White	1	1	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Wairoa District	2014	DOG	_Unidentified_	221	124	97	5	113	4	0	0	0	0	0	0	0	0	0	0
Wairoa District	2014	OWN	_	0	0	0	0	0	0	0	0	0	1318	27	0	0	0	0	0
Wairoa District	2014	JST	_	0	0	0	0	0	0	0	0	0	0	0	1	0	0	0	0
Wairoa District	2014	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	47	7470	11490
Wairoa District	2015	DOG	_ALL-PURE_	2515	1216	1299	41	544	35	0	0	0	0	0	0	0	0	0	0
Wairoa District	2015	DOG	_ALL-CROSS_	623	319	304	15	291	25	1	0	0	0	0	0	0	0	0	0
Wairoa District	2015	DOG	_ALL-DOGS_	3138	1535	1603	56	835	60	1	0	0	0	0	0	0	0	0	0
Wairoa District	2015	DOG	Beagle	2	0	2	0	1	0	0	0	0	0	0	0	0	0	0	0
Wairoa District	2015	DOG	Bichon Frise	11	6	5	0	8	0	0	0	0	0	0	0	0	0	0	0
Wairoa District	2015	DOG	Boxer	10	4	6	0	5	0	0	0	0	0	0	0	0	0	0	0
Wairoa District	2015	DOG	Cattle, Australian	34	18	16	1	10	0	0	0	0	0	0	0	0	0	0	0
Wairoa District	2015	DOG	Chihuahua, Long Coat	2	1	1	0	1	0	0	0	0	0	0	0	0	0	0	0
Wairoa District	2015	DOG	Chihuahua, Smooth Coat	3	2	1	0	3	0	0	0	0	0	0	0	0	0	0	0
Wairoa District	2015	DOG	Collie, Bearded	4	2	2	0	2	0	0	0	0	0	0	0	0	0	0	0
Wairoa District	2015	DOG	Collie, Border	33	15	18	3	11	0	0	0	0	0	0	0	0	0	0	0
Wairoa District	2015	DOG	Collie, Rough	1	1	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Wairoa District	2015	DOG	Collie, Smooth	2	2	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Wairoa District	2015	DOG	Greyhound	19	9	10	0	14	1	0	0	0	0	0	0	0	0	0	0
Wairoa District	2015	DOG	Heading	659	329	330	6	15	0	0	0	0	0	0	0	0	0	0	0
Wairoa District	2015	DOG	Huntaway	926	396	530	3	9	0	0	0	0	0	0	0	0	0	0	0
Wairoa District	2015	DOG	Maltese	4	3	1	0	2	0	0	0	0	0	0	0	0	0	0	0
Wairoa District	2015	DOG	Poodle, Miniature	2	2	0	0	1	0	0	0	0	0	0	0	0	0	0	0
Wairoa District	2015	DOG	Poodle, Toy	4	4	0	1	4	0	0	0	0	0	0	0	0	0	0	0
Wairoa District	2015	DOG	Retriever, Golden	26	13	13	1	7	0	0	0	0	0	0	0	0	0	0	0
Wairoa District	2015	DOG	Retriever, Labrador	128	67	61	2	70	0	0	0	0	0	0	0	0	0	0	0
Wairoa District	2015	DOG	Rottweiler	38	18	20	2	28	4	0	0	0	0	0	0	0	0	0	0
Wairoa District	2015	DOG	Schnauzer, Miniature	2	1	1	0	2	0	0	0	0	0	0	0	0	0	0	0
Wairoa District	2015	DOG	Shepherd, German	57	28	29	0	38	2	0	0	0	0	0	0	0	0	0	0
Wairoa District	2015	DOG	Shih Tzu	9	7	2	0	9	0	0	0	0	0	0	0	0	0	0	0
Wairoa District	2015	DOG	Spaniel, Cavalier King Charles	2	0	2	0	1	0	0	0	0	0	0	0	0	0	0	0
Wairoa District	2015	DOG	Spaniel, Cocker	6	5	1	0	1	0	0	0	0	0	0	0	0	0	0	0
Wairoa District	2015	DOG	Spaniel, English Springer	9	7	2	0	2	0	0	0	0	0	0	0	0	0	0	0
Wairoa District	2015	DOG	Terrier, American Pit Bull	23	17	6	2	18	22	0	0	0	0	0	0	0	0	0	0
Wairoa District	2015	DOG	Terrier, Fox (Smooth)	159	87	72	7	93	0	0	0	0	0	0	0	0	0	0	0
Wairoa District	2015	DOG	Terrier, Jack Russell	111	52	59	4	61	0	0	0	0	0	0	0	0	0	0	0
Wairoa District	2015	DOG	Terrier, Staffordshire Bull	15	6	9	2	8	1	0	0	0	0	0	0	0	0	0	0
Wairoa District	2015	DOG	Terrier, West Highland White	2	2	0	0	1	0	0	0	0	0	0	0	0	0	0	0
Wairoa District	2015	DOG	_Unidentified_	212	112	100	7	119	5	0	0	0	0	0	0	0	0	0	0
Wairoa District	2015	OWN	_	0	0	0	0	0	0	0	0	0	1268	20	0	0	0	0	0
Wairoa District	2015	JST	_	0	0	0	0	0	0	0	0	0	0	0	1	1	0	0	0
Wairoa District	2015	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	22	3212	9450
Wairoa District	2016	DOG	_ALL-PURE_	2358	1159	1199	42	515	33	0	0	0	0	0	0	0	0	0	0
Wairoa District	2016	DOG	_ALL-CROSS_	584	297	287	12	288	24	0	0	0	0	0	0	0	0	0	0
Wairoa District	2016	DOG	_ALL-DOGS_	2942	1456	1486	54	803	57	0	0	0	0	0	0	0	0	0	0
Wairoa District	2016	DOG	Beagle	2	0	2	0	1	0	0	0	0	0	0	0	0	0	0	0
Wairoa District	2016	DOG	Bichon Frise	9	4	5	0	7	0	0	0	0	0	0	0	0	0	0	0
Wairoa District	2016	DOG	Boxer	7	2	5	0	3	0	0	0	0	0	0	0	0	0	0	0
Wairoa District	2016	DOG	Cattle, Australian	27	15	12	1	8	0	0	0	0	0	0	0	0	0	0	0
Wairoa District	2016	DOG	Chihuahua, Long Coat	2	0	2	0	0	0	0	0	0	0	0	0	0	0	0	0
Wairoa District	2016	DOG	Chihuahua, Smooth Coat	4	3	1	0	4	0	0	0	0	0	0	0	0	0	0	0
Wairoa District	2016	DOG	Collie, Bearded	7	3	4	0	3	0	0	0	0	0	0	0	0	0	0	0
Wairoa District	2016	DOG	Collie, Border	28	12	16	2	11	0	0	0	0	0	0	0	0	0	0	0
Wairoa District	2016	DOG	Collie, Rough	1	1	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Wairoa District	2016	DOG	Collie, Smooth	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Wairoa District	2016	DOG	Greyhound	15	7	8	0	10	1	0	0	0	0	0	0	0	0	0	0
Wairoa District	2016	DOG	Heading	631	322	309	5	14	0	0	0	0	0	0	0	0	0	0	0
Wairoa District	2016	DOG	Huntaway	881	387	494	2	9	0	0	0	0	0	0	0	0	0	0	0
Wairoa District	2016	DOG	Maltese	2	2	0	0	1	0	0	0	0	0	0	0	0	0	0	0
Wairoa District	2016	DOG	Poodle, Miniature	7	5	2	0	3	0	0	0	0	0	0	0	0	0	0	0
Wairoa District	2016	DOG	Poodle, Toy	7	5	2	2	7	0	0	0	0	0	0	0	0	0	0	0
Wairoa District	2016	DOG	Retriever, Golden	24	13	11	2	10	0	0	0	0	0	0	0	0	0	0	0
Wairoa District	2016	DOG	Retriever, Labrador	122	59	63	2	67	0	0	0	0	0	0	0	0	0	0	0
Wairoa District	2016	DOG	Rottweiler	36	18	18	2	29	4	0	0	0	0	0	0	0	0	0	0
Wairoa District	2016	DOG	Schnauzer, Miniature	3	2	1	0	2	0	0	0	0	0	0	0	0	0	0	0
Wairoa District	2016	DOG	Shepherd, German	52	26	26	1	34	0	0	0	0	0	0	0	0	0	0	0
Wairoa District	2016	DOG	Shih Tzu	8	6	2	0	8	0	0	0	0	0	0	0	0	0	0	0
Wairoa District	2016	DOG	Spaniel, Cavalier King Charles	3	1	2	0	2	0	0	0	0	0	0	0	0	0	0	0
Wairoa District	2016	DOG	Spaniel, Cocker	6	5	1	0	2	0	0	0	0	0	0	0	0	0	0	0
Wairoa District	2016	DOG	Spaniel, English Springer	9	6	3	0	3	0	0	0	0	0	0	0	0	0	0	0
Wairoa District	2016	DOG	Terrier, American Pit Bull	23	14	9	2	18	23	0	0	0	0	0	0	0	0	0	0
Wairoa District	2016	DOG	Terrier, Fox (Smooth)	142	81	61	9	82	0	0	0	0	0	0	0	0	0	0	0
Wairoa District	2016	DOG	Terrier, Jack Russell	104	51	53	3	60	0	0	0	0	0	0	0	0	0	0	0
Wairoa District	2016	DOG	Terrier, Staffordshire Bull	13	6	7	3	8	0	0	0	0	0	0	0	0	0	0	0
Wairoa District	2016	DOG	Terrier, West Highland White	2	2	0	0	2	0	0	0	0	0	0	0	0	0	0	0
Wairoa District	2016	DOG	_Unidentified_	181	101	80	6	107	5	0	0	0	0	0	0	0	0	0	0
Wairoa District	2016	OWN	_	0	0	0	0	0	0	0	0	3	1167	21	0	0	0	0	0
Waitakere City	2001	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	15	93187	0
Waitakere City	2002	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	43	20059	0
Waitakere City	2003	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	48	13674	0
Waitakere City	2004	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	182	21052	0
Waitakere City	2005	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	232	30496	0
Waitakere City	2006	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	156	28116	27322
Waitakere City	2007	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	204	67741	43587
Waitakere City	2008	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	290	186218	116772
Waitakere City	2009	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	321	70429	127405
Waitakere City	2010	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	365	78987	98239
Waitakere City	2011	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	336	77415	65346
Waitakere City	2012	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	262	93158	63890
Waitakere City	2013	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	190	37403	50683
Waitakere City	2014	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	174	43401	72353
Waitakere City	2015	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	145	23492	35837
Waitaki District	2001	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	14	3038	0
Waitaki District	2002	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	13	2012	0
Waitaki District	2003	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	13	471	0
Waitaki District	2004	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	22	7809	0
Waitaki District	2005	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	16	1120	0
Waitaki District	2006	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	26	2831	2859
Waitaki District	2007	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	36	37012	19291
Waitaki District	2008	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	32	11702	26602
Waitaki District	2009	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	31	12502	9731
Waitaki District	2010	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	32	2722	14464
Waitaki District	2011	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	36	3204	3456
Waitaki District	2012	JST	_	0	0	0	0	0	0	0	0	0	0	0	1	0	0	0	0
Waitaki District	2012	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	39	4977	4646
Waitaki District	2013	DOG	_ALL-PURE_	4292	2054	2238	50	1308	16	7	0	0	0	0	0	0	0	0	0
Waitaki District	2013	DOG	_ALL-CROSS_	1134	561	573	25	568	11	5	0	0	0	0	0	0	0	0	0
Waitaki District	2013	DOG	_ALL-DOGS_	5426	2615	2811	75	1876	27	12	0	0	0	0	0	0	0	0	0
Waitaki District	2013	DOG	Beagle	18	8	10	0	6	0	0	0	0	0	0	0	0	0	0	0
Waitaki District	2013	DOG	Bichon Frise	98	38	60	0	56	0	0	0	0	0	0	0	0	0	0	0
Waitaki District	2013	DOG	Boxer	36	17	19	1	26	0	1	0	0	0	0	0	0	0	0	0
Waitaki District	2013	DOG	Cattle, Australian	25	17	8	1	5	0	0	0	0	0	0	0	0	0	0	0
Waitaki District	2013	DOG	Chihuahua, Long Coat	41	23	18	1	28	0	0	0	0	0	0	0	0	0	0	0
Waitaki District	2013	DOG	Chihuahua, Smooth Coat	31	14	17	1	10	0	0	0	0	0	0	0	0	0	0	0
Waitaki District	2013	DOG	Collie, Bearded	70	37	33	1	2	0	1	0	0	0	0	0	0	0	0	0
Waitaki District	2013	DOG	Collie, Border	707	350	357	1	59	0	0	0	0	0	0	0	0	0	0	0
Waitaki District	2013	DOG	Collie, Rough	601	238	363	1	4	0	0	0	0	0	0	0	0	0	0	0
Waitaki District	2013	DOG	Collie, Smooth	63	24	39	0	0	0	0	0	0	0	0	0	0	0	0	0
Waitaki District	2013	DOG	Greyhound	15	6	9	1	4	0	0	0	0	0	0	0	0	0	0	0
Waitaki District	2013	DOG	Heading	159	80	79	1	3	0	0	0	0	0	0	0	0	0	0	0
Waitaki District	2013	DOG	Huntaway	363	149	214	0	13	0	0	0	0	0	0	0	0	0	0	0
Waitaki District	2013	DOG	Maltese	16	8	8	0	11	0	0	0	0	0	0	0	0	0	0	0
Waitaki District	2013	DOG	Poodle, Miniature	17	11	6	0	10	0	0	0	0	0	0	0	0	0	0	0
Waitaki District	2013	DOG	Poodle, Toy	38	25	13	0	30	0	0	0	0	0	0	0	0	0	0	0
Waitaki District	2013	DOG	Retriever, Golden	70	49	21	2	32	0	1	0	0	0	0	0	0	0	0	0
Waitaki District	2013	DOG	Retriever, Labrador	400	205	195	4	203	0	1	0	0	0	0	0	0	0	0	0
Waitaki District	2013	DOG	Rottweiler	44	22	22	0	29	1	0	0	0	0	0	0	0	0	0	0
Waitaki District	2013	DOG	Schnauzer, Miniature	26	11	15	1	22	0	0	0	0	0	0	0	0	0	0	0
Waitaki District	2013	DOG	Shepherd, German	67	28	39	1	35	2	0	0	0	0	0	0	0	0	0	0
Waitaki District	2013	DOG	Shih Tzu	29	14	15	0	17	0	0	0	0	0	0	0	0	0	0	0
Waitaki District	2013	DOG	Spaniel, Cavalier King Charles	16	6	10	0	10	0	0	0	0	0	0	0	0	0	0	0
Waitaki District	2013	DOG	Spaniel, Cocker	66	36	30	3	43	0	0	0	0	0	0	0	0	0	0	0
Waitaki District	2013	DOG	Spaniel, English Springer	43	22	21	0	25	0	0	0	0	0	0	0	0	0	0	0
Waitaki District	2013	DOG	Terrier, American Pit Bull	7	1	6	2	3	7	0	0	0	0	0	0	0	0	0	0
Waitaki District	2013	DOG	Terrier, Fox (Smooth)	179	92	87	2	51	0	0	0	0	0	0	0	0	0	0	0
Waitaki District	2013	DOG	Terrier, Jack Russell	230	110	120	6	109	1	0	0	0	0	0	0	0	0	0	0
Waitaki District	2013	DOG	Terrier, Staffordshire Bull	107	55	52	1	65	1	0	0	0	0	0	0	0	0	0	0
Waitaki District	2013	DOG	Terrier, West Highland White	25	17	8	0	18	0	0	0	0	0	0	0	0	0	0	0
Waitaki District	2013	DOG	_Unidentified_	685	341	344	19	379	4	3	0	0	0	0	0	0	0	0	0
Waitaki District	2013	OWN	_	0	0	0	0	0	0	0	0	0	2948	21	0	0	0	0	0
Waitaki District	2013	JST	_	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Waitaki District	2013	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	44	3932	4029
Waitaki District	2014	DOG	_ALL-PURE_	4098	1971	2127	58	1355	20	5	0	0	0	0	0	0	0	0	0
Waitaki District	2014	DOG	_ALL-CROSS_	1198	601	597	28	631	10	3	0	0	0	0	0	0	0	0	0
Waitaki District	2014	DOG	_ALL-DOGS_	5296	2572	2724	86	1986	30	8	0	0	0	0	0	0	0	0	0
Waitaki District	2014	DOG	Beagle	14	6	8	0	5	0	0	0	0	0	0	0	0	0	0	0
Waitaki District	2014	DOG	Bichon Frise	95	38	57	0	59	0	0	0	0	0	0	0	0	0	0	0
Waitaki District	2014	DOG	Boxer	33	18	15	1	27	0	1	0	0	0	0	0	0	0	0	0
Waitaki District	2014	DOG	Cattle, Australian	19	13	6	1	6	0	0	0	0	0	0	0	0	0	0	0
Waitaki District	2014	DOG	Chihuahua, Long Coat	42	24	18	1	32	0	0	0	0	0	0	0	0	0	0	0
Waitaki District	2014	DOG	Chihuahua, Smooth Coat	28	13	15	1	10	0	0	0	0	0	0	0	0	0	0	0
Waitaki District	2014	DOG	Collie, Bearded	56	29	27	1	2	0	1	0	0	0	0	0	0	0	0	0
Waitaki District	2014	DOG	Collie, Border	736	365	371	2	60	0	0	0	0	0	0	0	0	0	0	0
Waitaki District	2014	DOG	Collie, Rough	473	186	287	1	5	0	0	0	0	0	0	0	0	0	0	0
Waitaki District	2014	DOG	Collie, Smooth	63	24	39	0	0	0	0	0	0	0	0	0	0	0	0	0
Waitaki District	2014	DOG	Greyhound	19	10	9	1	5	0	0	0	0	0	0	0	0	0	0	0
Waitaki District	2014	DOG	Heading	170	79	91	1	6	0	0	0	0	0	0	0	0	0	0	0
Waitaki District	2014	DOG	Huntaway	365	153	212	0	14	0	0	0	0	0	0	0	0	0	0	0
Waitaki District	2014	DOG	Maltese	18	10	8	0	12	0	0	0	0	0	0	0	0	0	0	0
Waitaki District	2014	DOG	Poodle, Miniature	20	11	9	0	11	0	0	0	0	0	0	0	0	0	0	0
Waitaki District	2014	DOG	Poodle, Toy	36	25	11	1	32	0	0	0	0	0	0	0	0	0	0	0
Waitaki District	2014	DOG	Retriever, Golden	65	45	20	3	35	0	1	0	0	0	0	0	0	0	0	0
Waitaki District	2014	DOG	Retriever, Labrador	403	209	194	5	212	0	1	0	0	0	0	0	0	0	0	0
Waitaki District	2014	DOG	Rottweiler	37	16	21	0	25	0	0	0	0	0	0	0	0	0	0	0
Waitaki District	2014	DOG	Schnauzer, Miniature	24	8	16	1	21	0	0	0	0	0	0	0	0	0	0	0
Waitaki District	2014	DOG	Shepherd, German	64	29	35	1	34	0	0	0	0	0	0	0	0	0	0	0
Waitaki District	2014	DOG	Shih Tzu	32	18	14	0	21	0	0	0	0	0	0	0	0	0	0	0
Waitaki District	2014	DOG	Spaniel, Cavalier King Charles	18	6	12	0	12	0	0	0	0	0	0	0	0	0	0	0
Waitaki District	2014	DOG	Spaniel, Cocker	62	30	32	2	39	0	0	0	0	0	0	0	0	0	0	0
Waitaki District	2014	DOG	Spaniel, English Springer	45	24	21	0	25	0	0	0	0	0	0	0	0	0	0	0
Waitaki District	2014	DOG	Terrier, American Pit Bull	17	5	12	3	5	17	0	0	0	0	0	0	0	0	0	0
Waitaki District	2014	DOG	Terrier, Fox (Smooth)	163	85	78	3	54	0	0	0	0	0	0	0	0	0	0	0
Waitaki District	2014	DOG	Terrier, Jack Russell	216	109	107	7	108	0	0	0	0	0	0	0	0	0	0	0
Waitaki District	2014	DOG	Terrier, Staffordshire Bull	111	55	56	4	76	0	0	0	0	0	0	0	0	0	0	0
Waitaki District	2014	DOG	Terrier, West Highland White	26	17	9	0	20	0	0	0	0	0	0	0	0	0	0	0
Waitaki District	2014	DOG	_Unidentified_	628	311	317	18	382	3	1	0	0	0	0	0	0	0	0	0
Waitaki District	2014	OWN	_	0	0	0	0	0	0	0	0	0	2902	22	0	0	0	0	0
Waitaki District	2014	JST	_	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Waitaki District	2014	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	63	9610	10219
Waitaki District	2015	DOG	_ALL-PURE_	4152	2000	2152	67	1450	17	3	0	0	0	0	0	0	0	0	0
Waitaki District	2015	DOG	_ALL-CROSS_	1361	674	687	35	721	9	3	0	0	0	0	0	0	0	0	0
Waitaki District	2015	DOG	_ALL-DOGS_	5513	2674	2839	102	2171	26	6	0	0	0	0	0	0	0	0	0
Waitaki District	2015	DOG	Beagle	12	6	6	0	5	0	0	0	0	0	0	0	0	0	0	0
Waitaki District	2015	DOG	Bichon Frise	95	42	53	0	60	0	0	0	0	0	0	0	0	0	0	0
Waitaki District	2015	DOG	Boxer	30	16	14	1	25	0	1	0	0	0	0	0	0	0	0	0
Waitaki District	2015	DOG	Cattle, Australian	26	17	9	1	7	0	0	0	0	0	0	0	0	0	0	0
Waitaki District	2015	DOG	Chihuahua, Long Coat	47	28	19	1	33	0	0	0	0	0	0	0	0	0	0	0
Waitaki District	2015	DOG	Chihuahua, Smooth Coat	30	15	15	1	10	0	0	0	0	0	0	0	0	0	0	0
Waitaki District	2015	DOG	Collie, Bearded	55	27	28	0	4	0	0	0	0	0	0	0	0	0	0	0
Waitaki District	2015	DOG	Collie, Border	693	345	348	2	69	0	0	0	0	0	0	0	0	0	0	0
Waitaki District	2015	DOG	Collie, Rough	365	146	219	1	6	0	0	0	0	0	0	0	0	0	0	0
Waitaki District	2015	DOG	Collie, Smooth	157	58	99	0	3	0	0	0	0	0	0	0	0	0	0	0
Waitaki District	2015	DOG	Greyhound	22	9	13	1	16	0	0	0	0	0	0	0	0	0	0	0
Waitaki District	2015	DOG	Heading	196	79	117	1	4	0	0	0	0	0	0	0	0	0	0	0
Waitaki District	2015	DOG	Huntaway	395	157	238	0	15	0	0	0	0	0	0	0	0	0	0	0
Waitaki District	2015	DOG	Maltese	18	11	7	0	12	0	0	0	0	0	0	0	0	0	0	0
Waitaki District	2015	DOG	Poodle, Miniature	23	16	7	0	12	0	0	0	0	0	0	0	0	0	0	0
Waitaki District	2015	DOG	Poodle, Toy	35	24	11	1	32	0	0	0	0	0	0	0	0	0	0	0
Waitaki District	2015	DOG	Retriever, Golden	57	40	17	2	33	0	0	0	0	0	0	0	0	0	0	0
Waitaki District	2015	DOG	Retriever, Labrador	430	225	205	6	237	0	1	0	0	0	0	0	0	0	0	0
Waitaki District	2015	DOG	Rottweiler	46	23	23	0	26	0	0	0	0	0	0	0	0	0	0	0
Waitaki District	2015	DOG	Schnauzer, Miniature	28	12	16	1	23	0	0	0	0	0	0	0	0	0	0	0
Waitaki District	2015	DOG	Shepherd, German	68	34	34	2	40	0	0	0	0	0	0	0	0	0	0	0
Waitaki District	2015	DOG	Shih Tzu	33	20	13	0	21	0	0	0	0	0	0	0	0	0	0	0
Waitaki District	2015	DOG	Spaniel, Cavalier King Charles	19	7	12	0	10	0	0	0	0	0	0	0	0	0	0	0
Waitaki District	2015	DOG	Spaniel, Cocker	51	21	30	3	35	0	0	0	0	0	0	0	0	0	0	0
Waitaki District	2015	DOG	Spaniel, English Springer	47	27	20	0	29	0	0	0	0	0	0	0	0	0	0	0
Waitaki District	2015	DOG	Terrier, American Pit Bull	17	6	11	3	7	17	0	0	0	0	0	0	0	0	0	0
Waitaki District	2015	DOG	Terrier, Fox (Smooth)	137	70	67	3	50	0	0	0	0	0	0	0	0	0	0	0
Waitaki District	2015	DOG	Terrier, Jack Russell	214	105	109	8	111	0	0	0	0	0	0	0	0	0	0	0
Waitaki District	2015	DOG	Terrier, Staffordshire Bull	117	63	54	5	81	0	0	0	0	0	0	0	0	0	0	0
Waitaki District	2015	DOG	Terrier, West Highland White	27	18	9	0	21	0	0	0	0	0	0	0	0	0	0	0
Waitaki District	2015	DOG	_Unidentified_	662	333	329	24	413	0	1	0	0	0	0	0	0	0	0	0
Waitaki District	2015	OWN	_	0	0	0	0	0	0	0	0	0	3066	27	0	0	0	0	0
Waitaki District	2015	JST	_	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Waitaki District	2015	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	57	9869	9869
Waitaki District	2016	DOG	_ALL-PURE_	4053	1978	2075	249	1526	16	1	0	0	0	0	0	0	0	0	0
Waitaki District	2016	DOG	_ALL-CROSS_	1426	712	714	196	827	9	1	0	0	0	0	0	0	0	0	0
Waitaki District	2016	DOG	_ALL-DOGS_	5479	2690	2789	445	2353	25	2	0	0	0	0	0	0	0	0	0
Waitaki District	2016	DOG	Beagle	11	5	6	1	6	0	0	0	0	0	0	0	0	0	0	0
Waitaki District	2016	DOG	Bichon Frise	93	44	49	7	62	0	0	0	0	0	0	0	0	0	0	0
Waitaki District	2016	DOG	Boxer	24	13	11	1	19	0	0	0	0	0	0	0	0	0	0	0
Waitaki District	2016	DOG	Cattle, Australian	24	17	7	2	10	0	0	0	0	0	0	0	0	0	0	0
Waitaki District	2016	DOG	Chihuahua, Long Coat	54	28	26	6	37	0	0	0	0	0	0	0	0	0	0	0
Waitaki District	2016	DOG	Chihuahua, Smooth Coat	33	17	16	3	16	0	0	0	0	0	0	0	0	0	0	0
Waitaki District	2016	DOG	Collie, Bearded	51	26	25	3	2	0	0	0	0	0	0	0	0	0	0	0
Waitaki District	2016	DOG	Collie, Border	649	326	323	11	77	0	0	0	0	0	0	0	0	0	0	0
Waitaki District	2016	DOG	Collie, Rough	330	138	192	1	6	0	0	0	0	0	0	0	0	0	0	0
Waitaki District	2016	DOG	Collie, Smooth	164	65	99	0	4	0	0	0	0	0	0	0	0	0	0	0
Waitaki District	2016	DOG	Greyhound	27	12	15	2	19	0	0	0	0	0	0	0	0	0	0	0
Waitaki District	2016	DOG	Heading	206	85	121	3	3	0	0	0	0	0	0	0	0	0	0	0
Waitaki District	2016	DOG	Huntaway	377	145	232	5	14	0	0	0	0	0	0	0	0	0	0	0
Waitaki District	2016	DOG	Maltese	24	16	8	6	17	0	0	0	0	0	0	0	0	0	0	0
Waitaki District	2016	DOG	Poodle, Miniature	21	16	5	1	13	0	0	0	0	0	0	0	0	0	0	0
Waitaki District	2016	DOG	Poodle, Toy	38	25	13	2	35	0	0	0	0	0	0	0	0	0	0	0
Waitaki District	2016	DOG	Retriever, Golden	55	35	20	6	34	0	0	0	0	0	0	0	0	0	0	0
Waitaki District	2016	DOG	Retriever, Labrador	411	218	193	30	242	0	1	0	0	0	0	0	0	0	0	0
Waitaki District	2016	DOG	Rottweiler	54	26	28	3	27	0	0	0	0	0	0	0	0	0	0	0
Waitaki District	2016	DOG	Schnauzer, Miniature	34	16	18	4	30	0	0	0	0	0	0	0	0	0	0	0
Waitaki District	2016	DOG	Shepherd, German	70	35	35	6	48	0	0	0	0	0	0	0	0	0	0	0
Waitaki District	2016	DOG	Shih Tzu	35	20	15	5	23	0	0	0	0	0	0	0	0	0	0	0
Waitaki District	2016	DOG	Spaniel, Cavalier King Charles	18	7	11	2	10	0	0	0	0	0	0	0	0	0	0	0
Waitaki District	2016	DOG	Spaniel, Cocker	53	23	30	6	40	0	0	0	0	0	0	0	0	0	0	0
Waitaki District	2016	DOG	Spaniel, English Springer	43	25	18	4	29	0	0	0	0	0	0	0	0	0	0	0
Waitaki District	2016	DOG	Terrier, American Pit Bull	16	6	10	7	8	16	0	0	0	0	0	0	0	0	0	0
Waitaki District	2016	DOG	Terrier, Fox (Smooth)	137	67	70	13	54	0	0	0	0	0	0	0	0	0	0	0
Waitaki District	2016	DOG	Terrier, Jack Russell	217	103	114	19	112	0	0	0	0	0	0	0	0	0	0	0
Waitaki District	2016	DOG	Terrier, Staffordshire Bull	112	62	50	19	82	0	0	0	0	0	0	0	0	0	0	0
Waitaki District	2016	DOG	Terrier, West Highland White	28	18	10	2	22	0	0	0	0	0	0	0	0	0	0	0
Waitaki District	2016	DOG	_Unidentified_	644	339	305	69	425	0	0	0	0	0	0	0	0	0	0	0
Waitaki District	2016	OWN	_	0	0	0	0	0	0	0	0	0	3079	27	0	0	0	0	0
Waitomo District	2001	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	5	1288	0
Waitomo District	2002	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	10	1420	0
Waitomo District	2003	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	9	1218	0
Waitomo District	2004	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	19	1365	0
Waitomo District	2005	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	22	3693	0
Waitomo District	2006	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	20	10417	9680
Waitomo District	2007	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	26	12145	9869
Waitomo District	2008	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	22	2168	6029
Waitomo District	2009	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	30	2756	2594
Waitomo District	2010	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	29	2962	2933
Waitomo District	2011	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	29	3723	3709
Waitomo District	2012	JST	_	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Waitomo District	2012	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	29	2465	2336
Waitomo District	2013	DOG	_ALL-PURE_	3238	1594	1644	158	391	12	0	0	0	0	0	0	0	0	0	0
Waitomo District	2013	DOG	_ALL-CROSS_	626	322	304	78	229	13	2	0	0	0	0	0	0	0	0	0
Waitomo District	2013	DOG	_ALL-DOGS_	3864	1916	1948	236	620	25	2	0	0	0	0	0	0	0	0	0
Waitomo District	2013	DOG	Beagle	4	2	2	0	4	0	0	0	0	0	0	0	0	0	0	0
Waitomo District	2013	DOG	Bichon Frise	20	7	13	3	15	0	0	0	0	0	0	0	0	0	0	0
Waitomo District	2013	DOG	Boxer	14	9	5	3	7	0	0	0	0	0	0	0	0	0	0	0
Waitomo District	2013	DOG	Cattle, Australian	35	11	24	3	5	0	0	0	0	0	0	0	0	0	0	0
Waitomo District	2013	DOG	Chihuahua, Long Coat	6	2	4	0	4	0	0	0	0	0	0	0	0	0	0	0
Waitomo District	2013	DOG	Chihuahua, Smooth Coat	10	1	9	2	3	0	0	0	0	0	0	0	0	0	0	0
Waitomo District	2013	DOG	Collie, Bearded	47	25	22	3	3	0	0	0	0	0	0	0	0	0	0	0
Waitomo District	2013	DOG	Collie, Border	70	41	29	3	10	0	0	0	0	0	0	0	0	0	0	0
Waitomo District	2013	DOG	Collie, Rough	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Waitomo District	2013	DOG	Collie, Smooth	2	1	1	0	1	0	0	0	0	0	0	0	0	0	0	0
Waitomo District	2013	DOG	Greyhound	6	3	3	0	1	0	0	0	0	0	0	0	0	0	0	0
Waitomo District	2013	DOG	Heading	992	515	477	13	10	0	0	0	0	0	0	0	0	0	0	0
Waitomo District	2013	DOG	Huntaway	1252	563	689	13	24	0	0	0	0	0	0	0	0	0	0	0
Waitomo District	2013	DOG	Maltese	11	5	6	2	8	0	0	0	0	0	0	0	0	0	0	0
Waitomo District	2013	DOG	Poodle, Miniature	12	9	3	1	10	0	0	0	0	0	0	0	0	0	0	0
Waitomo District	2013	DOG	Poodle, Toy	6	3	3	0	3	0	0	0	0	0	0	0	0	0	0	0
Waitomo District	2013	DOG	Retriever, Golden	23	10	13	8	10	0	0	0	0	0	0	0	0	0	0	0
Waitomo District	2013	DOG	Retriever, Labrador	160	91	69	18	49	0	0	0	0	0	0	0	0	0	0	0
Waitomo District	2013	DOG	Rottweiler	20	11	9	5	8	0	0	0	0	0	0	0	0	0	0	0
Waitomo District	2013	DOG	Schnauzer, Miniature	8	5	3	1	4	0	0	0	0	0	0	0	0	0	0	0
Waitomo District	2013	DOG	Shepherd, German	16	8	8	3	6	0	0	0	0	0	0	0	0	0	0	0
Waitomo District	2013	DOG	Shih Tzu	8	4	4	1	5	0	0	0	0	0	0	0	0	0	0	0
Waitomo District	2013	DOG	Spaniel, Cavalier King Charles	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Waitomo District	2013	DOG	Spaniel, Cocker	8	5	3	2	5	0	0	0	0	0	0	0	0	0	0	0
Waitomo District	2013	DOG	Spaniel, English Springer	3	1	2	0	3	0	0	0	0	0	0	0	0	0	0	0
Waitomo District	2013	DOG	Terrier, American Pit Bull	13	6	7	2	7	12	0	0	0	0	0	0	0	0	0	0
Waitomo District	2013	DOG	Terrier, Fox (Smooth)	157	81	76	21	46	0	0	0	0	0	0	0	0	0	0	0
Waitomo District	2013	DOG	Terrier, Jack Russell	77	31	46	17	30	0	0	0	0	0	0	0	0	0	0	0
Waitomo District	2013	DOG	Terrier, Staffordshire Bull	26	12	14	6	12	0	0	0	0	0	0	0	0	0	0	0
Waitomo District	2013	DOG	Terrier, West Highland White	4	2	2	1	2	0	0	0	0	0	0	0	0	0	0	0
Waitomo District	2013	DOG	_Unidentified_	228	130	98	27	96	0	0	0	0	0	0	0	0	0	0	0
Waitomo District	2013	OWN	_	0	0	0	0	0	0	0	0	0	1414	31	0	0	0	0	0
Waitomo District	2013	JST	_	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Waitomo District	2013	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	25	2773	2865
Waitomo District	2014	DOG	_ALL-PURE_	3129	1524	1605	149	425	11	0	0	0	0	0	0	0	0	0	0
Waitomo District	2014	DOG	_ALL-CROSS_	660	331	329	74	270	9	1	0	0	0	0	0	0	0	0	0
Waitomo District	2014	DOG	_ALL-DOGS_	3789	1855	1934	223	695	20	1	0	0	0	0	0	0	0	0	0
Waitomo District	2014	DOG	Beagle	4	2	2	0	4	0	0	0	0	0	0	0	0	0	0	0
Waitomo District	2014	DOG	Bichon Frise	22	7	15	3	16	0	0	0	0	0	0	0	0	0	0	0
Waitomo District	2014	DOG	Boxer	13	8	5	2	6	0	0	0	0	0	0	0	0	0	0	0
Waitomo District	2014	DOG	Cattle, Australian	34	10	24	4	5	0	0	0	0	0	0	0	0	0	0	0
Waitomo District	2014	DOG	Chihuahua, Long Coat	9	4	5	0	7	0	0	0	0	0	0	0	0	0	0	0
Waitomo District	2014	DOG	Chihuahua, Smooth Coat	11	4	7	1	3	0	0	0	0	0	0	0	0	0	0	0
Waitomo District	2014	DOG	Collie, Bearded	43	22	21	3	3	0	0	0	0	0	0	0	0	0	0	0
Waitomo District	2014	DOG	Collie, Border	70	38	32	1	9	0	0	0	0	0	0	0	0	0	0	0
Waitomo District	2014	DOG	Collie, Rough	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Waitomo District	2014	DOG	Collie, Smooth	1	1	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Waitomo District	2014	DOG	Greyhound	6	2	4	0	1	0	0	0	0	0	0	0	0	0	0	0
Waitomo District	2014	DOG	Heading	928	477	451	13	15	0	0	0	0	0	0	0	0	0	0	0
Waitomo District	2014	DOG	Huntaway	1194	533	661	12	21	0	0	0	0	0	0	0	0	0	0	0
Waitomo District	2014	DOG	Maltese	12	6	6	2	7	0	0	0	0	0	0	0	0	0	0	0
Waitomo District	2014	DOG	Poodle, Miniature	10	7	3	1	8	0	0	0	0	0	0	0	0	0	0	0
Waitomo District	2014	DOG	Poodle, Toy	4	1	3	0	2	0	0	0	0	0	0	0	0	0	0	0
Waitomo District	2014	DOG	Retriever, Golden	19	8	11	5	12	0	0	0	0	0	0	0	0	0	0	0
Waitomo District	2014	DOG	Retriever, Labrador	168	92	76	20	55	0	0	0	0	0	0	0	0	0	0	0
Waitomo District	2014	DOG	Rottweiler	18	8	10	4	9	0	0	0	0	0	0	0	0	0	0	0
Waitomo District	2014	DOG	Schnauzer, Miniature	8	5	3	0	6	0	0	0	0	0	0	0	0	0	0	0
Waitomo District	2014	DOG	Shepherd, German	17	9	8	3	8	0	0	0	0	0	0	0	0	0	0	0
Waitomo District	2014	DOG	Shih Tzu	12	6	6	1	7	0	0	0	0	0	0	0	0	0	0	0
Waitomo District	2014	DOG	Spaniel, Cavalier King Charles	1	0	1	0	1	0	0	0	0	0	0	0	0	0	0	0
Waitomo District	2014	DOG	Spaniel, Cocker	7	4	3	2	5	0	0	0	0	0	0	0	0	0	0	0
Waitomo District	2014	DOG	Spaniel, English Springer	4	1	3	1	4	0	0	0	0	0	0	0	0	0	0	0
Waitomo District	2014	DOG	Terrier, American Pit Bull	11	6	5	2	8	11	0	0	0	0	0	0	0	0	0	0
Waitomo District	2014	DOG	Terrier, Fox (Smooth)	143	76	67	18	46	0	0	0	0	0	0	0	0	0	0	0
Waitomo District	2014	DOG	Terrier, Jack Russell	79	34	45	15	30	0	0	0	0	0	0	0	0	0	0	0
Waitomo District	2014	DOG	Terrier, Staffordshire Bull	31	17	14	4	15	0	0	0	0	0	0	0	0	0	0	0
Waitomo District	2014	DOG	Terrier, West Highland White	4	2	2	1	2	0	0	0	0	0	0	0	0	0	0	0
Waitomo District	2014	DOG	_Unidentified_	246	134	112	31	110	0	0	0	0	0	0	0	0	0	0	0
Waitomo District	2014	OWN	_	0	0	0	0	0	0	0	0	0	1428	24	0	0	0	0	0
Waitomo District	2014	JST	_	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Waitomo District	2014	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	29	10470	10238
Waitomo District	2015	DOG	_ALL-PURE_	2970	1411	1559	178	420	12	0	0	0	0	0	0	0	0	0	0
Waitomo District	2015	DOG	_ALL-CROSS_	620	320	300	91	275	8	0	0	0	0	0	0	0	0	0	0
Waitomo District	2015	DOG	_ALL-DOGS_	3590	1731	1859	269	695	20	0	0	0	0	0	0	0	0	0	0
Waitomo District	2015	DOG	Beagle	3	1	2	0	3	0	0	0	0	0	0	0	0	0	0	0
Waitomo District	2015	DOG	Bichon Frise	18	4	14	2	13	0	0	0	0	0	0	0	0	0	0	0
Waitomo District	2015	DOG	Boxer	15	9	6	3	6	0	0	0	0	0	0	0	0	0	0	0
Waitomo District	2015	DOG	Cattle, Australian	47	17	30	2	5	0	0	0	0	0	0	0	0	0	0	0
Waitomo District	2015	DOG	Chihuahua, Long Coat	8	3	5	1	8	0	0	0	0	0	0	0	0	0	0	0
Waitomo District	2015	DOG	Chihuahua, Smooth Coat	9	4	5	2	4	0	0	0	0	0	0	0	0	0	0	0
Waitomo District	2015	DOG	Collie, Bearded	39	18	21	2	3	0	0	0	0	0	0	0	0	0	0	0
Waitomo District	2015	DOG	Collie, Border	80	45	35	2	13	0	0	0	0	0	0	0	0	0	0	0
Waitomo District	2015	DOG	Collie, Rough	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Waitomo District	2015	DOG	Collie, Smooth	2	1	1	0	0	0	0	0	0	0	0	0	0	0	0	0
Waitomo District	2015	DOG	Greyhound	7	5	2	0	2	0	0	0	0	0	0	0	0	0	0	0
Waitomo District	2015	DOG	Heading	885	446	439	13	12	0	0	0	0	0	0	0	0	0	0	0
Waitomo District	2015	DOG	Huntaway	1115	484	631	18	21	0	0	0	0	0	0	0	0	0	0	0
Waitomo District	2015	DOG	Maltese	13	5	8	1	9	0	0	0	0	0	0	0	0	0	0	0
Waitomo District	2015	DOG	Poodle, Miniature	7	3	4	1	6	0	0	0	0	0	0	0	0	0	0	0
Waitomo District	2015	DOG	Poodle, Toy	4	1	3	2	3	0	0	0	0	0	0	0	0	0	0	0
Waitomo District	2015	DOG	Retriever, Golden	13	6	7	3	11	0	0	0	0	0	0	0	0	0	0	0
Waitomo District	2015	DOG	Retriever, Labrador	152	80	72	25	56	0	0	0	0	0	0	0	0	0	0	0
Waitomo District	2015	DOG	Rottweiler	21	11	10	6	9	0	0	0	0	0	0	0	0	0	0	0
Waitomo District	2015	DOG	Schnauzer, Miniature	3	1	2	1	2	0	0	0	0	0	0	0	0	0	0	0
Waitomo District	2015	DOG	Shepherd, German	15	5	10	2	9	0	0	0	0	0	0	0	0	0	0	0
Waitomo District	2015	DOG	Shih Tzu	12	5	7	3	6	0	0	0	0	0	0	0	0	0	0	0
Waitomo District	2015	DOG	Spaniel, Cavalier King Charles	2	0	2	0	1	0	0	0	0	0	0	0	0	0	0	0
Waitomo District	2015	DOG	Spaniel, Cocker	8	6	2	4	5	0	0	0	0	0	0	0	0	0	0	0
Waitomo District	2015	DOG	Spaniel, English Springer	2	0	2	0	2	0	0	0	0	0	0	0	0	0	0	0
Waitomo District	2015	DOG	Terrier, American Pit Bull	14	9	5	5	8	12	0	0	0	0	0	0	0	0	0	0
Waitomo District	2015	DOG	Terrier, Fox (Smooth)	126	69	57	24	50	0	0	0	0	0	0	0	0	0	0	0
Waitomo District	2015	DOG	Terrier, Jack Russell	72	34	38	12	29	0	0	0	0	0	0	0	0	0	0	0
Waitomo District	2015	DOG	Terrier, Staffordshire Bull	31	14	17	2	14	0	0	0	0	0	0	0	0	0	0	0
Waitomo District	2015	DOG	Terrier, West Highland White	2	0	2	1	1	0	0	0	0	0	0	0	0	0	0	0
Waitomo District	2015	DOG	_Unidentified_	245	125	120	41	109	0	0	0	0	0	0	0	0	0	0	0
Waitomo District	2015	OWN	_	0	0	0	0	0	0	0	0	0	1374	13	0	0	0	0	0
Waitomo District	2015	JST	_	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Waitomo District	2015	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	28	4824	5342
Waitomo District	2016	DOG	_ALL-PURE_	2881	1410	1471	190	448	12	0	0	0	0	0	0	0	0	0	0
Waitomo District	2016	DOG	_ALL-CROSS_	663	322	341	120	333	11	0	0	0	0	0	0	0	0	0	0
Waitomo District	2016	DOG	_ALL-DOGS_	3544	1732	1812	310	781	23	0	0	0	0	0	0	0	0	0	0
Waitomo District	2016	DOG	Beagle	7	3	4	1	4	0	0	0	0	0	0	0	0	0	0	0
Waitomo District	2016	DOG	Bichon Frise	19	6	13	4	15	0	0	0	0	0	0	0	0	0	0	0
Waitomo District	2016	DOG	Boxer	11	6	5	2	6	0	0	0	0	0	0	0	0	0	0	0
Waitomo District	2016	DOG	Cattle, Australian	41	19	22	2	6	0	0	0	0	0	0	0	0	0	0	0
Waitomo District	2016	DOG	Chihuahua, Long Coat	13	4	9	3	10	0	0	0	0	0	0	0	0	0	0	0
Waitomo District	2016	DOG	Chihuahua, Smooth Coat	11	5	6	1	6	0	0	0	0	0	0	0	0	0	0	0
Waitomo District	2016	DOG	Collie, Bearded	51	24	27	2	5	0	0	0	0	0	0	0	0	0	0	0
Waitomo District	2016	DOG	Collie, Border	78	45	33	4	15	0	0	0	0	0	0	0	0	0	0	0
Waitomo District	2016	DOG	Collie, Rough	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Waitomo District	2016	DOG	Collie, Smooth	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Waitomo District	2016	DOG	Greyhound	6	4	2	0	1	0	0	0	0	0	0	0	0	0	0	0
Waitomo District	2016	DOG	Heading	859	439	420	9	15	0	0	0	0	0	0	0	0	0	0	0
Waitomo District	2016	DOG	Huntaway	1091	493	598	28	21	0	0	0	0	0	0	0	0	0	0	0
Waitomo District	2016	DOG	Maltese	14	7	7	4	10	0	0	0	0	0	0	0	0	0	0	0
Waitomo District	2016	DOG	Poodle, Miniature	6	3	3	1	5	0	0	0	0	0	0	0	0	0	0	0
Waitomo District	2016	DOG	Poodle, Toy	4	1	3	2	3	0	0	0	0	0	0	0	0	0	0	0
Waitomo District	2016	DOG	Retriever, Golden	14	6	8	3	12	0	0	0	0	0	0	0	0	0	0	0
Waitomo District	2016	DOG	Retriever, Labrador	136	72	64	23	61	0	0	0	0	0	0	0	0	0	0	0
Waitomo District	2016	DOG	Rottweiler	21	10	11	8	9	0	0	0	0	0	0	0	0	0	0	0
Waitomo District	2016	DOG	Schnauzer, Miniature	4	2	2	2	3	0	0	0	0	0	0	0	0	0	0	0
Waitomo District	2016	DOG	Shepherd, German	16	6	10	3	10	0	0	0	0	0	0	0	0	0	0	0
Waitomo District	2016	DOG	Shih Tzu	10	5	5	4	6	0	0	0	0	0	0	0	0	0	0	0
Waitomo District	2016	DOG	Spaniel, Cavalier King Charles	2	0	2	1	1	0	0	0	0	0	0	0	0	0	0	0
Waitomo District	2016	DOG	Spaniel, Cocker	6	5	1	3	5	0	0	0	0	0	0	0	0	0	0	0
Waitomo District	2016	DOG	Spaniel, English Springer	2	0	2	0	2	0	0	0	0	0	0	0	0	0	0	0
Waitomo District	2016	DOG	Terrier, American Pit Bull	12	8	4	4	8	12	0	0	0	0	0	0	0	0	0	0
Waitomo District	2016	DOG	Terrier, Fox (Smooth)	110	60	50	20	46	0	0	0	0	0	0	0	0	0	0	0
Waitomo District	2016	DOG	Terrier, Jack Russell	61	30	31	11	27	0	0	0	0	0	0	0	0	0	0	0
Waitomo District	2016	DOG	Terrier, Staffordshire Bull	32	14	18	3	16	0	0	0	0	0	0	0	0	0	0	0
Waitomo District	2016	DOG	Terrier, West Highland White	2	0	2	1	1	0	0	0	0	0	0	0	0	0	0	0
Waitomo District	2016	DOG	_Unidentified_	242	133	109	41	119	0	0	0	0	0	0	0	0	0	0	0
Waitomo District	2016	OWN	_	0	0	0	0	0	0	0	0	0	1380	8	0	0	0	0	0
Wellington City	2001	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	102	25407	0
Wellington City	2002	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	81	75899	0
Wellington City	2003	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	69	28244	0
Wellington City	2004	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	135	31034	0
Wellington City	2005	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	164	17704	0
Wellington City	2006	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	216	31026	24704
Wellington City	2007	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	218	32576	32943
Wellington City	2008	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	196	24471	35776
Wellington City	2009	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	205	31517	43978
Wellington City	2010	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	224	33200	30879
Wellington City	2011	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	271	29154	41258
Wellington City	2012	JST	_	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Wellington City	2012	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	244	30153	33985
Wellington City	2013	DOG	_ALL-PURE_	5036	2399	2637	3856	3224	44	2	0	0	0	0	0	0	0	0	0
Wellington City	2013	DOG	_ALL-CROSS_	3563	1798	1765	2978	2554	67	10	0	0	0	0	0	0	0	0	0
Wellington City	2013	DOG	_ALL-DOGS_	8599	4197	4402	6834	5778	111	12	0	0	0	0	0	0	0	0	0
Wellington City	2013	DOG	Beagle	85	47	38	74	54	0	0	0	0	0	0	0	0	0	0	0
Wellington City	2013	DOG	Bichon Frise	151	69	82	133	98	0	0	0	0	0	0	0	0	0	0	0
Wellington City	2013	DOG	Boxer	90	43	47	67	64	2	0	0	0	0	0	0	0	0	0	0
Wellington City	2013	DOG	Cattle, Australian	32	13	19	28	20	0	0	0	0	0	0	0	0	0	0	0
Wellington City	2013	DOG	Chihuahua, Long Coat	36	13	23	23	24	0	0	0	0	0	0	0	0	0	0	0
Wellington City	2013	DOG	Chihuahua, Smooth Coat	67	31	36	46	47	0	0	0	0	0	0	0	0	0	0	0
Wellington City	2013	DOG	Collie, Bearded	18	7	11	13	10	0	0	0	0	0	0	0	0	0	0	0
Wellington City	2013	DOG	Collie, Border	186	91	95	150	113	1	0	0	0	0	0	0	0	0	0	0
Wellington City	2013	DOG	Collie, Rough	10	7	3	7	6	0	0	0	0	0	0	0	0	0	0	0
Wellington City	2013	DOG	Collie, Smooth	1	1	0	1	1	0	0	0	0	0	0	0	0	0	0	0
Wellington City	2013	DOG	Greyhound	71	32	39	70	63	3	0	0	0	0	0	0	0	0	0	0
Wellington City	2013	DOG	Heading	37	17	20	7	7	0	0	0	0	0	0	0	0	0	0	0
Wellington City	2013	DOG	Huntaway	94	41	53	41	30	0	0	0	0	0	0	0	0	0	0	0
Wellington City	2013	DOG	Maltese	47	17	30	36	36	0	0	0	0	0	0	0	0	0	0	0
Wellington City	2013	DOG	Poodle, Miniature	105	44	61	90	60	0	0	0	0	0	0	0	0	0	0	0
Wellington City	2013	DOG	Poodle, Toy	73	40	33	53	56	0	0	0	0	0	0	0	0	0	0	0
Wellington City	2013	DOG	Retriever, Golden	222	85	137	155	118	1	0	0	0	0	0	0	0	0	0	0
Wellington City	2013	DOG	Retriever, Labrador	724	377	347	585	488	0	0	0	0	0	0	0	0	0	0	0
Wellington City	2013	DOG	Rottweiler	63	29	34	34	42	0	0	0	0	0	0	0	0	0	0	0
Wellington City	2013	DOG	Schnauzer, Miniature	129	49	80	104	96	0	0	0	0	0	0	0	0	0	0	0
Wellington City	2013	DOG	Shepherd, German	159	97	62	91	99	2	1	0	0	0	0	0	0	0	0	0
Wellington City	2013	DOG	Shih Tzu	52	21	31	45	39	0	0	0	0	0	0	0	0	0	0	0
Wellington City	2013	DOG	Spaniel, Cavalier King Charles	125	53	72	102	83	0	0	0	0	0	0	0	0	0	0	0
Wellington City	2013	DOG	Spaniel, Cocker	106	58	48	89	70	0	0	0	0	0	0	0	0	0	0	0
Wellington City	2013	DOG	Spaniel, English Springer	56	30	26	40	33	0	0	0	0	0	0	0	0	0	0	0
Wellington City	2013	DOG	Terrier, American Pit Bull	28	13	15	22	26	27	0	0	0	0	0	0	0	0	0	0
Wellington City	2013	DOG	Terrier, Fox (Smooth)	179	81	98	155	99	1	0	0	0	0	0	0	0	0	0	0
Wellington City	2013	DOG	Terrier, Jack Russell	248	106	142	211	137	2	0	0	0	0	0	0	0	0	0	0
Wellington City	2013	DOG	Terrier, Staffordshire Bull	116	70	46	79	81	0	0	0	0	0	0	0	0	0	0	0
Wellington City	2013	DOG	Terrier, West Highland White	106	54	52	89	74	0	0	0	0	0	0	0	0	0	0	0
Wellington City	2013	DOG	_Unidentified_	1620	763	857	1216	1050	5	1	0	0	0	0	0	0	0	0	0
Wellington City	2013	OWN	_	0	0	0	0	0	0	0	0	0	7231	56	0	0	0	0	0
Wellington City	2013	JST	_	0	0	0	0	0	0	0	0	0	0	0	2	0	0	0	0
Wellington City	2013	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	236	37756	34918
Wellington City	2014	DOG	_ALL-PURE_	5489	2600	2889	4228	3777	42	3	0	0	0	0	0	0	0	0	0
Wellington City	2014	DOG	_ALL-CROSS_	3989	2002	1987	3377	3015	69	10	0	0	0	0	0	0	0	0	0
Wellington City	2014	DOG	_ALL-DOGS_	9478	4602	4876	7605	6792	111	13	0	0	0	0	0	0	0	0	0
Wellington City	2014	DOG	Beagle	92	43	49	77	65	0	0	0	0	0	0	0	0	0	0	0
Wellington City	2014	DOG	Bichon Frise	158	66	92	143	108	0	0	0	0	0	0	0	0	0	0	0
Wellington City	2014	DOG	Boxer	82	38	44	62	60	2	0	0	0	0	0	0	0	0	0	0
Wellington City	2014	DOG	Cattle, Australian	33	15	18	27	22	0	0	0	0	0	0	0	0	0	0	0
Wellington City	2014	DOG	Chihuahua, Long Coat	42	12	30	27	29	0	0	0	0	0	0	0	0	0	0	0
Wellington City	2014	DOG	Chihuahua, Smooth Coat	64	27	37	50	48	0	0	0	0	0	0	0	0	0	0	0
Wellington City	2014	DOG	Collie, Bearded	20	7	13	17	12	0	0	0	0	0	0	0	0	0	0	0
Wellington City	2014	DOG	Collie, Border	200	93	107	166	135	1	0	0	0	0	0	0	0	0	0	0
Wellington City	2014	DOG	Collie, Rough	11	8	3	8	7	0	0	0	0	0	0	0	0	0	0	0
Wellington City	2014	DOG	Collie, Smooth	3	2	1	2	2	0	0	0	0	0	0	0	0	0	0	0
Wellington City	2014	DOG	Greyhound	95	46	49	93	87	3	0	0	0	0	0	0	0	0	0	0
Wellington City	2014	DOG	Heading	39	20	19	8	8	0	0	0	0	0	0	0	0	0	0	0
Wellington City	2014	DOG	Huntaway	107	51	56	52	37	0	0	0	0	0	0	0	0	0	0	0
Wellington City	2014	DOG	Maltese	54	22	32	40	41	0	0	0	0	0	0	0	0	0	0	0
Wellington City	2014	DOG	Poodle, Miniature	121	51	70	101	72	0	0	0	0	0	0	0	0	0	0	0
Wellington City	2014	DOG	Poodle, Toy	68	37	31	49	51	0	0	0	0	0	0	0	0	0	0	0
Wellington City	2014	DOG	Retriever, Golden	229	96	133	174	149	1	0	0	0	0	0	0	0	0	0	0
Wellington City	2014	DOG	Retriever, Labrador	785	400	385	638	569	0	1	0	0	0	0	0	0	0	0	0
Wellington City	2014	DOG	Rottweiler	69	36	33	40	49	0	0	0	0	0	0	0	0	0	0	0
Wellington City	2014	DOG	Schnauzer, Miniature	167	63	104	129	128	0	0	0	0	0	0	0	0	0	0	0
Wellington City	2014	DOG	Shepherd, German	169	100	69	106	111	2	1	0	0	0	0	0	0	0	0	0
Wellington City	2014	DOG	Shih Tzu	56	24	32	51	46	0	0	0	0	0	0	0	0	0	0	0
Wellington City	2014	DOG	Spaniel, Cavalier King Charles	129	53	76	104	93	0	0	0	0	0	0	0	0	0	0	0
Wellington City	2014	DOG	Spaniel, Cocker	117	68	49	92	80	0	0	0	0	0	0	0	0	0	0	0
Wellington City	2014	DOG	Spaniel, English Springer	67	36	31	49	39	0	0	0	0	0	0	0	0	0	0	0
Wellington City	2014	DOG	Terrier, American Pit Bull	26	14	12	22	24	25	0	0	0	0	0	0	0	0	0	0
Wellington City	2014	DOG	Terrier, Fox (Smooth)	186	82	104	163	109	1	0	0	0	0	0	0	0	0	0	0
Wellington City	2014	DOG	Terrier, Jack Russell	255	110	145	205	156	2	0	0	0	0	0	0	0	0	0	0
Wellington City	2014	DOG	Terrier, Staffordshire Bull	132	82	50	92	92	1	0	0	0	0	0	0	0	0	0	0
Wellington City	2014	DOG	Terrier, West Highland White	134	62	72	110	96	0	0	0	0	0	0	0	0	0	0	0
Wellington City	2014	DOG	_Unidentified_	1779	836	943	1331	1252	4	1	0	0	0	0	0	0	0	0	0
Wellington City	2014	OWN	_	0	0	0	0	0	0	0	0	0	7947	49	0	0	0	0	0
Wellington City	2014	JST	_	0	0	0	0	0	0	0	0	0	0	0	2	1	0	0	0
Wellington City	2014	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	265	34825	38446
Wellington City	2015	DOG	_ALL-PURE_	6044	2931	3113	4748	4446	39	3	0	0	0	0	0	0	0	0	0
Wellington City	2015	DOG	_ALL-CROSS_	4532	2233	2299	3920	3582	61	7	0	0	0	0	0	0	0	0	0
Wellington City	2015	DOG	_ALL-DOGS_	10576	5164	5412	8668	8028	100	10	0	0	0	0	0	0	0	0	0
Wellington City	2015	DOG	Beagle	91	44	47	76	70	0	0	0	0	0	0	0	0	0	0	0
Wellington City	2015	DOG	Bichon Frise	171	72	99	157	124	0	0	0	0	0	0	0	0	0	0	0
Wellington City	2015	DOG	Boxer	83	39	44	61	69	1	0	0	0	0	0	0	0	0	0	0
Wellington City	2015	DOG	Cattle, Australian	36	16	20	32	26	0	0	0	0	0	0	0	0	0	0	0
Wellington City	2015	DOG	Chihuahua, Long Coat	59	21	38	43	44	0	0	0	0	0	0	0	0	0	0	0
Wellington City	2015	DOG	Chihuahua, Smooth Coat	93	43	50	76	74	0	0	0	0	0	0	0	0	0	0	0
Wellington City	2015	DOG	Collie, Bearded	29	12	17	22	21	0	0	0	0	0	0	0	0	0	0	0
Wellington City	2015	DOG	Collie, Border	241	120	121	199	169	2	0	0	0	0	0	0	0	0	0	0
Wellington City	2015	DOG	Collie, Rough	11	7	4	9	6	0	0	0	0	0	0	0	0	0	0	0
Wellington City	2015	DOG	Collie, Smooth	2	1	1	1	1	0	0	0	0	0	0	0	0	0	0	0
Wellington City	2015	DOG	Greyhound	105	54	51	104	100	1	0	0	0	0	0	0	0	0	0	0
Wellington City	2015	DOG	Heading	45	21	24	12	11	0	0	0	0	0	0	0	0	0	0	0
Wellington City	2015	DOG	Huntaway	104	49	55	55	44	0	0	0	0	0	0	0	0	0	0	0
Wellington City	2015	DOG	Maltese	57	25	32	40	45	0	0	0	0	0	0	0	0	0	0	0
Wellington City	2015	DOG	Poodle, Miniature	134	54	80	115	90	0	0	0	0	0	0	0	0	0	0	0
Wellington City	2015	DOG	Poodle, Toy	62	30	32	46	50	0	0	0	0	0	0	0	0	0	0	0
Wellington City	2015	DOG	Retriever, Golden	238	101	137	176	173	1	0	0	0	0	0	0	0	0	0	0
Wellington City	2015	DOG	Retriever, Labrador	853	456	397	733	652	1	1	0	0	0	0	0	0	0	0	0
Wellington City	2015	DOG	Rottweiler	70	35	35	42	57	0	0	0	0	0	0	0	0	0	0	0
Wellington City	2015	DOG	Schnauzer, Miniature	217	89	128	155	166	0	0	0	0	0	0	0	0	0	0	0
Wellington City	2015	DOG	Shepherd, German	176	107	69	117	127	2	0	0	0	0	0	0	0	0	0	0
Wellington City	2015	DOG	Shih Tzu	66	29	37	61	58	0	0	0	0	0	0	0	0	0	0	0
Wellington City	2015	DOG	Spaniel, Cavalier King Charles	141	65	76	120	102	0	0	0	0	0	0	0	0	0	0	0
Wellington City	2015	DOG	Spaniel, Cocker	128	72	56	99	91	0	0	0	0	0	0	0	0	0	0	0
Wellington City	2015	DOG	Spaniel, English Springer	72	37	35	47	44	0	0	0	0	0	0	0	0	0	0	0
Wellington City	2015	DOG	Terrier, American Pit Bull	24	12	12	20	22	22	0	0	0	0	0	0	0	0	0	0
Wellington City	2015	DOG	Terrier, Fox (Smooth)	186	91	95	172	118	1	0	0	0	0	0	0	0	0	0	0
Wellington City	2015	DOG	Terrier, Jack Russell	266	118	148	228	167	2	1	0	0	0	0	0	0	0	0	0
Wellington City	2015	DOG	Terrier, Staffordshire Bull	141	82	59	95	109	1	1	0	0	0	0	0	0	0	0	0
Wellington City	2015	DOG	Terrier, West Highland White	146	70	76	128	115	0	0	0	0	0	0	0	0	0	0	0
Wellington City	2015	DOG	_Unidentified_	1997	959	1038	1507	1501	5	0	0	0	0	0	0	0	0	0	0
Wellington City	2015	OWN	_	0	0	0	0	0	0	0	0	0	8866	40	0	0	0	0	0
Wellington City	2015	JST	_	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Wellington City	2015	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	263	29229	37381
Wellington City	2016	DOG	_ALL-PURE_	5786	2794	2992	4530	4524	29	3	0	0	0	0	0	0	0	0	0
Wellington City	2016	DOG	_ALL-CROSS_	4597	2266	2331	3923	3745	58	7	0	0	0	0	0	0	0	0	0
Wellington City	2016	DOG	_ALL-DOGS_	10383	5060	5323	8453	8269	87	10	0	0	0	0	0	0	0	0	0
Wellington City	2016	DOG	Beagle	86	46	40	71	72	0	0	0	0	0	0	0	0	0	0	0
Wellington City	2016	DOG	Bichon Frise	162	73	89	147	126	0	0	0	0	0	0	0	0	0	0	0
Wellington City	2016	DOG	Boxer	76	38	38	60	64	2	0	0	0	0	0	0	0	0	0	0
Wellington City	2016	DOG	Cattle, Australian	38	16	22	32	30	0	0	0	0	0	0	0	0	0	0	0
Wellington City	2016	DOG	Chihuahua, Long Coat	50	19	31	35	39	0	0	0	0	0	0	0	0	0	0	0
Wellington City	2016	DOG	Chihuahua, Smooth Coat	93	45	48	78	75	0	0	0	0	0	0	0	0	0	0	0
Wellington City	2016	DOG	Collie, Bearded	27	12	15	22	21	0	0	0	0	0	0	0	0	0	0	0
Wellington City	2016	DOG	Collie, Border	240	131	109	192	183	1	0	0	0	0	0	0	0	0	0	0
Wellington City	2016	DOG	Collie, Rough	9	6	3	9	6	0	0	0	0	0	0	0	0	0	0	0
Wellington City	2016	DOG	Collie, Smooth	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Wellington City	2016	DOG	Greyhound	101	51	50	100	97	1	0	0	0	0	0	0	0	0	0	0
Wellington City	2016	DOG	Heading	44	21	23	14	12	0	0	0	0	0	0	0	0	0	0	0
Wellington City	2016	DOG	Huntaway	104	50	54	58	52	0	0	0	0	0	0	0	0	0	0	0
Wellington City	2016	DOG	Maltese	58	24	34	45	49	0	0	0	0	0	0	0	0	0	0	0
Wellington City	2016	DOG	Poodle, Miniature	124	44	80	108	86	0	0	0	0	0	0	0	0	0	0	0
Wellington City	2016	DOG	Poodle, Toy	53	24	29	39	43	0	0	0	0	0	0	0	0	0	0	0
Wellington City	2016	DOG	Retriever, Golden	223	96	127	164	177	0	0	0	0	0	0	0	0	0	0	0
Wellington City	2016	DOG	Retriever, Labrador	831	435	396	692	670	2	1	0	0	0	0	0	0	0	0	0
Wellington City	2016	DOG	Rottweiler	69	34	35	48	59	1	1	0	0	0	0	0	0	0	0	0
Wellington City	2016	DOG	Schnauzer, Miniature	217	83	134	174	183	0	0	0	0	0	0	0	0	0	0	0
Wellington City	2016	DOG	Shepherd, German	180	102	78	112	141	3	0	0	0	0	0	0	0	0	0	0
Wellington City	2016	DOG	Shih Tzu	65	26	39	61	57	0	0	0	0	0	0	0	0	0	0	0
Wellington City	2016	DOG	Spaniel, Cavalier King Charles	127	58	69	107	98	0	0	0	0	0	0	0	0	0	0	0
Wellington City	2016	DOG	Spaniel, Cocker	116	65	51	92	90	0	0	0	0	0	0	0	0	0	0	0
Wellington City	2016	DOG	Spaniel, English Springer	72	40	32	50	52	0	0	0	0	0	0	0	0	0	0	0
Wellington City	2016	DOG	Terrier, American Pit Bull	14	8	6	14	14	13	0	0	0	0	0	0	0	0	0	0
Wellington City	2016	DOG	Terrier, Fox (Smooth)	163	79	84	150	115	1	1	0	0	0	0	0	0	0	0	0
Wellington City	2016	DOG	Terrier, Jack Russell	245	114	131	211	170	2	0	0	0	0	0	0	0	0	0	0
Wellington City	2016	DOG	Terrier, Staffordshire Bull	133	79	54	97	107	1	0	0	0	0	0	0	0	0	0	0
Wellington City	2016	DOG	Terrier, West Highland White	141	62	79	123	110	0	0	0	0	0	0	0	0	0	0	0
Wellington City	2016	DOG	_Unidentified_	1925	913	1012	1425	1526	2	0	0	0	0	0	0	0	0	0	0
Wellington City	2016	OWN	_	0	0	0	0	0	0	0	0	0	8737	33	0	0	0	0	0
Western Bay of Plenty District	2001	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	6	482	0
Western Bay of Plenty District	2002	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	0	68	0
Western Bay of Plenty District	2003	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	7	7320	0
Western Bay of Plenty District	2004	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	24	927	0
Western Bay of Plenty District	2005	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	12	780	0
Western Bay of Plenty District	2006	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	18	3853	3906
Western Bay of Plenty District	2007	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	37	5051	4900
Western Bay of Plenty District	2008	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	51	7958	6232
Western Bay of Plenty District	2009	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	61	20274	16418
Western Bay of Plenty District	2010	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	66	22171	13930
Western Bay of Plenty District	2011	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	55	9260	17937
Western Bay of Plenty District	2012	JST	_	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Western Bay of Plenty District	2012	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	74	38146	29306
Western Bay of Plenty District	2013	DOG	_ALL-PURE_	5195	2696	2499	2694	2801	59	12	0	0	0	0	0	0	0	0	0
Western Bay of Plenty District	2013	DOG	_ALL-CROSS_	2932	1508	1424	1710	1661	57	11	0	0	0	0	0	0	0	0	0
Western Bay of Plenty District	2013	DOG	_ALL-DOGS_	8127	4204	3923	4404	4462	116	23	0	0	0	0	0	0	0	0	0
Western Bay of Plenty District	2013	DOG	Beagle	25	12	13	19	17	1	0	0	0	0	0	0	0	0	0	0
Western Bay of Plenty District	2013	DOG	Bichon Frise	58	33	25	39	32	0	0	0	0	0	0	0	0	0	0	0
Western Bay of Plenty District	2013	DOG	Boxer	96	51	45	56	54	1	1	0	0	0	0	0	0	0	0	0
Western Bay of Plenty District	2013	DOG	Cattle, Australian	127	64	63	53	53	1	1	0	0	0	0	0	0	0	0	0
Western Bay of Plenty District	2013	DOG	Chihuahua, Long Coat	56	32	24	34	37	0	0	0	0	0	0	0	0	0	0	0
Western Bay of Plenty District	2013	DOG	Chihuahua, Smooth Coat	47	27	20	23	19	0	0	0	0	0	0	0	0	0	0	0
Western Bay of Plenty District	2013	DOG	Collie, Bearded	47	25	22	21	16	0	0	0	0	0	0	0	0	0	0	0
Western Bay of Plenty District	2013	DOG	Collie, Border	403	223	180	206	179	1	0	0	0	0	0	0	0	0	0	0
Western Bay of Plenty District	2013	DOG	Collie, Rough	25	14	11	9	17	0	0	0	0	0	0	0	0	0	0	0
Western Bay of Plenty District	2013	DOG	Collie, Smooth	15	8	7	7	4	0	0	0	0	0	0	0	0	0	0	0
Western Bay of Plenty District	2013	DOG	Greyhound	25	16	9	4	13	0	0	0	0	0	0	0	0	0	0	0
Western Bay of Plenty District	2013	DOG	Heading	193	106	87	24	25	0	0	0	0	0	0	0	0	0	0	0
Western Bay of Plenty District	2013	DOG	Huntaway	279	129	150	54	49	0	0	0	0	0	0	0	0	0	0	0
Western Bay of Plenty District	2013	DOG	Maltese	84	46	38	47	59	0	0	0	0	0	0	0	0	0	0	0
Western Bay of Plenty District	2013	DOG	Poodle, Miniature	40	17	23	27	27	0	0	0	0	0	0	0	0	0	0	0
Western Bay of Plenty District	2013	DOG	Poodle, Toy	65	38	27	49	51	0	0	0	0	0	0	0	0	0	0	0
Western Bay of Plenty District	2013	DOG	Retriever, Golden	172	96	76	96	93	0	0	0	0	0	0	0	0	0	0	0
Western Bay of Plenty District	2013	DOG	Retriever, Labrador	711	365	346	417	437	4	1	0	0	0	0	0	0	0	0	0
Western Bay of Plenty District	2013	DOG	Rottweiler	115	61	54	37	63	0	1	0	0	0	0	0	0	0	0	0
Western Bay of Plenty District	2013	DOG	Schnauzer, Miniature	90	51	39	40	62	0	0	0	0	0	0	0	0	0	0	0
Western Bay of Plenty District	2013	DOG	Shepherd, German	198	84	114	97	114	1	1	0	0	0	0	0	0	0	0	0
Western Bay of Plenty District	2013	DOG	Shih Tzu	94	51	43	40	74	0	0	0	0	0	0	0	0	0	0	0
Western Bay of Plenty District	2013	DOG	Spaniel, Cavalier King Charles	48	28	20	36	38	0	0	0	0	0	0	0	0	0	0	0
Western Bay of Plenty District	2013	DOG	Spaniel, Cocker	71	32	39	43	47	0	0	0	0	0	0	0	0	0	0	0
Western Bay of Plenty District	2013	DOG	Spaniel, English Springer	67	41	26	39	37	0	0	0	0	0	0	0	0	0	0	0
Western Bay of Plenty District	2013	DOG	Terrier, American Pit Bull	44	17	27	16	29	39	5	0	0	0	0	0	0	0	0	0
Western Bay of Plenty District	2013	DOG	Terrier, Fox (Smooth)	367	181	186	263	177	0	0	0	0	0	0	0	0	0	0	0
Western Bay of Plenty District	2013	DOG	Terrier, Jack Russell	283	144	139	201	138	0	0	0	0	0	0	0	0	0	0	0
Western Bay of Plenty District	2013	DOG	Terrier, Staffordshire Bull	145	76	69	79	102	0	1	0	0	0	0	0	0	0	0	0
Western Bay of Plenty District	2013	DOG	Terrier, West Highland White	36	20	16	22	24	0	0	0	0	0	0	0	0	0	0	0
Western Bay of Plenty District	2013	DOG	_Unidentified_	1169	608	561	596	714	11	1	0	0	0	0	0	0	0	0	0
Western Bay of Plenty District	2013	OWN	_	0	0	0	0	0	0	0	0	4	5591	80	0	0	0	0	0
Western Bay of Plenty District	2013	JST	_	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Western Bay of Plenty District	2013	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	78	35587	22443
Western Bay of Plenty District	2014	DOG	_ALL-PURE_	5109	2636	2473	2754	2969	63	10	0	0	0	0	0	0	0	0	0
Western Bay of Plenty District	2014	DOG	_ALL-CROSS_	3079	1567	1512	1812	1894	70	3	0	0	0	0	0	0	0	0	0
Western Bay of Plenty District	2014	DOG	_ALL-DOGS_	8188	4203	3985	4566	4863	133	13	0	0	0	0	0	0	0	0	0
Western Bay of Plenty District	2014	DOG	Beagle	23	11	12	20	18	1	0	0	0	0	0	0	0	0	0	0
Western Bay of Plenty District	2014	DOG	Bichon Frise	56	27	29	41	35	0	0	0	0	0	0	0	0	0	0	0
Western Bay of Plenty District	2014	DOG	Boxer	90	50	40	54	61	0	1	0	0	0	0	0	0	0	0	0
Western Bay of Plenty District	2014	DOG	Cattle, Australian	128	66	62	56	60	1	1	0	0	0	0	0	0	0	0	0
Western Bay of Plenty District	2014	DOG	Chihuahua, Long Coat	57	34	23	35	39	0	0	0	0	0	0	0	0	0	0	0
Western Bay of Plenty District	2014	DOG	Chihuahua, Smooth Coat	40	22	18	16	17	0	0	0	0	0	0	0	0	0	0	0
Western Bay of Plenty District	2014	DOG	Collie, Bearded	49	26	23	21	21	0	0	0	0	0	0	0	0	0	0	0
Western Bay of Plenty District	2014	DOG	Collie, Border	383	205	178	208	191	1	0	0	0	0	0	0	0	0	0	0
Western Bay of Plenty District	2014	DOG	Collie, Rough	27	15	12	11	19	0	0	0	0	0	0	0	0	0	0	0
Western Bay of Plenty District	2014	DOG	Collie, Smooth	13	7	6	6	4	0	0	0	0	0	0	0	0	0	0	0
Western Bay of Plenty District	2014	DOG	Greyhound	37	21	16	10	21	0	0	0	0	0	0	0	0	0	0	0
Western Bay of Plenty District	2014	DOG	Heading	173	96	77	21	23	0	0	0	0	0	0	0	0	0	0	0
Western Bay of Plenty District	2014	DOG	Huntaway	260	122	138	52	47	0	0	0	0	0	0	0	0	0	0	0
Western Bay of Plenty District	2014	DOG	Maltese	79	47	32	45	58	0	0	0	0	0	0	0	0	0	0	0
Western Bay of Plenty District	2014	DOG	Poodle, Miniature	40	15	25	34	27	0	0	0	0	0	0	0	0	0	0	0
Western Bay of Plenty District	2014	DOG	Poodle, Toy	62	37	25	48	48	0	0	0	0	0	0	0	0	0	0	0
Western Bay of Plenty District	2014	DOG	Retriever, Golden	183	104	79	101	110	0	0	0	0	0	0	0	0	0	0	0
Western Bay of Plenty District	2014	DOG	Retriever, Labrador	682	349	333	416	459	3	1	0	0	0	0	0	0	0	0	0
Western Bay of Plenty District	2014	DOG	Rottweiler	115	64	51	38	70	0	1	0	0	0	0	0	0	0	0	0
Western Bay of Plenty District	2014	DOG	Schnauzer, Miniature	98	53	45	52	74	0	0	0	0	0	0	0	0	0	0	0
Western Bay of Plenty District	2014	DOG	Shepherd, German	181	77	104	99	111	1	1	0	0	0	0	0	0	0	0	0
Western Bay of Plenty District	2014	DOG	Shih Tzu	104	54	50	48	82	0	0	0	0	0	0	0	0	0	0	0
Western Bay of Plenty District	2014	DOG	Spaniel, Cavalier King Charles	48	28	20	40	39	0	0	0	0	0	0	0	0	0	0	0
Western Bay of Plenty District	2014	DOG	Spaniel, Cocker	69	33	36	50	48	0	0	0	0	0	0	0	0	0	0	0
Western Bay of Plenty District	2014	DOG	Spaniel, English Springer	67	39	28	39	40	0	0	0	0	0	0	0	0	0	0	0
Western Bay of Plenty District	2014	DOG	Terrier, American Pit Bull	51	24	27	17	33	46	4	0	0	0	0	0	0	0	0	0
Western Bay of Plenty District	2014	DOG	Terrier, Fox (Smooth)	349	170	179	249	182	0	0	0	0	0	0	0	0	0	0	0
Western Bay of Plenty District	2014	DOG	Terrier, Jack Russell	274	140	134	205	149	0	0	0	0	0	0	0	0	0	0	0
Western Bay of Plenty District	2014	DOG	Terrier, Staffordshire Bull	144	73	71	78	99	0	0	0	0	0	0	0	0	0	0	0
Western Bay of Plenty District	2014	DOG	Terrier, West Highland White	38	23	15	26	23	0	0	0	0	0	0	0	0	0	0	0
Western Bay of Plenty District	2014	DOG	_Unidentified_	1189	604	585	618	761	10	1	0	0	0	0	0	0	0	0	0
Western Bay of Plenty District	2014	OWN	_	0	0	0	0	0	0	0	0	3	5627	72	0	0	0	0	0
Western Bay of Plenty District	2014	JST	_	0	0	0	0	0	0	0	0	0	0	0	2	2	0	0	0
Western Bay of Plenty District	2014	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	80	32735	56612
Western Bay of Plenty District	2015	DOG	_ALL-PURE_	4972	2545	2427	2732	3054	53	8	0	0	0	0	0	0	0	0	0
Western Bay of Plenty District	2015	DOG	_ALL-CROSS_	3205	1647	1558	1966	2133	66	5	0	0	0	0	0	0	0	0	0
Western Bay of Plenty District	2015	DOG	_ALL-DOGS_	8177	4192	3985	4698	5187	119	13	0	0	0	0	0	0	0	0	0
Western Bay of Plenty District	2015	DOG	Beagle	24	11	13	21	20	1	0	0	0	0	0	0	0	0	0	0
Western Bay of Plenty District	2015	DOG	Bichon Frise	54	25	29	41	34	0	0	0	0	0	0	0	0	0	0	0
Western Bay of Plenty District	2015	DOG	Boxer	91	51	40	57	68	2	0	0	0	0	0	0	0	0	0	0
Western Bay of Plenty District	2015	DOG	Cattle, Australian	120	59	61	51	57	1	1	0	0	0	0	0	0	0	0	0
Western Bay of Plenty District	2015	DOG	Chihuahua, Long Coat	67	37	30	34	44	0	0	0	0	0	0	0	0	0	0	0
Western Bay of Plenty District	2015	DOG	Chihuahua, Smooth Coat	45	22	23	26	22	0	0	0	0	0	0	0	0	0	0	0
Western Bay of Plenty District	2015	DOG	Collie, Bearded	46	23	23	23	21	0	0	0	0	0	0	0	0	0	0	0
Western Bay of Plenty District	2015	DOG	Collie, Border	353	185	168	203	193	1	0	0	0	0	0	0	0	0	0	0
Western Bay of Plenty District	2015	DOG	Collie, Rough	23	13	10	9	18	0	0	0	0	0	0	0	0	0	0	0
Western Bay of Plenty District	2015	DOG	Collie, Smooth	10	5	5	5	2	0	0	0	0	0	0	0	0	0	0	0
Western Bay of Plenty District	2015	DOG	Greyhound	31	20	11	12	21	0	0	0	0	0	0	0	0	0	0	0
Western Bay of Plenty District	2015	DOG	Heading	173	99	74	22	29	0	0	0	0	0	0	0	0	0	0	0
Western Bay of Plenty District	2015	DOG	Huntaway	259	116	143	53	48	0	0	0	0	0	0	0	0	0	0	0
Western Bay of Plenty District	2015	DOG	Maltese	74	46	28	47	57	0	0	0	0	0	0	0	0	0	0	0
Western Bay of Plenty District	2015	DOG	Poodle, Miniature	42	14	28	31	27	0	0	0	0	0	0	0	0	0	0	0
Western Bay of Plenty District	2015	DOG	Poodle, Toy	62	39	23	50	52	0	0	0	0	0	0	0	0	0	0	0
Western Bay of Plenty District	2015	DOG	Retriever, Golden	182	102	80	94	113	0	0	0	0	0	0	0	0	0	0	0
Western Bay of Plenty District	2015	DOG	Retriever, Labrador	652	332	320	401	466	1	1	0	0	0	0	0	0	0	0	0
Western Bay of Plenty District	2015	DOG	Rottweiler	113	61	52	34	71	0	0	0	0	0	0	0	0	0	0	0
Western Bay of Plenty District	2015	DOG	Schnauzer, Miniature	108	59	49	61	88	0	0	0	0	0	0	0	0	0	0	0
Western Bay of Plenty District	2015	DOG	Shepherd, German	182	84	98	100	125	1	2	0	0	0	0	0	0	0	0	0
Western Bay of Plenty District	2015	DOG	Shih Tzu	103	52	51	52	83	0	0	0	0	0	0	0	0	0	0	0
Western Bay of Plenty District	2015	DOG	Spaniel, Cavalier King Charles	48	28	20	44	38	0	0	0	0	0	0	0	0	0	0	0
Western Bay of Plenty District	2015	DOG	Spaniel, Cocker	64	29	35	49	49	0	0	0	0	0	0	0	0	0	0	0
Western Bay of Plenty District	2015	DOG	Spaniel, English Springer	67	35	32	34	41	0	0	0	0	0	0	0	0	0	0	0
Western Bay of Plenty District	2015	DOG	Terrier, American Pit Bull	38	18	20	14	24	35	3	0	0	0	0	0	0	0	0	0
Western Bay of Plenty District	2015	DOG	Terrier, Fox (Smooth)	330	159	171	236	183	1	0	0	0	0	0	0	0	0	0	0
Western Bay of Plenty District	2015	DOG	Terrier, Jack Russell	260	142	118	201	153	0	0	0	0	0	0	0	0	0	0	0
Western Bay of Plenty District	2015	DOG	Terrier, Staffordshire Bull	134	64	70	71	94	0	0	0	0	0	0	0	0	0	0	0
Western Bay of Plenty District	2015	DOG	Terrier, West Highland White	33	18	15	26	26	0	0	0	0	0	0	0	0	0	0	0
Western Bay of Plenty District	2015	DOG	_Unidentified_	1184	597	587	630	787	10	1	0	0	0	0	0	0	0	0	0
Western Bay of Plenty District	2015	OWN	_	0	0	0	0	0	0	0	0	2	5662	65	0	0	0	0	0
Western Bay of Plenty District	2015	JST	_	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Western Bay of Plenty District	2015	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	71	15964	19730
Western Bay of Plenty District	2016	DOG	_ALL-PURE_	4664	2378	2286	2612	3133	42	7	0	0	0	0	0	0	0	0	0
Western Bay of Plenty District	2016	DOG	_ALL-CROSS_	3244	1675	1569	2006	2296	64	9	0	0	0	0	0	0	0	0	0
Western Bay of Plenty District	2016	DOG	_ALL-DOGS_	7908	4053	3855	4618	5429	106	16	0	0	0	0	0	0	0	0	0
Western Bay of Plenty District	2016	DOG	Beagle	22	11	11	20	22	0	0	0	0	0	0	0	0	0	0	0
Western Bay of Plenty District	2016	DOG	Bichon Frise	48	21	27	37	36	0	0	0	0	0	0	0	0	0	0	0
Western Bay of Plenty District	2016	DOG	Boxer	72	44	28	56	61	1	0	0	0	0	0	0	0	0	0	0
Western Bay of Plenty District	2016	DOG	Cattle, Australian	95	47	48	46	53	0	0	0	0	0	0	0	0	0	0	0
Western Bay of Plenty District	2016	DOG	Chihuahua, Long Coat	62	38	24	33	44	0	0	0	0	0	0	0	0	0	0	0
Western Bay of Plenty District	2016	DOG	Chihuahua, Smooth Coat	60	31	29	27	26	0	0	0	0	0	0	0	0	0	0	0
Western Bay of Plenty District	2016	DOG	Collie, Bearded	42	23	19	20	19	0	0	0	0	0	0	0	0	0	0	0
Western Bay of Plenty District	2016	DOG	Collie, Border	314	166	148	172	190	0	0	0	0	0	0	0	0	0	0	0
Western Bay of Plenty District	2016	DOG	Collie, Rough	16	10	6	4	13	1	0	0	0	0	0	0	0	0	0	0
Western Bay of Plenty District	2016	DOG	Collie, Smooth	8	3	5	5	2	0	0	0	0	0	0	0	0	0	0	0
Western Bay of Plenty District	2016	DOG	Greyhound	28	19	9	14	19	0	0	0	0	0	0	0	0	0	0	0
Western Bay of Plenty District	2016	DOG	Heading	154	87	67	21	34	0	0	0	0	0	0	0	0	0	0	0
Western Bay of Plenty District	2016	DOG	Huntaway	210	88	122	44	38	0	0	0	0	0	0	0	0	0	0	0
Western Bay of Plenty District	2016	DOG	Maltese	62	34	28	46	52	0	0	0	0	0	0	0	0	0	0	0
Western Bay of Plenty District	2016	DOG	Poodle, Miniature	35	12	23	28	25	0	0	0	0	0	0	0	0	0	0	0
Western Bay of Plenty District	2016	DOG	Poodle, Toy	70	45	25	55	57	0	0	0	0	0	0	0	0	0	0	0
Western Bay of Plenty District	2016	DOG	Retriever, Golden	162	92	70	84	117	0	0	0	0	0	0	0	0	0	0	0
Western Bay of Plenty District	2016	DOG	Retriever, Labrador	609	292	317	394	451	0	1	0	0	0	0	0	0	0	0	0
Western Bay of Plenty District	2016	DOG	Rottweiler	117	66	51	41	80	0	1	0	0	0	0	0	0	0	0	0
Western Bay of Plenty District	2016	DOG	Schnauzer, Miniature	111	58	53	64	91	0	0	0	0	0	0	0	0	0	0	0
Western Bay of Plenty District	2016	DOG	Shepherd, German	169	82	87	91	131	3	2	0	0	0	0	0	0	0	0	0
Western Bay of Plenty District	2016	DOG	Shih Tzu	103	48	55	60	88	0	0	0	0	0	0	0	0	0	0	0
Western Bay of Plenty District	2016	DOG	Spaniel, Cavalier King Charles	42	28	14	38	35	0	0	0	0	0	0	0	0	0	0	0
Western Bay of Plenty District	2016	DOG	Spaniel, Cocker	55	25	30	40	42	0	0	0	0	0	0	0	0	0	0	0
Western Bay of Plenty District	2016	DOG	Spaniel, English Springer	67	29	38	31	46	0	0	0	0	0	0	0	0	0	0	0
Western Bay of Plenty District	2016	DOG	Terrier, American Pit Bull	31	18	13	14	19	26	3	0	0	0	0	0	0	0	0	0
Western Bay of Plenty District	2016	DOG	Terrier, Fox (Smooth)	298	140	158	216	188	1	0	0	0	0	0	0	0	0	0	0
Western Bay of Plenty District	2016	DOG	Terrier, Jack Russell	236	125	111	181	149	0	0	0	0	0	0	0	0	0	0	0
Western Bay of Plenty District	2016	DOG	Terrier, Staffordshire Bull	126	60	66	76	102	0	0	0	0	0	0	0	0	0	0	0
Western Bay of Plenty District	2016	DOG	Terrier, West Highland White	36	18	18	28	32	0	0	0	0	0	0	0	0	0	0	0
Western Bay of Plenty District	2016	DOG	_Unidentified_	1204	618	586	626	871	10	0	0	0	0	0	0	0	0	0	0
Western Bay of Plenty District	2016	OWN	_	0	0	0	0	0	0	0	0	2	5561	63	0	0	0	0	0
Westland District	2001	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	10	772	0
Westland District	2002	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	10	2310	0
Westland District	2003	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	5	468	0
Westland District	2004	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	8	697	0
Westland District	2005	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	4	1610	0
Westland District	2006	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	15	5665	5630
Westland District	2007	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	18	1339	1269
Westland District	2008	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	22	9774	9815
Westland District	2009	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	20	5193	4267
Westland District	2010	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	23	5495	5992
Westland District	2011	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	20	3137	2868
Westland District	2012	JST	_	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Westland District	2012	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	20	2190	2455
Westland District	2013	DOG	_ALL-PURE_	940	440	500	30	298	2	0	0	0	0	0	0	0	0	0	0
Westland District	2013	DOG	_ALL-CROSS_	606	302	304	32	177	1	0	0	0	0	0	0	0	0	0	0
Westland District	2013	DOG	_ALL-DOGS_	1546	742	804	62	475	3	0	0	0	0	0	0	0	0	0	0
Westland District	2013	DOG	Beagle	7	1	6	0	2	0	0	0	0	0	0	0	0	0	0	0
Westland District	2013	DOG	Bichon Frise	32	14	18	1	17	0	0	0	0	0	0	0	0	0	0	0
Westland District	2013	DOG	Boxer	9	6	3	0	4	0	0	0	0	0	0	0	0	0	0	0
Westland District	2013	DOG	Cattle, Australian	40	18	22	0	0	0	0	0	0	0	0	0	0	0	0	0
Westland District	2013	DOG	Chihuahua, Long Coat	12	6	6	0	4	0	0	0	0	0	0	0	0	0	0	0
Westland District	2013	DOG	Chihuahua, Smooth Coat	16	9	7	0	1	0	0	0	0	0	0	0	0	0	0	0
Westland District	2013	DOG	Collie, Bearded	12	6	6	1	2	0	0	0	0	0	0	0	0	0	0	0
Westland District	2013	DOG	Collie, Border	87	44	43	3	15	0	0	0	0	0	0	0	0	0	0	0
Westland District	2013	DOG	Collie, Rough	2	1	1	0	1	0	0	0	0	0	0	0	0	0	0	0
Westland District	2013	DOG	Collie, Smooth	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Westland District	2013	DOG	Greyhound	2	2	0	0	1	0	0	0	0	0	0	0	0	0	0	0
Westland District	2013	DOG	Heading	13	4	9	1	1	0	0	0	0	0	0	0	0	0	0	0
Westland District	2013	DOG	Huntaway	75	35	40	1	11	0	0	0	0	0	0	0	0	0	0	0
Westland District	2013	DOG	Maltese	8	5	3	0	2	0	0	0	0	0	0	0	0	0	0	0
Westland District	2013	DOG	Poodle, Miniature	10	6	4	0	8	0	0	0	0	0	0	0	0	0	0	0
Westland District	2013	DOG	Poodle, Toy	6	6	0	0	3	0	0	0	0	0	0	0	0	0	0	0
Westland District	2013	DOG	Retriever, Golden	27	10	17	0	15	0	0	0	0	0	0	0	0	0	0	0
Westland District	2013	DOG	Retriever, Labrador	147	67	80	6	54	0	0	0	0	0	0	0	0	0	0	0
Westland District	2013	DOG	Rottweiler	10	7	3	1	8	1	0	0	0	0	0	0	0	0	0	0
Westland District	2013	DOG	Schnauzer, Miniature	1	1	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Westland District	2013	DOG	Shepherd, German	14	6	8	0	8	0	0	0	0	0	0	0	0	0	0	0
Westland District	2013	DOG	Shih Tzu	2	0	2	0	2	0	0	0	0	0	0	0	0	0	0	0
Westland District	2013	DOG	Spaniel, Cavalier King Charles	10	4	6	1	5	0	0	0	0	0	0	0	0	0	0	0
Westland District	2013	DOG	Spaniel, Cocker	11	7	4	0	3	0	0	0	0	0	0	0	0	0	0	0
Westland District	2013	DOG	Spaniel, English Springer	6	3	3	1	2	0	0	0	0	0	0	0	0	0	0	0
Westland District	2013	DOG	Terrier, American Pit Bull	2	2	0	0	2	0	0	0	0	0	0	0	0	0	0	0
Westland District	2013	DOG	Terrier, Fox (Smooth)	26	15	11	0	8	0	0	0	0	0	0	0	0	0	0	0
Westland District	2013	DOG	Terrier, Jack Russell	76	33	43	4	21	0	0	0	0	0	0	0	0	0	0	0
Westland District	2013	DOG	Terrier, Staffordshire Bull	33	17	16	2	12	0	0	0	0	0	0	0	0	0	0	0
Westland District	2013	DOG	Terrier, West Highland White	4	2	2	0	2	0	0	0	0	0	0	0	0	0	0	0
Westland District	2013	DOG	_Unidentified_	240	103	137	8	84	1	0	0	0	0	0	0	0	0	0	0
Westland District	2013	OWN	_	0	0	0	0	0	0	0	0	0	1137	13	0	0	0	0	0
Westland District	2013	JST	_	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Westland District	2013	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	26	4065	2307
Westland District	2014	DOG	_ALL-PURE_	969	450	519	29	331	4	0	0	0	0	0	0	0	0	0	0
Westland District	2014	DOG	_ALL-CROSS_	621	320	301	32	212	5	0	0	0	0	0	0	0	0	0	0
Westland District	2014	DOG	_ALL-DOGS_	1590	770	820	61	543	9	0	0	0	0	0	0	0	0	0	0
Westland District	2014	DOG	Beagle	8	2	6	0	2	0	0	0	0	0	0	0	0	0	0	0
Westland District	2014	DOG	Bichon Frise	28	10	18	1	17	0	0	0	0	0	0	0	0	0	0	0
Westland District	2014	DOG	Boxer	8	6	2	0	3	0	0	0	0	0	0	0	0	0	0	0
Westland District	2014	DOG	Cattle, Australian	36	15	21	0	0	0	0	0	0	0	0	0	0	0	0	0
Westland District	2014	DOG	Chihuahua, Long Coat	21	10	11	0	7	0	0	0	0	0	0	0	0	0	0	0
Westland District	2014	DOG	Chihuahua, Smooth Coat	16	9	7	0	3	0	0	0	0	0	0	0	0	0	0	0
Westland District	2014	DOG	Collie, Bearded	10	6	4	1	2	0	0	0	0	0	0	0	0	0	0	0
Westland District	2014	DOG	Collie, Border	95	48	47	5	15	0	0	0	0	0	0	0	0	0	0	0
Westland District	2014	DOG	Collie, Rough	2	1	1	0	1	0	0	0	0	0	0	0	0	0	0	0
Westland District	2014	DOG	Collie, Smooth	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Westland District	2014	DOG	Greyhound	2	2	0	0	1	0	0	0	0	0	0	0	0	0	0	0
Westland District	2014	DOG	Heading	13	4	9	0	0	0	0	0	0	0	0	0	0	0	0	0
Westland District	2014	DOG	Huntaway	81	40	41	1	11	0	0	0	0	0	0	0	0	0	0	0
Westland District	2014	DOG	Maltese	9	6	3	0	3	0	0	0	0	0	0	0	0	0	0	0
Westland District	2014	DOG	Poodle, Miniature	9	5	4	0	8	0	0	0	0	0	0	0	0	0	0	0
Westland District	2014	DOG	Poodle, Toy	7	6	1	0	4	0	0	0	0	0	0	0	0	0	0	0
Westland District	2014	DOG	Retriever, Golden	25	8	17	0	17	0	0	0	0	0	0	0	0	0	0	0
Westland District	2014	DOG	Retriever, Labrador	159	73	86	7	64	0	0	0	0	0	0	0	0	0	0	0
Westland District	2014	DOG	Rottweiler	17	8	9	1	12	1	0	0	0	0	0	0	0	0	0	0
Westland District	2014	DOG	Schnauzer, Miniature	1	1	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Westland District	2014	DOG	Shepherd, German	14	4	10	0	7	0	0	0	0	0	0	0	0	0	0	0
Westland District	2014	DOG	Shih Tzu	3	1	2	0	3	0	0	0	0	0	0	0	0	0	0	0
Westland District	2014	DOG	Spaniel, Cavalier King Charles	11	5	6	1	5	0	0	0	0	0	0	0	0	0	0	0
Westland District	2014	DOG	Spaniel, Cocker	12	7	5	0	4	0	0	0	0	0	0	0	0	0	0	0
Westland District	2014	DOG	Spaniel, English Springer	9	5	4	1	4	0	0	0	0	0	0	0	0	0	0	0
Westland District	2014	DOG	Terrier, American Pit Bull	3	2	1	0	2	1	0	0	0	0	0	0	0	0	0	0
Westland District	2014	DOG	Terrier, Fox (Smooth)	26	16	10	0	9	0	0	0	0	0	0	0	0	0	0	0
Westland District	2014	DOG	Terrier, Jack Russell	80	35	45	3	25	0	0	0	0	0	0	0	0	0	0	0
Westland District	2014	DOG	Terrier, Staffordshire Bull	31	17	14	1	9	0	0	0	0	0	0	0	0	0	0	0
Westland District	2014	DOG	Terrier, West Highland White	3	1	2	0	2	0	0	0	0	0	0	0	0	0	0	0
Westland District	2014	DOG	_Unidentified_	230	97	133	7	91	2	0	0	0	0	0	0	0	0	0	0
Westland District	2014	OWN	_	0	0	0	0	0	0	0	0	0	1168	22	0	0	0	0	0
Westland District	2014	JST	_	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Westland District	2014	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	19	5830	6907
Westland District	2015	DOG	_ALL-PURE_	989	456	533	37	376	7	2	0	0	0	0	0	0	0	0	0
Westland District	2015	DOG	_ALL-CROSS_	656	343	313	34	238	5	1	0	0	0	0	0	0	0	0	0
Westland District	2015	DOG	_ALL-DOGS_	1645	799	846	71	614	12	3	0	0	0	0	0	0	0	0	0
Westland District	2015	DOG	Beagle	7	2	5	0	3	0	0	0	0	0	0	0	0	0	0	0
Westland District	2015	DOG	Bichon Frise	29	10	19	2	18	0	0	0	0	0	0	0	0	0	0	0
Westland District	2015	DOG	Boxer	8	6	2	0	3	0	0	0	0	0	0	0	0	0	0	0
Westland District	2015	DOG	Cattle, Australian	35	13	22	1	1	0	0	0	0	0	0	0	0	0	0	0
Westland District	2015	DOG	Chihuahua, Long Coat	20	12	8	0	9	0	0	0	0	0	0	0	0	0	0	0
Westland District	2015	DOG	Chihuahua, Smooth Coat	14	8	6	0	2	0	0	0	0	0	0	0	0	0	0	0
Westland District	2015	DOG	Collie, Bearded	8	4	4	1	2	0	0	0	0	0	0	0	0	0	0	0
Westland District	2015	DOG	Collie, Border	89	43	46	6	15	0	0	0	0	0	0	0	0	0	0	0
Westland District	2015	DOG	Collie, Rough	2	1	1	0	1	0	0	0	0	0	0	0	0	0	0	0
Westland District	2015	DOG	Collie, Smooth	1	1	0	0	1	0	0	0	0	0	0	0	0	0	0	0
Westland District	2015	DOG	Greyhound	2	1	1	0	1	0	0	0	0	0	0	0	0	0	0	0
Westland District	2015	DOG	Heading	12	3	9	1	0	0	0	0	0	0	0	0	0	0	0	0
Westland District	2015	DOG	Huntaway	72	31	41	2	9	0	0	0	0	0	0	0	0	0	0	0
Westland District	2015	DOG	Maltese	10	6	4	0	4	0	0	0	0	0	0	0	0	0	0	0
Westland District	2015	DOG	Poodle, Miniature	9	4	5	0	7	0	0	0	0	0	0	0	0	0	0	0
Westland District	2015	DOG	Poodle, Toy	6	5	1	0	3	0	0	0	0	0	0	0	0	0	0	0
Westland District	2015	DOG	Retriever, Golden	27	8	19	0	17	0	0	0	0	0	0	0	0	0	0	0
Westland District	2015	DOG	Retriever, Labrador	164	79	85	6	67	0	0	0	0	0	0	0	0	0	0	0
Westland District	2015	DOG	Rottweiler	21	11	10	1	11	1	0	0	0	0	0	0	0	0	0	0
Westland District	2015	DOG	Schnauzer, Miniature	2	2	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Westland District	2015	DOG	Shepherd, German	13	5	8	1	7	0	0	0	0	0	0	0	0	0	0	0
Westland District	2015	DOG	Shih Tzu	3	2	1	0	2	0	0	0	0	0	0	0	0	0	0	0
Westland District	2015	DOG	Spaniel, Cavalier King Charles	13	6	7	1	5	0	0	0	0	0	0	0	0	0	0	0
Westland District	2015	DOG	Spaniel, Cocker	17	10	7	0	8	0	0	0	0	0	0	0	0	0	0	0
Westland District	2015	DOG	Spaniel, English Springer	7	4	3	1	4	0	0	0	0	0	0	0	0	0	0	0
Westland District	2015	DOG	Terrier, American Pit Bull	4	3	1	1	4	2	0	0	0	0	0	0	0	0	0	0
Westland District	2015	DOG	Terrier, Fox (Smooth)	23	14	9	0	12	0	0	0	0	0	0	0	0	0	0	0
Westland District	2015	DOG	Terrier, Jack Russell	84	36	48	1	31	0	0	0	0	0	0	0	0	0	0	0
Westland District	2015	DOG	Terrier, Staffordshire Bull	45	21	24	1	18	0	1	0	0	0	0	0	0	0	0	0
Westland District	2015	DOG	Terrier, West Highland White	3	1	2	0	2	0	0	0	0	0	0	0	0	0	0	0
Westland District	2015	DOG	_Unidentified_	239	104	135	11	109	4	1	0	0	0	0	0	0	0	0	0
Westland District	2015	OWN	_	0	0	0	0	0	0	0	0	0	1217	18	0	0	0	0	0
Westland District	2015	JST	_	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Westland District	2015	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	30	4788	5902
Westland District	2016	DOG	_ALL-PURE_	1006	479	527	42	408	11	2	0	0	0	0	0	0	0	0	0
Westland District	2016	DOG	_ALL-CROSS_	712	368	344	36	282	14	1	0	0	0	0	0	0	0	0	0
Westland District	2016	DOG	_ALL-DOGS_	1718	847	871	78	690	25	3	0	0	0	0	0	0	0	0	0
Westland District	2016	DOG	Beagle	8	4	4	0	3	0	0	0	0	0	0	0	0	0	0	0
Westland District	2016	DOG	Bichon Frise	28	11	17	2	17	0	0	0	0	0	0	0	0	0	0	0
Westland District	2016	DOG	Boxer	5	4	1	0	2	0	0	0	0	0	0	0	0	0	0	0
Westland District	2016	DOG	Cattle, Australian	32	12	20	2	2	0	0	0	0	0	0	0	0	0	0	0
Westland District	2016	DOG	Chihuahua, Long Coat	15	7	8	0	7	0	0	0	0	0	0	0	0	0	0	0
Westland District	2016	DOG	Chihuahua, Smooth Coat	14	8	6	0	3	0	0	0	0	0	0	0	0	0	0	0
Westland District	2016	DOG	Collie, Bearded	7	4	3	1	2	0	0	0	0	0	0	0	0	0	0	0
Westland District	2016	DOG	Collie, Border	94	48	46	6	21	0	0	0	0	0	0	0	0	0	0	0
Westland District	2016	DOG	Collie, Rough	3	2	1	0	1	0	0	0	0	0	0	0	0	0	0	0
Westland District	2016	DOG	Collie, Smooth	1	1	0	0	1	0	0	0	0	0	0	0	0	0	0	0
Westland District	2016	DOG	Greyhound	2	1	1	0	0	0	0	0	0	0	0	0	0	0	0	0
Westland District	2016	DOG	Heading	15	4	11	0	0	0	0	0	0	0	0	0	0	0	0	0
Westland District	2016	DOG	Huntaway	74	35	39	4	9	0	0	0	0	0	0	0	0	0	0	0
Westland District	2016	DOG	Maltese	9	5	4	0	4	0	0	0	0	0	0	0	0	0	0	0
Westland District	2016	DOG	Poodle, Miniature	8	4	4	0	6	0	0	0	0	0	0	0	0	0	0	0
Westland District	2016	DOG	Poodle, Toy	4	3	1	0	3	0	0	0	0	0	0	0	0	0	0	0
Westland District	2016	DOG	Retriever, Golden	22	5	17	0	14	0	0	0	0	0	0	0	0	0	0	0
Westland District	2016	DOG	Retriever, Labrador	159	81	78	5	73	0	1	0	0	0	0	0	0	0	0	0
Westland District	2016	DOG	Rottweiler	20	12	8	1	13	1	0	0	0	0	0	0	0	0	0	0
Westland District	2016	DOG	Schnauzer, Miniature	3	2	1	0	1	0	0	0	0	0	0	0	0	0	0	0
Westland District	2016	DOG	Shepherd, German	17	6	11	1	12	0	0	0	0	0	0	0	0	0	0	0
Westland District	2016	DOG	Shih Tzu	4	3	1	0	2	0	0	0	0	0	0	0	0	0	0	0
Westland District	2016	DOG	Spaniel, Cavalier King Charles	13	6	7	1	5	0	0	0	0	0	0	0	0	0	0	0
Westland District	2016	DOG	Spaniel, Cocker	15	8	7	0	8	0	0	0	0	0	0	0	0	0	0	0
Westland District	2016	DOG	Spaniel, English Springer	8	3	5	1	5	0	0	0	0	0	0	0	0	0	0	0
Westland District	2016	DOG	Terrier, American Pit Bull	5	3	2	1	4	5	0	0	0	0	0	0	0	0	0	0
Westland District	2016	DOG	Terrier, Fox (Smooth)	30	15	15	1	14	0	0	0	0	0	0	0	0	0	0	0
Westland District	2016	DOG	Terrier, Jack Russell	86	36	50	1	32	0	0	0	0	0	0	0	0	0	0	0
Westland District	2016	DOG	Terrier, Staffordshire Bull	41	18	23	2	20	0	0	0	0	0	0	0	0	0	0	0
Westland District	2016	DOG	Terrier, West Highland White	3	2	1	0	2	0	0	0	0	0	0	0	0	0	0	0
Westland District	2016	DOG	_Unidentified_	261	126	135	13	122	5	1	0	0	0	0	0	0	0	0	0
Westland District	2016	OWN	_	0	0	0	0	0	0	0	0	0	1282	11	0	0	0	0	0
Whakatane District	2001	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	34	17586	0
Whakatane District	2002	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	20	1799	0
Whakatane District	2003	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	27	3545	0
Whakatane District	2004	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	63	5424	0
Whakatane District	2005	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	99	10993	0
Whakatane District	2006	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	116	9305	8854
Whakatane District	2007	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	106	19355	16804
Whakatane District	2008	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	81	97999	25474
Whakatane District	2009	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	116	12576	78642
Whakatane District	2010	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	130	25850	33883
Whakatane District	2011	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	134	22074	21914
Whakatane District	2012	JST	_	0	0	0	0	0	0	0	0	0	0	0	3	1	0	0	0
Whakatane District	2012	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	131	38819	31989
Whakatane District	2013	DOG	_ALL-PURE_	2922	1500	1422	1384	1711	47	2	0	0	0	0	0	0	0	0	0
Whakatane District	2013	DOG	_ALL-CROSS_	2986	1518	1468	1492	1543	86	14	0	0	0	0	0	0	0	0	0
Whakatane District	2013	DOG	_ALL-DOGS_	5908	3018	2890	2876	3254	133	16	0	0	0	0	0	0	0	0	0
Whakatane District	2013	DOG	Beagle	10	9	1	8	7	0	0	0	0	0	0	0	0	0	0	0
Whakatane District	2013	DOG	Bichon Frise	37	19	18	26	20	0	0	0	0	0	0	0	0	0	0	0
Whakatane District	2013	DOG	Boxer	41	19	22	29	26	0	0	0	0	0	0	0	0	0	0	0
Whakatane District	2013	DOG	Cattle, Australian	105	58	47	32	52	0	0	0	0	0	0	0	0	0	0	0
Whakatane District	2013	DOG	Chihuahua, Long Coat	34	15	19	20	25	0	0	0	0	0	0	0	0	0	0	0
Whakatane District	2013	DOG	Chihuahua, Smooth Coat	29	13	16	18	24	0	0	0	0	0	0	0	0	0	0	0
Whakatane District	2013	DOG	Collie, Bearded	17	7	10	7	8	0	0	0	0	0	0	0	0	0	0	0
Whakatane District	2013	DOG	Collie, Border	168	83	85	81	82	0	0	0	0	0	0	0	0	0	0	0
Whakatane District	2013	DOG	Collie, Rough	9	3	6	2	3	0	0	0	0	0	0	0	0	0	0	0
Whakatane District	2013	DOG	Collie, Smooth	36	18	18	8	4	0	0	0	0	0	0	0	0	0	0	0
Whakatane District	2013	DOG	Greyhound	31	13	18	3	16	0	0	0	0	0	0	0	0	0	0	0
Whakatane District	2013	DOG	Heading	87	45	42	11	12	0	0	0	0	0	0	0	0	0	0	0
Whakatane District	2013	DOG	Huntaway	169	71	98	31	30	0	0	0	0	0	0	0	0	0	0	0
Whakatane District	2013	DOG	Maltese	45	26	19	26	36	0	0	0	0	0	0	0	0	0	0	0
Whakatane District	2013	DOG	Poodle, Miniature	39	17	22	31	18	0	0	0	0	0	0	0	0	0	0	0
Whakatane District	2013	DOG	Poodle, Toy	14	7	7	10	12	0	0	0	0	0	0	0	0	0	0	0
Whakatane District	2013	DOG	Retriever, Golden	42	27	15	29	21	0	0	0	0	0	0	0	0	0	0	0
Whakatane District	2013	DOG	Retriever, Labrador	484	250	234	227	290	1	0	0	0	0	0	0	0	0	0	0
Whakatane District	2013	DOG	Rottweiler	105	59	46	41	70	0	0	0	0	0	0	0	0	0	0	0
Whakatane District	2013	DOG	Schnauzer, Miniature	42	26	16	14	38	0	0	0	0	0	0	0	0	0	0	0
Whakatane District	2013	DOG	Shepherd, German	114	61	53	61	71	0	1	0	0	0	0	0	0	0	0	0
Whakatane District	2013	DOG	Shih Tzu	26	14	12	12	19	0	0	0	0	0	0	0	0	0	0	0
Whakatane District	2013	DOG	Spaniel, Cavalier King Charles	10	3	7	6	6	0	0	0	0	0	0	0	0	0	0	0
Whakatane District	2013	DOG	Spaniel, Cocker	18	12	6	12	14	0	0	0	0	0	0	0	0	0	0	0
Whakatane District	2013	DOG	Spaniel, English Springer	24	15	9	12	16	0	0	0	0	0	0	0	0	0	0	0
Whakatane District	2013	DOG	Terrier, American Pit Bull	38	17	21	13	29	38	0	0	0	0	0	0	0	0	0	0
Whakatane District	2013	DOG	Terrier, Fox (Smooth)	229	141	88	144	132	0	0	0	0	0	0	0	0	0	0	0
Whakatane District	2013	DOG	Terrier, Jack Russell	113	61	52	78	78	0	0	0	0	0	0	0	0	0	0	0
Whakatane District	2013	DOG	Terrier, Staffordshire Bull	75	37	38	36	56	2	0	0	0	0	0	0	0	0	0	0
Whakatane District	2013	DOG	Terrier, West Highland White	20	6	14	12	15	0	0	0	0	0	0	0	0	0	0	0
Whakatane District	2013	DOG	_Unidentified_	711	348	363	344	481	6	1	0	0	0	0	0	0	0	0	0
Whakatane District	2013	OWN	_	0	0	0	0	0	0	0	0	0	4047	68	0	0	0	0	0
Whakatane District	2013	JST	_	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Whakatane District	2013	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	128	25410	24396
Whakatane District	2014	DOG	_ALL-PURE_	2881	1457	1424	1416	1818	48	2	0	0	0	0	0	0	0	0	0
Whakatane District	2014	DOG	_ALL-CROSS_	2885	1442	1443	1450	1634	82	11	0	0	0	0	0	0	0	0	0
Whakatane District	2014	DOG	_ALL-DOGS_	5766	2899	2867	2866	3452	130	13	0	0	0	0	0	0	0	0	0
Whakatane District	2014	DOG	Beagle	12	11	1	10	6	0	0	0	0	0	0	0	0	0	0	0
Whakatane District	2014	DOG	Bichon Frise	34	15	19	23	24	0	0	0	0	0	0	0	0	0	0	0
Whakatane District	2014	DOG	Boxer	34	14	20	22	25	0	0	0	0	0	0	0	0	0	0	0
Whakatane District	2014	DOG	Cattle, Australian	113	59	54	31	57	0	0	0	0	0	0	0	0	0	0	0
Whakatane District	2014	DOG	Chihuahua, Long Coat	29	13	16	15	25	0	0	0	0	0	0	0	0	0	0	0
Whakatane District	2014	DOG	Chihuahua, Smooth Coat	36	18	18	17	27	0	0	0	0	0	0	0	0	0	0	0
Whakatane District	2014	DOG	Collie, Bearded	21	9	12	10	12	0	0	0	0	0	0	0	0	0	0	0
Whakatane District	2014	DOG	Collie, Border	166	82	84	85	84	0	0	0	0	0	0	0	0	0	0	0
Whakatane District	2014	DOG	Collie, Rough	8	2	6	3	3	0	0	0	0	0	0	0	0	0	0	0
Whakatane District	2014	DOG	Collie, Smooth	32	15	17	7	4	0	0	0	0	0	0	0	0	0	0	0
Whakatane District	2014	DOG	Greyhound	31	10	21	3	20	0	0	0	0	0	0	0	0	0	0	0
Whakatane District	2014	DOG	Heading	77	41	36	9	11	0	0	0	0	0	0	0	0	0	0	0
Whakatane District	2014	DOG	Huntaway	162	71	91	32	29	0	0	0	0	0	0	0	0	0	0	0
Whakatane District	2014	DOG	Maltese	52	29	23	29	44	0	0	0	0	0	0	0	0	0	0	0
Whakatane District	2014	DOG	Poodle, Miniature	33	15	18	27	17	0	0	0	0	0	0	0	0	0	0	0
Whakatane District	2014	DOG	Poodle, Toy	15	8	7	11	13	0	0	0	0	0	0	0	0	0	0	0
Whakatane District	2014	DOG	Retriever, Golden	43	27	16	29	25	0	0	0	0	0	0	0	0	0	0	0
Whakatane District	2014	DOG	Retriever, Labrador	455	222	233	235	295	1	0	0	0	0	0	0	0	0	0	0
Whakatane District	2014	DOG	Rottweiler	100	57	43	42	69	0	0	0	0	0	0	0	0	0	0	0
Whakatane District	2014	DOG	Schnauzer, Miniature	47	28	19	20	43	0	0	0	0	0	0	0	0	0	0	0
Whakatane District	2014	DOG	Shepherd, German	105	56	49	55	74	0	1	0	0	0	0	0	0	0	0	0
Whakatane District	2014	DOG	Shih Tzu	30	15	15	17	25	0	0	0	0	0	0	0	0	0	0	0
Whakatane District	2014	DOG	Spaniel, Cavalier King Charles	9	3	6	8	6	0	0	0	0	0	0	0	0	0	0	0
Whakatane District	2014	DOG	Spaniel, Cocker	15	9	6	10	11	0	0	0	0	0	0	0	0	0	0	0
Whakatane District	2014	DOG	Spaniel, English Springer	25	14	11	12	16	0	0	0	0	0	0	0	0	0	0	0
Whakatane District	2014	DOG	Terrier, American Pit Bull	39	13	26	15	29	38	0	0	0	0	0	0	0	0	0	0
Whakatane District	2014	DOG	Terrier, Fox (Smooth)	232	143	89	143	149	0	0	0	0	0	0	0	0	0	0	0
Whakatane District	2014	DOG	Terrier, Jack Russell	110	59	51	78	78	0	0	0	0	0	0	0	0	0	0	0
Whakatane District	2014	DOG	Terrier, Staffordshire Bull	90	45	45	47	70	1	0	0	0	0	0	0	0	0	0	0
Whakatane District	2014	DOG	Terrier, West Highland White	17	5	12	12	15	0	0	0	0	0	0	0	0	0	0	0
Whakatane District	2014	DOG	_Unidentified_	709	349	360	359	512	8	1	0	0	0	0	0	0	0	0	0
Whakatane District	2014	OWN	_	0	0	0	0	0	0	0	0	2	3959	70	0	0	0	0	0
Whakatane District	2014	JST	_	0	0	0	0	0	0	0	0	0	0	0	1	0	0	0	0
Whakatane District	2014	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	142	61060	35825
Whakatane District	2015	DOG	_ALL-PURE_	2858	1467	1391	1462	1906	53	5	0	0	0	0	0	0	0	0	0
Whakatane District	2015	DOG	_ALL-CROSS_	2877	1466	1411	1453	1752	87	7	0	0	0	0	0	0	0	0	0
Whakatane District	2015	DOG	_ALL-DOGS_	5735	2933	2802	2915	3658	140	12	0	0	0	0	0	0	0	0	0
Whakatane District	2015	DOG	Beagle	11	9	2	8	6	0	0	0	0	0	0	0	0	0	0	0
Whakatane District	2015	DOG	Bichon Frise	37	15	22	29	27	0	0	0	0	0	0	0	0	0	0	0
Whakatane District	2015	DOG	Boxer	34	13	21	22	26	0	0	0	0	0	0	0	0	0	0	0
Whakatane District	2015	DOG	Cattle, Australian	93	52	41	31	51	1	0	0	0	0	0	0	0	0	0	0
Whakatane District	2015	DOG	Chihuahua, Long Coat	29	14	15	16	21	0	0	0	0	0	0	0	0	0	0	0
Whakatane District	2015	DOG	Chihuahua, Smooth Coat	29	14	15	18	23	0	0	0	0	0	0	0	0	0	0	0
Whakatane District	2015	DOG	Collie, Bearded	17	8	9	8	9	0	0	0	0	0	0	0	0	0	0	0
Whakatane District	2015	DOG	Collie, Border	173	88	85	88	91	0	0	0	0	0	0	0	0	0	0	0
Whakatane District	2015	DOG	Collie, Rough	7	1	6	2	3	0	0	0	0	0	0	0	0	0	0	0
Whakatane District	2015	DOG	Collie, Smooth	24	9	15	5	3	0	0	0	0	0	0	0	0	0	0	0
Whakatane District	2015	DOG	Greyhound	31	7	24	4	21	0	0	0	0	0	0	0	0	0	0	0
Whakatane District	2015	DOG	Heading	82	48	34	12	12	0	0	0	0	0	0	0	0	0	0	0
Whakatane District	2015	DOG	Huntaway	159	72	87	32	28	0	0	0	0	0	0	0	0	0	0	0
Whakatane District	2015	DOG	Maltese	50	26	24	32	42	0	0	0	0	0	0	0	0	0	0	0
Whakatane District	2015	DOG	Poodle, Miniature	30	14	16	23	18	0	0	0	0	0	0	0	0	0	0	0
Whakatane District	2015	DOG	Poodle, Toy	16	9	7	10	14	0	0	0	0	0	0	0	0	0	0	0
Whakatane District	2015	DOG	Retriever, Golden	44	28	16	31	28	0	0	0	0	0	0	0	0	0	0	0
Whakatane District	2015	DOG	Retriever, Labrador	448	226	222	256	317	2	0	0	0	0	0	0	0	0	0	0
Whakatane District	2015	DOG	Rottweiler	100	58	42	40	74	0	1	0	0	0	0	0	0	0	0	0
Whakatane District	2015	DOG	Schnauzer, Miniature	56	34	22	25	51	0	0	0	0	0	0	0	0	0	0	0
Whakatane District	2015	DOG	Shepherd, German	110	56	54	58	81	1	2	0	0	0	0	0	0	0	0	0
Whakatane District	2015	DOG	Shih Tzu	33	16	17	19	26	0	0	0	0	0	0	0	0	0	0	0
Whakatane District	2015	DOG	Spaniel, Cavalier King Charles	9	3	6	9	6	0	0	0	0	0	0	0	0	0	0	0
Whakatane District	2015	DOG	Spaniel, Cocker	16	9	7	15	12	0	0	0	0	0	0	0	0	0	0	0
Whakatane District	2015	DOG	Spaniel, English Springer	26	14	12	11	18	0	0	0	0	0	0	0	0	0	0	0
Whakatane District	2015	DOG	Terrier, American Pit Bull	45	15	30	22	34	42	1	0	0	0	0	0	0	0	0	0
Whakatane District	2015	DOG	Terrier, Fox (Smooth)	245	152	93	161	168	0	0	0	0	0	0	0	0	0	0	0
Whakatane District	2015	DOG	Terrier, Jack Russell	108	56	52	70	80	0	0	0	0	0	0	0	0	0	0	0
Whakatane District	2015	DOG	Terrier, Staffordshire Bull	84	44	40	43	70	0	0	0	0	0	0	0	0	0	0	0
Whakatane District	2015	DOG	Terrier, West Highland White	16	5	11	12	14	0	0	0	0	0	0	0	0	0	0	0
Whakatane District	2015	DOG	_Unidentified_	696	352	344	350	532	7	1	0	0	0	0	0	0	0	0	0
Whakatane District	2015	OWN	_	0	0	0	0	0	0	0	0	2	3987	48	0	0	0	0	0
Whakatane District	2015	JST	_	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Whakatane District	2015	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	157	20739	64650
Whakatane District	2016	DOG	_ALL-PURE_	2949	1520	1429	1507	2042	45	7	0	0	0	0	0	0	0	0	0
Whakatane District	2016	DOG	_ALL-CROSS_	2826	1438	1388	1499	1857	89	10	0	0	0	0	0	0	0	0	0
Whakatane District	2016	DOG	_ALL-DOGS_	5775	2958	2817	3006	3899	134	17	0	0	0	0	0	0	0	0	0
Whakatane District	2016	DOG	Beagle	13	10	3	11	8	0	0	0	0	0	0	0	0	0	0	0
Whakatane District	2016	DOG	Bichon Frise	40	18	22	30	30	0	0	0	0	0	0	0	0	0	0	0
Whakatane District	2016	DOG	Boxer	35	14	21	23	26	0	0	0	0	0	0	0	0	0	0	0
Whakatane District	2016	DOG	Cattle, Australian	89	46	43	32	51	0	1	0	0	0	0	0	0	0	0	0
Whakatane District	2016	DOG	Chihuahua, Long Coat	34	17	17	14	22	0	0	0	0	0	0	0	0	0	0	0
Whakatane District	2016	DOG	Chihuahua, Smooth Coat	31	14	17	18	26	0	0	0	0	0	0	0	0	0	0	0
Whakatane District	2016	DOG	Collie, Bearded	22	12	10	11	12	0	1	0	0	0	0	0	0	0	0	0
Whakatane District	2016	DOG	Collie, Border	173	87	86	88	91	0	0	0	0	0	0	0	0	0	0	0
Whakatane District	2016	DOG	Collie, Rough	10	3	7	2	5	0	0	0	0	0	0	0	0	0	0	0
Whakatane District	2016	DOG	Collie, Smooth	23	11	12	4	3	0	0	0	0	0	0	0	0	0	0	0
Whakatane District	2016	DOG	Greyhound	23	6	17	3	15	0	0	0	0	0	0	0	0	0	0	0
Whakatane District	2016	DOG	Heading	91	46	45	15	16	0	0	0	0	0	0	0	0	0	0	0
Whakatane District	2016	DOG	Huntaway	157	75	82	30	32	0	0	0	0	0	0	0	0	0	0	0
Whakatane District	2016	DOG	Maltese	63	34	29	35	53	0	0	0	0	0	0	0	0	0	0	0
Whakatane District	2016	DOG	Poodle, Miniature	29	14	15	22	20	0	0	0	0	0	0	0	0	0	0	0
Whakatane District	2016	DOG	Poodle, Toy	14	8	6	9	12	0	0	0	0	0	0	0	0	0	0	0
Whakatane District	2016	DOG	Retriever, Golden	40	24	16	28	28	0	0	0	0	0	0	0	0	0	0	0
Whakatane District	2016	DOG	Retriever, Labrador	447	230	217	252	327	2	0	0	0	0	0	0	0	0	0	0
Whakatane District	2016	DOG	Rottweiler	106	56	50	42	80	0	1	0	0	0	0	0	0	0	0	0
Whakatane District	2016	DOG	Schnauzer, Miniature	60	35	25	29	54	0	0	0	0	0	0	0	0	0	0	0
Whakatane District	2016	DOG	Shepherd, German	108	57	51	57	92	1	2	0	0	0	0	0	0	0	0	0
Whakatane District	2016	DOG	Shih Tzu	36	15	21	23	30	0	0	0	0	0	0	0	0	0	0	0
Whakatane District	2016	DOG	Spaniel, Cavalier King Charles	8	2	6	8	5	0	0	0	0	0	0	0	0	0	0	0
Whakatane District	2016	DOG	Spaniel, Cocker	22	12	10	16	18	0	0	0	0	0	0	0	0	0	0	0
Whakatane District	2016	DOG	Spaniel, English Springer	24	14	10	9	16	0	0	0	0	0	0	0	0	0	0	0
Whakatane District	2016	DOG	Terrier, American Pit Bull	37	14	23	16	28	34	1	0	0	0	0	0	0	0	0	0
Whakatane District	2016	DOG	Terrier, Fox (Smooth)	243	149	94	162	174	0	0	0	0	0	0	0	0	0	0	0
Whakatane District	2016	DOG	Terrier, Jack Russell	120	63	57	82	98	0	0	0	0	0	0	0	0	0	0	0
Whakatane District	2016	DOG	Terrier, Staffordshire Bull	83	42	41	50	70	0	0	0	0	0	0	0	0	0	0	0
Whakatane District	2016	DOG	Terrier, West Highland White	14	5	9	12	12	0	0	0	0	0	0	0	0	0	0	0
Whakatane District	2016	DOG	_Unidentified_	754	387	367	374	588	8	1	0	0	0	0	0	0	0	0	0
Whakatane District	2016	OWN	_	0	0	0	0	0	0	0	0	2	4016	34	0	0	0	0	0
Whanganui District	2001	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	56	5236	0
Whanganui District	2002	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	42	10350	0
Whanganui District	2003	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	48	14217	0
Whanganui District	2004	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	112	42456	0
Whanganui District	2005	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	129	8493	0
Whanganui District	2006	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	146	44268	20173
Whanganui District	2007	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	143	68656	56285
Whanganui District	2008	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	165	36324	57563
Whanganui District	2009	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	173	35633	39315
Whanganui District	2010	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	179	33906	49732
Whanganui District	2011	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	191	30533	28269
Whanganui District	2012	JST	_	0	0	0	0	0	0	0	0	0	0	0	1	1	0	0	0
Whanganui District	2012	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	175	27118	30106
Whanganui District	2013	DOG	_ALL-PURE_	7080	3625	3455	3317	3617	249	27	0	0	0	0	0	0	0	0	0
Whanganui District	2013	DOG	_ALL-CROSS_	348	170	178	228	290	17	2	0	0	0	0	0	0	0	0	0
Whanganui District	2013	DOG	_ALL-DOGS_	7428	3795	3633	3545	3907	266	29	0	0	0	0	0	0	0	0	0
Whanganui District	2013	DOG	Beagle	29	18	11	20	18	0	0	0	0	0	0	0	0	0	0	0
Whanganui District	2013	DOG	Bichon Frise	177	102	75	109	135	0	0	0	0	0	0	0	0	0	0	0
Whanganui District	2013	DOG	Boxer	124	65	59	78	72	3	2	0	0	0	0	0	0	0	0	0
Whanganui District	2013	DOG	Cattle, Australian	61	32	29	23	24	2	1	0	0	0	0	0	0	0	0	0
Whanganui District	2013	DOG	Chihuahua, Long Coat	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Whanganui District	2013	DOG	Chihuahua, Smooth Coat	86	46	40	50	71	0	1	0	0	0	0	0	0	0	0	0
Whanganui District	2013	DOG	Collie, Bearded	13	6	7	5	6	0	0	0	0	0	0	0	0	0	0	0
Whanganui District	2013	DOG	Collie, Border	307	165	142	165	144	1	0	0	0	0	0	0	0	0	0	0
Whanganui District	2013	DOG	Collie, Rough	49	35	14	30	21	0	0	0	0	0	0	0	0	0	0	0
Whanganui District	2013	DOG	Collie, Smooth	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Whanganui District	2013	DOG	Greyhound	84	47	37	17	42	0	1	0	0	0	0	0	0	0	0	0
Whanganui District	2013	DOG	Heading	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Whanganui District	2013	DOG	Huntaway	1485	759	726	120	150	2	0	0	0	0	0	0	0	0	0	0
Whanganui District	2013	DOG	Maltese	72	32	40	45	65	0	0	0	0	0	0	0	0	0	0	0
Whanganui District	2013	DOG	Poodle, Miniature	40	21	19	19	25	0	0	0	0	0	0	0	0	0	0	0
Whanganui District	2013	DOG	Poodle, Toy	33	14	19	21	26	0	0	0	0	0	0	0	0	0	0	0
Whanganui District	2013	DOG	Retriever, Golden	88	45	43	52	48	1	0	0	0	0	0	0	0	0	0	0
Whanganui District	2013	DOG	Retriever, Labrador	796	411	385	493	440	5	1	0	0	0	0	0	0	0	0	0
Whanganui District	2013	DOG	Rottweiler	169	72	97	80	114	3	0	0	0	0	0	0	0	0	0	0
Whanganui District	2013	DOG	Schnauzer, Miniature	34	12	22	27	24	0	0	0	0	0	0	0	0	0	0	0
Whanganui District	2013	DOG	Shepherd, German	243	135	108	138	151	5	4	0	0	0	0	0	0	0	0	0
Whanganui District	2013	DOG	Shih Tzu	96	48	48	58	88	0	0	0	0	0	0	0	0	0	0	0
Whanganui District	2013	DOG	Spaniel, Cavalier King Charles	64	33	31	41	44	0	0	0	0	0	0	0	0	0	0	0
Whanganui District	2013	DOG	Spaniel, Cocker	7	4	3	6	6	0	0	0	0	0	0	0	0	0	0	0
Whanganui District	2013	DOG	Spaniel, English Springer	25	13	12	10	19	0	0	0	0	0	0	0	0	0	0	0
Whanganui District	2013	DOG	Terrier, American Pit Bull	213	93	120	63	176	203	6	0	0	0	0	0	0	0	0	0
Whanganui District	2013	DOG	Terrier, Fox (Smooth)	470	252	218	299	261	1	0	0	0	0	0	0	0	0	0	0
Whanganui District	2013	DOG	Terrier, Jack Russell	255	124	131	178	144	0	0	0	0	0	0	0	0	0	0	0
Whanganui District	2013	DOG	Terrier, Staffordshire Bull	256	134	122	148	172	5	4	0	0	0	0	0	0	0	0	0
Whanganui District	2013	DOG	Terrier, West Highland White	46	28	18	25	37	0	0	0	0	0	0	0	0	0	0	0
Whanganui District	2013	DOG	_Unidentified_	1758	879	879	997	1094	18	7	0	0	0	0	0	0	0	0	0
Whanganui District	2013	OWN	_	0	0	0	0	0	0	0	0	0	5019	91	0	0	0	0	0
Whanganui District	2013	JST	_	0	0	0	0	0	0	0	0	0	0	0	1	0	0	0	0
Whanganui District	2013	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	207	52303	30422
Whanganui District	2014	DOG	_ALL-PURE_	7229	3704	3525	3466	4056	258	20	0	0	0	0	0	0	0	0	0
Whanganui District	2014	DOG	_ALL-CROSS_	346	167	179	242	297	17	1	0	0	0	0	0	0	0	0	0
Whanganui District	2014	DOG	_ALL-DOGS_	7575	3871	3704	3708	4353	275	21	0	0	0	0	0	0	0	0	0
Whanganui District	2014	DOG	Beagle	32	18	14	24	22	0	0	0	0	0	0	0	0	0	0	0
Whanganui District	2014	DOG	Bichon Frise	188	106	82	130	149	0	0	0	0	0	0	0	0	0	0	0
Whanganui District	2014	DOG	Boxer	131	73	58	84	86	4	1	0	0	0	0	0	0	0	0	0
Whanganui District	2014	DOG	Cattle, Australian	56	27	29	22	25	1	0	0	0	0	0	0	0	0	0	0
Whanganui District	2014	DOG	Chihuahua, Long Coat	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Whanganui District	2014	DOG	Chihuahua, Smooth Coat	92	47	45	59	81	0	1	0	0	0	0	0	0	0	0	0
Whanganui District	2014	DOG	Collie, Bearded	15	7	8	6	10	0	0	0	0	0	0	0	0	0	0	0
Whanganui District	2014	DOG	Collie, Border	298	160	138	168	153	1	0	0	0	0	0	0	0	0	0	0
Whanganui District	2014	DOG	Collie, Rough	52	39	13	34	27	0	0	0	0	0	0	0	0	0	0	0
Whanganui District	2014	DOG	Collie, Smooth	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Whanganui District	2014	DOG	Greyhound	96	51	45	17	49	0	0	0	0	0	0	0	0	0	0	0
Whanganui District	2014	DOG	Heading	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Whanganui District	2014	DOG	Huntaway	1509	776	733	137	171	2	0	0	0	0	0	0	0	0	0	0
Whanganui District	2014	DOG	Maltese	94	45	49	60	90	0	0	0	0	0	0	0	0	0	0	0
Whanganui District	2014	DOG	Poodle, Miniature	39	22	17	22	27	0	0	0	0	0	0	0	0	0	0	0
Whanganui District	2014	DOG	Poodle, Toy	32	11	21	18	25	0	0	0	0	0	0	0	0	0	0	0
Whanganui District	2014	DOG	Retriever, Golden	88	47	41	52	56	1	0	0	0	0	0	0	0	0	0	0
Whanganui District	2014	DOG	Retriever, Labrador	772	397	375	489	474	6	0	0	0	0	0	0	0	0	0	0
Whanganui District	2014	DOG	Rottweiler	171	74	97	80	127	4	0	0	0	0	0	0	0	0	0	0
Whanganui District	2014	DOG	Schnauzer, Miniature	34	12	22	26	24	0	0	0	0	0	0	0	0	0	0	0
Whanganui District	2014	DOG	Shepherd, German	249	128	121	132	172	6	3	0	0	0	0	0	0	0	0	0
Whanganui District	2014	DOG	Shih Tzu	109	58	51	66	102	0	0	0	0	0	0	0	0	0	0	0
Whanganui District	2014	DOG	Spaniel, Cavalier King Charles	63	33	30	43	45	0	0	0	0	0	0	0	0	0	0	0
Whanganui District	2014	DOG	Spaniel, Cocker	9	6	3	9	8	0	0	0	0	0	0	0	0	0	0	0
Whanganui District	2014	DOG	Spaniel, English Springer	26	15	11	8	21	0	0	0	0	0	0	0	0	0	0	0
Whanganui District	2014	DOG	Terrier, American Pit Bull	224	102	122	59	184	209	4	0	0	0	0	0	0	0	0	0
Whanganui District	2014	DOG	Terrier, Fox (Smooth)	492	270	222	314	300	0	0	0	0	0	0	0	0	0	0	0
Whanganui District	2014	DOG	Terrier, Jack Russell	263	134	129	183	166	0	0	0	0	0	0	0	0	0	0	0
Whanganui District	2014	DOG	Terrier, Staffordshire Bull	261	135	126	144	186	4	4	0	0	0	0	0	0	0	0	0
Whanganui District	2014	DOG	Terrier, West Highland White	49	30	19	29	40	0	0	0	0	0	0	0	0	0	0	0
Whanganui District	2014	DOG	_Unidentified_	1785	881	904	1051	1236	20	7	0	0	0	0	0	0	0	0	0
Whanganui District	2014	OWN	_	0	0	0	0	0	0	0	0	0	5063	348	0	0	0	0	0
Whanganui District	2014	JST	_	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Whanganui District	2014	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	205	41500	50090
Whanganui District	2015	DOG	_ALL-PURE_	7124	3647	3477	3498	4336	227	32	0	0	0	0	0	0	0	0	0
Whanganui District	2015	DOG	_ALL-CROSS_	333	163	170	237	286	16	2	0	0	0	0	0	0	0	0	0
Whanganui District	2015	DOG	_ALL-DOGS_	7457	3810	3647	3735	4622	243	34	0	0	0	0	0	0	0	0	0
Whanganui District	2015	DOG	Beagle	28	15	13	23	20	0	0	0	0	0	0	0	0	0	0	0
Whanganui District	2015	DOG	Bichon Frise	192	103	89	140	155	0	0	0	0	0	0	0	0	0	0	0
Whanganui District	2015	DOG	Boxer	124	69	55	83	94	3	1	0	0	0	0	0	0	0	0	0
Whanganui District	2015	DOG	Cattle, Australian	55	27	28	19	25	0	0	0	0	0	0	0	0	0	0	0
Whanganui District	2015	DOG	Chihuahua, Long Coat	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Whanganui District	2015	DOG	Chihuahua, Smooth Coat	93	46	47	61	85	0	1	0	0	0	0	0	0	0	0	0
Whanganui District	2015	DOG	Collie, Bearded	17	8	9	8	12	0	0	0	0	0	0	0	0	0	0	0
Whanganui District	2015	DOG	Collie, Border	299	164	135	162	174	0	0	0	0	0	0	0	0	0	0	0
Whanganui District	2015	DOG	Collie, Rough	45	32	13	29	25	0	0	0	0	0	0	0	0	0	0	0
Whanganui District	2015	DOG	Collie, Smooth	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Whanganui District	2015	DOG	Greyhound	123	60	63	18	96	0	0	0	0	0	0	0	0	0	0	0
Whanganui District	2015	DOG	Heading	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Whanganui District	2015	DOG	Huntaway	1462	773	689	137	178	1	0	0	0	0	0	0	0	0	0	0
Whanganui District	2015	DOG	Maltese	108	51	57	73	100	0	0	0	0	0	0	0	0	0	0	0
Whanganui District	2015	DOG	Poodle, Miniature	39	23	16	24	28	0	0	0	0	0	0	0	0	0	0	0
Whanganui District	2015	DOG	Poodle, Toy	31	10	21	22	26	0	0	0	0	0	0	0	0	0	0	0
Whanganui District	2015	DOG	Retriever, Golden	91	47	44	58	66	1	0	0	0	0	0	0	0	0	0	0
Whanganui District	2015	DOG	Retriever, Labrador	747	386	361	458	497	5	2	0	0	0	0	0	0	0	0	0
Whanganui District	2015	DOG	Rottweiler	152	69	83	67	130	4	0	0	0	0	0	0	0	0	0	0
Whanganui District	2015	DOG	Schnauzer, Miniature	38	12	26	26	29	0	0	0	0	0	0	0	0	0	0	0
Whanganui District	2015	DOG	Shepherd, German	225	123	102	131	169	7	3	0	0	0	0	0	0	0	0	0
Whanganui District	2015	DOG	Shih Tzu	128	67	61	72	113	0	0	0	0	0	0	0	0	0	0	0
Whanganui District	2015	DOG	Spaniel, Cavalier King Charles	67	35	32	48	53	0	0	0	0	0	0	0	0	0	0	0
Whanganui District	2015	DOG	Spaniel, Cocker	11	6	5	10	10	0	0	0	0	0	0	0	0	0	0	0
Whanganui District	2015	DOG	Spaniel, English Springer	26	16	10	10	21	0	0	0	0	0	0	0	0	0	0	0
Whanganui District	2015	DOG	Terrier, American Pit Bull	221	101	120	68	186	187	9	0	0	0	0	0	0	0	0	0
Whanganui District	2015	DOG	Terrier, Fox (Smooth)	489	257	232	325	331	0	0	0	0	0	0	0	0	0	0	0
Whanganui District	2015	DOG	Terrier, Jack Russell	273	136	137	191	181	0	0	0	0	0	0	0	0	0	0	0
Whanganui District	2015	DOG	Terrier, Staffordshire Bull	236	121	115	141	180	2	5	0	0	0	0	0	0	0	0	0
Whanganui District	2015	DOG	Terrier, West Highland White	50	30	20	35	42	0	0	0	0	0	0	0	0	0	0	0
Whanganui District	2015	DOG	_Unidentified_	1754	860	894	1059	1310	17	11	0	0	0	0	0	0	0	0	0
Whanganui District	2015	OWN	_	0	0	0	0	0	0	0	0	0	4985	525	0	0	0	0	0
Whanganui District	2015	JST	_	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Whanganui District	2015	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	222	60583	72562
Whanganui District	2016	DOG	_ALL-PURE_	6943	3520	3423	3434	4580	191	29	0	0	0	0	0	0	0	0	0
Whanganui District	2016	DOG	_ALL-CROSS_	305	149	156	229	273	15	2	0	0	0	0	0	0	0	0	0
Whanganui District	2016	DOG	_ALL-DOGS_	7248	3669	3579	3663	4853	206	31	0	0	0	0	0	0	0	0	0
Whanganui District	2016	DOG	Beagle	25	12	13	22	20	0	0	0	0	0	0	0	0	0	0	0
Whanganui District	2016	DOG	Bichon Frise	194	101	93	144	164	0	0	0	0	0	0	0	0	0	0	0
Whanganui District	2016	DOG	Boxer	118	70	48	68	93	0	0	0	0	0	0	0	0	0	0	0
Whanganui District	2016	DOG	Cattle, Australian	51	25	26	17	23	0	0	0	0	0	0	0	0	0	0	0
Whanganui District	2016	DOG	Chihuahua, Long Coat	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Whanganui District	2016	DOG	Chihuahua, Smooth Coat	98	54	44	65	96	0	1	0	0	0	0	0	0	0	0	0
Whanganui District	2016	DOG	Collie, Bearded	19	10	9	10	15	0	0	0	0	0	0	0	0	0	0	0
Whanganui District	2016	DOG	Collie, Border	289	162	127	151	185	0	0	0	0	0	0	0	0	0	0	0
Whanganui District	2016	DOG	Collie, Rough	42	28	14	27	24	0	0	0	0	0	0	0	0	0	0	0
Whanganui District	2016	DOG	Collie, Smooth	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Whanganui District	2016	DOG	Greyhound	116	57	59	23	100	0	0	0	0	0	0	0	0	0	0	0
Whanganui District	2016	DOG	Heading	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Whanganui District	2016	DOG	Huntaway	1433	735	698	139	191	1	0	0	0	0	0	0	0	0	0	0
Whanganui District	2016	DOG	Maltese	125	58	67	88	119	0	0	0	0	0	0	0	0	0	0	0
Whanganui District	2016	DOG	Poodle, Miniature	43	24	19	27	35	0	0	0	0	0	0	0	0	0	0	0
Whanganui District	2016	DOG	Poodle, Toy	32	12	20	24	27	0	0	0	0	0	0	0	0	0	0	0
Whanganui District	2016	DOG	Retriever, Golden	80	42	38	44	68	1	0	0	0	0	0	0	0	0	0	0
Whanganui District	2016	DOG	Retriever, Labrador	697	347	350	435	520	4	2	0	0	0	0	0	0	0	0	0
Whanganui District	2016	DOG	Rottweiler	140	58	82	59	126	5	0	0	0	0	0	0	0	0	0	0
Whanganui District	2016	DOG	Schnauzer, Miniature	45	16	29	32	36	0	0	0	0	0	0	0	0	0	0	0
Whanganui District	2016	DOG	Shepherd, German	208	106	102	116	175	5	4	0	0	0	0	0	0	0	0	0
Whanganui District	2016	DOG	Shih Tzu	151	74	77	96	144	0	0	0	0	0	0	0	0	0	0	0
Whanganui District	2016	DOG	Spaniel, Cavalier King Charles	58	29	29	42	50	0	0	0	0	0	0	0	0	0	0	0
Whanganui District	2016	DOG	Spaniel, Cocker	11	6	5	11	11	0	0	0	0	0	0	0	0	0	0	0
Whanganui District	2016	DOG	Spaniel, English Springer	26	16	10	10	20	0	0	0	0	0	0	0	0	0	0	0
Whanganui District	2016	DOG	Terrier, American Pit Bull	195	95	100	64	171	158	7	0	0	0	0	0	0	0	0	0
Whanganui District	2016	DOG	Terrier, Fox (Smooth)	482	246	236	311	359	0	0	0	0	0	0	0	0	0	0	0
Whanganui District	2016	DOG	Terrier, Jack Russell	267	131	136	187	196	0	0	0	0	0	0	0	0	0	0	0
Whanganui District	2016	DOG	Terrier, Staffordshire Bull	257	134	123	149	218	4	4	0	0	0	0	0	0	0	0	0
Whanganui District	2016	DOG	Terrier, West Highland White	50	32	18	35	43	0	0	0	0	0	0	0	0	0	0	0
Whanganui District	2016	DOG	_Unidentified_	1691	840	851	1038	1351	13	11	0	0	0	0	0	0	0	0	0
Whanganui District	2016	OWN	_	0	0	0	0	0	0	0	0	3	4917	430	0	0	0	0	0
Whangarei District	2001	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	46	6020	0
Whangarei District	2002	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	52	11691	0
Whangarei District	2003	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	43	5149	0
Whangarei District	2004	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	125	25295	0
Whangarei District	2005	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	187	26795	0
Whangarei District	2006	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	230	35348	30277
Whangarei District	2007	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	239	56184	54814
Whangarei District	2008	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	211	36515	33785
Whangarei District	2009	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	227	35450	37455
Whangarei District	2010	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	270	33135	33961
Whangarei District	2011	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	250	97120	86096
Whangarei District	2012	JST	_	0	0	0	0	0	0	0	0	0	0	0	54	0	0	0	0
Whangarei District	2012	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	260	53290	55535
Whangarei District	2013	DOG	_ALL-PURE_	7301	3676	3625	4201	3169	16	1	0	0	0	0	0	0	0	0	0
Whangarei District	2013	DOG	_ALL-CROSS_	2907	1523	1384	1910	1804	17	2	0	0	0	0	0	0	0	0	0
Whangarei District	2013	DOG	_ALL-DOGS_	10208	5199	5009	6111	4973	33	3	0	0	0	0	0	0	0	0	0
Whangarei District	2013	DOG	Beagle	48	28	20	34	32	0	0	0	0	0	0	0	0	0	0	0
Whangarei District	2013	DOG	Bichon Frise	147	76	71	98	85	0	0	0	0	0	0	0	0	0	0	0
Whangarei District	2013	DOG	Boxer	127	59	68	94	62	0	0	0	0	0	0	0	0	0	0	0
Whangarei District	2013	DOG	Cattle, Australian	162	75	87	75	52	0	0	0	0	0	0	0	0	0	0	0
Whangarei District	2013	DOG	Chihuahua, Long Coat	92	58	34	43	54	0	0	0	0	0	0	0	0	0	0	0
Whangarei District	2013	DOG	Chihuahua, Smooth Coat	78	32	46	56	39	0	0	0	0	0	0	0	0	0	0	0
Whangarei District	2013	DOG	Collie, Bearded	47	24	23	22	19	0	0	0	0	0	0	0	0	0	0	0
Whangarei District	2013	DOG	Collie, Border	660	332	328	288	163	0	0	0	0	0	0	0	0	0	0	0
Whangarei District	2013	DOG	Collie, Rough	27	12	15	12	15	0	0	0	0	0	0	0	0	0	0	0
Whangarei District	2013	DOG	Collie, Smooth	34	17	17	18	3	0	0	0	0	0	0	0	0	0	0	0
Whangarei District	2013	DOG	Greyhound	22	11	11	11	13	0	0	0	0	0	0	0	0	0	0	0
Whangarei District	2013	DOG	Heading	139	69	70	18	9	0	0	0	0	0	0	0	0	0	0	0
Whangarei District	2013	DOG	Huntaway	577	248	329	178	71	0	0	0	0	0	0	0	0	0	0	0
Whangarei District	2013	DOG	Maltese	44	22	22	28	26	0	0	0	0	0	0	0	0	0	0	0
Whangarei District	2013	DOG	Poodle, Miniature	79	40	39	51	45	0	0	0	0	0	0	0	0	0	0	0
Whangarei District	2013	DOG	Poodle, Toy	84	49	35	54	56	0	0	0	0	0	0	0	0	0	0	0
Whangarei District	2013	DOG	Retriever, Golden	127	65	62	90	47	0	0	0	0	0	0	0	0	0	0	0
Whangarei District	2013	DOG	Retriever, Labrador	940	506	434	624	477	0	0	0	0	0	0	0	0	0	0	0
Whangarei District	2013	DOG	Rottweiler	149	73	76	70	86	0	0	0	0	0	0	0	0	0	0	0
Whangarei District	2013	DOG	Schnauzer, Miniature	42	18	24	31	22	0	0	0	0	0	0	0	0	0	0	0
Whangarei District	2013	DOG	Shepherd, German	326	161	165	204	157	0	0	0	0	0	0	0	0	0	0	0
Whangarei District	2013	DOG	Shih Tzu	174	83	91	106	125	0	0	0	0	0	0	0	0	0	0	0
Whangarei District	2013	DOG	Spaniel, Cavalier King Charles	39	25	14	27	27	0	0	0	0	0	0	0	0	0	0	0
Whangarei District	2013	DOG	Spaniel, Cocker	88	49	39	66	40	0	0	0	0	0	0	0	0	0	0	0
Whangarei District	2013	DOG	Spaniel, English Springer	64	37	27	39	30	0	0	0	0	0	0	0	0	0	0	0
Whangarei District	2013	DOG	Terrier, American Pit Bull	43	19	24	11	26	14	1	0	0	0	0	0	0	0	0	0
Whangarei District	2013	DOG	Terrier, Fox (Smooth)	439	243	196	311	176	0	0	0	0	0	0	0	0	0	0	0
Whangarei District	2013	DOG	Terrier, Jack Russell	511	249	262	373	219	0	0	0	0	0	0	0	0	0	0	0
Whangarei District	2013	DOG	Terrier, Staffordshire Bull	140	72	68	78	86	1	0	0	0	0	0	0	0	0	0	0
Whangarei District	2013	DOG	Terrier, West Highland White	39	25	14	34	24	0	0	0	0	0	0	0	0	0	0	0
Whangarei District	2013	DOG	_Unidentified_	1813	899	914	1057	883	1	0	0	0	0	0	0	0	0	0	0
Whangarei District	2013	OWN	_	0	0	0	0	0	0	0	0	0	7584	98	0	0	0	0	0
Whangarei District	2013	JST	_	0	0	0	0	0	0	0	0	0	0	0	10	0	0	0	0
Whangarei District	2013	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	305	44840	54592
Whangarei District	2014	DOG	_ALL-PURE_	7051	3570	3481	4184	3440	15	2	0	0	0	0	0	0	0	0	0
Whangarei District	2014	DOG	_ALL-CROSS_	3164	1616	1548	2144	2089	15	1	0	0	0	0	0	0	0	0	0
Whangarei District	2014	DOG	_ALL-DOGS_	10215	5186	5029	6328	5529	30	3	0	0	0	0	0	0	0	0	0
Whangarei District	2014	DOG	Beagle	44	27	17	29	30	0	0	0	0	0	0	0	0	0	0	0
Whangarei District	2014	DOG	Bichon Frise	157	80	77	113	96	0	0	0	0	0	0	0	0	0	0	0
Whangarei District	2014	DOG	Boxer	124	56	68	94	65	0	0	0	0	0	0	0	0	0	0	0
Whangarei District	2014	DOG	Cattle, Australian	161	77	84	77	58	0	0	0	0	0	0	0	0	0	0	0
Whangarei District	2014	DOG	Chihuahua, Long Coat	96	60	36	55	65	0	0	0	0	0	0	0	0	0	0	0
Whangarei District	2014	DOG	Chihuahua, Smooth Coat	76	33	43	53	41	0	0	0	0	0	0	0	0	0	0	0
Whangarei District	2014	DOG	Collie, Bearded	49	23	26	25	24	0	0	0	0	0	0	0	0	0	0	0
Whangarei District	2014	DOG	Collie, Border	606	311	295	285	177	0	0	0	0	0	0	0	0	0	0	0
Whangarei District	2014	DOG	Collie, Rough	30	15	15	15	18	0	0	0	0	0	0	0	0	0	0	0
Whangarei District	2014	DOG	Collie, Smooth	32	17	15	19	7	0	0	0	0	0	0	0	0	0	0	0
Whangarei District	2014	DOG	Greyhound	25	12	13	11	15	0	0	0	0	0	0	0	0	0	0	0
Whangarei District	2014	DOG	Heading	145	72	73	20	12	0	0	0	0	0	0	0	0	0	0	0
Whangarei District	2014	DOG	Huntaway	535	229	306	170	72	0	0	0	0	0	0	0	0	0	0	0
Whangarei District	2014	DOG	Maltese	54	27	27	35	35	0	0	0	0	0	0	0	0	0	0	0
Whangarei District	2014	DOG	Poodle, Miniature	80	40	40	56	50	0	0	0	0	0	0	0	0	0	0	0
Whangarei District	2014	DOG	Poodle, Toy	83	50	33	55	56	0	0	0	0	0	0	0	0	0	0	0
Whangarei District	2014	DOG	Retriever, Golden	108	53	55	78	46	0	0	0	0	0	0	0	0	0	0	0
Whangarei District	2014	DOG	Retriever, Labrador	922	503	419	626	525	0	0	0	0	0	0	0	0	0	0	0
Whangarei District	2014	DOG	Rottweiler	146	74	72	70	91	0	0	0	0	0	0	0	0	0	0	0
Whangarei District	2014	DOG	Schnauzer, Miniature	46	20	26	34	29	0	0	0	0	0	0	0	0	0	0	0
Whangarei District	2014	DOG	Shepherd, German	302	153	149	185	160	0	1	0	0	0	0	0	0	0	0	0
Whangarei District	2014	DOG	Shih Tzu	192	95	97	130	142	0	0	0	0	0	0	0	0	0	0	0
Whangarei District	2014	DOG	Spaniel, Cavalier King Charles	32	19	13	25	22	0	0	0	0	0	0	0	0	0	0	0
Whangarei District	2014	DOG	Spaniel, Cocker	81	42	39	59	41	0	0	0	0	0	0	0	0	0	0	0
Whangarei District	2014	DOG	Spaniel, English Springer	55	30	25	34	30	0	0	0	0	0	0	0	0	0	0	0
Whangarei District	2014	DOG	Terrier, American Pit Bull	43	20	23	15	26	13	1	0	0	0	0	0	0	0	0	0
Whangarei District	2014	DOG	Terrier, Fox (Smooth)	407	222	185	299	184	0	0	0	0	0	0	0	0	0	0	0
Whangarei District	2014	DOG	Terrier, Jack Russell	488	230	258	365	240	0	0	0	0	0	0	0	0	0	0	0
Whangarei District	2014	DOG	Terrier, Staffordshire Bull	167	90	77	98	108	1	0	0	0	0	0	0	0	0	0	0
Whangarei District	2014	DOG	Terrier, West Highland White	33	21	12	29	21	0	0	0	0	0	0	0	0	0	0	0
Whangarei District	2014	DOG	_Unidentified_	1732	869	863	1025	954	1	0	0	0	0	0	0	0	0	0	0
Whangarei District	2014	OWN	_	0	0	0	0	0	0	0	0	0	7726	70	0	0	0	0	0
Whangarei District	2014	JST	_	0	0	0	0	0	0	0	0	0	0	0	4	1	0	0	0
Whangarei District	2014	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	332	87979	74601
Whangarei District	2015	DOG	_ALL-PURE_	7030	3586	3444	4263	3771	12	0	0	0	0	0	0	0	0	0	0
Whangarei District	2015	DOG	_ALL-CROSS_	3451	1772	1679	2348	2382	11	0	0	0	0	0	0	0	0	0	0
Whangarei District	2015	DOG	_ALL-DOGS_	10481	5358	5123	6611	6153	23	0	0	0	0	0	0	0	0	0	0
Whangarei District	2015	DOG	Beagle	37	21	16	27	27	0	0	0	0	0	0	0	0	0	0	0
Whangarei District	2015	DOG	Bichon Frise	158	82	76	112	105	0	0	0	0	0	0	0	0	0	0	0
Whangarei District	2015	DOG	Boxer	123	53	70	92	72	0	0	0	0	0	0	0	0	0	0	0
Whangarei District	2015	DOG	Cattle, Australian	155	76	79	83	67	0	0	0	0	0	0	0	0	0	0	0
Whangarei District	2015	DOG	Chihuahua, Long Coat	92	57	35	50	64	0	0	0	0	0	0	0	0	0	0	0
Whangarei District	2015	DOG	Chihuahua, Smooth Coat	81	36	45	57	48	0	0	0	0	0	0	0	0	0	0	0
Whangarei District	2015	DOG	Collie, Bearded	51	24	27	28	24	0	0	0	0	0	0	0	0	0	0	0
Whangarei District	2015	DOG	Collie, Border	579	304	275	272	188	0	0	0	0	0	0	0	0	0	0	0
Whangarei District	2015	DOG	Collie, Rough	24	14	10	15	19	0	0	0	0	0	0	0	0	0	0	0
Whangarei District	2015	DOG	Collie, Smooth	36	20	16	21	15	0	0	0	0	0	0	0	0	0	0	0
Whangarei District	2015	DOG	Greyhound	26	13	13	13	18	0	0	0	0	0	0	0	0	0	0	0
Whangarei District	2015	DOG	Heading	157	80	77	24	15	0	0	0	0	0	0	0	0	0	0	0
Whangarei District	2015	DOG	Huntaway	514	211	303	147	75	0	0	0	0	0	0	0	0	0	0	0
Whangarei District	2015	DOG	Maltese	53	26	27	38	39	0	0	0	0	0	0	0	0	0	0	0
Whangarei District	2015	DOG	Poodle, Miniature	87	47	40	58	55	0	0	0	0	0	0	0	0	0	0	0
Whangarei District	2015	DOG	Poodle, Toy	80	48	32	56	55	0	0	0	0	0	0	0	0	0	0	0
Whangarei District	2015	DOG	Retriever, Golden	106	56	50	76	51	0	0	0	0	0	0	0	0	0	0	0
Whangarei District	2015	DOG	Retriever, Labrador	926	513	413	658	580	0	0	0	0	0	0	0	0	0	0	0
Whangarei District	2015	DOG	Rottweiler	152	75	77	77	105	0	0	0	0	0	0	0	0	0	0	0
Whangarei District	2015	DOG	Schnauzer, Miniature	49	21	28	39	32	0	0	0	0	0	0	0	0	0	0	0
Whangarei District	2015	DOG	Shepherd, German	286	141	145	182	185	0	0	0	0	0	0	0	0	0	0	0
Whangarei District	2015	DOG	Shih Tzu	233	114	119	154	170	0	0	0	0	0	0	0	0	0	0	0
Whangarei District	2015	DOG	Spaniel, Cavalier King Charles	36	19	17	27	25	0	0	0	0	0	0	0	0	0	0	0
Whangarei District	2015	DOG	Spaniel, Cocker	86	45	41	61	49	0	0	0	0	0	0	0	0	0	0	0
Whangarei District	2015	DOG	Spaniel, English Springer	51	28	23	34	29	0	0	0	0	0	0	0	0	0	0	0
Whangarei District	2015	DOG	Terrier, American Pit Bull	33	14	19	12	22	10	0	0	0	0	0	0	0	0	0	0
Whangarei District	2015	DOG	Terrier, Fox (Smooth)	398	223	175	300	210	0	0	0	0	0	0	0	0	0	0	0
Whangarei District	2015	DOG	Terrier, Jack Russell	472	228	244	358	256	0	0	0	0	0	0	0	0	0	0	0
Whangarei District	2015	DOG	Terrier, Staffordshire Bull	179	101	78	106	125	1	0	0	0	0	0	0	0	0	0	0
Whangarei District	2015	DOG	Terrier, West Highland White	29	19	10	26	20	0	0	0	0	0	0	0	0	0	0	0
Whangarei District	2015	DOG	_Unidentified_	1741	877	864	1060	1026	1	0	0	0	0	0	0	0	0	0	0
Whangarei District	2015	OWN	_	0	0	0	0	0	0	0	0	0	7874	76	0	0	0	0	0
Whangarei District	2015	JST	_	0	0	0	0	0	0	0	0	0	0	0	2	1	0	0	0
Whangarei District	2015	ACC	_	0	0	0	0	0	0	0	0	0	0	0	0	0	277	45094	68164
Whangarei District	2016	DOG	_ALL-PURE_	7239	3684	3555	4398	4404	30	0	0	0	0	0	0	0	0	0	0
Whangarei District	2016	DOG	_ALL-CROSS_	3497	1799	1698	2486	2675	41	1	0	0	0	0	0	0	0	0	0
Whangarei District	2016	DOG	_ALL-DOGS_	10736	5483	5253	6884	7079	71	1	0	0	0	0	0	0	0	0	0
Whangarei District	2016	DOG	Beagle	37	22	15	27	28	0	0	0	0	0	0	0	0	0	0	0
Whangarei District	2016	DOG	Bichon Frise	162	81	81	124	114	0	0	0	0	0	0	0	0	0	0	0
Whangarei District	2016	DOG	Boxer	127	58	69	86	94	0	0	0	0	0	0	0	0	0	0	0
Whangarei District	2016	DOG	Cattle, Australian	167	77	90	83	79	0	0	0	0	0	0	0	0	0	0	0
Whangarei District	2016	DOG	Chihuahua, Long Coat	103	58	45	61	76	0	0	0	0	0	0	0	0	0	0	0
Whangarei District	2016	DOG	Chihuahua, Smooth Coat	81	37	44	57	53	0	0	0	0	0	0	0	0	0	0	0
Whangarei District	2016	DOG	Collie, Bearded	56	29	27	30	28	0	0	0	0	0	0	0	0	0	0	0
Whangarei District	2016	DOG	Collie, Border	589	318	271	268	234	0	0	0	0	0	0	0	0	0	0	0
Whangarei District	2016	DOG	Collie, Rough	19	12	7	14	18	0	0	0	0	0	0	0	0	0	0	0
Whangarei District	2016	DOG	Collie, Smooth	34	20	14	19	15	0	0	0	0	0	0	0	0	0	0	0
Whangarei District	2016	DOG	Greyhound	30	17	13	16	22	0	0	0	0	0	0	0	0	0	0	0
Whangarei District	2016	DOG	Heading	166	85	81	24	22	0	0	0	0	0	0	0	0	0	0	0
Whangarei District	2016	DOG	Huntaway	492	190	302	138	97	0	0	0	0	0	0	0	0	0	0	0
Whangarei District	2016	DOG	Maltese	61	30	31	48	49	0	0	0	0	0	0	0	0	0	0	0
Whangarei District	2016	DOG	Poodle, Miniature	89	46	43	65	67	0	0	0	0	0	0	0	0	0	0	0
Whangarei District	2016	DOG	Poodle, Toy	96	58	38	68	69	0	0	0	0	0	0	0	0	0	0	0
Whangarei District	2016	DOG	Retriever, Golden	99	48	51	70	54	0	0	0	0	0	0	0	0	0	0	0
Whangarei District	2016	DOG	Retriever, Labrador	913	492	421	644	615	0	0	0	0	0	0	0	0	0	0	0
Whangarei District	2016	DOG	Rottweiler	163	77	86	82	120	0	0	0	0	0	0	0	0	0	0	0
Whangarei District	2016	DOG	Schnauzer, Miniature	65	31	34	46	50	0	0	0	0	0	0	0	0	0	0	0
Whangarei District	2016	DOG	Shepherd, German	301	147	154	189	218	0	0	0	0	0	0	0	0	0	0	0
Whangarei District	2016	DOG	Shih Tzu	245	119	126	171	191	0	0	0	0	0	0	0	0	0	0	0
Whangarei District	2016	DOG	Spaniel, Cavalier King Charles	32	17	15	27	26	0	0	0	0	0	0	0	0	0	0	0
Whangarei District	2016	DOG	Spaniel, Cocker	87	47	40	60	58	0	0	0	0	0	0	0	0	0	0	0
Whangarei District	2016	DOG	Spaniel, English Springer	53	34	19	36	34	0	0	0	0	0	0	0	0	0	0	0
Whangarei District	2016	DOG	Terrier, American Pit Bull	34	14	20	17	27	28	0	0	0	0	0	0	0	0	0	0
Whangarei District	2016	DOG	Terrier, Fox (Smooth)	394	226	168	298	238	0	0	0	0	0	0	0	0	0	0	0
Whangarei District	2016	DOG	Terrier, Jack Russell	460	229	231	361	277	0	0	0	0	0	0	0	0	0	0	0
Whangarei District	2016	DOG	Terrier, Staffordshire Bull	196	117	79	113	144	1	0	0	0	0	0	0	0	0	0	0
Whangarei District	2016	DOG	Terrier, West Highland White	34	22	12	31	27	0	0	0	0	0	0	0	0	0	0	0
Whangarei District	2016	DOG	_Unidentified_	1854	926	928	1125	1260	1	0	0	0	0	0	0	0	0	0	0
Whangarei District	2016	OWN	_	0	0	0	0	0	0	0	0	0	8139	79	0	0	0	0	0`


/***/ },
/* 97 */
/***/ function(module, exports) {

	/* jshint esnext: true */

	class Dict {
	  constructor() {
	    this.state = {keys: []};
	  }
	  indexOf(key) {
	    var {keys} = this.state;
	    var idx = keys.indexOf(key);
	    if(idx === -1) {
	        idx = keys.length;
	        keys.push(key);
	    }
	    return idx;
	  }
	  keyAt(idx) {
	    var {keys} = this.state;
	    return keys[idx];
	  }
	  listKeys() {
	    return this.state.keys;
	  }
	}

	class FN {

	  static identity(d) {
	    return d;
	  }

	  static nestLines(lines, keys, rollup) {
	    if(typeof rollup !== 'function') { rollup = FN.identity; }
	    if (!keys.length) return rollup(lines);
	    var keyValues = [];
	    var key = keys.shift();
	    var dict = new Dict();
	    lines.forEach(function(line) {
	      if(typeof key.label !== 'function') { key.label = FN.identity; }
	      var keyStr = key.label(line);
	      var idx = dict.indexOf(keyStr);
	      if(keyValues[idx] === undefined) { keyValues[idx] = {key: keyStr, data: []}; }
	      keyValues[idx].data.push(line);
	    });

	    keyValues.forEach(function(kv) {
	      kv.values = FN.nestLines([].concat(kv.data), [].concat(keys), rollup);
	      delete kv.data;
	    });

	    if(typeof key.sort === 'function') {
	      keyValues.sort(function(a, b) { return key.sort(a.key, b.key); });
	    }
	    if(typeof key.sortValues === 'function') {
	      keyValues.sort(function(a, b) { return key.sortValues(a.values, b.values); });
	    }
	    return keyValues;
	  }

	}

	class Nester {

	  constructor() {
	    this.state = {
	      nest : {},
	      keys : [],
	      sortValues : undefined,
	      rollup : undefined
	    };
	  }

	  key(d) {
	    var {keys} = this.state;
	    keys.push(d);
	    return this;
	  }

	  rollup(f) {
	    this.state.rollup = f;
	    return this;
	  }

	  nest(list, depth) {
	    var {keys, rollup} = this.state;
	    return FN.nestLines(list, keys, rollup);
	  }

	}

	module.exports = Nester;


/***/ },
/* 98 */
/***/ function(module, exports) {

	"use strict";

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */

	var _hyphenPattern = /-(.)/g;

	/**
	 * Camelcases a hyphenated string, for example:
	 *
	 *   > camelize('background-color')
	 *   < "backgroundColor"
	 *
	 * @param {string} string
	 * @return {string}
	 */
	function camelize(string) {
	  return string.replace(_hyphenPattern, function (_, character) {
	    return character.toUpperCase();
	  });
	}

	module.exports = camelize;

/***/ },
/* 99 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */

	'use strict';

	var camelize = __webpack_require__(98);

	var msPattern = /^-ms-/;

	/**
	 * Camelcases a hyphenated CSS property name, for example:
	 *
	 *   > camelizeStyleName('background-color')
	 *   < "backgroundColor"
	 *   > camelizeStyleName('-moz-transition')
	 *   < "MozTransition"
	 *   > camelizeStyleName('-ms-transition')
	 *   < "msTransition"
	 *
	 * As Andi Smith suggests
	 * (http://www.andismith.com/blog/2012/02/modernizr-prefixed/), an `-ms` prefix
	 * is converted to lowercase `ms`.
	 *
	 * @param {string} string
	 * @return {string}
	 */
	function camelizeStyleName(string) {
	  return camelize(string.replace(msPattern, 'ms-'));
	}

	module.exports = camelizeStyleName;

/***/ },
/* 100 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 *
	 */

	var isTextNode = __webpack_require__(108);

	/*eslint-disable no-bitwise */

	/**
	 * Checks if a given DOM node contains or is another DOM node.
	 */
	function containsNode(outerNode, innerNode) {
	  if (!outerNode || !innerNode) {
	    return false;
	  } else if (outerNode === innerNode) {
	    return true;
	  } else if (isTextNode(outerNode)) {
	    return false;
	  } else if (isTextNode(innerNode)) {
	    return containsNode(outerNode, innerNode.parentNode);
	  } else if ('contains' in outerNode) {
	    return outerNode.contains(innerNode);
	  } else if (outerNode.compareDocumentPosition) {
	    return !!(outerNode.compareDocumentPosition(innerNode) & 16);
	  } else {
	    return false;
	  }
	}

	module.exports = containsNode;

/***/ },
/* 101 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */

	var invariant = __webpack_require__(1);

	/**
	 * Convert array-like objects to arrays.
	 *
	 * This API assumes the caller knows the contents of the data type. For less
	 * well defined inputs use createArrayFromMixed.
	 *
	 * @param {object|function|filelist} obj
	 * @return {array}
	 */
	function toArray(obj) {
	  var length = obj.length;

	  // Some browsers builtin objects can report typeof 'function' (e.g. NodeList
	  // in old versions of Safari).
	  !(!Array.isArray(obj) && (typeof obj === 'object' || typeof obj === 'function')) ?  false ? invariant(false, 'toArray: Array-like object expected') : invariant(false) : void 0;

	  !(typeof length === 'number') ?  false ? invariant(false, 'toArray: Object needs a length property') : invariant(false) : void 0;

	  !(length === 0 || length - 1 in obj) ?  false ? invariant(false, 'toArray: Object should have keys for indices') : invariant(false) : void 0;

	  !(typeof obj.callee !== 'function') ?  false ? invariant(false, 'toArray: Object can\'t be `arguments`. Use rest params ' + '(function(...args) {}) or Array.from() instead.') : invariant(false) : void 0;

	  // Old IE doesn't give collections access to hasOwnProperty. Assume inputs
	  // without method will throw during the slice call and skip straight to the
	  // fallback.
	  if (obj.hasOwnProperty) {
	    try {
	      return Array.prototype.slice.call(obj);
	    } catch (e) {
	      // IE < 9 does not support Array#slice on collections objects
	    }
	  }

	  // Fall back to copying key by key. This assumes all keys have a value,
	  // so will not preserve sparsely populated inputs.
	  var ret = Array(length);
	  for (var ii = 0; ii < length; ii++) {
	    ret[ii] = obj[ii];
	  }
	  return ret;
	}

	/**
	 * Perform a heuristic test to determine if an object is "array-like".
	 *
	 *   A monk asked Joshu, a Zen master, "Has a dog Buddha nature?"
	 *   Joshu replied: "Mu."
	 *
	 * This function determines if its argument has "array nature": it returns
	 * true if the argument is an actual array, an `arguments' object, or an
	 * HTMLCollection (e.g. node.childNodes or node.getElementsByTagName()).
	 *
	 * It will return false for other array-like objects like Filelist.
	 *
	 * @param {*} obj
	 * @return {boolean}
	 */
	function hasArrayNature(obj) {
	  return(
	    // not null/false
	    !!obj && (
	    // arrays are objects, NodeLists are functions in Safari
	    typeof obj == 'object' || typeof obj == 'function') &&
	    // quacks like an array
	    'length' in obj &&
	    // not window
	    !('setInterval' in obj) &&
	    // no DOM node should be considered an array-like
	    // a 'select' element has 'length' and 'item' properties on IE8
	    typeof obj.nodeType != 'number' && (
	    // a real array
	    Array.isArray(obj) ||
	    // arguments
	    'callee' in obj ||
	    // HTMLCollection/NodeList
	    'item' in obj)
	  );
	}

	/**
	 * Ensure that the argument is an array by wrapping it in an array if it is not.
	 * Creates a copy of the argument if it is already an array.
	 *
	 * This is mostly useful idiomatically:
	 *
	 *   var createArrayFromMixed = require('createArrayFromMixed');
	 *
	 *   function takesOneOrMoreThings(things) {
	 *     things = createArrayFromMixed(things);
	 *     ...
	 *   }
	 *
	 * This allows you to treat `things' as an array, but accept scalars in the API.
	 *
	 * If you need to convert an array-like object, like `arguments`, into an array
	 * use toArray instead.
	 *
	 * @param {*} obj
	 * @return {array}
	 */
	function createArrayFromMixed(obj) {
	  if (!hasArrayNature(obj)) {
	    return [obj];
	  } else if (Array.isArray(obj)) {
	    return obj.slice();
	  } else {
	    return toArray(obj);
	  }
	}

	module.exports = createArrayFromMixed;

/***/ },
/* 102 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */

	/*eslint-disable fb-www/unsafe-html*/

	var ExecutionEnvironment = __webpack_require__(7);

	var createArrayFromMixed = __webpack_require__(101);
	var getMarkupWrap = __webpack_require__(103);
	var invariant = __webpack_require__(1);

	/**
	 * Dummy container used to render all markup.
	 */
	var dummyNode = ExecutionEnvironment.canUseDOM ? document.createElement('div') : null;

	/**
	 * Pattern used by `getNodeName`.
	 */
	var nodeNamePattern = /^\s*<(\w+)/;

	/**
	 * Extracts the `nodeName` of the first element in a string of markup.
	 *
	 * @param {string} markup String of markup.
	 * @return {?string} Node name of the supplied markup.
	 */
	function getNodeName(markup) {
	  var nodeNameMatch = markup.match(nodeNamePattern);
	  return nodeNameMatch && nodeNameMatch[1].toLowerCase();
	}

	/**
	 * Creates an array containing the nodes rendered from the supplied markup. The
	 * optionally supplied `handleScript` function will be invoked once for each
	 * <script> element that is rendered. If no `handleScript` function is supplied,
	 * an exception is thrown if any <script> elements are rendered.
	 *
	 * @param {string} markup A string of valid HTML markup.
	 * @param {?function} handleScript Invoked once for each rendered <script>.
	 * @return {array<DOMElement|DOMTextNode>} An array of rendered nodes.
	 */
	function createNodesFromMarkup(markup, handleScript) {
	  var node = dummyNode;
	  !!!dummyNode ?  false ? invariant(false, 'createNodesFromMarkup dummy not initialized') : invariant(false) : void 0;
	  var nodeName = getNodeName(markup);

	  var wrap = nodeName && getMarkupWrap(nodeName);
	  if (wrap) {
	    node.innerHTML = wrap[1] + markup + wrap[2];

	    var wrapDepth = wrap[0];
	    while (wrapDepth--) {
	      node = node.lastChild;
	    }
	  } else {
	    node.innerHTML = markup;
	  }

	  var scripts = node.getElementsByTagName('script');
	  if (scripts.length) {
	    !handleScript ?  false ? invariant(false, 'createNodesFromMarkup(...): Unexpected <script> element rendered.') : invariant(false) : void 0;
	    createArrayFromMixed(scripts).forEach(handleScript);
	  }

	  var nodes = Array.from(node.childNodes);
	  while (node.lastChild) {
	    node.removeChild(node.lastChild);
	  }
	  return nodes;
	}

	module.exports = createNodesFromMarkup;

/***/ },
/* 103 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	/*eslint-disable fb-www/unsafe-html */

	var ExecutionEnvironment = __webpack_require__(7);

	var invariant = __webpack_require__(1);

	/**
	 * Dummy container used to detect which wraps are necessary.
	 */
	var dummyNode = ExecutionEnvironment.canUseDOM ? document.createElement('div') : null;

	/**
	 * Some browsers cannot use `innerHTML` to render certain elements standalone,
	 * so we wrap them, render the wrapped nodes, then extract the desired node.
	 *
	 * In IE8, certain elements cannot render alone, so wrap all elements ('*').
	 */

	var shouldWrap = {};

	var selectWrap = [1, '<select multiple="true">', '</select>'];
	var tableWrap = [1, '<table>', '</table>'];
	var trWrap = [3, '<table><tbody><tr>', '</tr></tbody></table>'];

	var svgWrap = [1, '<svg xmlns="http://www.w3.org/2000/svg">', '</svg>'];

	var markupWrap = {
	  '*': [1, '?<div>', '</div>'],

	  'area': [1, '<map>', '</map>'],
	  'col': [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>'],
	  'legend': [1, '<fieldset>', '</fieldset>'],
	  'param': [1, '<object>', '</object>'],
	  'tr': [2, '<table><tbody>', '</tbody></table>'],

	  'optgroup': selectWrap,
	  'option': selectWrap,

	  'caption': tableWrap,
	  'colgroup': tableWrap,
	  'tbody': tableWrap,
	  'tfoot': tableWrap,
	  'thead': tableWrap,

	  'td': trWrap,
	  'th': trWrap
	};

	// Initialize the SVG elements since we know they'll always need to be wrapped
	// consistently. If they are created inside a <div> they will be initialized in
	// the wrong namespace (and will not display).
	var svgElements = ['circle', 'clipPath', 'defs', 'ellipse', 'g', 'image', 'line', 'linearGradient', 'mask', 'path', 'pattern', 'polygon', 'polyline', 'radialGradient', 'rect', 'stop', 'text', 'tspan'];
	svgElements.forEach(function (nodeName) {
	  markupWrap[nodeName] = svgWrap;
	  shouldWrap[nodeName] = true;
	});

	/**
	 * Gets the markup wrap configuration for the supplied `nodeName`.
	 *
	 * NOTE: This lazily detects which wraps are necessary for the current browser.
	 *
	 * @param {string} nodeName Lowercase `nodeName`.
	 * @return {?array} Markup wrap configuration, if applicable.
	 */
	function getMarkupWrap(nodeName) {
	  !!!dummyNode ?  false ? invariant(false, 'Markup wrapping node not initialized') : invariant(false) : void 0;
	  if (!markupWrap.hasOwnProperty(nodeName)) {
	    nodeName = '*';
	  }
	  if (!shouldWrap.hasOwnProperty(nodeName)) {
	    if (nodeName === '*') {
	      dummyNode.innerHTML = '<link />';
	    } else {
	      dummyNode.innerHTML = '<' + nodeName + '></' + nodeName + '>';
	    }
	    shouldWrap[nodeName] = !dummyNode.firstChild;
	  }
	  return shouldWrap[nodeName] ? markupWrap[nodeName] : null;
	}

	module.exports = getMarkupWrap;

/***/ },
/* 104 */
/***/ function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */

	'use strict';

	/**
	 * Gets the scroll position of the supplied element or window.
	 *
	 * The return values are unbounded, unlike `getScrollPosition`. This means they
	 * may be negative or exceed the element boundaries (which is possible using
	 * inertial scrolling).
	 *
	 * @param {DOMWindow|DOMElement} scrollable
	 * @return {object} Map with `x` and `y` keys.
	 */

	function getUnboundedScrollPosition(scrollable) {
	  if (scrollable === window) {
	    return {
	      x: window.pageXOffset || document.documentElement.scrollLeft,
	      y: window.pageYOffset || document.documentElement.scrollTop
	    };
	  }
	  return {
	    x: scrollable.scrollLeft,
	    y: scrollable.scrollTop
	  };
	}

	module.exports = getUnboundedScrollPosition;

/***/ },
/* 105 */
/***/ function(module, exports) {

	'use strict';

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */

	var _uppercasePattern = /([A-Z])/g;

	/**
	 * Hyphenates a camelcased string, for example:
	 *
	 *   > hyphenate('backgroundColor')
	 *   < "background-color"
	 *
	 * For CSS style names, use `hyphenateStyleName` instead which works properly
	 * with all vendor prefixes, including `ms`.
	 *
	 * @param {string} string
	 * @return {string}
	 */
	function hyphenate(string) {
	  return string.replace(_uppercasePattern, '-$1').toLowerCase();
	}

	module.exports = hyphenate;

/***/ },
/* 106 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */

	'use strict';

	var hyphenate = __webpack_require__(105);

	var msPattern = /^ms-/;

	/**
	 * Hyphenates a camelcased CSS property name, for example:
	 *
	 *   > hyphenateStyleName('backgroundColor')
	 *   < "background-color"
	 *   > hyphenateStyleName('MozTransition')
	 *   < "-moz-transition"
	 *   > hyphenateStyleName('msTransition')
	 *   < "-ms-transition"
	 *
	 * As Modernizr suggests (http://modernizr.com/docs/#prefixed), an `ms` prefix
	 * is converted to `-ms-`.
	 *
	 * @param {string} string
	 * @return {string}
	 */
	function hyphenateStyleName(string) {
	  return hyphenate(string).replace(msPattern, '-ms-');
	}

	module.exports = hyphenateStyleName;

/***/ },
/* 107 */
/***/ function(module, exports) {

	'use strict';

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */

	/**
	 * @param {*} object The object to check.
	 * @return {boolean} Whether or not the object is a DOM node.
	 */
	function isNode(object) {
	  return !!(object && (typeof Node === 'function' ? object instanceof Node : typeof object === 'object' && typeof object.nodeType === 'number' && typeof object.nodeName === 'string'));
	}

	module.exports = isNode;

/***/ },
/* 108 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */

	var isNode = __webpack_require__(107);

	/**
	 * @param {*} object The object to check.
	 * @return {boolean} Whether or not the object is a DOM text node.
	 */
	function isTextNode(object) {
	  return isNode(object) && object.nodeType == 3;
	}

	module.exports = isTextNode;

/***/ },
/* 109 */
/***/ function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var hasOwnProperty = Object.prototype.hasOwnProperty;

	/**
	 * Executes the provided `callback` once for each enumerable own property in the
	 * object and constructs a new object from the results. The `callback` is
	 * invoked with three arguments:
	 *
	 *  - the property value
	 *  - the property name
	 *  - the object being traversed
	 *
	 * Properties that are added after the call to `mapObject` will not be visited
	 * by `callback`. If the values of existing properties are changed, the value
	 * passed to `callback` will be the value at the time `mapObject` visits them.
	 * Properties that are deleted before being visited are not visited.
	 *
	 * @grep function objectMap()
	 * @grep function objMap()
	 *
	 * @param {?object} object
	 * @param {function} callback
	 * @param {*} context
	 * @return {?object}
	 */
	function mapObject(object, callback, context) {
	  if (!object) {
	    return null;
	  }
	  var result = {};
	  for (var name in object) {
	    if (hasOwnProperty.call(object, name)) {
	      result[name] = callback.call(context, object[name], name, object);
	    }
	  }
	  return result;
	}

	module.exports = mapObject;

/***/ },
/* 110 */
/***/ function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 *
	 * @typechecks static-only
	 */

	'use strict';

	/**
	 * Memoizes the return value of a function that accepts one string argument.
	 */

	function memoizeStringOnly(callback) {
	  var cache = {};
	  return function (string) {
	    if (!cache.hasOwnProperty(string)) {
	      cache[string] = callback.call(this, string);
	    }
	    return cache[string];
	  };
	}

	module.exports = memoizeStringOnly;

/***/ },
/* 111 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	module.exports = __webpack_require__(150);


/***/ },
/* 112 */
/***/ function(module, exports, __webpack_require__) {

	if (typeof Promise === 'undefined') {
	  // Rejection tracking prevents a common issue where React gets into an
	  // inconsistent state due to an error, but it gets swallowed by a Promise,
	  // and the user has no idea what causes React's erratic future behavior.
	  __webpack_require__(136).enable();
	  window.Promise = __webpack_require__(135);
	}

	__webpack_require__(137);


/***/ },
/* 113 */
/***/ function(module, exports) {

	/* WEBPACK VAR INJECTION */(function(global) {"use strict";

	// Use the fastest means possible to execute a task in its own turn, with
	// priority over other events including IO, animation, reflow, and redraw
	// events in browsers.
	//
	// An exception thrown by a task will permanently interrupt the processing of
	// subsequent tasks. The higher level `asap` function ensures that if an
	// exception is thrown by a task, that the task queue will continue flushing as
	// soon as possible, but if you use `rawAsap` directly, you are responsible to
	// either ensure that no exceptions are thrown from your task, or to manually
	// call `rawAsap.requestFlush` if an exception is thrown.
	module.exports = rawAsap;
	function rawAsap(task) {
	    if (!queue.length) {
	        requestFlush();
	        flushing = true;
	    }
	    // Equivalent to push, but avoids a function call.
	    queue[queue.length] = task;
	}

	var queue = [];
	// Once a flush has been requested, no further calls to `requestFlush` are
	// necessary until the next `flush` completes.
	var flushing = false;
	// `requestFlush` is an implementation-specific method that attempts to kick
	// off a `flush` event as quickly as possible. `flush` will attempt to exhaust
	// the event queue before yielding to the browser's own event loop.
	var requestFlush;
	// The position of the next task to execute in the task queue. This is
	// preserved between calls to `flush` so that it can be resumed if
	// a task throws an exception.
	var index = 0;
	// If a task schedules additional tasks recursively, the task queue can grow
	// unbounded. To prevent memory exhaustion, the task queue will periodically
	// truncate already-completed tasks.
	var capacity = 1024;

	// The flush function processes all tasks that have been scheduled with
	// `rawAsap` unless and until one of those tasks throws an exception.
	// If a task throws an exception, `flush` ensures that its state will remain
	// consistent and will resume where it left off when called again.
	// However, `flush` does not make any arrangements to be called again if an
	// exception is thrown.
	function flush() {
	    while (index < queue.length) {
	        var currentIndex = index;
	        // Advance the index before calling the task. This ensures that we will
	        // begin flushing on the next task the task throws an error.
	        index = index + 1;
	        queue[currentIndex].call();
	        // Prevent leaking memory for long chains of recursive calls to `asap`.
	        // If we call `asap` within tasks scheduled by `asap`, the queue will
	        // grow, but to avoid an O(n) walk for every task we execute, we don't
	        // shift tasks off the queue after they have been executed.
	        // Instead, we periodically shift 1024 tasks off the queue.
	        if (index > capacity) {
	            // Manually shift all values starting at the index back to the
	            // beginning of the queue.
	            for (var scan = 0, newLength = queue.length - index; scan < newLength; scan++) {
	                queue[scan] = queue[scan + index];
	            }
	            queue.length -= index;
	            index = 0;
	        }
	    }
	    queue.length = 0;
	    index = 0;
	    flushing = false;
	}

	// `requestFlush` is implemented using a strategy based on data collected from
	// every available SauceLabs Selenium web driver worker at time of writing.
	// https://docs.google.com/spreadsheets/d/1mG-5UYGup5qxGdEMWkhP6BWCz053NUb2E1QoUTU16uA/edit#gid=783724593

	// Safari 6 and 6.1 for desktop, iPad, and iPhone are the only browsers that
	// have WebKitMutationObserver but not un-prefixed MutationObserver.
	// Must use `global` instead of `window` to work in both frames and web
	// workers. `global` is a provision of Browserify, Mr, Mrs, or Mop.
	var BrowserMutationObserver = global.MutationObserver || global.WebKitMutationObserver;

	// MutationObservers are desirable because they have high priority and work
	// reliably everywhere they are implemented.
	// They are implemented in all modern browsers.
	//
	// - Android 4-4.3
	// - Chrome 26-34
	// - Firefox 14-29
	// - Internet Explorer 11
	// - iPad Safari 6-7.1
	// - iPhone Safari 7-7.1
	// - Safari 6-7
	if (typeof BrowserMutationObserver === "function") {
	    requestFlush = makeRequestCallFromMutationObserver(flush);

	// MessageChannels are desirable because they give direct access to the HTML
	// task queue, are implemented in Internet Explorer 10, Safari 5.0-1, and Opera
	// 11-12, and in web workers in many engines.
	// Although message channels yield to any queued rendering and IO tasks, they
	// would be better than imposing the 4ms delay of timers.
	// However, they do not work reliably in Internet Explorer or Safari.

	// Internet Explorer 10 is the only browser that has setImmediate but does
	// not have MutationObservers.
	// Although setImmediate yields to the browser's renderer, it would be
	// preferrable to falling back to setTimeout since it does not have
	// the minimum 4ms penalty.
	// Unfortunately there appears to be a bug in Internet Explorer 10 Mobile (and
	// Desktop to a lesser extent) that renders both setImmediate and
	// MessageChannel useless for the purposes of ASAP.
	// https://github.com/kriskowal/q/issues/396

	// Timers are implemented universally.
	// We fall back to timers in workers in most engines, and in foreground
	// contexts in the following browsers.
	// However, note that even this simple case requires nuances to operate in a
	// broad spectrum of browsers.
	//
	// - Firefox 3-13
	// - Internet Explorer 6-9
	// - iPad Safari 4.3
	// - Lynx 2.8.7
	} else {
	    requestFlush = makeRequestCallFromTimer(flush);
	}

	// `requestFlush` requests that the high priority event queue be flushed as
	// soon as possible.
	// This is useful to prevent an error thrown in a task from stalling the event
	// queue if the exception handled by Node.js’s
	// `process.on("uncaughtException")` or by a domain.
	rawAsap.requestFlush = requestFlush;

	// To request a high priority event, we induce a mutation observer by toggling
	// the text of a text node between "1" and "-1".
	function makeRequestCallFromMutationObserver(callback) {
	    var toggle = 1;
	    var observer = new BrowserMutationObserver(callback);
	    var node = document.createTextNode("");
	    observer.observe(node, {characterData: true});
	    return function requestCall() {
	        toggle = -toggle;
	        node.data = toggle;
	    };
	}

	// The message channel technique was discovered by Malte Ubl and was the
	// original foundation for this library.
	// http://www.nonblocking.io/2011/06/windownexttick.html

	// Safari 6.0.5 (at least) intermittently fails to create message ports on a
	// page's first load. Thankfully, this version of Safari supports
	// MutationObservers, so we don't need to fall back in that case.

	// function makeRequestCallFromMessageChannel(callback) {
	//     var channel = new MessageChannel();
	//     channel.port1.onmessage = callback;
	//     return function requestCall() {
	//         channel.port2.postMessage(0);
	//     };
	// }

	// For reasons explained above, we are also unable to use `setImmediate`
	// under any circumstances.
	// Even if we were, there is another bug in Internet Explorer 10.
	// It is not sufficient to assign `setImmediate` to `requestFlush` because
	// `setImmediate` must be called *by name* and therefore must be wrapped in a
	// closure.
	// Never forget.

	// function makeRequestCallFromSetImmediate(callback) {
	//     return function requestCall() {
	//         setImmediate(callback);
	//     };
	// }

	// Safari 6.0 has a problem where timers will get lost while the user is
	// scrolling. This problem does not impact ASAP because Safari 6.0 supports
	// mutation observers, so that implementation is used instead.
	// However, if we ever elect to use timers in Safari, the prevalent work-around
	// is to add a scroll event listener that calls for a flush.

	// `setTimeout` does not call the passed callback if the delay is less than
	// approximately 7 in web workers in Firefox 8 through 18, and sometimes not
	// even then.

	function makeRequestCallFromTimer(callback) {
	    return function requestCall() {
	        // We dispatch a timeout with a specified delay of 0 for engines that
	        // can reliably accommodate that request. This will usually be snapped
	        // to a 4 milisecond delay, but once we're flushing, there's no delay
	        // between events.
	        var timeoutHandle = setTimeout(handleTimer, 0);
	        // However, since this timer gets frequently dropped in Firefox
	        // workers, we enlist an interval handle that will try to fire
	        // an event 20 times per second until it succeeds.
	        var intervalHandle = setInterval(handleTimer, 50);

	        function handleTimer() {
	            // Whichever timer succeeds will cancel both timers and
	            // execute the callback.
	            clearTimeout(timeoutHandle);
	            clearInterval(intervalHandle);
	            callback();
	        }
	    };
	}

	// This is for `asap.js` only.
	// Its name will be periodically randomized to break any code that depends on
	// its existence.
	rawAsap.makeRequestCallFromTimer = makeRequestCallFromTimer;

	// ASAP was originally a nextTick shim included in Q. This was factored out
	// into this ASAP package. It was later adapted to RSVP which made further
	// amendments. These decisions, particularly to marginalize MessageChannel and
	// to capture the MutationObserver implementation in a closure, were integrated
	// back into ASAP proper.
	// https://github.com/tildeio/rsvp.js/blob/cddf7232546a9cf858524b75cde6f9edf72620a7/lib/rsvp/asap.js

	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))

/***/ },
/* 114 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _react = __webpack_require__(6);

	var _react2 = _interopRequireDefault(_react);

	__webpack_require__(127);

	var _CouncilsStatsEs6React = __webpack_require__(121);

	var _CouncilsStatsEs6React2 = _interopRequireDefault(_CouncilsStatsEs6React);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* jshint esnext: true */

	var _ref = _react2.default.createElement(
	  'app',
	  null,
	  _react2.default.createElement(
	    'div',
	    { className: 'header' },
	    _react2.default.createElement(
	      'h2',
	      null,
	      'New Zealand Dog Control Statistics'
	    )
	  ),
	  _react2.default.createElement(_CouncilsStatsEs6React2.default, null)
	);

	var App = function (_Component) {
	  _inherits(App, _Component);

	  function App() {
	    _classCallCheck(this, App);

	    return _possibleConstructorReturn(this, Object.getPrototypeOf(App).apply(this, arguments));
	  }

	  _createClass(App, [{
	    key: 'render',
	    value: function render() {
	      return _ref;
	    }
	  }]);

	  return App;
	}(_react.Component);

	exports.default = App;

/***/ },
/* 115 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(6);

	var _react2 = _interopRequireDefault(_react);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function Spacer(_ref) {
	  var width = _ref.width;
	  var height = _ref.height;

	  var opts = {};
	  if (width) {
	    opts.width = width + "px";
	  }
	  if (height) {
	    opts.height = height + "px";
	  }
	  return _react2.default.createElement("div", { style: opts });
	} /* jshint esnext: true */

	exports.default = Spacer;

/***/ },
/* 116 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	__webpack_require__(128);

	var _react = __webpack_require__(6);

	var _react2 = _interopRequireDefault(_react);

	var _OwnerSummaryEs6React = __webpack_require__(119);

	var _OwnerSummaryEs6React2 = _interopRequireDefault(_OwnerSummaryEs6React);

	var _DogSummaryEs6React = __webpack_require__(117);

	var _DogSummaryEs6React2 = _interopRequireDefault(_DogSummaryEs6React);

	var _ThreatSummaryEs6React = __webpack_require__(120);

	var _ThreatSummaryEs6React2 = _interopRequireDefault(_ThreatSummaryEs6React);

	var _IncidentSummaryEs6React = __webpack_require__(118);

	var _IncidentSummaryEs6React2 = _interopRequireDefault(_IncidentSummaryEs6React);

	var _BoxHEs6React = __webpack_require__(33);

	var _BoxHEs6React2 = _interopRequireDefault(_BoxHEs6React);

	var _SpacerEs6React = __webpack_require__(115);

	var _SpacerEs6React2 = _interopRequireDefault(_SpacerEs6React);

	var _ThreateningBreedsEs6React = __webpack_require__(126);

	var _ThreateningBreedsEs6React2 = _interopRequireDefault(_ThreateningBreedsEs6React);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* jshint esnext: true */

	var _ref4 = _react2.default.createElement(_SpacerEs6React2.default, { width: '8' });

	var CouncilItem = function (_Component) {
	  _inherits(CouncilItem, _Component);

	  function CouncilItem() {
	    _classCallCheck(this, CouncilItem);

	    return _possibleConstructorReturn(this, Object.getPrototypeOf(CouncilItem).apply(this, arguments));
	  }

	  _createClass(CouncilItem, [{
	    key: 'render',
	    value: function render() {
	      var _props = this.props;
	      var council = _props.council;
	      var yearData = _props.yearData;

	      var _ref = yearData || {};

	      var totalDogs = _ref.totalDogs;
	      var dogGroups = _ref.dogGroups;
	      var threateningBreeds = _ref.threateningBreeds;
	      var threatSummary = _ref.threatSummary || {};
	      var owners = _ref.owners;
	      var justice = _ref.justice;
	      var acc = _ref.acc;

	      var _ref2 = acc || {};

	      var injuries = _ref2.injuries;
	      var paid_this_yr = _ref2.paid_this_yr;
	      var paid_any_yr = _ref2.paid_any_yr;

	      var _ref3 = justice || {};

	      var prosecutions = _ref3.prosecutions;
	      var destruction = _ref3.destruction;

	      return _react2.default.createElement(
	        'council-item',
	        null,
	        _react2.default.createElement(
	          'h1',
	          null,
	          council
	        ),
	        _react2.default.createElement(
	          'div',
	          null,
	          _react2.default.createElement(
	            _BoxHEs6React2.default,
	            null,
	            _react2.default.createElement(_OwnerSummaryEs6React2.default, { owners: owners, total: totalDogs }),
	            _react2.default.createElement(_DogSummaryEs6React2.default, { groups: dogGroups, total: totalDogs })
	          ),
	          _react2.default.createElement(
	            _BoxHEs6React2.default,
	            null,
	            _react2.default.createElement(_ThreatSummaryEs6React2.default, { dangerous: threatSummary.dangerous, menacing: threatSummary.menacing, total: totalDogs }),
	            _ref4,
	            _react2.default.createElement(_ThreateningBreedsEs6React2.default, { data: threateningBreeds, total: totalDogs })
	          ),
	          _react2.default.createElement(_IncidentSummaryEs6React2.default, { injuries: injuries, prosecutions: prosecutions, destructions: destruction, paid_this_yr: paid_this_yr, paid_any_yr: paid_any_yr, totalDogs: totalDogs })
	        )
	      );
	    }
	  }]);

	  return CouncilItem;
	}(_react.Component);

	exports.default = CouncilItem;

/***/ },
/* 117 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _react = __webpack_require__(6);

	var _react2 = _interopRequireDefault(_react);

	var _BoxHEs6React = __webpack_require__(33);

	var _BoxHEs6React2 = _interopRequireDefault(_BoxHEs6React);

	var _BoxVEs6React = __webpack_require__(62);

	var _BoxVEs6React2 = _interopRequireDefault(_BoxVEs6React);

	var _IconContainerEs6React = __webpack_require__(34);

	var _IconContainerEs6React2 = _interopRequireDefault(_IconContainerEs6React);

	var _NumberOverBarEs6React = __webpack_require__(66);

	var _NumberOverBarEs6React2 = _interopRequireDefault(_NumberOverBarEs6React);

	var _UtilsEs = __webpack_require__(63);

	var _UtilsEs2 = _interopRequireDefault(_UtilsEs);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* jshint esnext: true */

	var percentage = _UtilsEs2.default.percentage;

	var DogSummary = function (_Component) {
	  _inherits(DogSummary, _Component);

	  function DogSummary() {
	    _classCallCheck(this, DogSummary);

	    return _possibleConstructorReturn(this, Object.getPrototypeOf(DogSummary).apply(this, arguments));
	  }

	  _createClass(DogSummary, [{
	    key: 'render',
	    value: function render() {
	      var groups = this.props.groups;

	      var _ref = groups || {};

	      var all = _ref.all;

	      all = all || {};
	      var percDesexed = percentage(all.desexed, all.total).toFixed(0);
	      var percChipped = percentage(all.chipped, all.total).toFixed(0);
	      return _react2.default.createElement(
	        'dog-summary',
	        { 'class': all.male ? undefined : "no-data" },
	        _react2.default.createElement(
	          _BoxHEs6React2.default,
	          null,
	          _react2.default.createElement(
	            _IconContainerEs6React2.default,
	            { icon: 'dog-profile' },
	            _react2.default.createElement(
	              _NumberOverBarEs6React2.default,
	              { donut: [{ k: "male", v: all.male }, { k: "female", v: all.female }] },
	              _react2.default.createElement(
	                'div',
	                { className: 'label dog-total' },
	                all.total,
	                ' '
	              )
	            )
	          ),
	          _react2.default.createElement(
	            _IconContainerEs6React2.default,
	            { icon: 'dog-chipped' },
	            _react2.default.createElement(
	              _BoxVEs6React2.default,
	              null,
	              _react2.default.createElement(
	                'div',
	                null,
	                '% ',
	                percChipped
	              ),
	              _react2.default.createElement(
	                'div',
	                null,
	                all.chipped
	              )
	            )
	          ),
	          _react2.default.createElement(
	            _IconContainerEs6React2.default,
	            { icon: 'dog-desexed' },
	            _react2.default.createElement(
	              _BoxVEs6React2.default,
	              null,
	              _react2.default.createElement(
	                'div',
	                null,
	                '% ',
	                percDesexed
	              ),
	              _react2.default.createElement(
	                'div',
	                null,
	                all.desexed
	              )
	            )
	          )
	        )
	      );
	    }
	  }]);

	  return DogSummary;
	}(_react.Component);
	/*
	import Stringify from '../base/Stringify.es6.react.js';
	<Stringify data={all} totalDogs={totalDogs} />
	<Stringify data={pure} totalDogs={totalDogs} />
	<Stringify data={cross} totalDogs={totalDogs} />
	*/

	exports.default = DogSummary;

/***/ },
/* 118 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _react = __webpack_require__(6);

	var _react2 = _interopRequireDefault(_react);

	var _BoxHEs6React = __webpack_require__(33);

	var _BoxHEs6React2 = _interopRequireDefault(_BoxHEs6React);

	var _BoxVEs6React = __webpack_require__(62);

	var _BoxVEs6React2 = _interopRequireDefault(_BoxVEs6React);

	var _IconContainerEs6React = __webpack_require__(34);

	var _IconContainerEs6React2 = _interopRequireDefault(_IconContainerEs6React);

	var _NumberOverBarEs6React = __webpack_require__(66);

	var _NumberOverBarEs6React2 = _interopRequireDefault(_NumberOverBarEs6React);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* jshint esnext: true */

	var _ref = _react2.default.createElement(
	  'div',
	  null,
	  ' '
	);

	var _ref2 = _react2.default.createElement(
	  'div',
	  null,
	  ' '
	);

	var _ref3 = _react2.default.createElement(
	  'div',
	  null,
	  ' '
	);

	var IncidentSummary = function (_Component) {
	  _inherits(IncidentSummary, _Component);

	  function IncidentSummary() {
	    _classCallCheck(this, IncidentSummary);

	    return _possibleConstructorReturn(this, Object.getPrototypeOf(IncidentSummary).apply(this, arguments));
	  }

	  _createClass(IncidentSummary, [{
	    key: 'render',
	    value: function render() {
	      var _props = this.props;
	      var injuries = _props.injuries;
	      var prosecutions = _props.prosecutions;
	      var destructions = _props.destructions;
	      var paid_this_yr = _props.paid_this_yr;
	      var paid_any_yr = _props.paid_any_yr;

	      paid_this_yr = parseFloat(paid_this_yr);
	      paid_any_yr = parseFloat(paid_any_yr);
	      var totalPaid = paid_this_yr + paid_any_yr;
	      return _react2.default.createElement(
	        'incident-summary',
	        null,
	        _react2.default.createElement(
	          _BoxHEs6React2.default,
	          null,
	          _react2.default.createElement(
	            _IconContainerEs6React2.default,
	            { icon: 'injuries' },
	            _react2.default.createElement(
	              _BoxVEs6React2.default,
	              null,
	              _react2.default.createElement(
	                'div',
	                null,
	                injuries
	              ),
	              _ref
	            )
	          ),
	          _react2.default.createElement(
	            _IconContainerEs6React2.default,
	            { icon: 'prosecution', className: prosecutions ? undefined : "no-data" },
	            _react2.default.createElement(
	              _BoxVEs6React2.default,
	              null,
	              _react2.default.createElement(
	                'div',
	                null,
	                prosecutions
	              ),
	              _ref2
	            )
	          ),
	          _react2.default.createElement(
	            _IconContainerEs6React2.default,
	            { icon: 'dog-destruction', className: destructions ? undefined : "no-data" },
	            _react2.default.createElement(
	              _BoxVEs6React2.default,
	              null,
	              _react2.default.createElement(
	                'div',
	                null,
	                destructions
	              ),
	              _ref3
	            )
	          ),
	          _react2.default.createElement(
	            _IconContainerEs6React2.default,
	            { icon: 'paid-this-year', className: 'paid' },
	            _react2.default.createElement(
	              _NumberOverBarEs6React2.default,
	              { donut: [{ k: "this_year", v: paid_this_yr }, { k: "any_year", v: paid_any_yr }] },
	              _react2.default.createElement(
	                'div',
	                { className: 'label dog-total' },
	                totalPaid
	              )
	            )
	          )
	        )
	      );
	    }
	  }]);

	  return IncidentSummary;
	}(_react.Component);

	exports.default = IncidentSummary;

/***/ },
/* 119 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _react = __webpack_require__(6);

	var _react2 = _interopRequireDefault(_react);

	var _IconContainerEs6React = __webpack_require__(34);

	var _IconContainerEs6React2 = _interopRequireDefault(_IconContainerEs6React);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* jshint esnext: true */

	var OwnerSummary = function (_Component) {
	  _inherits(OwnerSummary, _Component);

	  function OwnerSummary() {
	    _classCallCheck(this, OwnerSummary);

	    return _possibleConstructorReturn(this, Object.getPrototypeOf(OwnerSummary).apply(this, arguments));
	  }

	  _createClass(OwnerSummary, [{
	    key: 'render',
	    value: function render() {
	      var owners = this.props.owners;

	      var _ref = owners || {};

	      var registered = _ref.registered;
	      var disqualified = _ref.disqualified;
	      var probationary = _ref.probationary;
	      var infringements = _ref.infringements;


	      return _react2.default.createElement(
	        'owner-summary',
	        { 'class': registered ? undefined : "no-data" },
	        _react2.default.createElement(
	          _IconContainerEs6React2.default,
	          { icon: 'owner-profile' },
	          _react2.default.createElement(
	            'div',
	            null,
	            registered
	          ),
	          _react2.default.createElement(
	            'div',
	            { className: 'subtypes' },
	            _react2.default.createElement(
	              'span',
	              { className: 'disqualified' },
	              disqualified
	            ),
	            _react2.default.createElement(
	              'span',
	              { className: 'probationary' },
	              probationary
	            ),
	            _react2.default.createElement(
	              'span',
	              { className: 'infringements' },
	              infringements
	            )
	          )
	        )
	      );
	    }
	  }]);

	  return OwnerSummary;
	}(_react.Component);

	exports.default = OwnerSummary;

/***/ },
/* 120 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _react = __webpack_require__(6);

	var _react2 = _interopRequireDefault(_react);

	var _LabelInDonutEs6React = __webpack_require__(125);

	var _LabelInDonutEs6React2 = _interopRequireDefault(_LabelInDonutEs6React);

	var _UtilsEs = __webpack_require__(63);

	var _UtilsEs2 = _interopRequireDefault(_UtilsEs);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* jshint esnext: true */

	var percentage = _UtilsEs2.default.percentage;

	var ThreatSummary = function (_Component) {
	  _inherits(ThreatSummary, _Component);

	  function ThreatSummary() {
	    _classCallCheck(this, ThreatSummary);

	    return _possibleConstructorReturn(this, Object.getPrototypeOf(ThreatSummary).apply(this, arguments));
	  }

	  _createClass(ThreatSummary, [{
	    key: 'render',
	    value: function render() {
	      var _props = this.props;
	      var dangerous = _props.dangerous;
	      var menacing = _props.menacing;
	      var total = _props.total;

	      var dangerousClass = !dangerous.all || dangerous.all === 0 ? "dangerous no-data" : "dangerous ";
	      var menacingClass = !menacing.all || menacing.all === 0 ? "menacing no-data" : "menacing";
	      return _react2.default.createElement(
	        'threat-summary',
	        null,
	        _react2.default.createElement(
	          _LabelInDonutEs6React2.default,
	          { className: dangerousClass, donut: [{ k: "pure", v: dangerous.pure }, { k: "cross", v: dangerous.cross }] },
	          _react2.default.createElement(
	            'div',
	            { className: 'label' },
	            _react2.default.createElement(
	              'div',
	              { className: 'percentage' },
	              percentage(dangerous.all, total).toFixed(1)
	            ),
	            _react2.default.createElement(
	              'div',
	              { className: 'details' },
	              dangerous.cross,
	              ' / ',
	              dangerous.pure
	            )
	          )
	        ),
	        _react2.default.createElement(
	          _LabelInDonutEs6React2.default,
	          { className: menacingClass, donut: [{ k: "pure", v: menacing.pure }, { k: "cross", v: menacing.cross }] },
	          _react2.default.createElement(
	            'div',
	            { className: 'label' },
	            _react2.default.createElement(
	              'div',
	              { className: 'percentage' },
	              percentage(menacing.all, total).toFixed(1)
	            ),
	            _react2.default.createElement(
	              'div',
	              { className: 'details' },
	              menacing.cross,
	              ' / ',
	              menacing.pure
	            )
	          )
	        )
	      );
	    }
	  }]);

	  return ThreatSummary;
	}(_react.Component);

	exports.default = ThreatSummary;

/***/ },
/* 121 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	__webpack_require__(129);

	var _react = __webpack_require__(6);

	var _react2 = _interopRequireDefault(_react);

	var _ItemListEs6React = __webpack_require__(124);

	var _ItemListEs6React2 = _interopRequireDefault(_ItemListEs6React);

	var _DogControlData = __webpack_require__(64);

	var _DogControlData2 = _interopRequireDefault(_DogControlData);

	var _CouncilItemEs6React = __webpack_require__(116);

	var _CouncilItemEs6React2 = _interopRequireDefault(_CouncilItemEs6React);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* jshint esnext: true */

	var ValuePicker = function (_Component) {
	  _inherits(ValuePicker, _Component);

	  function ValuePicker() {
	    _classCallCheck(this, ValuePicker);

	    return _possibleConstructorReturn(this, Object.getPrototypeOf(ValuePicker).apply(this, arguments));
	  }

	  _createClass(ValuePicker, [{
	    key: 'render',
	    value: function render() {
	      var children = this.props.children;

	      var dispatch = this.props.change;
	      if (typeof dispatch !== "function") {
	        dispatch = function dispatch() {};
	      }
	      return _react2.default.createElement(
	        'value-picker',
	        { onClick: function onClick(e) {
	            dispatch(e.target.innerText);
	            Array.from(e.target.parentNode.querySelectorAll('.active')).forEach(function (d) {
	              d.className = undefined;
	            });
	            e.target.className = "active";
	          } },
	        children
	      );
	    }
	  }]);

	  return ValuePicker;
	}(_react.Component);

	function numericSort(valueFn) {
	  return function (a, b) {
	    return valueFn(b) - valueFn(a);
	  };
	}
	function ratio(n, t) {
	  n = n || 0;t = t || 0;
	  var r = t > 0 ? n / t : 0;
	  return r;
	}

	var sortFunctions = {};
	sortFunctions["a-z"] = function (a, b) {
	  if (a.council < b.council) {
	    return -1;
	  };if (a.council > b.council) {
	    return 1;
	  };return 0;
	};
	sortFunctions["#dogs"] = numericSort(function (d) {
	  return d.yearData && d.yearData.totalDogs;
	});
	sortFunctions["#owners"] = numericSort(function (d) {
	  return d.yearData && d.yearData.owners && d.yearData.owners.registered;
	});
	sortFunctions["#dangerous"] = numericSort(function (d) {
	  return d.yearData && d.yearData.threatSummary && d.yearData.threatSummary.dangerous && d.yearData.threatSummary.dangerous.all;
	});
	sortFunctions["#menacing"] = numericSort(function (d) {
	  return d.yearData && d.yearData.threatSummary && d.yearData.threatSummary.menacing && d.yearData.threatSummary.menacing.all;
	});
	sortFunctions["#injuries"] = numericSort(function (d) {
	  return d.yearData && d.yearData.acc && d.yearData.acc.injuries;
	});
	sortFunctions["#paid"] = numericSort(function (d) {
	  return d.yearData && d.yearData.acc && d.yearData.acc.paid_this_yr;
	});

	sortFunctions["#owners/dogs"] = numericSort(function (d) {
	  return ratio(d.yearData && d.yearData.owners && d.yearData.owners.registered, d.yearData && d.yearData.totalDogs);
	});
	sortFunctions["#dangerous/dogs"] = numericSort(function (d) {
	  return ratio(d.yearData && d.yearData.threatSummary && d.yearData.threatSummary.dangerous && d.yearData.threatSummary.dangerous.all, d.yearData && d.yearData.totalDogs);
	});
	sortFunctions["#menacing/dogs"] = numericSort(function (d) {
	  return ratio(d.yearData && d.yearData.threatSummary && d.yearData.threatSummary.menacing && d.yearData.threatSummary.menacing.all, d.yearData && d.yearData.totalDogs);
	});
	sortFunctions["#injuries/dogs"] = numericSort(function (d) {
	  return ratio(d.yearData && d.yearData.acc && d.yearData.acc.injuries, d.yearData && d.yearData.totalDogs);
	});
	sortFunctions["#paid/dogs"] = numericSort(function (d) {
	  return ratio(d.yearData && d.yearData.acc && d.yearData.acc.paid_this_yr, d.yearData && d.yearData.totalDogs);
	});

	var _ref = _react2.default.createElement(
	  'div',
	  null,
	  '2011'
	);

	var _ref2 = _react2.default.createElement(
	  'div',
	  null,
	  '2012'
	);

	var _ref3 = _react2.default.createElement(
	  'div',
	  null,
	  '2013'
	);

	var _ref4 = _react2.default.createElement(
	  'div',
	  null,
	  '2014'
	);

	var _ref5 = _react2.default.createElement(
	  'div',
	  null,
	  '2015'
	);

	var _ref6 = _react2.default.createElement(
	  'div',
	  null,
	  '2016'
	);

	var _ref7 = _react2.default.createElement(
	  'div',
	  null,
	  'a-z'
	);

	var _ref8 = _react2.default.createElement(
	  'div',
	  null,
	  '#dogs'
	);

	var _ref9 = _react2.default.createElement(
	  'div',
	  null,
	  '#owners'
	);

	var _ref10 = _react2.default.createElement(
	  'div',
	  null,
	  '#dangerous'
	);

	var _ref11 = _react2.default.createElement(
	  'div',
	  null,
	  '#menacing'
	);

	var _ref12 = _react2.default.createElement(
	  'div',
	  null,
	  '#injuries'
	);

	var _ref13 = _react2.default.createElement(
	  'div',
	  null,
	  '#paid'
	);

	var _ref14 = _react2.default.createElement(
	  'div',
	  null,
	  '#owners/dogs'
	);

	var _ref15 = _react2.default.createElement(
	  'div',
	  null,
	  '#dangerous/dogs'
	);

	var _ref16 = _react2.default.createElement(
	  'div',
	  null,
	  '#menacing/dogs'
	);

	var _ref17 = _react2.default.createElement(
	  'div',
	  null,
	  '#paid/dogs'
	);

	var CouncilsStats = function (_Component2) {
	  _inherits(CouncilsStats, _Component2);

	  function CouncilsStats(props) {
	    _classCallCheck(this, CouncilsStats);

	    var _this2 = _possibleConstructorReturn(this, Object.getPrototypeOf(CouncilsStats).call(this, props));

	    var loadData = _DogControlData2.default.loadData;

	    _this2.state = {
	      councils: loadData().filter(_DogControlData2.default.notNewZealand),
	      activeYear: "2015",
	      sortOption: "a-z"
	    };
	    _this2.bound = {
	      renderItem: _this2.renderItem.bind(_this2),
	      onYearChange: _this2.onYearChange.bind(_this2),
	      onSortChange: _this2.onSortChange.bind(_this2)
	    };
	    return _this2;
	  }

	  _createClass(CouncilsStats, [{
	    key: 'onYearChange',
	    value: function onYearChange(value) {
	      this.setState({ activeYear: value });
	    }
	  }, {
	    key: 'onSortChange',
	    value: function onSortChange(value) {
	      this.setState({ sortOption: value });
	    }
	  }, {
	    key: 'renderItem',
	    value: function renderItem(d, i) {
	      var council = d.council;
	      var yearData = d.yearData;

	      return _react2.default.createElement(_CouncilItemEs6React2.default, { council: council, yearData: yearData });
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var councils = this.state.councils;
	      var _bound = this.bound;
	      var renderItem = _bound.renderItem;
	      var onYearChange = _bound.onYearChange;
	      var onSortChange = _bound.onSortChange;
	      var _state = this.state;
	      var activeYear = _state.activeYear;
	      var sortOption = _state.sortOption;
	      var councilItemData = _DogControlData2.default.councilItemData;

	      var sortFn = sortFunctions[sortOption];
	      councils = councils.map(function (d) {
	        var _councilItemData = councilItemData(d);

	        var council = _councilItemData.council;
	        var years = _councilItemData.years;

	        var yearData = years.filter(function (d) {
	          return d.year === activeYear;
	        })[0];
	        // console.log(yearData)
	        return { council: council, yearData: yearData };
	      }).sort(sortFn);

	      return _react2.default.createElement(
	        'council-stats',
	        null,
	        _react2.default.createElement(
	          'div',
	          { className: 'controls' },
	          'YEAR ',
	          _react2.default.createElement(
	            ValuePicker,
	            { change: onYearChange },
	            _ref,
	            _ref2,
	            _ref3,
	            _ref4,
	            _ref5,
	            _ref6
	          ),
	          'SORT ',
	          _react2.default.createElement(
	            ValuePicker,
	            { change: onSortChange },
	            _ref7,
	            _ref8,
	            _ref9,
	            _ref10,
	            _ref11,
	            _ref12,
	            _ref13,
	            _ref14,
	            _ref15,
	            _ref16,
	            _ref17
	          )
	        ),
	        _react2.default.createElement(_ItemListEs6React2.default, { items: councils, itemRenderer: renderItem })
	      );
	    }
	  }]);

	  return CouncilsStats;
	}(_react.Component);

	exports.default = CouncilsStats;

/***/ },
/* 122 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _react = __webpack_require__(6);

	var _react2 = _interopRequireDefault(_react);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* jshint esnext: true */

	var url = '../../etc/icons.svg';

	var Icon = function (_Component) {
	  _inherits(Icon, _Component);

	  function Icon() {
	    _classCallCheck(this, Icon);

	    return _possibleConstructorReturn(this, Object.getPrototypeOf(Icon).apply(this, arguments));
	  }

	  _createClass(Icon, [{
	    key: 'render',
	    value: function render() {
	      var icon = this.props.icon;

	      return _react2.default.createElement(
	        'svg',
	        { viewBox: '0 0 16 16', className: 'icon icon-' + icon },
	        _react2.default.createElement('use', { xlinkHref: url + '#icon-' + icon })
	      );
	    }
	  }]);

	  return Icon;
	}(_react.Component);

	exports.default = Icon;

	/*
	<!-- `<use>` shape defined ON THIS PAGE somewhere else -->
	<svg viewBox="0 0 100 100">
	   <use xlink:href="#icon-1"></use>
	</svg>

	<!-- `<use>` shape defined in an EXTERNAL RESOURCE -->
	<svg viewBox="0 0 100 100">
	   <use xlink:href="defs.svg#icon-1"></use>
	</svg>
	*/

/***/ },
/* 123 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _react = __webpack_require__(6);

	var _react2 = _interopRequireDefault(_react);

	var _reactDom = __webpack_require__(111);

	var _reactDom2 = _interopRequireDefault(_reactDom);

	var _App = __webpack_require__(114);

	var _App2 = _interopRequireDefault(_App);

	__webpack_require__(131);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	_reactDom2.default.render(_react2.default.createElement(_App2.default, null), document.getElementById('root'));

/***/ },
/* 124 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _react = __webpack_require__(6);

	var _react2 = _interopRequireDefault(_react);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* jshint esnext: true */

	var ItemList = function (_Component) {
	  _inherits(ItemList, _Component);

	  function ItemList(props) {
	    _classCallCheck(this, ItemList);

	    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(ItemList).call(this, props));

	    _this.bound = { renderItem: _this.renderItem.bind(_this) };
	    return _this;
	  }

	  _createClass(ItemList, [{
	    key: "renderItem",
	    value: function renderItem(d, i) {
	      var itemRenderer = this.props.itemRenderer;

	      var rendered = typeof itemRenderer === "function" ? itemRenderer(d, i) : "";
	      return _react2.default.createElement(
	        "item",
	        { key: "k" + i },
	        rendered
	      );
	    }
	  }, {
	    key: "render",
	    value: function render() {
	      var items = this.props.items;
	      var renderItem = this.bound.renderItem;

	      return _react2.default.createElement(
	        "list",
	        null,
	        (items || []).map(renderItem)
	      );
	    }
	  }]);

	  return ItemList;
	}(_react.Component);

	exports.default = ItemList;

/***/ },
/* 125 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }(); /* jshint esnext: true */

	__webpack_require__(132);

	var _react = __webpack_require__(6);

	var _react2 = _interopRequireDefault(_react);

	var _MicroChartEs = __webpack_require__(65);

	var _MicroChartEs2 = _interopRequireDefault(_MicroChartEs);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	function renderArc(_ref) {
	  var _ref2 = _slicedToArray(_ref, 2);

	  var _ref2$ = _slicedToArray(_ref2[0], 2);

	  var start = _ref2$[0];
	  var end = _ref2$[1];
	  var kv = _ref2[1];

	  var w = 50;var sw = 8;
	  var r = w / 2 - sw / 2;
	  var off = w / 2;
	  if (start === 0 && end === 1) {
	    start = 0.00001;
	  }
	  return _react2.default.createElement('path', { key: kv.k, className: kv.k, d: _MicroChartEs2.default.describeArc(off, off, r, start * 360, end * 360) });
	}

	var LabelInDonut = function (_Component) {
	  _inherits(LabelInDonut, _Component);

	  function LabelInDonut() {
	    _classCallCheck(this, LabelInDonut);

	    return _possibleConstructorReturn(this, Object.getPrototypeOf(LabelInDonut).apply(this, arguments));
	  }

	  _createClass(LabelInDonut, [{
	    key: 'render',
	    value: function render() {
	      var _props = this.props;
	      var donut = _props.donut;
	      var className = _props.className;
	      var children = _props.children;

	      var segments = _MicroChartEs2.default.segments(donut, function (_ref3) {
	        var v = _ref3.v;
	        return v;
	      });
	      return _react2.default.createElement(
	        'label-in-donut',
	        { 'class': className },
	        _react2.default.createElement(
	          'div',
	          { className: 'label' },
	          children
	        ),
	        _react2.default.createElement(
	          'div',
	          { className: 'donut' },
	          _react2.default.createElement(
	            'svg',
	            null,
	            segments.map(renderArc)
	          )
	        )
	      );
	    }
	  }]);

	  return LabelInDonut;
	}(_react.Component);

	exports.default = LabelInDonut;

/***/ },
/* 126 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	__webpack_require__(134);

	var _react = __webpack_require__(6);

	var _react2 = _interopRequireDefault(_react);

	var _DogControlData = __webpack_require__(64);

	var _DogControlData2 = _interopRequireDefault(_DogControlData);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* jshint esnext: true */

	var DogThreatLevel = function (_Component) {
	  _inherits(DogThreatLevel, _Component);

	  function DogThreatLevel() {
	    _classCallCheck(this, DogThreatLevel);

	    return _possibleConstructorReturn(this, Object.getPrototypeOf(DogThreatLevel).apply(this, arguments));
	  }

	  _createClass(DogThreatLevel, [{
	    key: 'render',
	    value: function render() {
	      var _props = this.props;
	      var breed = _props.breed;
	      var breedId = _props.breedId;
	      var menacing = _props.menacing;
	      var dangerous = _props.dangerous;

	      return _react2.default.createElement(
	        'dog-threat-level',
	        { key: breed },
	        _react2.default.createElement('img', { src: 'etc/pure-breeds-svg/' + breedId + '.svg', alt: breed }),
	        _react2.default.createElement(
	          'div',
	          { className: 'levels' },
	          dangerous > 0 ? _react2.default.createElement(
	            'div',
	            { className: 'dangerous' },
	            dangerous
	          ) : null,
	          menacing > 0 ? _react2.default.createElement(
	            'div',
	            { className: 'menacing' },
	            menacing
	          ) : null
	        ),
	        _react2.default.createElement(
	          'div',
	          { className: 'name' },
	          breed
	        )
	      );
	    }
	  }]);

	  return DogThreatLevel;
	}(_react.Component);

	var ThreateningBreeds = function (_Component2) {
	  _inherits(ThreateningBreeds, _Component2);

	  function ThreateningBreeds(props) {
	    _classCallCheck(this, ThreateningBreeds);

	    var _this2 = _possibleConstructorReturn(this, Object.getPrototypeOf(ThreateningBreeds).call(this, props));

	    _this2.bound = { renderDog: _this2.renderDog.bind(_this2) };
	    return _this2;
	  }

	  _createClass(ThreateningBreeds, [{
	    key: 'renderDog',
	    value: function renderDog(d) {
	      var breed = d.breed;
	      var breedId = d.breedId;
	      var menacing = d.menacing;
	      var dangerous = d.dangerous;

	      if (menacing <= 0 && dangerous <= 0) {
	        return null;
	      }
	      return _react2.default.createElement(DogThreatLevel, { key: breed, breed: breed, breedId: breedId, menacing: menacing, dangerous: dangerous });
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      // console.log(JSON.stringify(this.props.data))
	      var sortOnProperty = _DogControlData2.default.sortOnProperty;
	      var data = this.props.data;
	      var renderDog = this.bound.renderDog;

	      var topMost = (data || []).sort(sortOnProperty("menacing")).sort(sortOnProperty("dangerous"));
	      return _react2.default.createElement(
	        'breed-risk',
	        null,
	        topMost.slice(0, 5).map(renderDog)
	      );
	    }
	  }]);

	  return ThreateningBreeds;
	}(_react.Component);

	exports.default = ThreateningBreeds;

/***/ },
/* 127 */
67,
/* 128 */
67,
/* 129 */
67,
/* 130 */
67,
/* 131 */
67,
/* 132 */
67,
/* 133 */
67,
/* 134 */
67,
/* 135 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	//This file contains the ES6 extensions to the core Promises/A+ API

	var Promise = __webpack_require__(68);

	module.exports = Promise;

	/* Static Functions */

	var TRUE = valuePromise(true);
	var FALSE = valuePromise(false);
	var NULL = valuePromise(null);
	var UNDEFINED = valuePromise(undefined);
	var ZERO = valuePromise(0);
	var EMPTYSTRING = valuePromise('');

	function valuePromise(value) {
	  var p = new Promise(Promise._61);
	  p._81 = 1;
	  p._65 = value;
	  return p;
	}
	Promise.resolve = function (value) {
	  if (value instanceof Promise) return value;

	  if (value === null) return NULL;
	  if (value === undefined) return UNDEFINED;
	  if (value === true) return TRUE;
	  if (value === false) return FALSE;
	  if (value === 0) return ZERO;
	  if (value === '') return EMPTYSTRING;

	  if (typeof value === 'object' || typeof value === 'function') {
	    try {
	      var then = value.then;
	      if (typeof then === 'function') {
	        return new Promise(then.bind(value));
	      }
	    } catch (ex) {
	      return new Promise(function (resolve, reject) {
	        reject(ex);
	      });
	    }
	  }
	  return valuePromise(value);
	};

	Promise.all = function (arr) {
	  var args = Array.prototype.slice.call(arr);

	  return new Promise(function (resolve, reject) {
	    if (args.length === 0) return resolve([]);
	    var remaining = args.length;
	    function res(i, val) {
	      if (val && (typeof val === 'object' || typeof val === 'function')) {
	        if (val instanceof Promise && val.then === Promise.prototype.then) {
	          while (val._81 === 3) {
	            val = val._65;
	          }
	          if (val._81 === 1) return res(i, val._65);
	          if (val._81 === 2) reject(val._65);
	          val.then(function (val) {
	            res(i, val);
	          }, reject);
	          return;
	        } else {
	          var then = val.then;
	          if (typeof then === 'function') {
	            var p = new Promise(then.bind(val));
	            p.then(function (val) {
	              res(i, val);
	            }, reject);
	            return;
	          }
	        }
	      }
	      args[i] = val;
	      if (--remaining === 0) {
	        resolve(args);
	      }
	    }
	    for (var i = 0; i < args.length; i++) {
	      res(i, args[i]);
	    }
	  });
	};

	Promise.reject = function (value) {
	  return new Promise(function (resolve, reject) {
	    reject(value);
	  });
	};

	Promise.race = function (values) {
	  return new Promise(function (resolve, reject) {
	    values.forEach(function(value){
	      Promise.resolve(value).then(resolve, reject);
	    });
	  });
	};

	/* Prototype Methods */

	Promise.prototype['catch'] = function (onRejected) {
	  return this.then(null, onRejected);
	};


/***/ },
/* 136 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var Promise = __webpack_require__(68);

	var DEFAULT_WHITELIST = [
	  ReferenceError,
	  TypeError,
	  RangeError
	];

	var enabled = false;
	exports.disable = disable;
	function disable() {
	  enabled = false;
	  Promise._10 = null;
	  Promise._97 = null;
	}

	exports.enable = enable;
	function enable(options) {
	  options = options || {};
	  if (enabled) disable();
	  enabled = true;
	  var id = 0;
	  var displayId = 0;
	  var rejections = {};
	  Promise._10 = function (promise) {
	    if (
	      promise._81 === 2 && // IS REJECTED
	      rejections[promise._72]
	    ) {
	      if (rejections[promise._72].logged) {
	        onHandled(promise._72);
	      } else {
	        clearTimeout(rejections[promise._72].timeout);
	      }
	      delete rejections[promise._72];
	    }
	  };
	  Promise._97 = function (promise, err) {
	    if (promise._45 === 0) { // not yet handled
	      promise._72 = id++;
	      rejections[promise._72] = {
	        displayId: null,
	        error: err,
	        timeout: setTimeout(
	          onUnhandled.bind(null, promise._72),
	          // For reference errors and type errors, this almost always
	          // means the programmer made a mistake, so log them after just
	          // 100ms
	          // otherwise, wait 2 seconds to see if they get handled
	          matchWhitelist(err, DEFAULT_WHITELIST)
	            ? 100
	            : 2000
	        ),
	        logged: false
	      };
	    }
	  };
	  function onUnhandled(id) {
	    if (
	      options.allRejections ||
	      matchWhitelist(
	        rejections[id].error,
	        options.whitelist || DEFAULT_WHITELIST
	      )
	    ) {
	      rejections[id].displayId = displayId++;
	      if (options.onUnhandled) {
	        rejections[id].logged = true;
	        options.onUnhandled(
	          rejections[id].displayId,
	          rejections[id].error
	        );
	      } else {
	        rejections[id].logged = true;
	        logError(
	          rejections[id].displayId,
	          rejections[id].error
	        );
	      }
	    }
	  }
	  function onHandled(id) {
	    if (rejections[id].logged) {
	      if (options.onHandled) {
	        options.onHandled(rejections[id].displayId, rejections[id].error);
	      } else if (!rejections[id].onUnhandled) {
	        console.warn(
	          'Promise Rejection Handled (id: ' + rejections[id].displayId + '):'
	        );
	        console.warn(
	          '  This means you can ignore any previous messages of the form "Possible Unhandled Promise Rejection" with id ' +
	          rejections[id].displayId + '.'
	        );
	      }
	    }
	  }
	}

	function logError(id, error) {
	  console.warn('Possible Unhandled Promise Rejection (id: ' + id + '):');
	  var errStr = (error && (error.stack || error)) + '';
	  errStr.split('\n').forEach(function (line) {
	    console.warn('  ' + line);
	  });
	}

	function matchWhitelist(error, list) {
	  return list.some(function (cls) {
	    return error instanceof cls;
	  });
	}

/***/ },
/* 137 */
/***/ function(module, exports) {

	(function(self) {
	  'use strict';

	  if (self.fetch) {
	    return
	  }

	  var support = {
	    searchParams: 'URLSearchParams' in self,
	    iterable: 'Symbol' in self && 'iterator' in Symbol,
	    blob: 'FileReader' in self && 'Blob' in self && (function() {
	      try {
	        new Blob()
	        return true
	      } catch(e) {
	        return false
	      }
	    })(),
	    formData: 'FormData' in self,
	    arrayBuffer: 'ArrayBuffer' in self
	  }

	  function normalizeName(name) {
	    if (typeof name !== 'string') {
	      name = String(name)
	    }
	    if (/[^a-z0-9\-#$%&'*+.\^_`|~]/i.test(name)) {
	      throw new TypeError('Invalid character in header field name')
	    }
	    return name.toLowerCase()
	  }

	  function normalizeValue(value) {
	    if (typeof value !== 'string') {
	      value = String(value)
	    }
	    return value
	  }

	  // Build a destructive iterator for the value list
	  function iteratorFor(items) {
	    var iterator = {
	      next: function() {
	        var value = items.shift()
	        return {done: value === undefined, value: value}
	      }
	    }

	    if (support.iterable) {
	      iterator[Symbol.iterator] = function() {
	        return iterator
	      }
	    }

	    return iterator
	  }

	  function Headers(headers) {
	    this.map = {}

	    if (headers instanceof Headers) {
	      headers.forEach(function(value, name) {
	        this.append(name, value)
	      }, this)

	    } else if (headers) {
	      Object.getOwnPropertyNames(headers).forEach(function(name) {
	        this.append(name, headers[name])
	      }, this)
	    }
	  }

	  Headers.prototype.append = function(name, value) {
	    name = normalizeName(name)
	    value = normalizeValue(value)
	    var list = this.map[name]
	    if (!list) {
	      list = []
	      this.map[name] = list
	    }
	    list.push(value)
	  }

	  Headers.prototype['delete'] = function(name) {
	    delete this.map[normalizeName(name)]
	  }

	  Headers.prototype.get = function(name) {
	    var values = this.map[normalizeName(name)]
	    return values ? values[0] : null
	  }

	  Headers.prototype.getAll = function(name) {
	    return this.map[normalizeName(name)] || []
	  }

	  Headers.prototype.has = function(name) {
	    return this.map.hasOwnProperty(normalizeName(name))
	  }

	  Headers.prototype.set = function(name, value) {
	    this.map[normalizeName(name)] = [normalizeValue(value)]
	  }

	  Headers.prototype.forEach = function(callback, thisArg) {
	    Object.getOwnPropertyNames(this.map).forEach(function(name) {
	      this.map[name].forEach(function(value) {
	        callback.call(thisArg, value, name, this)
	      }, this)
	    }, this)
	  }

	  Headers.prototype.keys = function() {
	    var items = []
	    this.forEach(function(value, name) { items.push(name) })
	    return iteratorFor(items)
	  }

	  Headers.prototype.values = function() {
	    var items = []
	    this.forEach(function(value) { items.push(value) })
	    return iteratorFor(items)
	  }

	  Headers.prototype.entries = function() {
	    var items = []
	    this.forEach(function(value, name) { items.push([name, value]) })
	    return iteratorFor(items)
	  }

	  if (support.iterable) {
	    Headers.prototype[Symbol.iterator] = Headers.prototype.entries
	  }

	  function consumed(body) {
	    if (body.bodyUsed) {
	      return Promise.reject(new TypeError('Already read'))
	    }
	    body.bodyUsed = true
	  }

	  function fileReaderReady(reader) {
	    return new Promise(function(resolve, reject) {
	      reader.onload = function() {
	        resolve(reader.result)
	      }
	      reader.onerror = function() {
	        reject(reader.error)
	      }
	    })
	  }

	  function readBlobAsArrayBuffer(blob) {
	    var reader = new FileReader()
	    reader.readAsArrayBuffer(blob)
	    return fileReaderReady(reader)
	  }

	  function readBlobAsText(blob) {
	    var reader = new FileReader()
	    reader.readAsText(blob)
	    return fileReaderReady(reader)
	  }

	  function Body() {
	    this.bodyUsed = false

	    this._initBody = function(body) {
	      this._bodyInit = body
	      if (typeof body === 'string') {
	        this._bodyText = body
	      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {
	        this._bodyBlob = body
	      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {
	        this._bodyFormData = body
	      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {
	        this._bodyText = body.toString()
	      } else if (!body) {
	        this._bodyText = ''
	      } else if (support.arrayBuffer && ArrayBuffer.prototype.isPrototypeOf(body)) {
	        // Only support ArrayBuffers for POST method.
	        // Receiving ArrayBuffers happens via Blobs, instead.
	      } else {
	        throw new Error('unsupported BodyInit type')
	      }

	      if (!this.headers.get('content-type')) {
	        if (typeof body === 'string') {
	          this.headers.set('content-type', 'text/plain;charset=UTF-8')
	        } else if (this._bodyBlob && this._bodyBlob.type) {
	          this.headers.set('content-type', this._bodyBlob.type)
	        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {
	          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')
	        }
	      }
	    }

	    if (support.blob) {
	      this.blob = function() {
	        var rejected = consumed(this)
	        if (rejected) {
	          return rejected
	        }

	        if (this._bodyBlob) {
	          return Promise.resolve(this._bodyBlob)
	        } else if (this._bodyFormData) {
	          throw new Error('could not read FormData body as blob')
	        } else {
	          return Promise.resolve(new Blob([this._bodyText]))
	        }
	      }

	      this.arrayBuffer = function() {
	        return this.blob().then(readBlobAsArrayBuffer)
	      }

	      this.text = function() {
	        var rejected = consumed(this)
	        if (rejected) {
	          return rejected
	        }

	        if (this._bodyBlob) {
	          return readBlobAsText(this._bodyBlob)
	        } else if (this._bodyFormData) {
	          throw new Error('could not read FormData body as text')
	        } else {
	          return Promise.resolve(this._bodyText)
	        }
	      }
	    } else {
	      this.text = function() {
	        var rejected = consumed(this)
	        return rejected ? rejected : Promise.resolve(this._bodyText)
	      }
	    }

	    if (support.formData) {
	      this.formData = function() {
	        return this.text().then(decode)
	      }
	    }

	    this.json = function() {
	      return this.text().then(JSON.parse)
	    }

	    return this
	  }

	  // HTTP methods whose capitalization should be normalized
	  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']

	  function normalizeMethod(method) {
	    var upcased = method.toUpperCase()
	    return (methods.indexOf(upcased) > -1) ? upcased : method
	  }

	  function Request(input, options) {
	    options = options || {}
	    var body = options.body
	    if (Request.prototype.isPrototypeOf(input)) {
	      if (input.bodyUsed) {
	        throw new TypeError('Already read')
	      }
	      this.url = input.url
	      this.credentials = input.credentials
	      if (!options.headers) {
	        this.headers = new Headers(input.headers)
	      }
	      this.method = input.method
	      this.mode = input.mode
	      if (!body) {
	        body = input._bodyInit
	        input.bodyUsed = true
	      }
	    } else {
	      this.url = input
	    }

	    this.credentials = options.credentials || this.credentials || 'omit'
	    if (options.headers || !this.headers) {
	      this.headers = new Headers(options.headers)
	    }
	    this.method = normalizeMethod(options.method || this.method || 'GET')
	    this.mode = options.mode || this.mode || null
	    this.referrer = null

	    if ((this.method === 'GET' || this.method === 'HEAD') && body) {
	      throw new TypeError('Body not allowed for GET or HEAD requests')
	    }
	    this._initBody(body)
	  }

	  Request.prototype.clone = function() {
	    return new Request(this)
	  }

	  function decode(body) {
	    var form = new FormData()
	    body.trim().split('&').forEach(function(bytes) {
	      if (bytes) {
	        var split = bytes.split('=')
	        var name = split.shift().replace(/\+/g, ' ')
	        var value = split.join('=').replace(/\+/g, ' ')
	        form.append(decodeURIComponent(name), decodeURIComponent(value))
	      }
	    })
	    return form
	  }

	  function headers(xhr) {
	    var head = new Headers()
	    var pairs = (xhr.getAllResponseHeaders() || '').trim().split('\n')
	    pairs.forEach(function(header) {
	      var split = header.trim().split(':')
	      var key = split.shift().trim()
	      var value = split.join(':').trim()
	      head.append(key, value)
	    })
	    return head
	  }

	  Body.call(Request.prototype)

	  function Response(bodyInit, options) {
	    if (!options) {
	      options = {}
	    }

	    this.type = 'default'
	    this.status = options.status
	    this.ok = this.status >= 200 && this.status < 300
	    this.statusText = options.statusText
	    this.headers = options.headers instanceof Headers ? options.headers : new Headers(options.headers)
	    this.url = options.url || ''
	    this._initBody(bodyInit)
	  }

	  Body.call(Response.prototype)

	  Response.prototype.clone = function() {
	    return new Response(this._bodyInit, {
	      status: this.status,
	      statusText: this.statusText,
	      headers: new Headers(this.headers),
	      url: this.url
	    })
	  }

	  Response.error = function() {
	    var response = new Response(null, {status: 0, statusText: ''})
	    response.type = 'error'
	    return response
	  }

	  var redirectStatuses = [301, 302, 303, 307, 308]

	  Response.redirect = function(url, status) {
	    if (redirectStatuses.indexOf(status) === -1) {
	      throw new RangeError('Invalid status code')
	    }

	    return new Response(null, {status: status, headers: {location: url}})
	  }

	  self.Headers = Headers
	  self.Request = Request
	  self.Response = Response

	  self.fetch = function(input, init) {
	    return new Promise(function(resolve, reject) {
	      var request
	      if (Request.prototype.isPrototypeOf(input) && !init) {
	        request = input
	      } else {
	        request = new Request(input, init)
	      }

	      var xhr = new XMLHttpRequest()

	      function responseURL() {
	        if ('responseURL' in xhr) {
	          return xhr.responseURL
	        }

	        // Avoid security warnings on getResponseHeader when not allowed by CORS
	        if (/^X-Request-URL:/m.test(xhr.getAllResponseHeaders())) {
	          return xhr.getResponseHeader('X-Request-URL')
	        }

	        return
	      }

	      xhr.onload = function() {
	        var options = {
	          status: xhr.status,
	          statusText: xhr.statusText,
	          headers: headers(xhr),
	          url: responseURL()
	        }
	        var body = 'response' in xhr ? xhr.response : xhr.responseText
	        resolve(new Response(body, options))
	      }

	      xhr.onerror = function() {
	        reject(new TypeError('Network request failed'))
	      }

	      xhr.ontimeout = function() {
	        reject(new TypeError('Network request failed'))
	      }

	      xhr.open(request.method, request.url, true)

	      if (request.credentials === 'include') {
	        xhr.withCredentials = true
	      }

	      if ('responseType' in xhr && support.blob) {
	        xhr.responseType = 'blob'
	      }

	      request.headers.forEach(function(value, name) {
	        xhr.setRequestHeader(name, value)
	      })

	      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)
	    })
	  }
	  self.fetch.polyfill = true
	})(typeof self !== 'undefined' ? self : this);


/***/ },
/* 138 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule AutoFocusUtils
	 */

	'use strict';

	var ReactDOMComponentTree = __webpack_require__(5);

	var focusNode = __webpack_require__(60);

	var AutoFocusUtils = {
	  focusDOMComponent: function () {
	    focusNode(ReactDOMComponentTree.getNodeFromInstance(this));
	  }
	};

	module.exports = AutoFocusUtils;

/***/ },
/* 139 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule BeforeInputEventPlugin
	 */

	'use strict';

	var EventConstants = __webpack_require__(12);
	var EventPropagators = __webpack_require__(22);
	var ExecutionEnvironment = __webpack_require__(7);
	var FallbackCompositionState = __webpack_require__(145);
	var SyntheticCompositionEvent = __webpack_require__(183);
	var SyntheticInputEvent = __webpack_require__(186);

	var keyOf = __webpack_require__(14);

	var END_KEYCODES = [9, 13, 27, 32]; // Tab, Return, Esc, Space
	var START_KEYCODE = 229;

	var canUseCompositionEvent = ExecutionEnvironment.canUseDOM && 'CompositionEvent' in window;

	var documentMode = null;
	if (ExecutionEnvironment.canUseDOM && 'documentMode' in document) {
	  documentMode = document.documentMode;
	}

	// Webkit offers a very useful `textInput` event that can be used to
	// directly represent `beforeInput`. The IE `textinput` event is not as
	// useful, so we don't use it.
	var canUseTextInputEvent = ExecutionEnvironment.canUseDOM && 'TextEvent' in window && !documentMode && !isPresto();

	// In IE9+, we have access to composition events, but the data supplied
	// by the native compositionend event may be incorrect. Japanese ideographic
	// spaces, for instance (\u3000) are not recorded correctly.
	var useFallbackCompositionData = ExecutionEnvironment.canUseDOM && (!canUseCompositionEvent || documentMode && documentMode > 8 && documentMode <= 11);

	/**
	 * Opera <= 12 includes TextEvent in window, but does not fire
	 * text input events. Rely on keypress instead.
	 */
	function isPresto() {
	  var opera = window.opera;
	  return typeof opera === 'object' && typeof opera.version === 'function' && parseInt(opera.version(), 10) <= 12;
	}

	var SPACEBAR_CODE = 32;
	var SPACEBAR_CHAR = String.fromCharCode(SPACEBAR_CODE);

	var topLevelTypes = EventConstants.topLevelTypes;

	// Events and their corresponding property names.
	var eventTypes = {
	  beforeInput: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onBeforeInput: null }),
	      captured: keyOf({ onBeforeInputCapture: null })
	    },
	    dependencies: [topLevelTypes.topCompositionEnd, topLevelTypes.topKeyPress, topLevelTypes.topTextInput, topLevelTypes.topPaste]
	  },
	  compositionEnd: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onCompositionEnd: null }),
	      captured: keyOf({ onCompositionEndCapture: null })
	    },
	    dependencies: [topLevelTypes.topBlur, topLevelTypes.topCompositionEnd, topLevelTypes.topKeyDown, topLevelTypes.topKeyPress, topLevelTypes.topKeyUp, topLevelTypes.topMouseDown]
	  },
	  compositionStart: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onCompositionStart: null }),
	      captured: keyOf({ onCompositionStartCapture: null })
	    },
	    dependencies: [topLevelTypes.topBlur, topLevelTypes.topCompositionStart, topLevelTypes.topKeyDown, topLevelTypes.topKeyPress, topLevelTypes.topKeyUp, topLevelTypes.topMouseDown]
	  },
	  compositionUpdate: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onCompositionUpdate: null }),
	      captured: keyOf({ onCompositionUpdateCapture: null })
	    },
	    dependencies: [topLevelTypes.topBlur, topLevelTypes.topCompositionUpdate, topLevelTypes.topKeyDown, topLevelTypes.topKeyPress, topLevelTypes.topKeyUp, topLevelTypes.topMouseDown]
	  }
	};

	// Track whether we've ever handled a keypress on the space key.
	var hasSpaceKeypress = false;

	/**
	 * Return whether a native keypress event is assumed to be a command.
	 * This is required because Firefox fires `keypress` events for key commands
	 * (cut, copy, select-all, etc.) even though no character is inserted.
	 */
	function isKeypressCommand(nativeEvent) {
	  return (nativeEvent.ctrlKey || nativeEvent.altKey || nativeEvent.metaKey) &&
	  // ctrlKey && altKey is equivalent to AltGr, and is not a command.
	  !(nativeEvent.ctrlKey && nativeEvent.altKey);
	}

	/**
	 * Translate native top level events into event types.
	 *
	 * @param {string} topLevelType
	 * @return {object}
	 */
	function getCompositionEventType(topLevelType) {
	  switch (topLevelType) {
	    case topLevelTypes.topCompositionStart:
	      return eventTypes.compositionStart;
	    case topLevelTypes.topCompositionEnd:
	      return eventTypes.compositionEnd;
	    case topLevelTypes.topCompositionUpdate:
	      return eventTypes.compositionUpdate;
	  }
	}

	/**
	 * Does our fallback best-guess model think this event signifies that
	 * composition has begun?
	 *
	 * @param {string} topLevelType
	 * @param {object} nativeEvent
	 * @return {boolean}
	 */
	function isFallbackCompositionStart(topLevelType, nativeEvent) {
	  return topLevelType === topLevelTypes.topKeyDown && nativeEvent.keyCode === START_KEYCODE;
	}

	/**
	 * Does our fallback mode think that this event is the end of composition?
	 *
	 * @param {string} topLevelType
	 * @param {object} nativeEvent
	 * @return {boolean}
	 */
	function isFallbackCompositionEnd(topLevelType, nativeEvent) {
	  switch (topLevelType) {
	    case topLevelTypes.topKeyUp:
	      // Command keys insert or clear IME input.
	      return END_KEYCODES.indexOf(nativeEvent.keyCode) !== -1;
	    case topLevelTypes.topKeyDown:
	      // Expect IME keyCode on each keydown. If we get any other
	      // code we must have exited earlier.
	      return nativeEvent.keyCode !== START_KEYCODE;
	    case topLevelTypes.topKeyPress:
	    case topLevelTypes.topMouseDown:
	    case topLevelTypes.topBlur:
	      // Events are not possible without cancelling IME.
	      return true;
	    default:
	      return false;
	  }
	}

	/**
	 * Google Input Tools provides composition data via a CustomEvent,
	 * with the `data` property populated in the `detail` object. If this
	 * is available on the event object, use it. If not, this is a plain
	 * composition event and we have nothing special to extract.
	 *
	 * @param {object} nativeEvent
	 * @return {?string}
	 */
	function getDataFromCustomEvent(nativeEvent) {
	  var detail = nativeEvent.detail;
	  if (typeof detail === 'object' && 'data' in detail) {
	    return detail.data;
	  }
	  return null;
	}

	// Track the current IME composition fallback object, if any.
	var currentComposition = null;

	/**
	 * @return {?object} A SyntheticCompositionEvent.
	 */
	function extractCompositionEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	  var eventType;
	  var fallbackData;

	  if (canUseCompositionEvent) {
	    eventType = getCompositionEventType(topLevelType);
	  } else if (!currentComposition) {
	    if (isFallbackCompositionStart(topLevelType, nativeEvent)) {
	      eventType = eventTypes.compositionStart;
	    }
	  } else if (isFallbackCompositionEnd(topLevelType, nativeEvent)) {
	    eventType = eventTypes.compositionEnd;
	  }

	  if (!eventType) {
	    return null;
	  }

	  if (useFallbackCompositionData) {
	    // The current composition is stored statically and must not be
	    // overwritten while composition continues.
	    if (!currentComposition && eventType === eventTypes.compositionStart) {
	      currentComposition = FallbackCompositionState.getPooled(nativeEventTarget);
	    } else if (eventType === eventTypes.compositionEnd) {
	      if (currentComposition) {
	        fallbackData = currentComposition.getData();
	      }
	    }
	  }

	  var event = SyntheticCompositionEvent.getPooled(eventType, targetInst, nativeEvent, nativeEventTarget);

	  if (fallbackData) {
	    // Inject data generated from fallback path into the synthetic event.
	    // This matches the property of native CompositionEventInterface.
	    event.data = fallbackData;
	  } else {
	    var customData = getDataFromCustomEvent(nativeEvent);
	    if (customData !== null) {
	      event.data = customData;
	    }
	  }

	  EventPropagators.accumulateTwoPhaseDispatches(event);
	  return event;
	}

	/**
	 * @param {string} topLevelType Record from `EventConstants`.
	 * @param {object} nativeEvent Native browser event.
	 * @return {?string} The string corresponding to this `beforeInput` event.
	 */
	function getNativeBeforeInputChars(topLevelType, nativeEvent) {
	  switch (topLevelType) {
	    case topLevelTypes.topCompositionEnd:
	      return getDataFromCustomEvent(nativeEvent);
	    case topLevelTypes.topKeyPress:
	      /**
	       * If native `textInput` events are available, our goal is to make
	       * use of them. However, there is a special case: the spacebar key.
	       * In Webkit, preventing default on a spacebar `textInput` event
	       * cancels character insertion, but it *also* causes the browser
	       * to fall back to its default spacebar behavior of scrolling the
	       * page.
	       *
	       * Tracking at:
	       * https://code.google.com/p/chromium/issues/detail?id=355103
	       *
	       * To avoid this issue, use the keypress event as if no `textInput`
	       * event is available.
	       */
	      var which = nativeEvent.which;
	      if (which !== SPACEBAR_CODE) {
	        return null;
	      }

	      hasSpaceKeypress = true;
	      return SPACEBAR_CHAR;

	    case topLevelTypes.topTextInput:
	      // Record the characters to be added to the DOM.
	      var chars = nativeEvent.data;

	      // If it's a spacebar character, assume that we have already handled
	      // it at the keypress level and bail immediately. Android Chrome
	      // doesn't give us keycodes, so we need to blacklist it.
	      if (chars === SPACEBAR_CHAR && hasSpaceKeypress) {
	        return null;
	      }

	      return chars;

	    default:
	      // For other native event types, do nothing.
	      return null;
	  }
	}

	/**
	 * For browsers that do not provide the `textInput` event, extract the
	 * appropriate string to use for SyntheticInputEvent.
	 *
	 * @param {string} topLevelType Record from `EventConstants`.
	 * @param {object} nativeEvent Native browser event.
	 * @return {?string} The fallback string for this `beforeInput` event.
	 */
	function getFallbackBeforeInputChars(topLevelType, nativeEvent) {
	  // If we are currently composing (IME) and using a fallback to do so,
	  // try to extract the composed characters from the fallback object.
	  if (currentComposition) {
	    if (topLevelType === topLevelTypes.topCompositionEnd || isFallbackCompositionEnd(topLevelType, nativeEvent)) {
	      var chars = currentComposition.getData();
	      FallbackCompositionState.release(currentComposition);
	      currentComposition = null;
	      return chars;
	    }
	    return null;
	  }

	  switch (topLevelType) {
	    case topLevelTypes.topPaste:
	      // If a paste event occurs after a keypress, throw out the input
	      // chars. Paste events should not lead to BeforeInput events.
	      return null;
	    case topLevelTypes.topKeyPress:
	      /**
	       * As of v27, Firefox may fire keypress events even when no character
	       * will be inserted. A few possibilities:
	       *
	       * - `which` is `0`. Arrow keys, Esc key, etc.
	       *
	       * - `which` is the pressed key code, but no char is available.
	       *   Ex: 'AltGr + d` in Polish. There is no modified character for
	       *   this key combination and no character is inserted into the
	       *   document, but FF fires the keypress for char code `100` anyway.
	       *   No `input` event will occur.
	       *
	       * - `which` is the pressed key code, but a command combination is
	       *   being used. Ex: `Cmd+C`. No character is inserted, and no
	       *   `input` event will occur.
	       */
	      if (nativeEvent.which && !isKeypressCommand(nativeEvent)) {
	        return String.fromCharCode(nativeEvent.which);
	      }
	      return null;
	    case topLevelTypes.topCompositionEnd:
	      return useFallbackCompositionData ? null : nativeEvent.data;
	    default:
	      return null;
	  }
	}

	/**
	 * Extract a SyntheticInputEvent for `beforeInput`, based on either native
	 * `textInput` or fallback behavior.
	 *
	 * @return {?object} A SyntheticInputEvent.
	 */
	function extractBeforeInputEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	  var chars;

	  if (canUseTextInputEvent) {
	    chars = getNativeBeforeInputChars(topLevelType, nativeEvent);
	  } else {
	    chars = getFallbackBeforeInputChars(topLevelType, nativeEvent);
	  }

	  // If no characters are being inserted, no BeforeInput event should
	  // be fired.
	  if (!chars) {
	    return null;
	  }

	  var event = SyntheticInputEvent.getPooled(eventTypes.beforeInput, targetInst, nativeEvent, nativeEventTarget);

	  event.data = chars;
	  EventPropagators.accumulateTwoPhaseDispatches(event);
	  return event;
	}

	/**
	 * Create an `onBeforeInput` event to match
	 * http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105/#events-inputevents.
	 *
	 * This event plugin is based on the native `textInput` event
	 * available in Chrome, Safari, Opera, and IE. This event fires after
	 * `onKeyPress` and `onCompositionEnd`, but before `onInput`.
	 *
	 * `beforeInput` is spec'd but not implemented in any browsers, and
	 * the `input` event does not provide any useful information about what has
	 * actually been added, contrary to the spec. Thus, `textInput` is the best
	 * available event to identify the characters that have actually been inserted
	 * into the target node.
	 *
	 * This plugin is also responsible for emitting `composition` events, thus
	 * allowing us to share composition fallback code for both `beforeInput` and
	 * `composition` event types.
	 */
	var BeforeInputEventPlugin = {

	  eventTypes: eventTypes,

	  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	    return [extractCompositionEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget), extractBeforeInputEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget)];
	  }
	};

	module.exports = BeforeInputEventPlugin;

/***/ },
/* 140 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule CSSPropertyOperations
	 */

	'use strict';

	var CSSProperty = __webpack_require__(69);
	var ExecutionEnvironment = __webpack_require__(7);
	var ReactInstrumentation = __webpack_require__(8);

	var camelizeStyleName = __webpack_require__(99);
	var dangerousStyleValue = __webpack_require__(193);
	var hyphenateStyleName = __webpack_require__(106);
	var memoizeStringOnly = __webpack_require__(110);
	var warning = __webpack_require__(3);

	var processStyleName = memoizeStringOnly(function (styleName) {
	  return hyphenateStyleName(styleName);
	});

	var hasShorthandPropertyBug = false;
	var styleFloatAccessor = 'cssFloat';
	if (ExecutionEnvironment.canUseDOM) {
	  var tempStyle = document.createElement('div').style;
	  try {
	    // IE8 throws "Invalid argument." if resetting shorthand style properties.
	    tempStyle.font = '';
	  } catch (e) {
	    hasShorthandPropertyBug = true;
	  }
	  // IE8 only supports accessing cssFloat (standard) as styleFloat
	  if (document.documentElement.style.cssFloat === undefined) {
	    styleFloatAccessor = 'styleFloat';
	  }
	}

	if (false) {
	  // 'msTransform' is correct, but the other prefixes should be capitalized
	  var badVendoredStyleNamePattern = /^(?:webkit|moz|o)[A-Z]/;

	  // style values shouldn't contain a semicolon
	  var badStyleValueWithSemicolonPattern = /;\s*$/;

	  var warnedStyleNames = {};
	  var warnedStyleValues = {};
	  var warnedForNaNValue = false;

	  var warnHyphenatedStyleName = function (name, owner) {
	    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
	      return;
	    }

	    warnedStyleNames[name] = true;
	    process.env.NODE_ENV !== 'production' ? warning(false, 'Unsupported style property %s. Did you mean %s?%s', name, camelizeStyleName(name), checkRenderMessage(owner)) : void 0;
	  };

	  var warnBadVendoredStyleName = function (name, owner) {
	    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
	      return;
	    }

	    warnedStyleNames[name] = true;
	    process.env.NODE_ENV !== 'production' ? warning(false, 'Unsupported vendor-prefixed style property %s. Did you mean %s?%s', name, name.charAt(0).toUpperCase() + name.slice(1), checkRenderMessage(owner)) : void 0;
	  };

	  var warnStyleValueWithSemicolon = function (name, value, owner) {
	    if (warnedStyleValues.hasOwnProperty(value) && warnedStyleValues[value]) {
	      return;
	    }

	    warnedStyleValues[value] = true;
	    process.env.NODE_ENV !== 'production' ? warning(false, 'Style property values shouldn\'t contain a semicolon.%s ' + 'Try "%s: %s" instead.', checkRenderMessage(owner), name, value.replace(badStyleValueWithSemicolonPattern, '')) : void 0;
	  };

	  var warnStyleValueIsNaN = function (name, value, owner) {
	    if (warnedForNaNValue) {
	      return;
	    }

	    warnedForNaNValue = true;
	    process.env.NODE_ENV !== 'production' ? warning(false, '`NaN` is an invalid value for the `%s` css style property.%s', name, checkRenderMessage(owner)) : void 0;
	  };

	  var checkRenderMessage = function (owner) {
	    if (owner) {
	      var name = owner.getName();
	      if (name) {
	        return ' Check the render method of `' + name + '`.';
	      }
	    }
	    return '';
	  };

	  /**
	   * @param {string} name
	   * @param {*} value
	   * @param {ReactDOMComponent} component
	   */
	  var warnValidStyle = function (name, value, component) {
	    var owner;
	    if (component) {
	      owner = component._currentElement._owner;
	    }
	    if (name.indexOf('-') > -1) {
	      warnHyphenatedStyleName(name, owner);
	    } else if (badVendoredStyleNamePattern.test(name)) {
	      warnBadVendoredStyleName(name, owner);
	    } else if (badStyleValueWithSemicolonPattern.test(value)) {
	      warnStyleValueWithSemicolon(name, value, owner);
	    }

	    if (typeof value === 'number' && isNaN(value)) {
	      warnStyleValueIsNaN(name, value, owner);
	    }
	  };
	}

	/**
	 * Operations for dealing with CSS properties.
	 */
	var CSSPropertyOperations = {

	  /**
	   * Serializes a mapping of style properties for use as inline styles:
	   *
	   *   > createMarkupForStyles({width: '200px', height: 0})
	   *   "width:200px;height:0;"
	   *
	   * Undefined values are ignored so that declarative programming is easier.
	   * The result should be HTML-escaped before insertion into the DOM.
	   *
	   * @param {object} styles
	   * @param {ReactDOMComponent} component
	   * @return {?string}
	   */
	  createMarkupForStyles: function (styles, component) {
	    var serialized = '';
	    for (var styleName in styles) {
	      if (!styles.hasOwnProperty(styleName)) {
	        continue;
	      }
	      var styleValue = styles[styleName];
	      if (false) {
	        warnValidStyle(styleName, styleValue, component);
	      }
	      if (styleValue != null) {
	        serialized += processStyleName(styleName) + ':';
	        serialized += dangerousStyleValue(styleName, styleValue, component) + ';';
	      }
	    }
	    return serialized || null;
	  },

	  /**
	   * Sets the value for multiple styles on a node.  If a value is specified as
	   * '' (empty string), the corresponding style property will be unset.
	   *
	   * @param {DOMElement} node
	   * @param {object} styles
	   * @param {ReactDOMComponent} component
	   */
	  setValueForStyles: function (node, styles, component) {
	    if (false) {
	      ReactInstrumentation.debugTool.onHostOperation(component._debugID, 'update styles', styles);
	    }

	    var style = node.style;
	    for (var styleName in styles) {
	      if (!styles.hasOwnProperty(styleName)) {
	        continue;
	      }
	      if (false) {
	        warnValidStyle(styleName, styles[styleName], component);
	      }
	      var styleValue = dangerousStyleValue(styleName, styles[styleName], component);
	      if (styleName === 'float' || styleName === 'cssFloat') {
	        styleName = styleFloatAccessor;
	      }
	      if (styleValue) {
	        style[styleName] = styleValue;
	      } else {
	        var expansion = hasShorthandPropertyBug && CSSProperty.shorthandPropertyExpansions[styleName];
	        if (expansion) {
	          // Shorthand property that IE8 won't like unsetting, so unset each
	          // component to placate it
	          for (var individualStyleName in expansion) {
	            style[individualStyleName] = '';
	          }
	        } else {
	          style[styleName] = '';
	        }
	      }
	    }
	  }

	};

	module.exports = CSSPropertyOperations;

/***/ },
/* 141 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ChangeEventPlugin
	 */

	'use strict';

	var EventConstants = __webpack_require__(12);
	var EventPluginHub = __webpack_require__(21);
	var EventPropagators = __webpack_require__(22);
	var ExecutionEnvironment = __webpack_require__(7);
	var ReactDOMComponentTree = __webpack_require__(5);
	var ReactUpdates = __webpack_require__(11);
	var SyntheticEvent = __webpack_require__(13);

	var getEventTarget = __webpack_require__(54);
	var isEventSupported = __webpack_require__(55);
	var isTextInputElement = __webpack_require__(94);
	var keyOf = __webpack_require__(14);

	var topLevelTypes = EventConstants.topLevelTypes;

	var eventTypes = {
	  change: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onChange: null }),
	      captured: keyOf({ onChangeCapture: null })
	    },
	    dependencies: [topLevelTypes.topBlur, topLevelTypes.topChange, topLevelTypes.topClick, topLevelTypes.topFocus, topLevelTypes.topInput, topLevelTypes.topKeyDown, topLevelTypes.topKeyUp, topLevelTypes.topSelectionChange]
	  }
	};

	/**
	 * For IE shims
	 */
	var activeElement = null;
	var activeElementInst = null;
	var activeElementValue = null;
	var activeElementValueProp = null;

	/**
	 * SECTION: handle `change` event
	 */
	function shouldUseChangeEvent(elem) {
	  var nodeName = elem.nodeName && elem.nodeName.toLowerCase();
	  return nodeName === 'select' || nodeName === 'input' && elem.type === 'file';
	}

	var doesChangeEventBubble = false;
	if (ExecutionEnvironment.canUseDOM) {
	  // See `handleChange` comment below
	  doesChangeEventBubble = isEventSupported('change') && (!('documentMode' in document) || document.documentMode > 8);
	}

	function manualDispatchChangeEvent(nativeEvent) {
	  var event = SyntheticEvent.getPooled(eventTypes.change, activeElementInst, nativeEvent, getEventTarget(nativeEvent));
	  EventPropagators.accumulateTwoPhaseDispatches(event);

	  // If change and propertychange bubbled, we'd just bind to it like all the
	  // other events and have it go through ReactBrowserEventEmitter. Since it
	  // doesn't, we manually listen for the events and so we have to enqueue and
	  // process the abstract event manually.
	  //
	  // Batching is necessary here in order to ensure that all event handlers run
	  // before the next rerender (including event handlers attached to ancestor
	  // elements instead of directly on the input). Without this, controlled
	  // components don't work properly in conjunction with event bubbling because
	  // the component is rerendered and the value reverted before all the event
	  // handlers can run. See https://github.com/facebook/react/issues/708.
	  ReactUpdates.batchedUpdates(runEventInBatch, event);
	}

	function runEventInBatch(event) {
	  EventPluginHub.enqueueEvents(event);
	  EventPluginHub.processEventQueue(false);
	}

	function startWatchingForChangeEventIE8(target, targetInst) {
	  activeElement = target;
	  activeElementInst = targetInst;
	  activeElement.attachEvent('onchange', manualDispatchChangeEvent);
	}

	function stopWatchingForChangeEventIE8() {
	  if (!activeElement) {
	    return;
	  }
	  activeElement.detachEvent('onchange', manualDispatchChangeEvent);
	  activeElement = null;
	  activeElementInst = null;
	}

	function getTargetInstForChangeEvent(topLevelType, targetInst) {
	  if (topLevelType === topLevelTypes.topChange) {
	    return targetInst;
	  }
	}
	function handleEventsForChangeEventIE8(topLevelType, target, targetInst) {
	  if (topLevelType === topLevelTypes.topFocus) {
	    // stopWatching() should be a noop here but we call it just in case we
	    // missed a blur event somehow.
	    stopWatchingForChangeEventIE8();
	    startWatchingForChangeEventIE8(target, targetInst);
	  } else if (topLevelType === topLevelTypes.topBlur) {
	    stopWatchingForChangeEventIE8();
	  }
	}

	/**
	 * SECTION: handle `input` event
	 */
	var isInputEventSupported = false;
	if (ExecutionEnvironment.canUseDOM) {
	  // IE9 claims to support the input event but fails to trigger it when
	  // deleting text, so we ignore its input events.
	  // IE10+ fire input events to often, such when a placeholder
	  // changes or when an input with a placeholder is focused.
	  isInputEventSupported = isEventSupported('input') && (!('documentMode' in document) || document.documentMode > 11);
	}

	/**
	 * (For IE <=11) Replacement getter/setter for the `value` property that gets
	 * set on the active element.
	 */
	var newValueProp = {
	  get: function () {
	    return activeElementValueProp.get.call(this);
	  },
	  set: function (val) {
	    // Cast to a string so we can do equality checks.
	    activeElementValue = '' + val;
	    activeElementValueProp.set.call(this, val);
	  }
	};

	/**
	 * (For IE <=11) Starts tracking propertychange events on the passed-in element
	 * and override the value property so that we can distinguish user events from
	 * value changes in JS.
	 */
	function startWatchingForValueChange(target, targetInst) {
	  activeElement = target;
	  activeElementInst = targetInst;
	  activeElementValue = target.value;
	  activeElementValueProp = Object.getOwnPropertyDescriptor(target.constructor.prototype, 'value');

	  // Not guarded in a canDefineProperty check: IE8 supports defineProperty only
	  // on DOM elements
	  Object.defineProperty(activeElement, 'value', newValueProp);
	  if (activeElement.attachEvent) {
	    activeElement.attachEvent('onpropertychange', handlePropertyChange);
	  } else {
	    activeElement.addEventListener('propertychange', handlePropertyChange, false);
	  }
	}

	/**
	 * (For IE <=11) Removes the event listeners from the currently-tracked element,
	 * if any exists.
	 */
	function stopWatchingForValueChange() {
	  if (!activeElement) {
	    return;
	  }

	  // delete restores the original property definition
	  delete activeElement.value;

	  if (activeElement.detachEvent) {
	    activeElement.detachEvent('onpropertychange', handlePropertyChange);
	  } else {
	    activeElement.removeEventListener('propertychange', handlePropertyChange, false);
	  }

	  activeElement = null;
	  activeElementInst = null;
	  activeElementValue = null;
	  activeElementValueProp = null;
	}

	/**
	 * (For IE <=11) Handles a propertychange event, sending a `change` event if
	 * the value of the active element has changed.
	 */
	function handlePropertyChange(nativeEvent) {
	  if (nativeEvent.propertyName !== 'value') {
	    return;
	  }
	  var value = nativeEvent.srcElement.value;
	  if (value === activeElementValue) {
	    return;
	  }
	  activeElementValue = value;

	  manualDispatchChangeEvent(nativeEvent);
	}

	/**
	 * If a `change` event should be fired, returns the target's ID.
	 */
	function getTargetInstForInputEvent(topLevelType, targetInst) {
	  if (topLevelType === topLevelTypes.topInput) {
	    // In modern browsers (i.e., not IE8 or IE9), the input event is exactly
	    // what we want so fall through here and trigger an abstract event
	    return targetInst;
	  }
	}

	function handleEventsForInputEventIE(topLevelType, target, targetInst) {
	  if (topLevelType === topLevelTypes.topFocus) {
	    // In IE8, we can capture almost all .value changes by adding a
	    // propertychange handler and looking for events with propertyName
	    // equal to 'value'
	    // In IE9-11, propertychange fires for most input events but is buggy and
	    // doesn't fire when text is deleted, but conveniently, selectionchange
	    // appears to fire in all of the remaining cases so we catch those and
	    // forward the event if the value has changed
	    // In either case, we don't want to call the event handler if the value
	    // is changed from JS so we redefine a setter for `.value` that updates
	    // our activeElementValue variable, allowing us to ignore those changes
	    //
	    // stopWatching() should be a noop here but we call it just in case we
	    // missed a blur event somehow.
	    stopWatchingForValueChange();
	    startWatchingForValueChange(target, targetInst);
	  } else if (topLevelType === topLevelTypes.topBlur) {
	    stopWatchingForValueChange();
	  }
	}

	// For IE8 and IE9.
	function getTargetInstForInputEventIE(topLevelType, targetInst) {
	  if (topLevelType === topLevelTypes.topSelectionChange || topLevelType === topLevelTypes.topKeyUp || topLevelType === topLevelTypes.topKeyDown) {
	    // On the selectionchange event, the target is just document which isn't
	    // helpful for us so just check activeElement instead.
	    //
	    // 99% of the time, keydown and keyup aren't necessary. IE8 fails to fire
	    // propertychange on the first input event after setting `value` from a
	    // script and fires only keydown, keypress, keyup. Catching keyup usually
	    // gets it and catching keydown lets us fire an event for the first
	    // keystroke if user does a key repeat (it'll be a little delayed: right
	    // before the second keystroke). Other input methods (e.g., paste) seem to
	    // fire selectionchange normally.
	    if (activeElement && activeElement.value !== activeElementValue) {
	      activeElementValue = activeElement.value;
	      return activeElementInst;
	    }
	  }
	}

	/**
	 * SECTION: handle `click` event
	 */
	function shouldUseClickEvent(elem) {
	  // Use the `click` event to detect changes to checkbox and radio inputs.
	  // This approach works across all browsers, whereas `change` does not fire
	  // until `blur` in IE8.
	  return elem.nodeName && elem.nodeName.toLowerCase() === 'input' && (elem.type === 'checkbox' || elem.type === 'radio');
	}

	function getTargetInstForClickEvent(topLevelType, targetInst) {
	  if (topLevelType === topLevelTypes.topClick) {
	    return targetInst;
	  }
	}

	/**
	 * This plugin creates an `onChange` event that normalizes change events
	 * across form elements. This event fires at a time when it's possible to
	 * change the element's value without seeing a flicker.
	 *
	 * Supported elements are:
	 * - input (see `isTextInputElement`)
	 * - textarea
	 * - select
	 */
	var ChangeEventPlugin = {

	  eventTypes: eventTypes,

	  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	    var targetNode = targetInst ? ReactDOMComponentTree.getNodeFromInstance(targetInst) : window;

	    var getTargetInstFunc, handleEventFunc;
	    if (shouldUseChangeEvent(targetNode)) {
	      if (doesChangeEventBubble) {
	        getTargetInstFunc = getTargetInstForChangeEvent;
	      } else {
	        handleEventFunc = handleEventsForChangeEventIE8;
	      }
	    } else if (isTextInputElement(targetNode)) {
	      if (isInputEventSupported) {
	        getTargetInstFunc = getTargetInstForInputEvent;
	      } else {
	        getTargetInstFunc = getTargetInstForInputEventIE;
	        handleEventFunc = handleEventsForInputEventIE;
	      }
	    } else if (shouldUseClickEvent(targetNode)) {
	      getTargetInstFunc = getTargetInstForClickEvent;
	    }

	    if (getTargetInstFunc) {
	      var inst = getTargetInstFunc(topLevelType, targetInst);
	      if (inst) {
	        var event = SyntheticEvent.getPooled(eventTypes.change, inst, nativeEvent, nativeEventTarget);
	        event.type = 'change';
	        EventPropagators.accumulateTwoPhaseDispatches(event);
	        return event;
	      }
	    }

	    if (handleEventFunc) {
	      handleEventFunc(topLevelType, targetNode, targetInst);
	    }
	  }

	};

	module.exports = ChangeEventPlugin;

/***/ },
/* 142 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule Danger
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(2);

	var DOMLazyTree = __webpack_require__(17);
	var ExecutionEnvironment = __webpack_require__(7);

	var createNodesFromMarkup = __webpack_require__(102);
	var emptyFunction = __webpack_require__(9);
	var invariant = __webpack_require__(1);

	var Danger = {

	  /**
	   * Replaces a node with a string of markup at its current position within its
	   * parent. The markup must render into a single root node.
	   *
	   * @param {DOMElement} oldChild Child node to replace.
	   * @param {string} markup Markup to render in place of the child node.
	   * @internal
	   */
	  dangerouslyReplaceNodeWithMarkup: function (oldChild, markup) {
	    !ExecutionEnvironment.canUseDOM ?  false ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Cannot render markup in a worker thread. Make sure `window` and `document` are available globally before requiring React when unit testing or use ReactDOMServer.renderToString() for server rendering.') : _prodInvariant('56') : void 0;
	    !markup ?  false ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Missing markup.') : _prodInvariant('57') : void 0;
	    !(oldChild.nodeName !== 'HTML') ?  false ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Cannot replace markup of the <html> node. This is because browser quirks make this unreliable and/or slow. If you want to render to the root you must use server rendering. See ReactDOMServer.renderToString().') : _prodInvariant('58') : void 0;

	    if (typeof markup === 'string') {
	      var newChild = createNodesFromMarkup(markup, emptyFunction)[0];
	      oldChild.parentNode.replaceChild(newChild, oldChild);
	    } else {
	      DOMLazyTree.replaceChildWithTree(oldChild, markup);
	    }
	  }

	};

	module.exports = Danger;

/***/ },
/* 143 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule DefaultEventPluginOrder
	 */

	'use strict';

	var keyOf = __webpack_require__(14);

	/**
	 * Module that is injectable into `EventPluginHub`, that specifies a
	 * deterministic ordering of `EventPlugin`s. A convenient way to reason about
	 * plugins, without having to package every one of them. This is better than
	 * having plugins be ordered in the same order that they are injected because
	 * that ordering would be influenced by the packaging order.
	 * `ResponderEventPlugin` must occur before `SimpleEventPlugin` so that
	 * preventing default on events is convenient in `SimpleEventPlugin` handlers.
	 */
	var DefaultEventPluginOrder = [keyOf({ ResponderEventPlugin: null }), keyOf({ SimpleEventPlugin: null }), keyOf({ TapEventPlugin: null }), keyOf({ EnterLeaveEventPlugin: null }), keyOf({ ChangeEventPlugin: null }), keyOf({ SelectEventPlugin: null }), keyOf({ BeforeInputEventPlugin: null })];

	module.exports = DefaultEventPluginOrder;

/***/ },
/* 144 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule EnterLeaveEventPlugin
	 */

	'use strict';

	var EventConstants = __webpack_require__(12);
	var EventPropagators = __webpack_require__(22);
	var ReactDOMComponentTree = __webpack_require__(5);
	var SyntheticMouseEvent = __webpack_require__(29);

	var keyOf = __webpack_require__(14);

	var topLevelTypes = EventConstants.topLevelTypes;

	var eventTypes = {
	  mouseEnter: {
	    registrationName: keyOf({ onMouseEnter: null }),
	    dependencies: [topLevelTypes.topMouseOut, topLevelTypes.topMouseOver]
	  },
	  mouseLeave: {
	    registrationName: keyOf({ onMouseLeave: null }),
	    dependencies: [topLevelTypes.topMouseOut, topLevelTypes.topMouseOver]
	  }
	};

	var EnterLeaveEventPlugin = {

	  eventTypes: eventTypes,

	  /**
	   * For almost every interaction we care about, there will be both a top-level
	   * `mouseover` and `mouseout` event that occurs. Only use `mouseout` so that
	   * we do not extract duplicate events. However, moving the mouse into the
	   * browser from outside will not fire a `mouseout` event. In this case, we use
	   * the `mouseover` top-level event.
	   */
	  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	    if (topLevelType === topLevelTypes.topMouseOver && (nativeEvent.relatedTarget || nativeEvent.fromElement)) {
	      return null;
	    }
	    if (topLevelType !== topLevelTypes.topMouseOut && topLevelType !== topLevelTypes.topMouseOver) {
	      // Must not be a mouse in or mouse out - ignoring.
	      return null;
	    }

	    var win;
	    if (nativeEventTarget.window === nativeEventTarget) {
	      // `nativeEventTarget` is probably a window object.
	      win = nativeEventTarget;
	    } else {
	      // TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.
	      var doc = nativeEventTarget.ownerDocument;
	      if (doc) {
	        win = doc.defaultView || doc.parentWindow;
	      } else {
	        win = window;
	      }
	    }

	    var from;
	    var to;
	    if (topLevelType === topLevelTypes.topMouseOut) {
	      from = targetInst;
	      var related = nativeEvent.relatedTarget || nativeEvent.toElement;
	      to = related ? ReactDOMComponentTree.getClosestInstanceFromNode(related) : null;
	    } else {
	      // Moving to a node from outside the window.
	      from = null;
	      to = targetInst;
	    }

	    if (from === to) {
	      // Nothing pertains to our managed components.
	      return null;
	    }

	    var fromNode = from == null ? win : ReactDOMComponentTree.getNodeFromInstance(from);
	    var toNode = to == null ? win : ReactDOMComponentTree.getNodeFromInstance(to);

	    var leave = SyntheticMouseEvent.getPooled(eventTypes.mouseLeave, from, nativeEvent, nativeEventTarget);
	    leave.type = 'mouseleave';
	    leave.target = fromNode;
	    leave.relatedTarget = toNode;

	    var enter = SyntheticMouseEvent.getPooled(eventTypes.mouseEnter, to, nativeEvent, nativeEventTarget);
	    enter.type = 'mouseenter';
	    enter.target = toNode;
	    enter.relatedTarget = fromNode;

	    EventPropagators.accumulateEnterLeaveDispatches(leave, enter, from, to);

	    return [leave, enter];
	  }

	};

	module.exports = EnterLeaveEventPlugin;

/***/ },
/* 145 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule FallbackCompositionState
	 */

	'use strict';

	var _assign = __webpack_require__(4);

	var PooledClass = __webpack_require__(15);

	var getTextContentAccessor = __webpack_require__(92);

	/**
	 * This helper class stores information about text content of a target node,
	 * allowing comparison of content before and after a given event.
	 *
	 * Identify the node where selection currently begins, then observe
	 * both its text content and its current position in the DOM. Since the
	 * browser may natively replace the target node during composition, we can
	 * use its position to find its replacement.
	 *
	 * @param {DOMEventTarget} root
	 */
	function FallbackCompositionState(root) {
	  this._root = root;
	  this._startText = this.getText();
	  this._fallbackText = null;
	}

	_assign(FallbackCompositionState.prototype, {
	  destructor: function () {
	    this._root = null;
	    this._startText = null;
	    this._fallbackText = null;
	  },

	  /**
	   * Get current text of input.
	   *
	   * @return {string}
	   */
	  getText: function () {
	    if ('value' in this._root) {
	      return this._root.value;
	    }
	    return this._root[getTextContentAccessor()];
	  },

	  /**
	   * Determine the differing substring between the initially stored
	   * text content and the current content.
	   *
	   * @return {string}
	   */
	  getData: function () {
	    if (this._fallbackText) {
	      return this._fallbackText;
	    }

	    var start;
	    var startValue = this._startText;
	    var startLength = startValue.length;
	    var end;
	    var endValue = this.getText();
	    var endLength = endValue.length;

	    for (start = 0; start < startLength; start++) {
	      if (startValue[start] !== endValue[start]) {
	        break;
	      }
	    }

	    var minEnd = startLength - start;
	    for (end = 1; end <= minEnd; end++) {
	      if (startValue[startLength - end] !== endValue[endLength - end]) {
	        break;
	      }
	    }

	    var sliceTail = end > 1 ? 1 - end : undefined;
	    this._fallbackText = endValue.slice(start, sliceTail);
	    return this._fallbackText;
	  }
	});

	PooledClass.addPoolingTo(FallbackCompositionState);

	module.exports = FallbackCompositionState;

/***/ },
/* 146 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule HTMLDOMPropertyConfig
	 */

	'use strict';

	var DOMProperty = __webpack_require__(18);

	var MUST_USE_PROPERTY = DOMProperty.injection.MUST_USE_PROPERTY;
	var HAS_BOOLEAN_VALUE = DOMProperty.injection.HAS_BOOLEAN_VALUE;
	var HAS_NUMERIC_VALUE = DOMProperty.injection.HAS_NUMERIC_VALUE;
	var HAS_POSITIVE_NUMERIC_VALUE = DOMProperty.injection.HAS_POSITIVE_NUMERIC_VALUE;
	var HAS_OVERLOADED_BOOLEAN_VALUE = DOMProperty.injection.HAS_OVERLOADED_BOOLEAN_VALUE;

	var HTMLDOMPropertyConfig = {
	  isCustomAttribute: RegExp.prototype.test.bind(new RegExp('^(data|aria)-[' + DOMProperty.ATTRIBUTE_NAME_CHAR + ']*$')),
	  Properties: {
	    /**
	     * Standard Properties
	     */
	    accept: 0,
	    acceptCharset: 0,
	    accessKey: 0,
	    action: 0,
	    allowFullScreen: HAS_BOOLEAN_VALUE,
	    allowTransparency: 0,
	    alt: 0,
	    async: HAS_BOOLEAN_VALUE,
	    autoComplete: 0,
	    // autoFocus is polyfilled/normalized by AutoFocusUtils
	    // autoFocus: HAS_BOOLEAN_VALUE,
	    autoPlay: HAS_BOOLEAN_VALUE,
	    capture: HAS_BOOLEAN_VALUE,
	    cellPadding: 0,
	    cellSpacing: 0,
	    charSet: 0,
	    challenge: 0,
	    checked: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
	    cite: 0,
	    classID: 0,
	    className: 0,
	    cols: HAS_POSITIVE_NUMERIC_VALUE,
	    colSpan: 0,
	    content: 0,
	    contentEditable: 0,
	    contextMenu: 0,
	    controls: HAS_BOOLEAN_VALUE,
	    coords: 0,
	    crossOrigin: 0,
	    data: 0, // For `<object />` acts as `src`.
	    dateTime: 0,
	    'default': HAS_BOOLEAN_VALUE,
	    defer: HAS_BOOLEAN_VALUE,
	    dir: 0,
	    disabled: HAS_BOOLEAN_VALUE,
	    download: HAS_OVERLOADED_BOOLEAN_VALUE,
	    draggable: 0,
	    encType: 0,
	    form: 0,
	    formAction: 0,
	    formEncType: 0,
	    formMethod: 0,
	    formNoValidate: HAS_BOOLEAN_VALUE,
	    formTarget: 0,
	    frameBorder: 0,
	    headers: 0,
	    height: 0,
	    hidden: HAS_BOOLEAN_VALUE,
	    high: 0,
	    href: 0,
	    hrefLang: 0,
	    htmlFor: 0,
	    httpEquiv: 0,
	    icon: 0,
	    id: 0,
	    inputMode: 0,
	    integrity: 0,
	    is: 0,
	    keyParams: 0,
	    keyType: 0,
	    kind: 0,
	    label: 0,
	    lang: 0,
	    list: 0,
	    loop: HAS_BOOLEAN_VALUE,
	    low: 0,
	    manifest: 0,
	    marginHeight: 0,
	    marginWidth: 0,
	    max: 0,
	    maxLength: 0,
	    media: 0,
	    mediaGroup: 0,
	    method: 0,
	    min: 0,
	    minLength: 0,
	    // Caution; `option.selected` is not updated if `select.multiple` is
	    // disabled with `removeAttribute`.
	    multiple: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
	    muted: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
	    name: 0,
	    nonce: 0,
	    noValidate: HAS_BOOLEAN_VALUE,
	    open: HAS_BOOLEAN_VALUE,
	    optimum: 0,
	    pattern: 0,
	    placeholder: 0,
	    poster: 0,
	    preload: 0,
	    profile: 0,
	    radioGroup: 0,
	    readOnly: HAS_BOOLEAN_VALUE,
	    referrerPolicy: 0,
	    rel: 0,
	    required: HAS_BOOLEAN_VALUE,
	    reversed: HAS_BOOLEAN_VALUE,
	    role: 0,
	    rows: HAS_POSITIVE_NUMERIC_VALUE,
	    rowSpan: HAS_NUMERIC_VALUE,
	    sandbox: 0,
	    scope: 0,
	    scoped: HAS_BOOLEAN_VALUE,
	    scrolling: 0,
	    seamless: HAS_BOOLEAN_VALUE,
	    selected: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
	    shape: 0,
	    size: HAS_POSITIVE_NUMERIC_VALUE,
	    sizes: 0,
	    span: HAS_POSITIVE_NUMERIC_VALUE,
	    spellCheck: 0,
	    src: 0,
	    srcDoc: 0,
	    srcLang: 0,
	    srcSet: 0,
	    start: HAS_NUMERIC_VALUE,
	    step: 0,
	    style: 0,
	    summary: 0,
	    tabIndex: 0,
	    target: 0,
	    title: 0,
	    // Setting .type throws on non-<input> tags
	    type: 0,
	    useMap: 0,
	    value: 0,
	    width: 0,
	    wmode: 0,
	    wrap: 0,

	    /**
	     * RDFa Properties
	     */
	    about: 0,
	    datatype: 0,
	    inlist: 0,
	    prefix: 0,
	    // property is also supported for OpenGraph in meta tags.
	    property: 0,
	    resource: 0,
	    'typeof': 0,
	    vocab: 0,

	    /**
	     * Non-standard Properties
	     */
	    // autoCapitalize and autoCorrect are supported in Mobile Safari for
	    // keyboard hints.
	    autoCapitalize: 0,
	    autoCorrect: 0,
	    // autoSave allows WebKit/Blink to persist values of input fields on page reloads
	    autoSave: 0,
	    // color is for Safari mask-icon link
	    color: 0,
	    // itemProp, itemScope, itemType are for
	    // Microdata support. See http://schema.org/docs/gs.html
	    itemProp: 0,
	    itemScope: HAS_BOOLEAN_VALUE,
	    itemType: 0,
	    // itemID and itemRef are for Microdata support as well but
	    // only specified in the WHATWG spec document. See
	    // https://html.spec.whatwg.org/multipage/microdata.html#microdata-dom-api
	    itemID: 0,
	    itemRef: 0,
	    // results show looking glass icon and recent searches on input
	    // search fields in WebKit/Blink
	    results: 0,
	    // IE-only attribute that specifies security restrictions on an iframe
	    // as an alternative to the sandbox attribute on IE<10
	    security: 0,
	    // IE-only attribute that controls focus behavior
	    unselectable: 0
	  },
	  DOMAttributeNames: {
	    acceptCharset: 'accept-charset',
	    className: 'class',
	    htmlFor: 'for',
	    httpEquiv: 'http-equiv'
	  },
	  DOMPropertyNames: {}
	};

	module.exports = HTMLDOMPropertyConfig;

/***/ },
/* 147 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule React
	 */

	'use strict';

	var _assign = __webpack_require__(4);

	var ReactChildren = __webpack_require__(72);
	var ReactComponent = __webpack_require__(42);
	var ReactPureComponent = __webpack_require__(173);
	var ReactClass = __webpack_require__(73);
	var ReactDOMFactories = __webpack_require__(155);
	var ReactElement = __webpack_require__(10);
	var ReactPropTypes = __webpack_require__(84);
	var ReactVersion = __webpack_require__(85);

	var onlyChild = __webpack_require__(199);
	var warning = __webpack_require__(3);

	var createElement = ReactElement.createElement;
	var createFactory = ReactElement.createFactory;
	var cloneElement = ReactElement.cloneElement;

	if (false) {
	  var ReactElementValidator = require('./ReactElementValidator');
	  createElement = ReactElementValidator.createElement;
	  createFactory = ReactElementValidator.createFactory;
	  cloneElement = ReactElementValidator.cloneElement;
	}

	var __spread = _assign;

	if (false) {
	  var warned = false;
	  __spread = function () {
	    process.env.NODE_ENV !== 'production' ? warning(warned, 'React.__spread is deprecated and should not be used. Use ' + 'Object.assign directly or another helper function with similar ' + 'semantics. You may be seeing this warning due to your compiler. ' + 'See https://fb.me/react-spread-deprecation for more details.') : void 0;
	    warned = true;
	    return _assign.apply(null, arguments);
	  };
	}

	var React = {

	  // Modern

	  Children: {
	    map: ReactChildren.map,
	    forEach: ReactChildren.forEach,
	    count: ReactChildren.count,
	    toArray: ReactChildren.toArray,
	    only: onlyChild
	  },

	  Component: ReactComponent,
	  PureComponent: ReactPureComponent,

	  createElement: createElement,
	  cloneElement: cloneElement,
	  isValidElement: ReactElement.isValidElement,

	  // Classic

	  PropTypes: ReactPropTypes,
	  createClass: ReactClass.createClass,
	  createFactory: createFactory,
	  createMixin: function (mixin) {
	    // Currently a noop. Will be used to validate and trace mixins.
	    return mixin;
	  },

	  // This looks DOM specific but these are actually isomorphic helpers
	  // since they are just generating DOM strings.
	  DOM: ReactDOMFactories,

	  version: ReactVersion,

	  // Deprecated hook for JSX spread, don't use this for anything.
	  __spread: __spread
	};

	module.exports = React;

/***/ },
/* 148 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2014-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactChildReconciler
	 */

	'use strict';

	var ReactReconciler = __webpack_require__(19);

	var instantiateReactComponent = __webpack_require__(93);
	var KeyEscapeUtils = __webpack_require__(40);
	var shouldUpdateReactComponent = __webpack_require__(56);
	var traverseAllChildren = __webpack_require__(57);
	var warning = __webpack_require__(3);

	var ReactComponentTreeDevtool;

	if (typeof process !== 'undefined' && process.env && ("production") === 'test') {
	  // Temporary hack.
	  // Inline requires don't work well with Jest:
	  // https://github.com/facebook/react/issues/7240
	  // Remove the inline requires when we don't need them anymore:
	  // https://github.com/facebook/react/pull/7178
	  ReactComponentTreeDevtool = __webpack_require__(44);
	}

	function instantiateChild(childInstances, child, name, selfDebugID) {
	  // We found a component instance.
	  var keyUnique = childInstances[name] === undefined;
	  if (false) {
	    if (!ReactComponentTreeDevtool) {
	      ReactComponentTreeDevtool = require('./ReactComponentTreeDevtool');
	    }
	    process.env.NODE_ENV !== 'production' ? warning(keyUnique, 'flattenChildren(...): Encountered two children with the same key, ' + '`%s`. Child keys must be unique; when two children share a key, only ' + 'the first child will be used.%s', KeyEscapeUtils.unescape(name), ReactComponentTreeDevtool.getStackAddendumByID(selfDebugID)) : void 0;
	  }
	  if (child != null && keyUnique) {
	    childInstances[name] = instantiateReactComponent(child, true);
	  }
	}

	/**
	 * ReactChildReconciler provides helpers for initializing or updating a set of
	 * children. Its output is suitable for passing it onto ReactMultiChild which
	 * does diffed reordering and insertion.
	 */
	var ReactChildReconciler = {
	  /**
	   * Generates a "mount image" for each of the supplied children. In the case
	   * of `ReactDOMComponent`, a mount image is a string of markup.
	   *
	   * @param {?object} nestedChildNodes Nested child maps.
	   * @return {?object} A set of child instances.
	   * @internal
	   */
	  instantiateChildren: function (nestedChildNodes, transaction, context, selfDebugID // __DEV__ only
	  ) {
	    if (nestedChildNodes == null) {
	      return null;
	    }
	    var childInstances = {};

	    if (false) {
	      traverseAllChildren(nestedChildNodes, function (childInsts, child, name) {
	        return instantiateChild(childInsts, child, name, selfDebugID);
	      }, childInstances);
	    } else {
	      traverseAllChildren(nestedChildNodes, instantiateChild, childInstances);
	    }
	    return childInstances;
	  },

	  /**
	   * Updates the rendered children and returns a new set of children.
	   *
	   * @param {?object} prevChildren Previously initialized set of children.
	   * @param {?object} nextChildren Flat child element maps.
	   * @param {ReactReconcileTransaction} transaction
	   * @param {object} context
	   * @return {?object} A new set of child instances.
	   * @internal
	   */
	  updateChildren: function (prevChildren, nextChildren, mountImages, removedNodes, transaction, hostParent, hostContainerInfo, context) {
	    // We currently don't have a way to track moves here but if we use iterators
	    // instead of for..in we can zip the iterators and check if an item has
	    // moved.
	    // TODO: If nothing has changed, return the prevChildren object so that we
	    // can quickly bailout if nothing has changed.
	    if (!nextChildren && !prevChildren) {
	      return;
	    }
	    var name;
	    var prevChild;
	    for (name in nextChildren) {
	      if (!nextChildren.hasOwnProperty(name)) {
	        continue;
	      }
	      prevChild = prevChildren && prevChildren[name];
	      var prevElement = prevChild && prevChild._currentElement;
	      var nextElement = nextChildren[name];
	      if (prevChild != null && shouldUpdateReactComponent(prevElement, nextElement)) {
	        ReactReconciler.receiveComponent(prevChild, nextElement, transaction, context);
	        nextChildren[name] = prevChild;
	      } else {
	        if (prevChild) {
	          removedNodes[name] = ReactReconciler.getHostNode(prevChild);
	          ReactReconciler.unmountComponent(prevChild, false);
	        }
	        // The child must be instantiated before it's mounted.
	        var nextChildInstance = instantiateReactComponent(nextElement, true);
	        nextChildren[name] = nextChildInstance;
	        // Creating mount image now ensures refs are resolved in right order
	        // (see https://github.com/facebook/react/pull/7101 for explanation).
	        var nextChildMountImage = ReactReconciler.mountComponent(nextChildInstance, transaction, hostParent, hostContainerInfo, context);
	        mountImages.push(nextChildMountImage);
	      }
	    }
	    // Unmount children that are no longer present.
	    for (name in prevChildren) {
	      if (prevChildren.hasOwnProperty(name) && !(nextChildren && nextChildren.hasOwnProperty(name))) {
	        prevChild = prevChildren[name];
	        removedNodes[name] = ReactReconciler.getHostNode(prevChild);
	        ReactReconciler.unmountComponent(prevChild, false);
	      }
	    }
	  },

	  /**
	   * Unmounts all rendered children. This should be used to clean up children
	   * when this component is unmounted.
	   *
	   * @param {?object} renderedChildren Previously initialized set of children.
	   * @internal
	   */
	  unmountChildren: function (renderedChildren, safely) {
	    for (var name in renderedChildren) {
	      if (renderedChildren.hasOwnProperty(name)) {
	        var renderedChild = renderedChildren[name];
	        ReactReconciler.unmountComponent(renderedChild, safely);
	      }
	    }
	  }

	};

	module.exports = ReactChildReconciler;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(35)))

/***/ },
/* 149 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactCompositeComponent
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(2),
	    _assign = __webpack_require__(4);

	var ReactComponentEnvironment = __webpack_require__(43);
	var ReactCurrentOwner = __webpack_require__(16);
	var ReactElement = __webpack_require__(10);
	var ReactErrorUtils = __webpack_require__(45);
	var ReactInstanceMap = __webpack_require__(23);
	var ReactInstrumentation = __webpack_require__(8);
	var ReactNodeTypes = __webpack_require__(83);
	var ReactPropTypeLocations = __webpack_require__(48);
	var ReactReconciler = __webpack_require__(19);

	var checkReactTypeSpec = __webpack_require__(192);
	var emptyObject = __webpack_require__(20);
	var invariant = __webpack_require__(1);
	var shallowEqual = __webpack_require__(32);
	var shouldUpdateReactComponent = __webpack_require__(56);
	var warning = __webpack_require__(3);

	var CompositeTypes = {
	  ImpureClass: 0,
	  PureClass: 1,
	  StatelessFunctional: 2
	};

	function StatelessComponent(Component) {}
	StatelessComponent.prototype.render = function () {
	  var Component = ReactInstanceMap.get(this)._currentElement.type;
	  var element = Component(this.props, this.context, this.updater);
	  warnIfInvalidElement(Component, element);
	  return element;
	};

	function warnIfInvalidElement(Component, element) {
	  if (false) {
	    process.env.NODE_ENV !== 'production' ? warning(element === null || element === false || ReactElement.isValidElement(element), '%s(...): A valid React element (or null) must be returned. You may have ' + 'returned undefined, an array or some other invalid object.', Component.displayName || Component.name || 'Component') : void 0;
	    process.env.NODE_ENV !== 'production' ? warning(!Component.childContextTypes, '%s(...): childContextTypes cannot be defined on a functional component.', Component.displayName || Component.name || 'Component') : void 0;
	  }
	}

	function invokeComponentDidMountWithTimer() {
	  var publicInstance = this._instance;
	  if (this._debugID !== 0) {
	    ReactInstrumentation.debugTool.onBeginLifeCycleTimer(this._debugID, 'componentDidMount');
	  }
	  publicInstance.componentDidMount();
	  if (this._debugID !== 0) {
	    ReactInstrumentation.debugTool.onEndLifeCycleTimer(this._debugID, 'componentDidMount');
	  }
	}

	function invokeComponentDidUpdateWithTimer(prevProps, prevState, prevContext) {
	  var publicInstance = this._instance;
	  if (this._debugID !== 0) {
	    ReactInstrumentation.debugTool.onBeginLifeCycleTimer(this._debugID, 'componentDidUpdate');
	  }
	  publicInstance.componentDidUpdate(prevProps, prevState, prevContext);
	  if (this._debugID !== 0) {
	    ReactInstrumentation.debugTool.onEndLifeCycleTimer(this._debugID, 'componentDidUpdate');
	  }
	}

	function shouldConstruct(Component) {
	  return !!(Component.prototype && Component.prototype.isReactComponent);
	}

	function isPureComponent(Component) {
	  return !!(Component.prototype && Component.prototype.isPureReactComponent);
	}

	/**
	 * ------------------ The Life-Cycle of a Composite Component ------------------
	 *
	 * - constructor: Initialization of state. The instance is now retained.
	 *   - componentWillMount
	 *   - render
	 *   - [children's constructors]
	 *     - [children's componentWillMount and render]
	 *     - [children's componentDidMount]
	 *     - componentDidMount
	 *
	 *       Update Phases:
	 *       - componentWillReceiveProps (only called if parent updated)
	 *       - shouldComponentUpdate
	 *         - componentWillUpdate
	 *           - render
	 *           - [children's constructors or receive props phases]
	 *         - componentDidUpdate
	 *
	 *     - componentWillUnmount
	 *     - [children's componentWillUnmount]
	 *   - [children destroyed]
	 * - (destroyed): The instance is now blank, released by React and ready for GC.
	 *
	 * -----------------------------------------------------------------------------
	 */

	/**
	 * An incrementing ID assigned to each component when it is mounted. This is
	 * used to enforce the order in which `ReactUpdates` updates dirty components.
	 *
	 * @private
	 */
	var nextMountID = 1;

	/**
	 * @lends {ReactCompositeComponent.prototype}
	 */
	var ReactCompositeComponentMixin = {

	  /**
	   * Base constructor for all composite component.
	   *
	   * @param {ReactElement} element
	   * @final
	   * @internal
	   */
	  construct: function (element) {
	    this._currentElement = element;
	    this._rootNodeID = null;
	    this._compositeType = null;
	    this._instance = null;
	    this._hostParent = null;
	    this._hostContainerInfo = null;

	    // See ReactUpdateQueue
	    this._updateBatchNumber = null;
	    this._pendingElement = null;
	    this._pendingStateQueue = null;
	    this._pendingReplaceState = false;
	    this._pendingForceUpdate = false;

	    this._renderedNodeType = null;
	    this._renderedComponent = null;
	    this._context = null;
	    this._mountOrder = 0;
	    this._topLevelWrapper = null;

	    // See ReactUpdates and ReactUpdateQueue.
	    this._pendingCallbacks = null;

	    // ComponentWillUnmount shall only be called once
	    this._calledComponentWillUnmount = false;

	    if (false) {
	      this._warnedAboutRefsInRender = false;
	    }
	  },

	  /**
	   * Initializes the component, renders markup, and registers event listeners.
	   *
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @param {?object} hostParent
	   * @param {?object} hostContainerInfo
	   * @param {?object} context
	   * @return {?string} Rendered markup to be inserted into the DOM.
	   * @final
	   * @internal
	   */
	  mountComponent: function (transaction, hostParent, hostContainerInfo, context) {
	    var _this = this;

	    this._context = context;
	    this._mountOrder = nextMountID++;
	    this._hostParent = hostParent;
	    this._hostContainerInfo = hostContainerInfo;

	    var publicProps = this._currentElement.props;
	    var publicContext = this._processContext(context);

	    var Component = this._currentElement.type;

	    var updateQueue = transaction.getUpdateQueue();

	    // Initialize the public class
	    var doConstruct = shouldConstruct(Component);
	    var inst = this._constructComponent(doConstruct, publicProps, publicContext, updateQueue);
	    var renderedElement;

	    // Support functional components
	    if (!doConstruct && (inst == null || inst.render == null)) {
	      renderedElement = inst;
	      warnIfInvalidElement(Component, renderedElement);
	      !(inst === null || inst === false || ReactElement.isValidElement(inst)) ?  false ? invariant(false, '%s(...): A valid React element (or null) must be returned. You may have returned undefined, an array or some other invalid object.', Component.displayName || Component.name || 'Component') : _prodInvariant('105', Component.displayName || Component.name || 'Component') : void 0;
	      inst = new StatelessComponent(Component);
	      this._compositeType = CompositeTypes.StatelessFunctional;
	    } else {
	      if (isPureComponent(Component)) {
	        this._compositeType = CompositeTypes.PureClass;
	      } else {
	        this._compositeType = CompositeTypes.ImpureClass;
	      }
	    }

	    if (false) {
	      // This will throw later in _renderValidatedComponent, but add an early
	      // warning now to help debugging
	      if (inst.render == null) {
	        process.env.NODE_ENV !== 'production' ? warning(false, '%s(...): No `render` method found on the returned component ' + 'instance: you may have forgotten to define `render`.', Component.displayName || Component.name || 'Component') : void 0;
	      }

	      var propsMutated = inst.props !== publicProps;
	      var componentName = Component.displayName || Component.name || 'Component';

	      process.env.NODE_ENV !== 'production' ? warning(inst.props === undefined || !propsMutated, '%s(...): When calling super() in `%s`, make sure to pass ' + 'up the same props that your component\'s constructor was passed.', componentName, componentName) : void 0;
	    }

	    // These should be set up in the constructor, but as a convenience for
	    // simpler class abstractions, we set them up after the fact.
	    inst.props = publicProps;
	    inst.context = publicContext;
	    inst.refs = emptyObject;
	    inst.updater = updateQueue;

	    this._instance = inst;

	    // Store a reference from the instance back to the internal representation
	    ReactInstanceMap.set(inst, this);

	    if (false) {
	      // Since plain JS classes are defined without any special initialization
	      // logic, we can not catch common errors early. Therefore, we have to
	      // catch them here, at initialization time, instead.
	      process.env.NODE_ENV !== 'production' ? warning(!inst.getInitialState || inst.getInitialState.isReactClassApproved, 'getInitialState was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Did you mean to define a state property instead?', this.getName() || 'a component') : void 0;
	      process.env.NODE_ENV !== 'production' ? warning(!inst.getDefaultProps || inst.getDefaultProps.isReactClassApproved, 'getDefaultProps was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Use a static property to define defaultProps instead.', this.getName() || 'a component') : void 0;
	      process.env.NODE_ENV !== 'production' ? warning(!inst.propTypes, 'propTypes was defined as an instance property on %s. Use a static ' + 'property to define propTypes instead.', this.getName() || 'a component') : void 0;
	      process.env.NODE_ENV !== 'production' ? warning(!inst.contextTypes, 'contextTypes was defined as an instance property on %s. Use a ' + 'static property to define contextTypes instead.', this.getName() || 'a component') : void 0;
	      process.env.NODE_ENV !== 'production' ? warning(typeof inst.componentShouldUpdate !== 'function', '%s has a method called ' + 'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' + 'The name is phrased as a question because the function is ' + 'expected to return a value.', this.getName() || 'A component') : void 0;
	      process.env.NODE_ENV !== 'production' ? warning(typeof inst.componentDidUnmount !== 'function', '%s has a method called ' + 'componentDidUnmount(). But there is no such lifecycle method. ' + 'Did you mean componentWillUnmount()?', this.getName() || 'A component') : void 0;
	      process.env.NODE_ENV !== 'production' ? warning(typeof inst.componentWillRecieveProps !== 'function', '%s has a method called ' + 'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?', this.getName() || 'A component') : void 0;
	    }

	    var initialState = inst.state;
	    if (initialState === undefined) {
	      inst.state = initialState = null;
	    }
	    !(typeof initialState === 'object' && !Array.isArray(initialState)) ?  false ? invariant(false, '%s.state: must be set to an object or null', this.getName() || 'ReactCompositeComponent') : _prodInvariant('106', this.getName() || 'ReactCompositeComponent') : void 0;

	    this._pendingStateQueue = null;
	    this._pendingReplaceState = false;
	    this._pendingForceUpdate = false;

	    var markup;
	    if (inst.unstable_handleError) {
	      markup = this.performInitialMountWithErrorHandling(renderedElement, hostParent, hostContainerInfo, transaction, context);
	    } else {
	      markup = this.performInitialMount(renderedElement, hostParent, hostContainerInfo, transaction, context);
	    }

	    if (inst.componentDidMount) {
	      if (false) {
	        transaction.getReactMountReady().enqueue(invokeComponentDidMountWithTimer, this);
	      } else {
	        transaction.getReactMountReady().enqueue(inst.componentDidMount, inst);
	      }
	    }

	    if (false) {
	      if (this._debugID) {
	        var callback = function (component) {
	          return ReactInstrumentation.debugTool.onComponentHasMounted(_this._debugID);
	        };
	        transaction.getReactMountReady().enqueue(callback, this);
	      }
	    }

	    return markup;
	  },

	  _constructComponent: function (doConstruct, publicProps, publicContext, updateQueue) {
	    if (false) {
	      ReactCurrentOwner.current = this;
	      try {
	        return this._constructComponentWithoutOwner(doConstruct, publicProps, publicContext, updateQueue);
	      } finally {
	        ReactCurrentOwner.current = null;
	      }
	    } else {
	      return this._constructComponentWithoutOwner(doConstruct, publicProps, publicContext, updateQueue);
	    }
	  },

	  _constructComponentWithoutOwner: function (doConstruct, publicProps, publicContext, updateQueue) {
	    var Component = this._currentElement.type;
	    var instanceOrElement;
	    if (doConstruct) {
	      if (false) {
	        if (this._debugID !== 0) {
	          ReactInstrumentation.debugTool.onBeginLifeCycleTimer(this._debugID, 'ctor');
	        }
	      }
	      instanceOrElement = new Component(publicProps, publicContext, updateQueue);
	      if (false) {
	        if (this._debugID !== 0) {
	          ReactInstrumentation.debugTool.onEndLifeCycleTimer(this._debugID, 'ctor');
	        }
	      }
	    } else {
	      // This can still be an instance in case of factory components
	      // but we'll count this as time spent rendering as the more common case.
	      if (false) {
	        if (this._debugID !== 0) {
	          ReactInstrumentation.debugTool.onBeginLifeCycleTimer(this._debugID, 'render');
	        }
	      }
	      instanceOrElement = Component(publicProps, publicContext, updateQueue);
	      if (false) {
	        if (this._debugID !== 0) {
	          ReactInstrumentation.debugTool.onEndLifeCycleTimer(this._debugID, 'render');
	        }
	      }
	    }
	    return instanceOrElement;
	  },

	  performInitialMountWithErrorHandling: function (renderedElement, hostParent, hostContainerInfo, transaction, context) {
	    var markup;
	    var checkpoint = transaction.checkpoint();
	    try {
	      markup = this.performInitialMount(renderedElement, hostParent, hostContainerInfo, transaction, context);
	    } catch (e) {
	      if (false) {
	        if (this._debugID !== 0) {
	          ReactInstrumentation.debugTool.onError();
	        }
	      }
	      // Roll back to checkpoint, handle error (which may add items to the transaction), and take a new checkpoint
	      transaction.rollback(checkpoint);
	      this._instance.unstable_handleError(e);
	      if (this._pendingStateQueue) {
	        this._instance.state = this._processPendingState(this._instance.props, this._instance.context);
	      }
	      checkpoint = transaction.checkpoint();

	      this._renderedComponent.unmountComponent(true);
	      transaction.rollback(checkpoint);

	      // Try again - we've informed the component about the error, so they can render an error message this time.
	      // If this throws again, the error will bubble up (and can be caught by a higher error boundary).
	      markup = this.performInitialMount(renderedElement, hostParent, hostContainerInfo, transaction, context);
	    }
	    return markup;
	  },

	  performInitialMount: function (renderedElement, hostParent, hostContainerInfo, transaction, context) {
	    var inst = this._instance;
	    if (inst.componentWillMount) {
	      if (false) {
	        if (this._debugID !== 0) {
	          ReactInstrumentation.debugTool.onBeginLifeCycleTimer(this._debugID, 'componentWillMount');
	        }
	      }
	      inst.componentWillMount();
	      if (false) {
	        if (this._debugID !== 0) {
	          ReactInstrumentation.debugTool.onEndLifeCycleTimer(this._debugID, 'componentWillMount');
	        }
	      }
	      // When mounting, calls to `setState` by `componentWillMount` will set
	      // `this._pendingStateQueue` without triggering a re-render.
	      if (this._pendingStateQueue) {
	        inst.state = this._processPendingState(inst.props, inst.context);
	      }
	    }

	    // If not a stateless component, we now render
	    if (renderedElement === undefined) {
	      renderedElement = this._renderValidatedComponent();
	    }

	    var nodeType = ReactNodeTypes.getType(renderedElement);
	    this._renderedNodeType = nodeType;
	    var child = this._instantiateReactComponent(renderedElement, nodeType !== ReactNodeTypes.EMPTY /* shouldHaveDebugID */
	    );
	    this._renderedComponent = child;
	    if (false) {
	      if (child._debugID !== 0 && this._debugID !== 0) {
	        ReactInstrumentation.debugTool.onSetParent(child._debugID, this._debugID);
	      }
	    }

	    var markup = ReactReconciler.mountComponent(child, transaction, hostParent, hostContainerInfo, this._processChildContext(context));

	    if (false) {
	      if (this._debugID !== 0) {
	        ReactInstrumentation.debugTool.onSetChildren(this._debugID, child._debugID !== 0 ? [child._debugID] : []);
	      }
	    }

	    return markup;
	  },

	  getHostNode: function () {
	    return ReactReconciler.getHostNode(this._renderedComponent);
	  },

	  /**
	   * Releases any resources allocated by `mountComponent`.
	   *
	   * @final
	   * @internal
	   */
	  unmountComponent: function (safely) {
	    if (!this._renderedComponent) {
	      return;
	    }
	    var inst = this._instance;

	    if (inst.componentWillUnmount && !inst._calledComponentWillUnmount) {
	      inst._calledComponentWillUnmount = true;
	      if (false) {
	        if (this._debugID !== 0) {
	          ReactInstrumentation.debugTool.onBeginLifeCycleTimer(this._debugID, 'componentWillUnmount');
	        }
	      }
	      if (safely) {
	        var name = this.getName() + '.componentWillUnmount()';
	        ReactErrorUtils.invokeGuardedCallback(name, inst.componentWillUnmount.bind(inst));
	      } else {
	        inst.componentWillUnmount();
	      }
	      if (false) {
	        if (this._debugID !== 0) {
	          ReactInstrumentation.debugTool.onEndLifeCycleTimer(this._debugID, 'componentWillUnmount');
	        }
	      }
	    }

	    if (this._renderedComponent) {
	      ReactReconciler.unmountComponent(this._renderedComponent, safely);
	      this._renderedNodeType = null;
	      this._renderedComponent = null;
	      this._instance = null;
	    }

	    // Reset pending fields
	    // Even if this component is scheduled for another update in ReactUpdates,
	    // it would still be ignored because these fields are reset.
	    this._pendingStateQueue = null;
	    this._pendingReplaceState = false;
	    this._pendingForceUpdate = false;
	    this._pendingCallbacks = null;
	    this._pendingElement = null;

	    // These fields do not really need to be reset since this object is no
	    // longer accessible.
	    this._context = null;
	    this._rootNodeID = null;
	    this._topLevelWrapper = null;

	    // Delete the reference from the instance to this internal representation
	    // which allow the internals to be properly cleaned up even if the user
	    // leaks a reference to the public instance.
	    ReactInstanceMap.remove(inst);

	    // Some existing components rely on inst.props even after they've been
	    // destroyed (in event handlers).
	    // TODO: inst.props = null;
	    // TODO: inst.state = null;
	    // TODO: inst.context = null;
	  },

	  /**
	   * Filters the context object to only contain keys specified in
	   * `contextTypes`
	   *
	   * @param {object} context
	   * @return {?object}
	   * @private
	   */
	  _maskContext: function (context) {
	    var Component = this._currentElement.type;
	    var contextTypes = Component.contextTypes;
	    if (!contextTypes) {
	      return emptyObject;
	    }
	    var maskedContext = {};
	    for (var contextName in contextTypes) {
	      maskedContext[contextName] = context[contextName];
	    }
	    return maskedContext;
	  },

	  /**
	   * Filters the context object to only contain keys specified in
	   * `contextTypes`, and asserts that they are valid.
	   *
	   * @param {object} context
	   * @return {?object}
	   * @private
	   */
	  _processContext: function (context) {
	    var maskedContext = this._maskContext(context);
	    if (false) {
	      var Component = this._currentElement.type;
	      if (Component.contextTypes) {
	        this._checkContextTypes(Component.contextTypes, maskedContext, ReactPropTypeLocations.context);
	      }
	    }
	    return maskedContext;
	  },

	  /**
	   * @param {object} currentContext
	   * @return {object}
	   * @private
	   */
	  _processChildContext: function (currentContext) {
	    var Component = this._currentElement.type;
	    var inst = this._instance;
	    if (false) {
	      ReactInstrumentation.debugTool.onBeginProcessingChildContext();
	    }
	    var childContext = inst.getChildContext && inst.getChildContext();
	    if (false) {
	      ReactInstrumentation.debugTool.onEndProcessingChildContext();
	    }
	    if (childContext) {
	      !(typeof Component.childContextTypes === 'object') ?  false ? invariant(false, '%s.getChildContext(): childContextTypes must be defined in order to use getChildContext().', this.getName() || 'ReactCompositeComponent') : _prodInvariant('107', this.getName() || 'ReactCompositeComponent') : void 0;
	      if (false) {
	        this._checkContextTypes(Component.childContextTypes, childContext, ReactPropTypeLocations.childContext);
	      }
	      for (var name in childContext) {
	        !(name in Component.childContextTypes) ?  false ? invariant(false, '%s.getChildContext(): key "%s" is not defined in childContextTypes.', this.getName() || 'ReactCompositeComponent', name) : _prodInvariant('108', this.getName() || 'ReactCompositeComponent', name) : void 0;
	      }
	      return _assign({}, currentContext, childContext);
	    }
	    return currentContext;
	  },

	  /**
	   * Assert that the context types are valid
	   *
	   * @param {object} typeSpecs Map of context field to a ReactPropType
	   * @param {object} values Runtime values that need to be type-checked
	   * @param {string} location e.g. "prop", "context", "child context"
	   * @private
	   */
	  _checkContextTypes: function (typeSpecs, values, location) {
	    checkReactTypeSpec(typeSpecs, values, location, this.getName(), null, this._debugID);
	  },

	  receiveComponent: function (nextElement, transaction, nextContext) {
	    var prevElement = this._currentElement;
	    var prevContext = this._context;

	    this._pendingElement = null;

	    this.updateComponent(transaction, prevElement, nextElement, prevContext, nextContext);
	  },

	  /**
	   * If any of `_pendingElement`, `_pendingStateQueue`, or `_pendingForceUpdate`
	   * is set, update the component.
	   *
	   * @param {ReactReconcileTransaction} transaction
	   * @internal
	   */
	  performUpdateIfNecessary: function (transaction) {
	    if (this._pendingElement != null) {
	      ReactReconciler.receiveComponent(this, this._pendingElement, transaction, this._context);
	    } else if (this._pendingStateQueue !== null || this._pendingForceUpdate) {
	      this.updateComponent(transaction, this._currentElement, this._currentElement, this._context, this._context);
	    } else {
	      this._updateBatchNumber = null;
	    }
	  },

	  /**
	   * Perform an update to a mounted component. The componentWillReceiveProps and
	   * shouldComponentUpdate methods are called, then (assuming the update isn't
	   * skipped) the remaining update lifecycle methods are called and the DOM
	   * representation is updated.
	   *
	   * By default, this implements React's rendering and reconciliation algorithm.
	   * Sophisticated clients may wish to override this.
	   *
	   * @param {ReactReconcileTransaction} transaction
	   * @param {ReactElement} prevParentElement
	   * @param {ReactElement} nextParentElement
	   * @internal
	   * @overridable
	   */
	  updateComponent: function (transaction, prevParentElement, nextParentElement, prevUnmaskedContext, nextUnmaskedContext) {
	    var inst = this._instance;
	    !(inst != null) ?  false ? invariant(false, 'Attempted to update component `%s` that has already been unmounted (or failed to mount).', this.getName() || 'ReactCompositeComponent') : _prodInvariant('136', this.getName() || 'ReactCompositeComponent') : void 0;

	    var willReceive = false;
	    var nextContext;

	    // Determine if the context has changed or not
	    if (this._context === nextUnmaskedContext) {
	      nextContext = inst.context;
	    } else {
	      nextContext = this._processContext(nextUnmaskedContext);
	      willReceive = true;
	    }

	    var prevProps = prevParentElement.props;
	    var nextProps = nextParentElement.props;

	    // Not a simple state update but a props update
	    if (prevParentElement !== nextParentElement) {
	      willReceive = true;
	    }

	    // An update here will schedule an update but immediately set
	    // _pendingStateQueue which will ensure that any state updates gets
	    // immediately reconciled instead of waiting for the next batch.
	    if (willReceive && inst.componentWillReceiveProps) {
	      if (false) {
	        if (this._debugID !== 0) {
	          ReactInstrumentation.debugTool.onBeginLifeCycleTimer(this._debugID, 'componentWillReceiveProps');
	        }
	      }
	      inst.componentWillReceiveProps(nextProps, nextContext);
	      if (false) {
	        if (this._debugID !== 0) {
	          ReactInstrumentation.debugTool.onEndLifeCycleTimer(this._debugID, 'componentWillReceiveProps');
	        }
	      }
	    }

	    var nextState = this._processPendingState(nextProps, nextContext);
	    var shouldUpdate = true;

	    if (!this._pendingForceUpdate) {
	      if (inst.shouldComponentUpdate) {
	        if (false) {
	          if (this._debugID !== 0) {
	            ReactInstrumentation.debugTool.onBeginLifeCycleTimer(this._debugID, 'shouldComponentUpdate');
	          }
	        }
	        shouldUpdate = inst.shouldComponentUpdate(nextProps, nextState, nextContext);
	        if (false) {
	          if (this._debugID !== 0) {
	            ReactInstrumentation.debugTool.onEndLifeCycleTimer(this._debugID, 'shouldComponentUpdate');
	          }
	        }
	      } else {
	        if (this._compositeType === CompositeTypes.PureClass) {
	          shouldUpdate = !shallowEqual(prevProps, nextProps) || !shallowEqual(inst.state, nextState);
	        }
	      }
	    }

	    if (false) {
	      process.env.NODE_ENV !== 'production' ? warning(shouldUpdate !== undefined, '%s.shouldComponentUpdate(): Returned undefined instead of a ' + 'boolean value. Make sure to return true or false.', this.getName() || 'ReactCompositeComponent') : void 0;
	    }

	    this._updateBatchNumber = null;
	    if (shouldUpdate) {
	      this._pendingForceUpdate = false;
	      // Will set `this.props`, `this.state` and `this.context`.
	      this._performComponentUpdate(nextParentElement, nextProps, nextState, nextContext, transaction, nextUnmaskedContext);
	    } else {
	      // If it's determined that a component should not update, we still want
	      // to set props and state but we shortcut the rest of the update.
	      this._currentElement = nextParentElement;
	      this._context = nextUnmaskedContext;
	      inst.props = nextProps;
	      inst.state = nextState;
	      inst.context = nextContext;
	    }
	  },

	  _processPendingState: function (props, context) {
	    var inst = this._instance;
	    var queue = this._pendingStateQueue;
	    var replace = this._pendingReplaceState;
	    this._pendingReplaceState = false;
	    this._pendingStateQueue = null;

	    if (!queue) {
	      return inst.state;
	    }

	    if (replace && queue.length === 1) {
	      return queue[0];
	    }

	    var nextState = _assign({}, replace ? queue[0] : inst.state);
	    for (var i = replace ? 1 : 0; i < queue.length; i++) {
	      var partial = queue[i];
	      _assign(nextState, typeof partial === 'function' ? partial.call(inst, nextState, props, context) : partial);
	    }

	    return nextState;
	  },

	  /**
	   * Merges new props and state, notifies delegate methods of update and
	   * performs update.
	   *
	   * @param {ReactElement} nextElement Next element
	   * @param {object} nextProps Next public object to set as properties.
	   * @param {?object} nextState Next object to set as state.
	   * @param {?object} nextContext Next public object to set as context.
	   * @param {ReactReconcileTransaction} transaction
	   * @param {?object} unmaskedContext
	   * @private
	   */
	  _performComponentUpdate: function (nextElement, nextProps, nextState, nextContext, transaction, unmaskedContext) {
	    var _this2 = this;

	    var inst = this._instance;

	    var hasComponentDidUpdate = Boolean(inst.componentDidUpdate);
	    var prevProps;
	    var prevState;
	    var prevContext;
	    if (hasComponentDidUpdate) {
	      prevProps = inst.props;
	      prevState = inst.state;
	      prevContext = inst.context;
	    }

	    if (inst.componentWillUpdate) {
	      if (false) {
	        if (this._debugID !== 0) {
	          ReactInstrumentation.debugTool.onBeginLifeCycleTimer(this._debugID, 'componentWillUpdate');
	        }
	      }
	      inst.componentWillUpdate(nextProps, nextState, nextContext);
	      if (false) {
	        if (this._debugID !== 0) {
	          ReactInstrumentation.debugTool.onEndLifeCycleTimer(this._debugID, 'componentWillUpdate');
	        }
	      }
	    }

	    this._currentElement = nextElement;
	    this._context = unmaskedContext;
	    inst.props = nextProps;
	    inst.state = nextState;
	    inst.context = nextContext;

	    this._updateRenderedComponent(transaction, unmaskedContext);

	    if (hasComponentDidUpdate) {
	      if (false) {
	        transaction.getReactMountReady().enqueue(invokeComponentDidUpdateWithTimer.bind(this, prevProps, prevState, prevContext), this);
	      } else {
	        transaction.getReactMountReady().enqueue(inst.componentDidUpdate.bind(inst, prevProps, prevState, prevContext), inst);
	      }
	    }

	    if (false) {
	      if (this._debugID) {
	        var callback = function () {
	          return ReactInstrumentation.debugTool.onComponentHasUpdated(_this2._debugID);
	        };
	        transaction.getReactMountReady().enqueue(callback, this);
	      }
	    }
	  },

	  /**
	   * Call the component's `render` method and update the DOM accordingly.
	   *
	   * @param {ReactReconcileTransaction} transaction
	   * @internal
	   */
	  _updateRenderedComponent: function (transaction, context) {
	    var prevComponentInstance = this._renderedComponent;
	    var prevRenderedElement = prevComponentInstance._currentElement;
	    var nextRenderedElement = this._renderValidatedComponent();
	    if (shouldUpdateReactComponent(prevRenderedElement, nextRenderedElement)) {
	      ReactReconciler.receiveComponent(prevComponentInstance, nextRenderedElement, transaction, this._processChildContext(context));
	    } else {
	      var oldHostNode = ReactReconciler.getHostNode(prevComponentInstance);
	      ReactReconciler.unmountComponent(prevComponentInstance, false);

	      var nodeType = ReactNodeTypes.getType(nextRenderedElement);
	      this._renderedNodeType = nodeType;
	      var child = this._instantiateReactComponent(nextRenderedElement, nodeType !== ReactNodeTypes.EMPTY /* shouldHaveDebugID */
	      );
	      this._renderedComponent = child;
	      if (false) {
	        if (child._debugID !== 0 && this._debugID !== 0) {
	          ReactInstrumentation.debugTool.onSetParent(child._debugID, this._debugID);
	        }
	      }

	      var nextMarkup = ReactReconciler.mountComponent(child, transaction, this._hostParent, this._hostContainerInfo, this._processChildContext(context));

	      if (false) {
	        if (this._debugID !== 0) {
	          ReactInstrumentation.debugTool.onSetChildren(this._debugID, child._debugID !== 0 ? [child._debugID] : []);
	        }
	      }

	      this._replaceNodeWithMarkup(oldHostNode, nextMarkup, prevComponentInstance);
	    }
	  },

	  /**
	   * Overridden in shallow rendering.
	   *
	   * @protected
	   */
	  _replaceNodeWithMarkup: function (oldHostNode, nextMarkup, prevInstance) {
	    ReactComponentEnvironment.replaceNodeWithMarkup(oldHostNode, nextMarkup, prevInstance);
	  },

	  /**
	   * @protected
	   */
	  _renderValidatedComponentWithoutOwnerOrContext: function () {
	    var inst = this._instance;

	    if (false) {
	      if (this._debugID !== 0) {
	        ReactInstrumentation.debugTool.onBeginLifeCycleTimer(this._debugID, 'render');
	      }
	    }
	    var renderedComponent = inst.render();
	    if (false) {
	      if (this._debugID !== 0) {
	        ReactInstrumentation.debugTool.onEndLifeCycleTimer(this._debugID, 'render');
	      }
	    }

	    if (false) {
	      // We allow auto-mocks to proceed as if they're returning null.
	      if (renderedComponent === undefined && inst.render._isMockFunction) {
	        // This is probably bad practice. Consider warning here and
	        // deprecating this convenience.
	        renderedComponent = null;
	      }
	    }

	    return renderedComponent;
	  },

	  /**
	   * @private
	   */
	  _renderValidatedComponent: function () {
	    var renderedComponent;
	    if (("production") !== 'production' || this._compositeType !== CompositeTypes.StatelessFunctional) {
	      ReactCurrentOwner.current = this;
	      try {
	        renderedComponent = this._renderValidatedComponentWithoutOwnerOrContext();
	      } finally {
	        ReactCurrentOwner.current = null;
	      }
	    } else {
	      renderedComponent = this._renderValidatedComponentWithoutOwnerOrContext();
	    }
	    !(
	    // TODO: An `isValidNode` function would probably be more appropriate
	    renderedComponent === null || renderedComponent === false || ReactElement.isValidElement(renderedComponent)) ?  false ? invariant(false, '%s.render(): A valid React element (or null) must be returned. You may have returned undefined, an array or some other invalid object.', this.getName() || 'ReactCompositeComponent') : _prodInvariant('109', this.getName() || 'ReactCompositeComponent') : void 0;

	    return renderedComponent;
	  },

	  /**
	   * Lazily allocates the refs object and stores `component` as `ref`.
	   *
	   * @param {string} ref Reference name.
	   * @param {component} component Component to store as `ref`.
	   * @final
	   * @private
	   */
	  attachRef: function (ref, component) {
	    var inst = this.getPublicInstance();
	    !(inst != null) ?  false ? invariant(false, 'Stateless function components cannot have refs.') : _prodInvariant('110') : void 0;
	    var publicComponentInstance = component.getPublicInstance();
	    if (false) {
	      var componentName = component && component.getName ? component.getName() : 'a component';
	      process.env.NODE_ENV !== 'production' ? warning(publicComponentInstance != null, 'Stateless function components cannot be given refs ' + '(See ref "%s" in %s created by %s). ' + 'Attempts to access this ref will fail.', ref, componentName, this.getName()) : void 0;
	    }
	    var refs = inst.refs === emptyObject ? inst.refs = {} : inst.refs;
	    refs[ref] = publicComponentInstance;
	  },

	  /**
	   * Detaches a reference name.
	   *
	   * @param {string} ref Name to dereference.
	   * @final
	   * @private
	   */
	  detachRef: function (ref) {
	    var refs = this.getPublicInstance().refs;
	    delete refs[ref];
	  },

	  /**
	   * Get a text description of the component that can be used to identify it
	   * in error messages.
	   * @return {string} The name or null.
	   * @internal
	   */
	  getName: function () {
	    var type = this._currentElement.type;
	    var constructor = this._instance && this._instance.constructor;
	    return type.displayName || constructor && constructor.displayName || type.name || constructor && constructor.name || null;
	  },

	  /**
	   * Get the publicly accessible representation of this component - i.e. what
	   * is exposed by refs and returned by render. Can be null for stateless
	   * components.
	   *
	   * @return {ReactComponent} the public component instance.
	   * @internal
	   */
	  getPublicInstance: function () {
	    var inst = this._instance;
	    if (this._compositeType === CompositeTypes.StatelessFunctional) {
	      return null;
	    }
	    return inst;
	  },

	  // Stub
	  _instantiateReactComponent: null

	};

	var ReactCompositeComponent = {

	  Mixin: ReactCompositeComponentMixin

	};

	module.exports = ReactCompositeComponent;

/***/ },
/* 150 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOM
	 */

	/* globals __REACT_DEVTOOLS_GLOBAL_HOOK__*/

	'use strict';

	var ReactDOMComponentTree = __webpack_require__(5);
	var ReactDefaultInjection = __webpack_require__(166);
	var ReactMount = __webpack_require__(81);
	var ReactReconciler = __webpack_require__(19);
	var ReactUpdates = __webpack_require__(11);
	var ReactVersion = __webpack_require__(85);

	var findDOMNode = __webpack_require__(194);
	var getHostComponentFromComposite = __webpack_require__(90);
	var renderSubtreeIntoContainer = __webpack_require__(201);
	var warning = __webpack_require__(3);

	ReactDefaultInjection.inject();

	var ReactDOM = {
	  findDOMNode: findDOMNode,
	  render: ReactMount.render,
	  unmountComponentAtNode: ReactMount.unmountComponentAtNode,
	  version: ReactVersion,

	  /* eslint-disable camelcase */
	  unstable_batchedUpdates: ReactUpdates.batchedUpdates,
	  unstable_renderSubtreeIntoContainer: renderSubtreeIntoContainer
	};

	// Inject the runtime into a devtools global hook regardless of browser.
	// Allows for debugging when the hook is injected on the page.
	/* eslint-enable camelcase */
	if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.inject === 'function') {
	  __REACT_DEVTOOLS_GLOBAL_HOOK__.inject({
	    ComponentTree: {
	      getClosestInstanceFromNode: ReactDOMComponentTree.getClosestInstanceFromNode,
	      getNodeFromInstance: function (inst) {
	        // inst is an internal instance (but could be a composite)
	        if (inst._renderedComponent) {
	          inst = getHostComponentFromComposite(inst);
	        }
	        if (inst) {
	          return ReactDOMComponentTree.getNodeFromInstance(inst);
	        } else {
	          return null;
	        }
	      }
	    },
	    Mount: ReactMount,
	    Reconciler: ReactReconciler
	  });
	}

	if (false) {
	  var ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');
	  if (ExecutionEnvironment.canUseDOM && window.top === window.self) {

	    // First check if devtools is not installed
	    if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined') {
	      // If we're in Chrome or Firefox, provide a download link if not installed.
	      if (navigator.userAgent.indexOf('Chrome') > -1 && navigator.userAgent.indexOf('Edge') === -1 || navigator.userAgent.indexOf('Firefox') > -1) {
	        // Firefox does not have the issue with devtools loaded over file://
	        var showFileUrlMessage = window.location.protocol.indexOf('http') === -1 && navigator.userAgent.indexOf('Firefox') === -1;
	        console.debug('Download the React DevTools ' + (showFileUrlMessage ? 'and use an HTTP server (instead of a file: URL) ' : '') + 'for a better development experience: ' + 'https://fb.me/react-devtools');
	      }
	    }

	    var testFunc = function testFn() {};
	    process.env.NODE_ENV !== 'production' ? warning((testFunc.name || testFunc.toString()).indexOf('testFn') !== -1, 'It looks like you\'re using a minified copy of the development build ' + 'of React. When deploying React apps to production, make sure to use ' + 'the production build which skips development warnings and is faster. ' + 'See https://fb.me/react-minification for more details.') : void 0;

	    // If we're in IE8, check to see if we are in compatibility mode and provide
	    // information on preventing compatibility mode
	    var ieCompatibilityMode = document.documentMode && document.documentMode < 8;

	    process.env.NODE_ENV !== 'production' ? warning(!ieCompatibilityMode, 'Internet Explorer is running in compatibility mode; please add the ' + 'following tag to your HTML to prevent this from happening: ' + '<meta http-equiv="X-UA-Compatible" content="IE=edge" />') : void 0;

	    var expectedFeatures = [
	    // shims
	    Array.isArray, Array.prototype.every, Array.prototype.forEach, Array.prototype.indexOf, Array.prototype.map, Date.now, Function.prototype.bind, Object.keys, String.prototype.split, String.prototype.trim];

	    for (var i = 0; i < expectedFeatures.length; i++) {
	      if (!expectedFeatures[i]) {
	        process.env.NODE_ENV !== 'production' ? warning(false, 'One or more ES5 shims expected by React are not available: ' + 'https://fb.me/react-warning-polyfills') : void 0;
	        break;
	      }
	    }
	  }
	}

	module.exports = ReactDOM;

/***/ },
/* 151 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMButton
	 */

	'use strict';

	var DisabledInputUtils = __webpack_require__(27);

	/**
	 * Implements a <button> host component that does not receive mouse events
	 * when `disabled` is set.
	 */
	var ReactDOMButton = {
	  getHostProps: DisabledInputUtils.getHostProps
	};

	module.exports = ReactDOMButton;

/***/ },
/* 152 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMComponent
	 */

	/* global hasOwnProperty:true */

	'use strict';

	var _prodInvariant = __webpack_require__(2),
	    _assign = __webpack_require__(4);

	var AutoFocusUtils = __webpack_require__(138);
	var CSSPropertyOperations = __webpack_require__(140);
	var DOMLazyTree = __webpack_require__(17);
	var DOMNamespaces = __webpack_require__(37);
	var DOMProperty = __webpack_require__(18);
	var DOMPropertyOperations = __webpack_require__(71);
	var EventConstants = __webpack_require__(12);
	var EventPluginHub = __webpack_require__(21);
	var EventPluginRegistry = __webpack_require__(38);
	var ReactBrowserEventEmitter = __webpack_require__(28);
	var ReactComponentBrowserEnvironment = __webpack_require__(74);
	var ReactDOMButton = __webpack_require__(151);
	var ReactDOMComponentFlags = __webpack_require__(75);
	var ReactDOMComponentTree = __webpack_require__(5);
	var ReactDOMInput = __webpack_require__(158);
	var ReactDOMOption = __webpack_require__(160);
	var ReactDOMSelect = __webpack_require__(76);
	var ReactDOMTextarea = __webpack_require__(163);
	var ReactInstrumentation = __webpack_require__(8);
	var ReactMultiChild = __webpack_require__(171);
	var ReactServerRenderingTransaction = __webpack_require__(176);

	var emptyFunction = __webpack_require__(9);
	var escapeTextContentForBrowser = __webpack_require__(30);
	var invariant = __webpack_require__(1);
	var isEventSupported = __webpack_require__(55);
	var keyOf = __webpack_require__(14);
	var shallowEqual = __webpack_require__(32);
	var validateDOMNesting = __webpack_require__(58);
	var warning = __webpack_require__(3);

	var Flags = ReactDOMComponentFlags;
	var deleteListener = EventPluginHub.deleteListener;
	var getNode = ReactDOMComponentTree.getNodeFromInstance;
	var listenTo = ReactBrowserEventEmitter.listenTo;
	var registrationNameModules = EventPluginRegistry.registrationNameModules;

	// For quickly matching children type, to test if can be treated as content.
	var CONTENT_TYPES = { 'string': true, 'number': true };

	var STYLE = keyOf({ style: null });
	var HTML = keyOf({ __html: null });
	var RESERVED_PROPS = {
	  children: null,
	  dangerouslySetInnerHTML: null,
	  suppressContentEditableWarning: null
	};

	// Node type for document fragments (Node.DOCUMENT_FRAGMENT_NODE).
	var DOC_FRAGMENT_TYPE = 11;

	function getDeclarationErrorAddendum(internalInstance) {
	  if (internalInstance) {
	    var owner = internalInstance._currentElement._owner || null;
	    if (owner) {
	      var name = owner.getName();
	      if (name) {
	        return ' This DOM node was rendered by `' + name + '`.';
	      }
	    }
	  }
	  return '';
	}

	function friendlyStringify(obj) {
	  if (typeof obj === 'object') {
	    if (Array.isArray(obj)) {
	      return '[' + obj.map(friendlyStringify).join(', ') + ']';
	    } else {
	      var pairs = [];
	      for (var key in obj) {
	        if (Object.prototype.hasOwnProperty.call(obj, key)) {
	          var keyEscaped = /^[a-z$_][\w$_]*$/i.test(key) ? key : JSON.stringify(key);
	          pairs.push(keyEscaped + ': ' + friendlyStringify(obj[key]));
	        }
	      }
	      return '{' + pairs.join(', ') + '}';
	    }
	  } else if (typeof obj === 'string') {
	    return JSON.stringify(obj);
	  } else if (typeof obj === 'function') {
	    return '[function object]';
	  }
	  // Differs from JSON.stringify in that undefined because undefined and that
	  // inf and nan don't become null
	  return String(obj);
	}

	var styleMutationWarning = {};

	function checkAndWarnForMutatedStyle(style1, style2, component) {
	  if (style1 == null || style2 == null) {
	    return;
	  }
	  if (shallowEqual(style1, style2)) {
	    return;
	  }

	  var componentName = component._tag;
	  var owner = component._currentElement._owner;
	  var ownerName;
	  if (owner) {
	    ownerName = owner.getName();
	  }

	  var hash = ownerName + '|' + componentName;

	  if (styleMutationWarning.hasOwnProperty(hash)) {
	    return;
	  }

	  styleMutationWarning[hash] = true;

	   false ? warning(false, '`%s` was passed a style object that has previously been mutated. ' + 'Mutating `style` is deprecated. Consider cloning it beforehand. Check ' + 'the `render` %s. Previous style: %s. Mutated style: %s.', componentName, owner ? 'of `' + ownerName + '`' : 'using <' + componentName + '>', friendlyStringify(style1), friendlyStringify(style2)) : void 0;
	}

	/**
	 * @param {object} component
	 * @param {?object} props
	 */
	function assertValidProps(component, props) {
	  if (!props) {
	    return;
	  }
	  // Note the use of `==` which checks for null or undefined.
	  if (voidElementTags[component._tag]) {
	    !(props.children == null && props.dangerouslySetInnerHTML == null) ?  false ? invariant(false, '%s is a void element tag and must neither have `children` nor use `dangerouslySetInnerHTML`.%s', component._tag, component._currentElement._owner ? ' Check the render method of ' + component._currentElement._owner.getName() + '.' : '') : _prodInvariant('137', component._tag, component._currentElement._owner ? ' Check the render method of ' + component._currentElement._owner.getName() + '.' : '') : void 0;
	  }
	  if (props.dangerouslySetInnerHTML != null) {
	    !(props.children == null) ?  false ? invariant(false, 'Can only set one of `children` or `props.dangerouslySetInnerHTML`.') : _prodInvariant('60') : void 0;
	    !(typeof props.dangerouslySetInnerHTML === 'object' && HTML in props.dangerouslySetInnerHTML) ?  false ? invariant(false, '`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. Please visit https://fb.me/react-invariant-dangerously-set-inner-html for more information.') : _prodInvariant('61') : void 0;
	  }
	  if (false) {
	    process.env.NODE_ENV !== 'production' ? warning(props.innerHTML == null, 'Directly setting property `innerHTML` is not permitted. ' + 'For more information, lookup documentation on `dangerouslySetInnerHTML`.') : void 0;
	    process.env.NODE_ENV !== 'production' ? warning(props.suppressContentEditableWarning || !props.contentEditable || props.children == null, 'A component is `contentEditable` and contains `children` managed by ' + 'React. It is now your responsibility to guarantee that none of ' + 'those nodes are unexpectedly modified or duplicated. This is ' + 'probably not intentional.') : void 0;
	    process.env.NODE_ENV !== 'production' ? warning(props.onFocusIn == null && props.onFocusOut == null, 'React uses onFocus and onBlur instead of onFocusIn and onFocusOut. ' + 'All React events are normalized to bubble, so onFocusIn and onFocusOut ' + 'are not needed/supported by React.') : void 0;
	  }
	  !(props.style == null || typeof props.style === 'object') ?  false ? invariant(false, 'The `style` prop expects a mapping from style properties to values, not a string. For example, style={{marginRight: spacing + \'em\'}} when using JSX.%s', getDeclarationErrorAddendum(component)) : _prodInvariant('62', getDeclarationErrorAddendum(component)) : void 0;
	}

	function enqueuePutListener(inst, registrationName, listener, transaction) {
	  if (transaction instanceof ReactServerRenderingTransaction) {
	    return;
	  }
	  if (false) {
	    // IE8 has no API for event capturing and the `onScroll` event doesn't
	    // bubble.
	    process.env.NODE_ENV !== 'production' ? warning(registrationName !== 'onScroll' || isEventSupported('scroll', true), 'This browser doesn\'t support the `onScroll` event') : void 0;
	  }
	  var containerInfo = inst._hostContainerInfo;
	  var isDocumentFragment = containerInfo._node && containerInfo._node.nodeType === DOC_FRAGMENT_TYPE;
	  var doc = isDocumentFragment ? containerInfo._node : containerInfo._ownerDocument;
	  listenTo(registrationName, doc);
	  transaction.getReactMountReady().enqueue(putListener, {
	    inst: inst,
	    registrationName: registrationName,
	    listener: listener
	  });
	}

	function putListener() {
	  var listenerToPut = this;
	  EventPluginHub.putListener(listenerToPut.inst, listenerToPut.registrationName, listenerToPut.listener);
	}

	function inputPostMount() {
	  var inst = this;
	  ReactDOMInput.postMountWrapper(inst);
	}

	function textareaPostMount() {
	  var inst = this;
	  ReactDOMTextarea.postMountWrapper(inst);
	}

	function optionPostMount() {
	  var inst = this;
	  ReactDOMOption.postMountWrapper(inst);
	}

	var setContentChildForInstrumentation = emptyFunction;
	if (false) {
	  setContentChildForInstrumentation = function (content) {
	    var hasExistingContent = this._contentDebugID != null;
	    var debugID = this._debugID;
	    var contentDebugID = debugID + '#text';

	    if (content == null) {
	      if (hasExistingContent) {
	        ReactInstrumentation.debugTool.onUnmountComponent(this._contentDebugID);
	      }
	      this._contentDebugID = null;
	      return;
	    }

	    this._contentDebugID = contentDebugID;
	    var text = '' + content;

	    ReactInstrumentation.debugTool.onSetDisplayName(contentDebugID, '#text');
	    ReactInstrumentation.debugTool.onSetParent(contentDebugID, debugID);
	    ReactInstrumentation.debugTool.onSetText(contentDebugID, text);

	    if (hasExistingContent) {
	      ReactInstrumentation.debugTool.onBeforeUpdateComponent(contentDebugID, content);
	      ReactInstrumentation.debugTool.onUpdateComponent(contentDebugID);
	    } else {
	      ReactInstrumentation.debugTool.onBeforeMountComponent(contentDebugID, content);
	      ReactInstrumentation.debugTool.onMountComponent(contentDebugID);
	      ReactInstrumentation.debugTool.onSetChildren(debugID, [contentDebugID]);
	    }
	  };
	}

	// There are so many media events, it makes sense to just
	// maintain a list rather than create a `trapBubbledEvent` for each
	var mediaEvents = {
	  topAbort: 'abort',
	  topCanPlay: 'canplay',
	  topCanPlayThrough: 'canplaythrough',
	  topDurationChange: 'durationchange',
	  topEmptied: 'emptied',
	  topEncrypted: 'encrypted',
	  topEnded: 'ended',
	  topError: 'error',
	  topLoadedData: 'loadeddata',
	  topLoadedMetadata: 'loadedmetadata',
	  topLoadStart: 'loadstart',
	  topPause: 'pause',
	  topPlay: 'play',
	  topPlaying: 'playing',
	  topProgress: 'progress',
	  topRateChange: 'ratechange',
	  topSeeked: 'seeked',
	  topSeeking: 'seeking',
	  topStalled: 'stalled',
	  topSuspend: 'suspend',
	  topTimeUpdate: 'timeupdate',
	  topVolumeChange: 'volumechange',
	  topWaiting: 'waiting'
	};

	function trapBubbledEventsLocal() {
	  var inst = this;
	  // If a component renders to null or if another component fatals and causes
	  // the state of the tree to be corrupted, `node` here can be null.
	  !inst._rootNodeID ?  false ? invariant(false, 'Must be mounted to trap events') : _prodInvariant('63') : void 0;
	  var node = getNode(inst);
	  !node ?  false ? invariant(false, 'trapBubbledEvent(...): Requires node to be rendered.') : _prodInvariant('64') : void 0;

	  switch (inst._tag) {
	    case 'iframe':
	    case 'object':
	      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topLoad, 'load', node)];
	      break;
	    case 'video':
	    case 'audio':

	      inst._wrapperState.listeners = [];
	      // Create listener for each media event
	      for (var event in mediaEvents) {
	        if (mediaEvents.hasOwnProperty(event)) {
	          inst._wrapperState.listeners.push(ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes[event], mediaEvents[event], node));
	        }
	      }
	      break;
	    case 'source':
	      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topError, 'error', node)];
	      break;
	    case 'img':
	      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topError, 'error', node), ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topLoad, 'load', node)];
	      break;
	    case 'form':
	      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topReset, 'reset', node), ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topSubmit, 'submit', node)];
	      break;
	    case 'input':
	    case 'select':
	    case 'textarea':
	      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topInvalid, 'invalid', node)];
	      break;
	  }
	}

	function postUpdateSelectWrapper() {
	  ReactDOMSelect.postUpdateWrapper(this);
	}

	// For HTML, certain tags should omit their close tag. We keep a whitelist for
	// those special-case tags.

	var omittedCloseTags = {
	  'area': true,
	  'base': true,
	  'br': true,
	  'col': true,
	  'embed': true,
	  'hr': true,
	  'img': true,
	  'input': true,
	  'keygen': true,
	  'link': true,
	  'meta': true,
	  'param': true,
	  'source': true,
	  'track': true,
	  'wbr': true
	};

	// NOTE: menuitem's close tag should be omitted, but that causes problems.
	var newlineEatingTags = {
	  'listing': true,
	  'pre': true,
	  'textarea': true
	};

	// For HTML, certain tags cannot have children. This has the same purpose as
	// `omittedCloseTags` except that `menuitem` should still have its closing tag.

	var voidElementTags = _assign({
	  'menuitem': true
	}, omittedCloseTags);

	// We accept any tag to be rendered but since this gets injected into arbitrary
	// HTML, we want to make sure that it's a safe tag.
	// http://www.w3.org/TR/REC-xml/#NT-Name

	var VALID_TAG_REGEX = /^[a-zA-Z][a-zA-Z:_\.\-\d]*$/; // Simplified subset
	var validatedTagCache = {};
	var hasOwnProperty = {}.hasOwnProperty;

	function validateDangerousTag(tag) {
	  if (!hasOwnProperty.call(validatedTagCache, tag)) {
	    !VALID_TAG_REGEX.test(tag) ?  false ? invariant(false, 'Invalid tag: %s', tag) : _prodInvariant('65', tag) : void 0;
	    validatedTagCache[tag] = true;
	  }
	}

	function isCustomComponent(tagName, props) {
	  return tagName.indexOf('-') >= 0 || props.is != null;
	}

	var globalIdCounter = 1;

	/**
	 * Creates a new React class that is idempotent and capable of containing other
	 * React components. It accepts event listeners and DOM properties that are
	 * valid according to `DOMProperty`.
	 *
	 *  - Event listeners: `onClick`, `onMouseDown`, etc.
	 *  - DOM properties: `className`, `name`, `title`, etc.
	 *
	 * The `style` property functions differently from the DOM API. It accepts an
	 * object mapping of style properties to values.
	 *
	 * @constructor ReactDOMComponent
	 * @extends ReactMultiChild
	 */
	function ReactDOMComponent(element) {
	  var tag = element.type;
	  validateDangerousTag(tag);
	  this._currentElement = element;
	  this._tag = tag.toLowerCase();
	  this._namespaceURI = null;
	  this._renderedChildren = null;
	  this._previousStyle = null;
	  this._previousStyleCopy = null;
	  this._hostNode = null;
	  this._hostParent = null;
	  this._rootNodeID = null;
	  this._domID = null;
	  this._hostContainerInfo = null;
	  this._wrapperState = null;
	  this._topLevelWrapper = null;
	  this._flags = 0;
	  if (false) {
	    this._ancestorInfo = null;
	    setContentChildForInstrumentation.call(this, null);
	  }
	}

	ReactDOMComponent.displayName = 'ReactDOMComponent';

	ReactDOMComponent.Mixin = {

	  /**
	   * Generates root tag markup then recurses. This method has side effects and
	   * is not idempotent.
	   *
	   * @internal
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @param {?ReactDOMComponent} the containing DOM component instance
	   * @param {?object} info about the host container
	   * @param {object} context
	   * @return {string} The computed markup.
	   */
	  mountComponent: function (transaction, hostParent, hostContainerInfo, context) {
	    var _this = this;

	    this._rootNodeID = globalIdCounter++;
	    this._domID = hostContainerInfo._idCounter++;
	    this._hostParent = hostParent;
	    this._hostContainerInfo = hostContainerInfo;

	    var props = this._currentElement.props;

	    switch (this._tag) {
	      case 'audio':
	      case 'form':
	      case 'iframe':
	      case 'img':
	      case 'link':
	      case 'object':
	      case 'source':
	      case 'video':
	        this._wrapperState = {
	          listeners: null
	        };
	        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);
	        break;
	      case 'button':
	        props = ReactDOMButton.getHostProps(this, props, hostParent);
	        break;
	      case 'input':
	        ReactDOMInput.mountWrapper(this, props, hostParent);
	        props = ReactDOMInput.getHostProps(this, props);
	        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);
	        break;
	      case 'option':
	        ReactDOMOption.mountWrapper(this, props, hostParent);
	        props = ReactDOMOption.getHostProps(this, props);
	        break;
	      case 'select':
	        ReactDOMSelect.mountWrapper(this, props, hostParent);
	        props = ReactDOMSelect.getHostProps(this, props);
	        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);
	        break;
	      case 'textarea':
	        ReactDOMTextarea.mountWrapper(this, props, hostParent);
	        props = ReactDOMTextarea.getHostProps(this, props);
	        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);
	        break;
	    }

	    assertValidProps(this, props);

	    // We create tags in the namespace of their parent container, except HTML
	    // tags get no namespace.
	    var namespaceURI;
	    var parentTag;
	    if (hostParent != null) {
	      namespaceURI = hostParent._namespaceURI;
	      parentTag = hostParent._tag;
	    } else if (hostContainerInfo._tag) {
	      namespaceURI = hostContainerInfo._namespaceURI;
	      parentTag = hostContainerInfo._tag;
	    }
	    if (namespaceURI == null || namespaceURI === DOMNamespaces.svg && parentTag === 'foreignobject') {
	      namespaceURI = DOMNamespaces.html;
	    }
	    if (namespaceURI === DOMNamespaces.html) {
	      if (this._tag === 'svg') {
	        namespaceURI = DOMNamespaces.svg;
	      } else if (this._tag === 'math') {
	        namespaceURI = DOMNamespaces.mathml;
	      }
	    }
	    this._namespaceURI = namespaceURI;

	    if (false) {
	      var parentInfo;
	      if (hostParent != null) {
	        parentInfo = hostParent._ancestorInfo;
	      } else if (hostContainerInfo._tag) {
	        parentInfo = hostContainerInfo._ancestorInfo;
	      }
	      if (parentInfo) {
	        // parentInfo should always be present except for the top-level
	        // component when server rendering
	        validateDOMNesting(this._tag, this, parentInfo);
	      }
	      this._ancestorInfo = validateDOMNesting.updatedAncestorInfo(parentInfo, this._tag, this);
	    }

	    var mountImage;
	    if (transaction.useCreateElement) {
	      var ownerDocument = hostContainerInfo._ownerDocument;
	      var el;
	      if (namespaceURI === DOMNamespaces.html) {
	        if (this._tag === 'script') {
	          // Create the script via .innerHTML so its "parser-inserted" flag is
	          // set to true and it does not execute
	          var div = ownerDocument.createElement('div');
	          var type = this._currentElement.type;
	          div.innerHTML = '<' + type + '></' + type + '>';
	          el = div.removeChild(div.firstChild);
	        } else if (props.is) {
	          el = ownerDocument.createElement(this._currentElement.type, props.is);
	        } else {
	          // Separate else branch instead of using `props.is || undefined` above becuase of a Firefox bug.
	          // See discussion in https://github.com/facebook/react/pull/6896
	          // and discussion in https://bugzilla.mozilla.org/show_bug.cgi?id=1276240
	          el = ownerDocument.createElement(this._currentElement.type);
	        }
	      } else {
	        el = ownerDocument.createElementNS(namespaceURI, this._currentElement.type);
	      }
	      ReactDOMComponentTree.precacheNode(this, el);
	      this._flags |= Flags.hasCachedChildNodes;
	      if (!this._hostParent) {
	        DOMPropertyOperations.setAttributeForRoot(el);
	      }
	      this._updateDOMProperties(null, props, transaction);
	      var lazyTree = DOMLazyTree(el);
	      this._createInitialChildren(transaction, props, context, lazyTree);
	      mountImage = lazyTree;
	    } else {
	      var tagOpen = this._createOpenTagMarkupAndPutListeners(transaction, props);
	      var tagContent = this._createContentMarkup(transaction, props, context);
	      if (!tagContent && omittedCloseTags[this._tag]) {
	        mountImage = tagOpen + '/>';
	      } else {
	        mountImage = tagOpen + '>' + tagContent + '</' + this._currentElement.type + '>';
	      }
	    }

	    switch (this._tag) {
	      case 'input':
	        transaction.getReactMountReady().enqueue(inputPostMount, this);
	        if (props.autoFocus) {
	          transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);
	        }
	        break;
	      case 'textarea':
	        transaction.getReactMountReady().enqueue(textareaPostMount, this);
	        if (props.autoFocus) {
	          transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);
	        }
	        break;
	      case 'select':
	        if (props.autoFocus) {
	          transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);
	        }
	        break;
	      case 'button':
	        if (props.autoFocus) {
	          transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);
	        }
	        break;
	      case 'option':
	        transaction.getReactMountReady().enqueue(optionPostMount, this);
	        break;
	    }

	    if (false) {
	      if (this._debugID) {
	        var callback = function () {
	          return ReactInstrumentation.debugTool.onComponentHasMounted(_this._debugID);
	        };
	        transaction.getReactMountReady().enqueue(callback, this);
	      }
	    }

	    return mountImage;
	  },

	  /**
	   * Creates markup for the open tag and all attributes.
	   *
	   * This method has side effects because events get registered.
	   *
	   * Iterating over object properties is faster than iterating over arrays.
	   * @see http://jsperf.com/obj-vs-arr-iteration
	   *
	   * @private
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @param {object} props
	   * @return {string} Markup of opening tag.
	   */
	  _createOpenTagMarkupAndPutListeners: function (transaction, props) {
	    var ret = '<' + this._currentElement.type;

	    for (var propKey in props) {
	      if (!props.hasOwnProperty(propKey)) {
	        continue;
	      }
	      var propValue = props[propKey];
	      if (propValue == null) {
	        continue;
	      }
	      if (registrationNameModules.hasOwnProperty(propKey)) {
	        if (propValue) {
	          enqueuePutListener(this, propKey, propValue, transaction);
	        }
	      } else {
	        if (propKey === STYLE) {
	          if (propValue) {
	            if (false) {
	              // See `_updateDOMProperties`. style block
	              this._previousStyle = propValue;
	            }
	            propValue = this._previousStyleCopy = _assign({}, props.style);
	          }
	          propValue = CSSPropertyOperations.createMarkupForStyles(propValue, this);
	        }
	        var markup = null;
	        if (this._tag != null && isCustomComponent(this._tag, props)) {
	          if (!RESERVED_PROPS.hasOwnProperty(propKey)) {
	            markup = DOMPropertyOperations.createMarkupForCustomAttribute(propKey, propValue);
	          }
	        } else {
	          markup = DOMPropertyOperations.createMarkupForProperty(propKey, propValue);
	        }
	        if (markup) {
	          ret += ' ' + markup;
	        }
	      }
	    }

	    // For static pages, no need to put React ID and checksum. Saves lots of
	    // bytes.
	    if (transaction.renderToStaticMarkup) {
	      return ret;
	    }

	    if (!this._hostParent) {
	      ret += ' ' + DOMPropertyOperations.createMarkupForRoot();
	    }
	    ret += ' ' + DOMPropertyOperations.createMarkupForID(this._domID);
	    return ret;
	  },

	  /**
	   * Creates markup for the content between the tags.
	   *
	   * @private
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @param {object} props
	   * @param {object} context
	   * @return {string} Content markup.
	   */
	  _createContentMarkup: function (transaction, props, context) {
	    var ret = '';

	    // Intentional use of != to avoid catching zero/false.
	    var innerHTML = props.dangerouslySetInnerHTML;
	    if (innerHTML != null) {
	      if (innerHTML.__html != null) {
	        ret = innerHTML.__html;
	      }
	    } else {
	      var contentToUse = CONTENT_TYPES[typeof props.children] ? props.children : null;
	      var childrenToUse = contentToUse != null ? null : props.children;
	      if (contentToUse != null) {
	        // TODO: Validate that text is allowed as a child of this node
	        ret = escapeTextContentForBrowser(contentToUse);
	        if (false) {
	          setContentChildForInstrumentation.call(this, contentToUse);
	        }
	      } else if (childrenToUse != null) {
	        var mountImages = this.mountChildren(childrenToUse, transaction, context);
	        ret = mountImages.join('');
	      }
	    }
	    if (newlineEatingTags[this._tag] && ret.charAt(0) === '\n') {
	      // text/html ignores the first character in these tags if it's a newline
	      // Prefer to break application/xml over text/html (for now) by adding
	      // a newline specifically to get eaten by the parser. (Alternately for
	      // textareas, replacing "^\n" with "\r\n" doesn't get eaten, and the first
	      // \r is normalized out by HTMLTextAreaElement#value.)
	      // See: <http://www.w3.org/TR/html-polyglot/#newlines-in-textarea-and-pre>
	      // See: <http://www.w3.org/TR/html5/syntax.html#element-restrictions>
	      // See: <http://www.w3.org/TR/html5/syntax.html#newlines>
	      // See: Parsing of "textarea" "listing" and "pre" elements
	      //  from <http://www.w3.org/TR/html5/syntax.html#parsing-main-inbody>
	      return '\n' + ret;
	    } else {
	      return ret;
	    }
	  },

	  _createInitialChildren: function (transaction, props, context, lazyTree) {
	    // Intentional use of != to avoid catching zero/false.
	    var innerHTML = props.dangerouslySetInnerHTML;
	    if (innerHTML != null) {
	      if (innerHTML.__html != null) {
	        DOMLazyTree.queueHTML(lazyTree, innerHTML.__html);
	      }
	    } else {
	      var contentToUse = CONTENT_TYPES[typeof props.children] ? props.children : null;
	      var childrenToUse = contentToUse != null ? null : props.children;
	      if (contentToUse != null) {
	        // TODO: Validate that text is allowed as a child of this node
	        if (false) {
	          setContentChildForInstrumentation.call(this, contentToUse);
	        }
	        DOMLazyTree.queueText(lazyTree, contentToUse);
	      } else if (childrenToUse != null) {
	        var mountImages = this.mountChildren(childrenToUse, transaction, context);
	        for (var i = 0; i < mountImages.length; i++) {
	          DOMLazyTree.queueChild(lazyTree, mountImages[i]);
	        }
	      }
	    }
	  },

	  /**
	   * Receives a next element and updates the component.
	   *
	   * @internal
	   * @param {ReactElement} nextElement
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @param {object} context
	   */
	  receiveComponent: function (nextElement, transaction, context) {
	    var prevElement = this._currentElement;
	    this._currentElement = nextElement;
	    this.updateComponent(transaction, prevElement, nextElement, context);
	  },

	  /**
	   * Updates a DOM component after it has already been allocated and
	   * attached to the DOM. Reconciles the root DOM node, then recurses.
	   *
	   * @param {ReactReconcileTransaction} transaction
	   * @param {ReactElement} prevElement
	   * @param {ReactElement} nextElement
	   * @internal
	   * @overridable
	   */
	  updateComponent: function (transaction, prevElement, nextElement, context) {
	    var _this2 = this;

	    var lastProps = prevElement.props;
	    var nextProps = this._currentElement.props;

	    switch (this._tag) {
	      case 'button':
	        lastProps = ReactDOMButton.getHostProps(this, lastProps);
	        nextProps = ReactDOMButton.getHostProps(this, nextProps);
	        break;
	      case 'input':
	        ReactDOMInput.updateWrapper(this);
	        lastProps = ReactDOMInput.getHostProps(this, lastProps);
	        nextProps = ReactDOMInput.getHostProps(this, nextProps);
	        break;
	      case 'option':
	        lastProps = ReactDOMOption.getHostProps(this, lastProps);
	        nextProps = ReactDOMOption.getHostProps(this, nextProps);
	        break;
	      case 'select':
	        lastProps = ReactDOMSelect.getHostProps(this, lastProps);
	        nextProps = ReactDOMSelect.getHostProps(this, nextProps);
	        break;
	      case 'textarea':
	        ReactDOMTextarea.updateWrapper(this);
	        lastProps = ReactDOMTextarea.getHostProps(this, lastProps);
	        nextProps = ReactDOMTextarea.getHostProps(this, nextProps);
	        break;
	    }

	    assertValidProps(this, nextProps);
	    this._updateDOMProperties(lastProps, nextProps, transaction);
	    this._updateDOMChildren(lastProps, nextProps, transaction, context);

	    if (this._tag === 'select') {
	      // <select> value update needs to occur after <option> children
	      // reconciliation
	      transaction.getReactMountReady().enqueue(postUpdateSelectWrapper, this);
	    }

	    if (false) {
	      if (this._debugID) {
	        var callback = function () {
	          return ReactInstrumentation.debugTool.onComponentHasUpdated(_this2._debugID);
	        };
	        transaction.getReactMountReady().enqueue(callback, this);
	      }
	    }
	  },

	  /**
	   * Reconciles the properties by detecting differences in property values and
	   * updating the DOM as necessary. This function is probably the single most
	   * critical path for performance optimization.
	   *
	   * TODO: Benchmark whether checking for changed values in memory actually
	   *       improves performance (especially statically positioned elements).
	   * TODO: Benchmark the effects of putting this at the top since 99% of props
	   *       do not change for a given reconciliation.
	   * TODO: Benchmark areas that can be improved with caching.
	   *
	   * @private
	   * @param {object} lastProps
	   * @param {object} nextProps
	   * @param {?DOMElement} node
	   */
	  _updateDOMProperties: function (lastProps, nextProps, transaction) {
	    var propKey;
	    var styleName;
	    var styleUpdates;
	    for (propKey in lastProps) {
	      if (nextProps.hasOwnProperty(propKey) || !lastProps.hasOwnProperty(propKey) || lastProps[propKey] == null) {
	        continue;
	      }
	      if (propKey === STYLE) {
	        var lastStyle = this._previousStyleCopy;
	        for (styleName in lastStyle) {
	          if (lastStyle.hasOwnProperty(styleName)) {
	            styleUpdates = styleUpdates || {};
	            styleUpdates[styleName] = '';
	          }
	        }
	        this._previousStyleCopy = null;
	      } else if (registrationNameModules.hasOwnProperty(propKey)) {
	        if (lastProps[propKey]) {
	          // Only call deleteListener if there was a listener previously or
	          // else willDeleteListener gets called when there wasn't actually a
	          // listener (e.g., onClick={null})
	          deleteListener(this, propKey);
	        }
	      } else if (isCustomComponent(this._tag, lastProps)) {
	        if (!RESERVED_PROPS.hasOwnProperty(propKey)) {
	          DOMPropertyOperations.deleteValueForAttribute(getNode(this), propKey);
	        }
	      } else if (DOMProperty.properties[propKey] || DOMProperty.isCustomAttribute(propKey)) {
	        DOMPropertyOperations.deleteValueForProperty(getNode(this), propKey);
	      }
	    }
	    for (propKey in nextProps) {
	      var nextProp = nextProps[propKey];
	      var lastProp = propKey === STYLE ? this._previousStyleCopy : lastProps != null ? lastProps[propKey] : undefined;
	      if (!nextProps.hasOwnProperty(propKey) || nextProp === lastProp || nextProp == null && lastProp == null) {
	        continue;
	      }
	      if (propKey === STYLE) {
	        if (nextProp) {
	          if (false) {
	            checkAndWarnForMutatedStyle(this._previousStyleCopy, this._previousStyle, this);
	            this._previousStyle = nextProp;
	          }
	          nextProp = this._previousStyleCopy = _assign({}, nextProp);
	        } else {
	          this._previousStyleCopy = null;
	        }
	        if (lastProp) {
	          // Unset styles on `lastProp` but not on `nextProp`.
	          for (styleName in lastProp) {
	            if (lastProp.hasOwnProperty(styleName) && (!nextProp || !nextProp.hasOwnProperty(styleName))) {
	              styleUpdates = styleUpdates || {};
	              styleUpdates[styleName] = '';
	            }
	          }
	          // Update styles that changed since `lastProp`.
	          for (styleName in nextProp) {
	            if (nextProp.hasOwnProperty(styleName) && lastProp[styleName] !== nextProp[styleName]) {
	              styleUpdates = styleUpdates || {};
	              styleUpdates[styleName] = nextProp[styleName];
	            }
	          }
	        } else {
	          // Relies on `updateStylesByID` not mutating `styleUpdates`.
	          styleUpdates = nextProp;
	        }
	      } else if (registrationNameModules.hasOwnProperty(propKey)) {
	        if (nextProp) {
	          enqueuePutListener(this, propKey, nextProp, transaction);
	        } else if (lastProp) {
	          deleteListener(this, propKey);
	        }
	      } else if (isCustomComponent(this._tag, nextProps)) {
	        if (!RESERVED_PROPS.hasOwnProperty(propKey)) {
	          DOMPropertyOperations.setValueForAttribute(getNode(this), propKey, nextProp);
	        }
	      } else if (DOMProperty.properties[propKey] || DOMProperty.isCustomAttribute(propKey)) {
	        var node = getNode(this);
	        // If we're updating to null or undefined, we should remove the property
	        // from the DOM node instead of inadvertently setting to a string. This
	        // brings us in line with the same behavior we have on initial render.
	        if (nextProp != null) {
	          DOMPropertyOperations.setValueForProperty(node, propKey, nextProp);
	        } else {
	          DOMPropertyOperations.deleteValueForProperty(node, propKey);
	        }
	      }
	    }
	    if (styleUpdates) {
	      CSSPropertyOperations.setValueForStyles(getNode(this), styleUpdates, this);
	    }
	  },

	  /**
	   * Reconciles the children with the various properties that affect the
	   * children content.
	   *
	   * @param {object} lastProps
	   * @param {object} nextProps
	   * @param {ReactReconcileTransaction} transaction
	   * @param {object} context
	   */
	  _updateDOMChildren: function (lastProps, nextProps, transaction, context) {
	    var lastContent = CONTENT_TYPES[typeof lastProps.children] ? lastProps.children : null;
	    var nextContent = CONTENT_TYPES[typeof nextProps.children] ? nextProps.children : null;

	    var lastHtml = lastProps.dangerouslySetInnerHTML && lastProps.dangerouslySetInnerHTML.__html;
	    var nextHtml = nextProps.dangerouslySetInnerHTML && nextProps.dangerouslySetInnerHTML.__html;

	    // Note the use of `!=` which checks for null or undefined.
	    var lastChildren = lastContent != null ? null : lastProps.children;
	    var nextChildren = nextContent != null ? null : nextProps.children;

	    // If we're switching from children to content/html or vice versa, remove
	    // the old content
	    var lastHasContentOrHtml = lastContent != null || lastHtml != null;
	    var nextHasContentOrHtml = nextContent != null || nextHtml != null;
	    if (lastChildren != null && nextChildren == null) {
	      this.updateChildren(null, transaction, context);
	    } else if (lastHasContentOrHtml && !nextHasContentOrHtml) {
	      this.updateTextContent('');
	      if (false) {
	        ReactInstrumentation.debugTool.onSetChildren(this._debugID, []);
	      }
	    }

	    if (nextContent != null) {
	      if (lastContent !== nextContent) {
	        this.updateTextContent('' + nextContent);
	        if (false) {
	          setContentChildForInstrumentation.call(this, nextContent);
	        }
	      }
	    } else if (nextHtml != null) {
	      if (lastHtml !== nextHtml) {
	        this.updateMarkup('' + nextHtml);
	      }
	      if (false) {
	        ReactInstrumentation.debugTool.onSetChildren(this._debugID, []);
	      }
	    } else if (nextChildren != null) {
	      if (false) {
	        setContentChildForInstrumentation.call(this, null);
	      }

	      this.updateChildren(nextChildren, transaction, context);
	    }
	  },

	  getHostNode: function () {
	    return getNode(this);
	  },

	  /**
	   * Destroys all event registrations for this instance. Does not remove from
	   * the DOM. That must be done by the parent.
	   *
	   * @internal
	   */
	  unmountComponent: function (safely) {
	    switch (this._tag) {
	      case 'audio':
	      case 'form':
	      case 'iframe':
	      case 'img':
	      case 'link':
	      case 'object':
	      case 'source':
	      case 'video':
	        var listeners = this._wrapperState.listeners;
	        if (listeners) {
	          for (var i = 0; i < listeners.length; i++) {
	            listeners[i].remove();
	          }
	        }
	        break;
	      case 'html':
	      case 'head':
	      case 'body':
	        /**
	         * Components like <html> <head> and <body> can't be removed or added
	         * easily in a cross-browser way, however it's valuable to be able to
	         * take advantage of React's reconciliation for styling and <title>
	         * management. So we just document it and throw in dangerous cases.
	         */
	         true ?  false ? invariant(false, '<%s> tried to unmount. Because of cross-browser quirks it is impossible to unmount some top-level components (eg <html>, <head>, and <body>) reliably and efficiently. To fix this, have a single top-level component that never unmounts render these elements.', this._tag) : _prodInvariant('66', this._tag) : void 0;
	        break;
	    }

	    this.unmountChildren(safely);
	    ReactDOMComponentTree.uncacheNode(this);
	    EventPluginHub.deleteAllListeners(this);
	    ReactComponentBrowserEnvironment.unmountIDFromEnvironment(this._rootNodeID);
	    this._rootNodeID = null;
	    this._domID = null;
	    this._wrapperState = null;

	    if (false) {
	      setContentChildForInstrumentation.call(this, null);
	    }
	  },

	  getPublicInstance: function () {
	    return getNode(this);
	  }

	};

	_assign(ReactDOMComponent.prototype, ReactDOMComponent.Mixin, ReactMultiChild.Mixin);

	module.exports = ReactDOMComponent;

/***/ },
/* 153 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMContainerInfo
	 */

	'use strict';

	var validateDOMNesting = __webpack_require__(58);

	var DOC_NODE_TYPE = 9;

	function ReactDOMContainerInfo(topLevelWrapper, node) {
	  var info = {
	    _topLevelWrapper: topLevelWrapper,
	    _idCounter: 1,
	    _ownerDocument: node ? node.nodeType === DOC_NODE_TYPE ? node : node.ownerDocument : null,
	    _node: node,
	    _tag: node ? node.nodeName.toLowerCase() : null,
	    _namespaceURI: node ? node.namespaceURI : null
	  };
	  if (false) {
	    info._ancestorInfo = node ? validateDOMNesting.updatedAncestorInfo(null, info._tag, null) : null;
	  }
	  return info;
	}

	module.exports = ReactDOMContainerInfo;

/***/ },
/* 154 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2014-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMEmptyComponent
	 */

	'use strict';

	var _assign = __webpack_require__(4);

	var DOMLazyTree = __webpack_require__(17);
	var ReactDOMComponentTree = __webpack_require__(5);

	var ReactDOMEmptyComponent = function (instantiate) {
	  // ReactCompositeComponent uses this:
	  this._currentElement = null;
	  // ReactDOMComponentTree uses these:
	  this._hostNode = null;
	  this._hostParent = null;
	  this._hostContainerInfo = null;
	  this._domID = null;
	};
	_assign(ReactDOMEmptyComponent.prototype, {
	  mountComponent: function (transaction, hostParent, hostContainerInfo, context) {
	    var domID = hostContainerInfo._idCounter++;
	    this._domID = domID;
	    this._hostParent = hostParent;
	    this._hostContainerInfo = hostContainerInfo;

	    var nodeValue = ' react-empty: ' + this._domID + ' ';
	    if (transaction.useCreateElement) {
	      var ownerDocument = hostContainerInfo._ownerDocument;
	      var node = ownerDocument.createComment(nodeValue);
	      ReactDOMComponentTree.precacheNode(this, node);
	      return DOMLazyTree(node);
	    } else {
	      if (transaction.renderToStaticMarkup) {
	        // Normally we'd insert a comment node, but since this is a situation
	        // where React won't take over (static pages), we can simply return
	        // nothing.
	        return '';
	      }
	      return '<!--' + nodeValue + '-->';
	    }
	  },
	  receiveComponent: function () {},
	  getHostNode: function () {
	    return ReactDOMComponentTree.getNodeFromInstance(this);
	  },
	  unmountComponent: function () {
	    ReactDOMComponentTree.uncacheNode(this);
	  }
	});

	module.exports = ReactDOMEmptyComponent;

/***/ },
/* 155 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMFactories
	 */

	'use strict';

	var ReactElement = __webpack_require__(10);

	var mapObject = __webpack_require__(109);

	/**
	 * Create a factory that creates HTML tag elements.
	 *
	 * @param {string} tag Tag name (e.g. `div`).
	 * @private
	 */
	function createDOMFactory(tag) {
	  if (false) {
	    var ReactElementValidator = require('./ReactElementValidator');
	    return ReactElementValidator.createFactory(tag);
	  }
	  return ReactElement.createFactory(tag);
	}

	/**
	 * Creates a mapping from supported HTML tags to `ReactDOMComponent` classes.
	 * This is also accessible via `React.DOM`.
	 *
	 * @public
	 */
	var ReactDOMFactories = mapObject({
	  a: 'a',
	  abbr: 'abbr',
	  address: 'address',
	  area: 'area',
	  article: 'article',
	  aside: 'aside',
	  audio: 'audio',
	  b: 'b',
	  base: 'base',
	  bdi: 'bdi',
	  bdo: 'bdo',
	  big: 'big',
	  blockquote: 'blockquote',
	  body: 'body',
	  br: 'br',
	  button: 'button',
	  canvas: 'canvas',
	  caption: 'caption',
	  cite: 'cite',
	  code: 'code',
	  col: 'col',
	  colgroup: 'colgroup',
	  data: 'data',
	  datalist: 'datalist',
	  dd: 'dd',
	  del: 'del',
	  details: 'details',
	  dfn: 'dfn',
	  dialog: 'dialog',
	  div: 'div',
	  dl: 'dl',
	  dt: 'dt',
	  em: 'em',
	  embed: 'embed',
	  fieldset: 'fieldset',
	  figcaption: 'figcaption',
	  figure: 'figure',
	  footer: 'footer',
	  form: 'form',
	  h1: 'h1',
	  h2: 'h2',
	  h3: 'h3',
	  h4: 'h4',
	  h5: 'h5',
	  h6: 'h6',
	  head: 'head',
	  header: 'header',
	  hgroup: 'hgroup',
	  hr: 'hr',
	  html: 'html',
	  i: 'i',
	  iframe: 'iframe',
	  img: 'img',
	  input: 'input',
	  ins: 'ins',
	  kbd: 'kbd',
	  keygen: 'keygen',
	  label: 'label',
	  legend: 'legend',
	  li: 'li',
	  link: 'link',
	  main: 'main',
	  map: 'map',
	  mark: 'mark',
	  menu: 'menu',
	  menuitem: 'menuitem',
	  meta: 'meta',
	  meter: 'meter',
	  nav: 'nav',
	  noscript: 'noscript',
	  object: 'object',
	  ol: 'ol',
	  optgroup: 'optgroup',
	  option: 'option',
	  output: 'output',
	  p: 'p',
	  param: 'param',
	  picture: 'picture',
	  pre: 'pre',
	  progress: 'progress',
	  q: 'q',
	  rp: 'rp',
	  rt: 'rt',
	  ruby: 'ruby',
	  s: 's',
	  samp: 'samp',
	  script: 'script',
	  section: 'section',
	  select: 'select',
	  small: 'small',
	  source: 'source',
	  span: 'span',
	  strong: 'strong',
	  style: 'style',
	  sub: 'sub',
	  summary: 'summary',
	  sup: 'sup',
	  table: 'table',
	  tbody: 'tbody',
	  td: 'td',
	  textarea: 'textarea',
	  tfoot: 'tfoot',
	  th: 'th',
	  thead: 'thead',
	  time: 'time',
	  title: 'title',
	  tr: 'tr',
	  track: 'track',
	  u: 'u',
	  ul: 'ul',
	  'var': 'var',
	  video: 'video',
	  wbr: 'wbr',

	  // SVG
	  circle: 'circle',
	  clipPath: 'clipPath',
	  defs: 'defs',
	  ellipse: 'ellipse',
	  g: 'g',
	  image: 'image',
	  line: 'line',
	  linearGradient: 'linearGradient',
	  mask: 'mask',
	  path: 'path',
	  pattern: 'pattern',
	  polygon: 'polygon',
	  polyline: 'polyline',
	  radialGradient: 'radialGradient',
	  rect: 'rect',
	  stop: 'stop',
	  svg: 'svg',
	  text: 'text',
	  tspan: 'tspan'

	}, createDOMFactory);

	module.exports = ReactDOMFactories;

/***/ },
/* 156 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMFeatureFlags
	 */

	'use strict';

	var ReactDOMFeatureFlags = {
	  useCreateElement: true
	};

	module.exports = ReactDOMFeatureFlags;

/***/ },
/* 157 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMIDOperations
	 */

	'use strict';

	var DOMChildrenOperations = __webpack_require__(36);
	var ReactDOMComponentTree = __webpack_require__(5);

	/**
	 * Operations used to process updates to DOM nodes.
	 */
	var ReactDOMIDOperations = {

	  /**
	   * Updates a component's children by processing a series of updates.
	   *
	   * @param {array<object>} updates List of update configurations.
	   * @internal
	   */
	  dangerouslyProcessChildrenUpdates: function (parentInst, updates) {
	    var node = ReactDOMComponentTree.getNodeFromInstance(parentInst);
	    DOMChildrenOperations.processUpdates(node, updates);
	  }
	};

	module.exports = ReactDOMIDOperations;

/***/ },
/* 158 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMInput
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(2),
	    _assign = __webpack_require__(4);

	var DisabledInputUtils = __webpack_require__(27);
	var DOMPropertyOperations = __webpack_require__(71);
	var LinkedValueUtils = __webpack_require__(41);
	var ReactDOMComponentTree = __webpack_require__(5);
	var ReactUpdates = __webpack_require__(11);

	var invariant = __webpack_require__(1);
	var warning = __webpack_require__(3);

	var didWarnValueLink = false;
	var didWarnCheckedLink = false;
	var didWarnValueDefaultValue = false;
	var didWarnCheckedDefaultChecked = false;
	var didWarnControlledToUncontrolled = false;
	var didWarnUncontrolledToControlled = false;

	function forceUpdateIfMounted() {
	  if (this._rootNodeID) {
	    // DOM component is still mounted; update
	    ReactDOMInput.updateWrapper(this);
	  }
	}

	function isControlled(props) {
	  var usesChecked = props.type === 'checkbox' || props.type === 'radio';
	  return usesChecked ? props.checked !== undefined : props.value !== undefined;
	}

	/**
	 * Implements an <input> host component that allows setting these optional
	 * props: `checked`, `value`, `defaultChecked`, and `defaultValue`.
	 *
	 * If `checked` or `value` are not supplied (or null/undefined), user actions
	 * that affect the checked state or value will trigger updates to the element.
	 *
	 * If they are supplied (and not null/undefined), the rendered element will not
	 * trigger updates to the element. Instead, the props must change in order for
	 * the rendered element to be updated.
	 *
	 * The rendered element will be initialized as unchecked (or `defaultChecked`)
	 * with an empty value (or `defaultValue`).
	 *
	 * @see http://www.w3.org/TR/2012/WD-html5-20121025/the-input-element.html
	 */
	var ReactDOMInput = {
	  getHostProps: function (inst, props) {
	    var value = LinkedValueUtils.getValue(props);
	    var checked = LinkedValueUtils.getChecked(props);

	    var hostProps = _assign({
	      // Make sure we set .type before any other properties (setting .value
	      // before .type means .value is lost in IE11 and below)
	      type: undefined,
	      // Make sure we set .step before .value (setting .value before .step
	      // means .value is rounded on mount, based upon step precision)
	      step: undefined
	    }, DisabledInputUtils.getHostProps(inst, props), {
	      defaultChecked: undefined,
	      defaultValue: undefined,
	      value: value != null ? value : inst._wrapperState.initialValue,
	      checked: checked != null ? checked : inst._wrapperState.initialChecked,
	      onChange: inst._wrapperState.onChange
	    });

	    return hostProps;
	  },

	  mountWrapper: function (inst, props) {
	    if (false) {
	      LinkedValueUtils.checkPropTypes('input', props, inst._currentElement._owner);

	      var owner = inst._currentElement._owner;

	      if (props.valueLink !== undefined && !didWarnValueLink) {
	        process.env.NODE_ENV !== 'production' ? warning(false, '`valueLink` prop on `input` is deprecated; set `value` and `onChange` instead.') : void 0;
	        didWarnValueLink = true;
	      }
	      if (props.checkedLink !== undefined && !didWarnCheckedLink) {
	        process.env.NODE_ENV !== 'production' ? warning(false, '`checkedLink` prop on `input` is deprecated; set `value` and `onChange` instead.') : void 0;
	        didWarnCheckedLink = true;
	      }
	      if (props.checked !== undefined && props.defaultChecked !== undefined && !didWarnCheckedDefaultChecked) {
	        process.env.NODE_ENV !== 'production' ? warning(false, '%s contains an input of type %s with both checked and defaultChecked props. ' + 'Input elements must be either controlled or uncontrolled ' + '(specify either the checked prop, or the defaultChecked prop, but not ' + 'both). Decide between using a controlled or uncontrolled input ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;
	        didWarnCheckedDefaultChecked = true;
	      }
	      if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValueDefaultValue) {
	        process.env.NODE_ENV !== 'production' ? warning(false, '%s contains an input of type %s with both value and defaultValue props. ' + 'Input elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled input ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;
	        didWarnValueDefaultValue = true;
	      }
	    }

	    var defaultValue = props.defaultValue;
	    inst._wrapperState = {
	      initialChecked: props.checked != null ? props.checked : props.defaultChecked,
	      initialValue: props.value != null ? props.value : defaultValue,
	      listeners: null,
	      onChange: _handleChange.bind(inst)
	    };

	    if (false) {
	      inst._wrapperState.controlled = isControlled(props);
	    }
	  },

	  updateWrapper: function (inst) {
	    var props = inst._currentElement.props;

	    if (false) {
	      var controlled = isControlled(props);
	      var owner = inst._currentElement._owner;

	      if (!inst._wrapperState.controlled && controlled && !didWarnUncontrolledToControlled) {
	        process.env.NODE_ENV !== 'production' ? warning(false, '%s is changing an uncontrolled input of type %s to be controlled. ' + 'Input elements should not switch from uncontrolled to controlled (or vice versa). ' + 'Decide between using a controlled or uncontrolled input ' + 'element for the lifetime of the component. More info: https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;
	        didWarnUncontrolledToControlled = true;
	      }
	      if (inst._wrapperState.controlled && !controlled && !didWarnControlledToUncontrolled) {
	        process.env.NODE_ENV !== 'production' ? warning(false, '%s is changing a controlled input of type %s to be uncontrolled. ' + 'Input elements should not switch from controlled to uncontrolled (or vice versa). ' + 'Decide between using a controlled or uncontrolled input ' + 'element for the lifetime of the component. More info: https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;
	        didWarnControlledToUncontrolled = true;
	      }
	    }

	    // TODO: Shouldn't this be getChecked(props)?
	    var checked = props.checked;
	    if (checked != null) {
	      DOMPropertyOperations.setValueForProperty(ReactDOMComponentTree.getNodeFromInstance(inst), 'checked', checked || false);
	    }

	    var node = ReactDOMComponentTree.getNodeFromInstance(inst);
	    var value = LinkedValueUtils.getValue(props);
	    if (value != null) {

	      // Cast `value` to a string to ensure the value is set correctly. While
	      // browsers typically do this as necessary, jsdom doesn't.
	      var newValue = '' + value;

	      // To avoid side effects (such as losing text selection), only set value if changed
	      if (newValue !== node.value) {
	        node.value = newValue;
	      }
	    } else {
	      if (props.value == null && props.defaultValue != null) {
	        node.defaultValue = '' + props.defaultValue;
	      }
	      if (props.checked == null && props.defaultChecked != null) {
	        node.defaultChecked = !!props.defaultChecked;
	      }
	    }
	  },

	  postMountWrapper: function (inst) {
	    var props = inst._currentElement.props;

	    // This is in postMount because we need access to the DOM node, which is not
	    // available until after the component has mounted.
	    var node = ReactDOMComponentTree.getNodeFromInstance(inst);

	    // Detach value from defaultValue. We won't do anything if we're working on
	    // submit or reset inputs as those values & defaultValues are linked. They
	    // are not resetable nodes so this operation doesn't matter and actually
	    // removes browser-default values (eg "Submit Query") when no value is
	    // provided.
	    if (props.type !== 'submit' && props.type !== 'reset') {
	      node.value = node.value;
	    }

	    // Normally, we'd just do `node.checked = node.checked` upon initial mount, less this bug
	    // this is needed to work around a chrome bug where setting defaultChecked
	    // will sometimes influence the value of checked (even after detachment).
	    // Reference: https://bugs.chromium.org/p/chromium/issues/detail?id=608416
	    // We need to temporarily unset name to avoid disrupting radio button groups.
	    var name = node.name;
	    if (name !== '') {
	      node.name = '';
	    }
	    node.defaultChecked = !node.defaultChecked;
	    node.defaultChecked = !node.defaultChecked;
	    if (name !== '') {
	      node.name = name;
	    }
	  }
	};

	function _handleChange(event) {
	  var props = this._currentElement.props;

	  var returnValue = LinkedValueUtils.executeOnChange(props, event);

	  // Here we use asap to wait until all updates have propagated, which
	  // is important when using controlled components within layers:
	  // https://github.com/facebook/react/issues/1698
	  ReactUpdates.asap(forceUpdateIfMounted, this);

	  var name = props.name;
	  if (props.type === 'radio' && name != null) {
	    var rootNode = ReactDOMComponentTree.getNodeFromInstance(this);
	    var queryRoot = rootNode;

	    while (queryRoot.parentNode) {
	      queryRoot = queryRoot.parentNode;
	    }

	    // If `rootNode.form` was non-null, then we could try `form.elements`,
	    // but that sometimes behaves strangely in IE8. We could also try using
	    // `form.getElementsByName`, but that will only return direct children
	    // and won't include inputs that use the HTML5 `form=` attribute. Since
	    // the input might not even be in a form, var's just use the global
	    // `querySelectorAll` to ensure we don't miss anything.
	    var group = queryRoot.querySelectorAll('input[name=' + JSON.stringify('' + name) + '][type="radio"]');

	    for (var i = 0; i < group.length; i++) {
	      var otherNode = group[i];
	      if (otherNode === rootNode || otherNode.form !== rootNode.form) {
	        continue;
	      }
	      // This will throw if radio buttons rendered by different copies of React
	      // and the same name are rendered into the same form (same as #1939).
	      // That's probably okay; we don't support it just as we don't support
	      // mixing React radio buttons with non-React ones.
	      var otherInstance = ReactDOMComponentTree.getInstanceFromNode(otherNode);
	      !otherInstance ?  false ? invariant(false, 'ReactDOMInput: Mixing React and non-React radio inputs with the same `name` is not supported.') : _prodInvariant('90') : void 0;
	      // If this is a controlled radio button group, forcing the input that
	      // was previously checked to update will cause it to be come re-checked
	      // as appropriate.
	      ReactUpdates.asap(forceUpdateIfMounted, otherInstance);
	    }
	  }

	  return returnValue;
	}

	module.exports = ReactDOMInput;

/***/ },
/* 159 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMInstrumentation
	 */

	'use strict';

	var debugTool = null;

	if (false) {
	  var ReactDOMDebugTool = require('./ReactDOMDebugTool');
	  debugTool = ReactDOMDebugTool;
	}

	module.exports = { debugTool: debugTool };

/***/ },
/* 160 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMOption
	 */

	'use strict';

	var _assign = __webpack_require__(4);

	var ReactChildren = __webpack_require__(72);
	var ReactDOMComponentTree = __webpack_require__(5);
	var ReactDOMSelect = __webpack_require__(76);

	var warning = __webpack_require__(3);
	var didWarnInvalidOptionChildren = false;

	function flattenChildren(children) {
	  var content = '';

	  // Flatten children and warn if they aren't strings or numbers;
	  // invalid types are ignored.
	  ReactChildren.forEach(children, function (child) {
	    if (child == null) {
	      return;
	    }
	    if (typeof child === 'string' || typeof child === 'number') {
	      content += child;
	    } else if (!didWarnInvalidOptionChildren) {
	      didWarnInvalidOptionChildren = true;
	       false ? warning(false, 'Only strings and numbers are supported as <option> children.') : void 0;
	    }
	  });

	  return content;
	}

	/**
	 * Implements an <option> host component that warns when `selected` is set.
	 */
	var ReactDOMOption = {
	  mountWrapper: function (inst, props, hostParent) {
	    // TODO (yungsters): Remove support for `selected` in <option>.
	    if (false) {
	      process.env.NODE_ENV !== 'production' ? warning(props.selected == null, 'Use the `defaultValue` or `value` props on <select> instead of ' + 'setting `selected` on <option>.') : void 0;
	    }

	    // Look up whether this option is 'selected'
	    var selectValue = null;
	    if (hostParent != null) {
	      var selectParent = hostParent;

	      if (selectParent._tag === 'optgroup') {
	        selectParent = selectParent._hostParent;
	      }

	      if (selectParent != null && selectParent._tag === 'select') {
	        selectValue = ReactDOMSelect.getSelectValueContext(selectParent);
	      }
	    }

	    // If the value is null (e.g., no specified value or after initial mount)
	    // or missing (e.g., for <datalist>), we don't change props.selected
	    var selected = null;
	    if (selectValue != null) {
	      var value;
	      if (props.value != null) {
	        value = props.value + '';
	      } else {
	        value = flattenChildren(props.children);
	      }
	      selected = false;
	      if (Array.isArray(selectValue)) {
	        // multiple
	        for (var i = 0; i < selectValue.length; i++) {
	          if ('' + selectValue[i] === value) {
	            selected = true;
	            break;
	          }
	        }
	      } else {
	        selected = '' + selectValue === value;
	      }
	    }

	    inst._wrapperState = { selected: selected };
	  },

	  postMountWrapper: function (inst) {
	    // value="" should make a value attribute (#6219)
	    var props = inst._currentElement.props;
	    if (props.value != null) {
	      var node = ReactDOMComponentTree.getNodeFromInstance(inst);
	      node.setAttribute('value', props.value);
	    }
	  },

	  getHostProps: function (inst, props) {
	    var hostProps = _assign({ selected: undefined, children: undefined }, props);

	    // Read state only from initial mount because <select> updates value
	    // manually; we need the initial state only for server rendering
	    if (inst._wrapperState.selected != null) {
	      hostProps.selected = inst._wrapperState.selected;
	    }

	    var content = flattenChildren(props.children);

	    if (content) {
	      hostProps.children = content;
	    }

	    return hostProps;
	  }

	};

	module.exports = ReactDOMOption;

/***/ },
/* 161 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMSelection
	 */

	'use strict';

	var ExecutionEnvironment = __webpack_require__(7);

	var getNodeForCharacterOffset = __webpack_require__(197);
	var getTextContentAccessor = __webpack_require__(92);

	/**
	 * While `isCollapsed` is available on the Selection object and `collapsed`
	 * is available on the Range object, IE11 sometimes gets them wrong.
	 * If the anchor/focus nodes and offsets are the same, the range is collapsed.
	 */
	function isCollapsed(anchorNode, anchorOffset, focusNode, focusOffset) {
	  return anchorNode === focusNode && anchorOffset === focusOffset;
	}

	/**
	 * Get the appropriate anchor and focus node/offset pairs for IE.
	 *
	 * The catch here is that IE's selection API doesn't provide information
	 * about whether the selection is forward or backward, so we have to
	 * behave as though it's always forward.
	 *
	 * IE text differs from modern selection in that it behaves as though
	 * block elements end with a new line. This means character offsets will
	 * differ between the two APIs.
	 *
	 * @param {DOMElement} node
	 * @return {object}
	 */
	function getIEOffsets(node) {
	  var selection = document.selection;
	  var selectedRange = selection.createRange();
	  var selectedLength = selectedRange.text.length;

	  // Duplicate selection so we can move range without breaking user selection.
	  var fromStart = selectedRange.duplicate();
	  fromStart.moveToElementText(node);
	  fromStart.setEndPoint('EndToStart', selectedRange);

	  var startOffset = fromStart.text.length;
	  var endOffset = startOffset + selectedLength;

	  return {
	    start: startOffset,
	    end: endOffset
	  };
	}

	/**
	 * @param {DOMElement} node
	 * @return {?object}
	 */
	function getModernOffsets(node) {
	  var selection = window.getSelection && window.getSelection();

	  if (!selection || selection.rangeCount === 0) {
	    return null;
	  }

	  var anchorNode = selection.anchorNode;
	  var anchorOffset = selection.anchorOffset;
	  var focusNode = selection.focusNode;
	  var focusOffset = selection.focusOffset;

	  var currentRange = selection.getRangeAt(0);

	  // In Firefox, range.startContainer and range.endContainer can be "anonymous
	  // divs", e.g. the up/down buttons on an <input type="number">. Anonymous
	  // divs do not seem to expose properties, triggering a "Permission denied
	  // error" if any of its properties are accessed. The only seemingly possible
	  // way to avoid erroring is to access a property that typically works for
	  // non-anonymous divs and catch any error that may otherwise arise. See
	  // https://bugzilla.mozilla.org/show_bug.cgi?id=208427
	  try {
	    /* eslint-disable no-unused-expressions */
	    currentRange.startContainer.nodeType;
	    currentRange.endContainer.nodeType;
	    /* eslint-enable no-unused-expressions */
	  } catch (e) {
	    return null;
	  }

	  // If the node and offset values are the same, the selection is collapsed.
	  // `Selection.isCollapsed` is available natively, but IE sometimes gets
	  // this value wrong.
	  var isSelectionCollapsed = isCollapsed(selection.anchorNode, selection.anchorOffset, selection.focusNode, selection.focusOffset);

	  var rangeLength = isSelectionCollapsed ? 0 : currentRange.toString().length;

	  var tempRange = currentRange.cloneRange();
	  tempRange.selectNodeContents(node);
	  tempRange.setEnd(currentRange.startContainer, currentRange.startOffset);

	  var isTempRangeCollapsed = isCollapsed(tempRange.startContainer, tempRange.startOffset, tempRange.endContainer, tempRange.endOffset);

	  var start = isTempRangeCollapsed ? 0 : tempRange.toString().length;
	  var end = start + rangeLength;

	  // Detect whether the selection is backward.
	  var detectionRange = document.createRange();
	  detectionRange.setStart(anchorNode, anchorOffset);
	  detectionRange.setEnd(focusNode, focusOffset);
	  var isBackward = detectionRange.collapsed;

	  return {
	    start: isBackward ? end : start,
	    end: isBackward ? start : end
	  };
	}

	/**
	 * @param {DOMElement|DOMTextNode} node
	 * @param {object} offsets
	 */
	function setIEOffsets(node, offsets) {
	  var range = document.selection.createRange().duplicate();
	  var start, end;

	  if (offsets.end === undefined) {
	    start = offsets.start;
	    end = start;
	  } else if (offsets.start > offsets.end) {
	    start = offsets.end;
	    end = offsets.start;
	  } else {
	    start = offsets.start;
	    end = offsets.end;
	  }

	  range.moveToElementText(node);
	  range.moveStart('character', start);
	  range.setEndPoint('EndToStart', range);
	  range.moveEnd('character', end - start);
	  range.select();
	}

	/**
	 * In modern non-IE browsers, we can support both forward and backward
	 * selections.
	 *
	 * Note: IE10+ supports the Selection object, but it does not support
	 * the `extend` method, which means that even in modern IE, it's not possible
	 * to programmatically create a backward selection. Thus, for all IE
	 * versions, we use the old IE API to create our selections.
	 *
	 * @param {DOMElement|DOMTextNode} node
	 * @param {object} offsets
	 */
	function setModernOffsets(node, offsets) {
	  if (!window.getSelection) {
	    return;
	  }

	  var selection = window.getSelection();
	  var length = node[getTextContentAccessor()].length;
	  var start = Math.min(offsets.start, length);
	  var end = offsets.end === undefined ? start : Math.min(offsets.end, length);

	  // IE 11 uses modern selection, but doesn't support the extend method.
	  // Flip backward selections, so we can set with a single range.
	  if (!selection.extend && start > end) {
	    var temp = end;
	    end = start;
	    start = temp;
	  }

	  var startMarker = getNodeForCharacterOffset(node, start);
	  var endMarker = getNodeForCharacterOffset(node, end);

	  if (startMarker && endMarker) {
	    var range = document.createRange();
	    range.setStart(startMarker.node, startMarker.offset);
	    selection.removeAllRanges();

	    if (start > end) {
	      selection.addRange(range);
	      selection.extend(endMarker.node, endMarker.offset);
	    } else {
	      range.setEnd(endMarker.node, endMarker.offset);
	      selection.addRange(range);
	    }
	  }
	}

	var useIEOffsets = ExecutionEnvironment.canUseDOM && 'selection' in document && !('getSelection' in window);

	var ReactDOMSelection = {
	  /**
	   * @param {DOMElement} node
	   */
	  getOffsets: useIEOffsets ? getIEOffsets : getModernOffsets,

	  /**
	   * @param {DOMElement|DOMTextNode} node
	   * @param {object} offsets
	   */
	  setOffsets: useIEOffsets ? setIEOffsets : setModernOffsets
	};

	module.exports = ReactDOMSelection;

/***/ },
/* 162 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMTextComponent
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(2),
	    _assign = __webpack_require__(4);

	var DOMChildrenOperations = __webpack_require__(36);
	var DOMLazyTree = __webpack_require__(17);
	var ReactDOMComponentTree = __webpack_require__(5);
	var ReactInstrumentation = __webpack_require__(8);

	var escapeTextContentForBrowser = __webpack_require__(30);
	var invariant = __webpack_require__(1);
	var validateDOMNesting = __webpack_require__(58);

	/**
	 * Text nodes violate a couple assumptions that React makes about components:
	 *
	 *  - When mounting text into the DOM, adjacent text nodes are merged.
	 *  - Text nodes cannot be assigned a React root ID.
	 *
	 * This component is used to wrap strings between comment nodes so that they
	 * can undergo the same reconciliation that is applied to elements.
	 *
	 * TODO: Investigate representing React components in the DOM with text nodes.
	 *
	 * @class ReactDOMTextComponent
	 * @extends ReactComponent
	 * @internal
	 */
	var ReactDOMTextComponent = function (text) {
	  // TODO: This is really a ReactText (ReactNode), not a ReactElement
	  this._currentElement = text;
	  this._stringText = '' + text;
	  // ReactDOMComponentTree uses these:
	  this._hostNode = null;
	  this._hostParent = null;

	  // Properties
	  this._domID = null;
	  this._mountIndex = 0;
	  this._closingComment = null;
	  this._commentNodes = null;
	};

	_assign(ReactDOMTextComponent.prototype, {

	  /**
	   * Creates the markup for this text node. This node is not intended to have
	   * any features besides containing text content.
	   *
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @return {string} Markup for this text node.
	   * @internal
	   */
	  mountComponent: function (transaction, hostParent, hostContainerInfo, context) {
	    if (false) {
	      ReactInstrumentation.debugTool.onSetText(this._debugID, this._stringText);

	      var parentInfo;
	      if (hostParent != null) {
	        parentInfo = hostParent._ancestorInfo;
	      } else if (hostContainerInfo != null) {
	        parentInfo = hostContainerInfo._ancestorInfo;
	      }
	      if (parentInfo) {
	        // parentInfo should always be present except for the top-level
	        // component when server rendering
	        validateDOMNesting('#text', this, parentInfo);
	      }
	    }

	    var domID = hostContainerInfo._idCounter++;
	    var openingValue = ' react-text: ' + domID + ' ';
	    var closingValue = ' /react-text ';
	    this._domID = domID;
	    this._hostParent = hostParent;
	    if (transaction.useCreateElement) {
	      var ownerDocument = hostContainerInfo._ownerDocument;
	      var openingComment = ownerDocument.createComment(openingValue);
	      var closingComment = ownerDocument.createComment(closingValue);
	      var lazyTree = DOMLazyTree(ownerDocument.createDocumentFragment());
	      DOMLazyTree.queueChild(lazyTree, DOMLazyTree(openingComment));
	      if (this._stringText) {
	        DOMLazyTree.queueChild(lazyTree, DOMLazyTree(ownerDocument.createTextNode(this._stringText)));
	      }
	      DOMLazyTree.queueChild(lazyTree, DOMLazyTree(closingComment));
	      ReactDOMComponentTree.precacheNode(this, openingComment);
	      this._closingComment = closingComment;
	      return lazyTree;
	    } else {
	      var escapedText = escapeTextContentForBrowser(this._stringText);

	      if (transaction.renderToStaticMarkup) {
	        // Normally we'd wrap this between comment nodes for the reasons stated
	        // above, but since this is a situation where React won't take over
	        // (static pages), we can simply return the text as it is.
	        return escapedText;
	      }

	      return '<!--' + openingValue + '-->' + escapedText + '<!--' + closingValue + '-->';
	    }
	  },

	  /**
	   * Updates this component by updating the text content.
	   *
	   * @param {ReactText} nextText The next text content
	   * @param {ReactReconcileTransaction} transaction
	   * @internal
	   */
	  receiveComponent: function (nextText, transaction) {
	    if (nextText !== this._currentElement) {
	      this._currentElement = nextText;
	      var nextStringText = '' + nextText;
	      if (nextStringText !== this._stringText) {
	        // TODO: Save this as pending props and use performUpdateIfNecessary
	        // and/or updateComponent to do the actual update for consistency with
	        // other component types?
	        this._stringText = nextStringText;
	        var commentNodes = this.getHostNode();
	        DOMChildrenOperations.replaceDelimitedText(commentNodes[0], commentNodes[1], nextStringText);

	        if (false) {
	          ReactInstrumentation.debugTool.onSetText(this._debugID, nextStringText);
	        }
	      }
	    }
	  },

	  getHostNode: function () {
	    var hostNode = this._commentNodes;
	    if (hostNode) {
	      return hostNode;
	    }
	    if (!this._closingComment) {
	      var openingComment = ReactDOMComponentTree.getNodeFromInstance(this);
	      var node = openingComment.nextSibling;
	      while (true) {
	        !(node != null) ?  false ? invariant(false, 'Missing closing comment for text component %s', this._domID) : _prodInvariant('67', this._domID) : void 0;
	        if (node.nodeType === 8 && node.nodeValue === ' /react-text ') {
	          this._closingComment = node;
	          break;
	        }
	        node = node.nextSibling;
	      }
	    }
	    hostNode = [this._hostNode, this._closingComment];
	    this._commentNodes = hostNode;
	    return hostNode;
	  },

	  unmountComponent: function () {
	    this._closingComment = null;
	    this._commentNodes = null;
	    ReactDOMComponentTree.uncacheNode(this);
	  }

	});

	module.exports = ReactDOMTextComponent;

/***/ },
/* 163 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMTextarea
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(2),
	    _assign = __webpack_require__(4);

	var DisabledInputUtils = __webpack_require__(27);
	var LinkedValueUtils = __webpack_require__(41);
	var ReactDOMComponentTree = __webpack_require__(5);
	var ReactUpdates = __webpack_require__(11);

	var invariant = __webpack_require__(1);
	var warning = __webpack_require__(3);

	var didWarnValueLink = false;
	var didWarnValDefaultVal = false;

	function forceUpdateIfMounted() {
	  if (this._rootNodeID) {
	    // DOM component is still mounted; update
	    ReactDOMTextarea.updateWrapper(this);
	  }
	}

	/**
	 * Implements a <textarea> host component that allows setting `value`, and
	 * `defaultValue`. This differs from the traditional DOM API because value is
	 * usually set as PCDATA children.
	 *
	 * If `value` is not supplied (or null/undefined), user actions that affect the
	 * value will trigger updates to the element.
	 *
	 * If `value` is supplied (and not null/undefined), the rendered element will
	 * not trigger updates to the element. Instead, the `value` prop must change in
	 * order for the rendered element to be updated.
	 *
	 * The rendered element will be initialized with an empty value, the prop
	 * `defaultValue` if specified, or the children content (deprecated).
	 */
	var ReactDOMTextarea = {
	  getHostProps: function (inst, props) {
	    !(props.dangerouslySetInnerHTML == null) ?  false ? invariant(false, '`dangerouslySetInnerHTML` does not make sense on <textarea>.') : _prodInvariant('91') : void 0;

	    // Always set children to the same thing. In IE9, the selection range will
	    // get reset if `textContent` is mutated.  We could add a check in setTextContent
	    // to only set the value if/when the value differs from the node value (which would
	    // completely solve this IE9 bug), but Sebastian+Ben seemed to like this solution.
	    // The value can be a boolean or object so that's why it's forced to be a string.
	    var hostProps = _assign({}, DisabledInputUtils.getHostProps(inst, props), {
	      value: undefined,
	      defaultValue: undefined,
	      children: '' + inst._wrapperState.initialValue,
	      onChange: inst._wrapperState.onChange
	    });

	    return hostProps;
	  },

	  mountWrapper: function (inst, props) {
	    if (false) {
	      LinkedValueUtils.checkPropTypes('textarea', props, inst._currentElement._owner);
	      if (props.valueLink !== undefined && !didWarnValueLink) {
	        process.env.NODE_ENV !== 'production' ? warning(false, '`valueLink` prop on `textarea` is deprecated; set `value` and `onChange` instead.') : void 0;
	        didWarnValueLink = true;
	      }
	      if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValDefaultVal) {
	        process.env.NODE_ENV !== 'production' ? warning(false, 'Textarea elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled textarea ' + 'and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components') : void 0;
	        didWarnValDefaultVal = true;
	      }
	    }

	    var value = LinkedValueUtils.getValue(props);
	    var initialValue = value;

	    // Only bother fetching default value if we're going to use it
	    if (value == null) {
	      var defaultValue = props.defaultValue;
	      // TODO (yungsters): Remove support for children content in <textarea>.
	      var children = props.children;
	      if (children != null) {
	        if (false) {
	          process.env.NODE_ENV !== 'production' ? warning(false, 'Use the `defaultValue` or `value` props instead of setting ' + 'children on <textarea>.') : void 0;
	        }
	        !(defaultValue == null) ?  false ? invariant(false, 'If you supply `defaultValue` on a <textarea>, do not pass children.') : _prodInvariant('92') : void 0;
	        if (Array.isArray(children)) {
	          !(children.length <= 1) ?  false ? invariant(false, '<textarea> can only have at most one child.') : _prodInvariant('93') : void 0;
	          children = children[0];
	        }

	        defaultValue = '' + children;
	      }
	      if (defaultValue == null) {
	        defaultValue = '';
	      }
	      initialValue = defaultValue;
	    }

	    inst._wrapperState = {
	      initialValue: '' + initialValue,
	      listeners: null,
	      onChange: _handleChange.bind(inst)
	    };
	  },

	  updateWrapper: function (inst) {
	    var props = inst._currentElement.props;

	    var node = ReactDOMComponentTree.getNodeFromInstance(inst);
	    var value = LinkedValueUtils.getValue(props);
	    if (value != null) {
	      // Cast `value` to a string to ensure the value is set correctly. While
	      // browsers typically do this as necessary, jsdom doesn't.
	      var newValue = '' + value;

	      // To avoid side effects (such as losing text selection), only set value if changed
	      if (newValue !== node.value) {
	        node.value = newValue;
	      }
	      if (props.defaultValue == null) {
	        node.defaultValue = newValue;
	      }
	    }
	    if (props.defaultValue != null) {
	      node.defaultValue = props.defaultValue;
	    }
	  },

	  postMountWrapper: function (inst) {
	    // This is in postMount because we need access to the DOM node, which is not
	    // available until after the component has mounted.
	    var node = ReactDOMComponentTree.getNodeFromInstance(inst);

	    // Warning: node.value may be the empty string at this point (IE11) if placeholder is set.
	    node.value = node.textContent; // Detach value from defaultValue
	  }
	};

	function _handleChange(event) {
	  var props = this._currentElement.props;
	  var returnValue = LinkedValueUtils.executeOnChange(props, event);
	  ReactUpdates.asap(forceUpdateIfMounted, this);
	  return returnValue;
	}

	module.exports = ReactDOMTextarea;

/***/ },
/* 164 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2015-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMTreeTraversal
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(2);

	var invariant = __webpack_require__(1);

	/**
	 * Return the lowest common ancestor of A and B, or null if they are in
	 * different trees.
	 */
	function getLowestCommonAncestor(instA, instB) {
	  !('_hostNode' in instA) ?  false ? invariant(false, 'getNodeFromInstance: Invalid argument.') : _prodInvariant('33') : void 0;
	  !('_hostNode' in instB) ?  false ? invariant(false, 'getNodeFromInstance: Invalid argument.') : _prodInvariant('33') : void 0;

	  var depthA = 0;
	  for (var tempA = instA; tempA; tempA = tempA._hostParent) {
	    depthA++;
	  }
	  var depthB = 0;
	  for (var tempB = instB; tempB; tempB = tempB._hostParent) {
	    depthB++;
	  }

	  // If A is deeper, crawl up.
	  while (depthA - depthB > 0) {
	    instA = instA._hostParent;
	    depthA--;
	  }

	  // If B is deeper, crawl up.
	  while (depthB - depthA > 0) {
	    instB = instB._hostParent;
	    depthB--;
	  }

	  // Walk in lockstep until we find a match.
	  var depth = depthA;
	  while (depth--) {
	    if (instA === instB) {
	      return instA;
	    }
	    instA = instA._hostParent;
	    instB = instB._hostParent;
	  }
	  return null;
	}

	/**
	 * Return if A is an ancestor of B.
	 */
	function isAncestor(instA, instB) {
	  !('_hostNode' in instA) ?  false ? invariant(false, 'isAncestor: Invalid argument.') : _prodInvariant('35') : void 0;
	  !('_hostNode' in instB) ?  false ? invariant(false, 'isAncestor: Invalid argument.') : _prodInvariant('35') : void 0;

	  while (instB) {
	    if (instB === instA) {
	      return true;
	    }
	    instB = instB._hostParent;
	  }
	  return false;
	}

	/**
	 * Return the parent instance of the passed-in instance.
	 */
	function getParentInstance(inst) {
	  !('_hostNode' in inst) ?  false ? invariant(false, 'getParentInstance: Invalid argument.') : _prodInvariant('36') : void 0;

	  return inst._hostParent;
	}

	/**
	 * Simulates the traversal of a two-phase, capture/bubble event dispatch.
	 */
	function traverseTwoPhase(inst, fn, arg) {
	  var path = [];
	  while (inst) {
	    path.push(inst);
	    inst = inst._hostParent;
	  }
	  var i;
	  for (i = path.length; i-- > 0;) {
	    fn(path[i], false, arg);
	  }
	  for (i = 0; i < path.length; i++) {
	    fn(path[i], true, arg);
	  }
	}

	/**
	 * Traverses the ID hierarchy and invokes the supplied `cb` on any IDs that
	 * should would receive a `mouseEnter` or `mouseLeave` event.
	 *
	 * Does not invoke the callback on the nearest common ancestor because nothing
	 * "entered" or "left" that element.
	 */
	function traverseEnterLeave(from, to, fn, argFrom, argTo) {
	  var common = from && to ? getLowestCommonAncestor(from, to) : null;
	  var pathFrom = [];
	  while (from && from !== common) {
	    pathFrom.push(from);
	    from = from._hostParent;
	  }
	  var pathTo = [];
	  while (to && to !== common) {
	    pathTo.push(to);
	    to = to._hostParent;
	  }
	  var i;
	  for (i = 0; i < pathFrom.length; i++) {
	    fn(pathFrom[i], true, argFrom);
	  }
	  for (i = pathTo.length; i-- > 0;) {
	    fn(pathTo[i], false, argTo);
	  }
	}

	module.exports = {
	  isAncestor: isAncestor,
	  getLowestCommonAncestor: getLowestCommonAncestor,
	  getParentInstance: getParentInstance,
	  traverseTwoPhase: traverseTwoPhase,
	  traverseEnterLeave: traverseEnterLeave
	};

/***/ },
/* 165 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDefaultBatchingStrategy
	 */

	'use strict';

	var _assign = __webpack_require__(4);

	var ReactUpdates = __webpack_require__(11);
	var Transaction = __webpack_require__(25);

	var emptyFunction = __webpack_require__(9);

	var RESET_BATCHED_UPDATES = {
	  initialize: emptyFunction,
	  close: function () {
	    ReactDefaultBatchingStrategy.isBatchingUpdates = false;
	  }
	};

	var FLUSH_BATCHED_UPDATES = {
	  initialize: emptyFunction,
	  close: ReactUpdates.flushBatchedUpdates.bind(ReactUpdates)
	};

	var TRANSACTION_WRAPPERS = [FLUSH_BATCHED_UPDATES, RESET_BATCHED_UPDATES];

	function ReactDefaultBatchingStrategyTransaction() {
	  this.reinitializeTransaction();
	}

	_assign(ReactDefaultBatchingStrategyTransaction.prototype, Transaction.Mixin, {
	  getTransactionWrappers: function () {
	    return TRANSACTION_WRAPPERS;
	  }
	});

	var transaction = new ReactDefaultBatchingStrategyTransaction();

	var ReactDefaultBatchingStrategy = {
	  isBatchingUpdates: false,

	  /**
	   * Call the provided function in a context within which calls to `setState`
	   * and friends are batched such that components aren't updated unnecessarily.
	   */
	  batchedUpdates: function (callback, a, b, c, d, e) {
	    var alreadyBatchingUpdates = ReactDefaultBatchingStrategy.isBatchingUpdates;

	    ReactDefaultBatchingStrategy.isBatchingUpdates = true;

	    // The code is written this way to avoid extra allocations
	    if (alreadyBatchingUpdates) {
	      callback(a, b, c, d, e);
	    } else {
	      transaction.perform(callback, null, a, b, c, d, e);
	    }
	  }
	};

	module.exports = ReactDefaultBatchingStrategy;

/***/ },
/* 166 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDefaultInjection
	 */

	'use strict';

	var BeforeInputEventPlugin = __webpack_require__(139);
	var ChangeEventPlugin = __webpack_require__(141);
	var DefaultEventPluginOrder = __webpack_require__(143);
	var EnterLeaveEventPlugin = __webpack_require__(144);
	var HTMLDOMPropertyConfig = __webpack_require__(146);
	var ReactComponentBrowserEnvironment = __webpack_require__(74);
	var ReactDOMComponent = __webpack_require__(152);
	var ReactDOMComponentTree = __webpack_require__(5);
	var ReactDOMEmptyComponent = __webpack_require__(154);
	var ReactDOMTreeTraversal = __webpack_require__(164);
	var ReactDOMTextComponent = __webpack_require__(162);
	var ReactDefaultBatchingStrategy = __webpack_require__(165);
	var ReactEventListener = __webpack_require__(168);
	var ReactInjection = __webpack_require__(169);
	var ReactReconcileTransaction = __webpack_require__(174);
	var SVGDOMPropertyConfig = __webpack_require__(178);
	var SelectEventPlugin = __webpack_require__(179);
	var SimpleEventPlugin = __webpack_require__(180);

	var alreadyInjected = false;

	function inject() {
	  if (alreadyInjected) {
	    // TODO: This is currently true because these injections are shared between
	    // the client and the server package. They should be built independently
	    // and not share any injection state. Then this problem will be solved.
	    return;
	  }
	  alreadyInjected = true;

	  ReactInjection.EventEmitter.injectReactEventListener(ReactEventListener);

	  /**
	   * Inject modules for resolving DOM hierarchy and plugin ordering.
	   */
	  ReactInjection.EventPluginHub.injectEventPluginOrder(DefaultEventPluginOrder);
	  ReactInjection.EventPluginUtils.injectComponentTree(ReactDOMComponentTree);
	  ReactInjection.EventPluginUtils.injectTreeTraversal(ReactDOMTreeTraversal);

	  /**
	   * Some important event plugins included by default (without having to require
	   * them).
	   */
	  ReactInjection.EventPluginHub.injectEventPluginsByName({
	    SimpleEventPlugin: SimpleEventPlugin,
	    EnterLeaveEventPlugin: EnterLeaveEventPlugin,
	    ChangeEventPlugin: ChangeEventPlugin,
	    SelectEventPlugin: SelectEventPlugin,
	    BeforeInputEventPlugin: BeforeInputEventPlugin
	  });

	  ReactInjection.HostComponent.injectGenericComponentClass(ReactDOMComponent);

	  ReactInjection.HostComponent.injectTextComponentClass(ReactDOMTextComponent);

	  ReactInjection.DOMProperty.injectDOMPropertyConfig(HTMLDOMPropertyConfig);
	  ReactInjection.DOMProperty.injectDOMPropertyConfig(SVGDOMPropertyConfig);

	  ReactInjection.EmptyComponent.injectEmptyComponentFactory(function (instantiate) {
	    return new ReactDOMEmptyComponent(instantiate);
	  });

	  ReactInjection.Updates.injectReconcileTransaction(ReactReconcileTransaction);
	  ReactInjection.Updates.injectBatchingStrategy(ReactDefaultBatchingStrategy);

	  ReactInjection.Component.injectEnvironment(ReactComponentBrowserEnvironment);
	}

	module.exports = {
	  inject: inject
	};

/***/ },
/* 167 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactEventEmitterMixin
	 */

	'use strict';

	var EventPluginHub = __webpack_require__(21);

	function runEventQueueInBatch(events) {
	  EventPluginHub.enqueueEvents(events);
	  EventPluginHub.processEventQueue(false);
	}

	var ReactEventEmitterMixin = {

	  /**
	   * Streams a fired top-level event to `EventPluginHub` where plugins have the
	   * opportunity to create `ReactEvent`s to be dispatched.
	   */
	  handleTopLevel: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	    var events = EventPluginHub.extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget);
	    runEventQueueInBatch(events);
	  }
	};

	module.exports = ReactEventEmitterMixin;

/***/ },
/* 168 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactEventListener
	 */

	'use strict';

	var _assign = __webpack_require__(4);

	var EventListener = __webpack_require__(59);
	var ExecutionEnvironment = __webpack_require__(7);
	var PooledClass = __webpack_require__(15);
	var ReactDOMComponentTree = __webpack_require__(5);
	var ReactUpdates = __webpack_require__(11);

	var getEventTarget = __webpack_require__(54);
	var getUnboundedScrollPosition = __webpack_require__(104);

	/**
	 * Find the deepest React component completely containing the root of the
	 * passed-in instance (for use when entire React trees are nested within each
	 * other). If React trees are not nested, returns null.
	 */
	function findParent(inst) {
	  // TODO: It may be a good idea to cache this to prevent unnecessary DOM
	  // traversal, but caching is difficult to do correctly without using a
	  // mutation observer to listen for all DOM changes.
	  while (inst._hostParent) {
	    inst = inst._hostParent;
	  }
	  var rootNode = ReactDOMComponentTree.getNodeFromInstance(inst);
	  var container = rootNode.parentNode;
	  return ReactDOMComponentTree.getClosestInstanceFromNode(container);
	}

	// Used to store ancestor hierarchy in top level callback
	function TopLevelCallbackBookKeeping(topLevelType, nativeEvent) {
	  this.topLevelType = topLevelType;
	  this.nativeEvent = nativeEvent;
	  this.ancestors = [];
	}
	_assign(TopLevelCallbackBookKeeping.prototype, {
	  destructor: function () {
	    this.topLevelType = null;
	    this.nativeEvent = null;
	    this.ancestors.length = 0;
	  }
	});
	PooledClass.addPoolingTo(TopLevelCallbackBookKeeping, PooledClass.twoArgumentPooler);

	function handleTopLevelImpl(bookKeeping) {
	  var nativeEventTarget = getEventTarget(bookKeeping.nativeEvent);
	  var targetInst = ReactDOMComponentTree.getClosestInstanceFromNode(nativeEventTarget);

	  // Loop through the hierarchy, in case there's any nested components.
	  // It's important that we build the array of ancestors before calling any
	  // event handlers, because event handlers can modify the DOM, leading to
	  // inconsistencies with ReactMount's node cache. See #1105.
	  var ancestor = targetInst;
	  do {
	    bookKeeping.ancestors.push(ancestor);
	    ancestor = ancestor && findParent(ancestor);
	  } while (ancestor);

	  for (var i = 0; i < bookKeeping.ancestors.length; i++) {
	    targetInst = bookKeeping.ancestors[i];
	    ReactEventListener._handleTopLevel(bookKeeping.topLevelType, targetInst, bookKeeping.nativeEvent, getEventTarget(bookKeeping.nativeEvent));
	  }
	}

	function scrollValueMonitor(cb) {
	  var scrollPosition = getUnboundedScrollPosition(window);
	  cb(scrollPosition);
	}

	var ReactEventListener = {
	  _enabled: true,
	  _handleTopLevel: null,

	  WINDOW_HANDLE: ExecutionEnvironment.canUseDOM ? window : null,

	  setHandleTopLevel: function (handleTopLevel) {
	    ReactEventListener._handleTopLevel = handleTopLevel;
	  },

	  setEnabled: function (enabled) {
	    ReactEventListener._enabled = !!enabled;
	  },

	  isEnabled: function () {
	    return ReactEventListener._enabled;
	  },

	  /**
	   * Traps top-level events by using event bubbling.
	   *
	   * @param {string} topLevelType Record from `EventConstants`.
	   * @param {string} handlerBaseName Event name (e.g. "click").
	   * @param {object} handle Element on which to attach listener.
	   * @return {?object} An object with a remove function which will forcefully
	   *                  remove the listener.
	   * @internal
	   */
	  trapBubbledEvent: function (topLevelType, handlerBaseName, handle) {
	    var element = handle;
	    if (!element) {
	      return null;
	    }
	    return EventListener.listen(element, handlerBaseName, ReactEventListener.dispatchEvent.bind(null, topLevelType));
	  },

	  /**
	   * Traps a top-level event by using event capturing.
	   *
	   * @param {string} topLevelType Record from `EventConstants`.
	   * @param {string} handlerBaseName Event name (e.g. "click").
	   * @param {object} handle Element on which to attach listener.
	   * @return {?object} An object with a remove function which will forcefully
	   *                  remove the listener.
	   * @internal
	   */
	  trapCapturedEvent: function (topLevelType, handlerBaseName, handle) {
	    var element = handle;
	    if (!element) {
	      return null;
	    }
	    return EventListener.capture(element, handlerBaseName, ReactEventListener.dispatchEvent.bind(null, topLevelType));
	  },

	  monitorScrollValue: function (refresh) {
	    var callback = scrollValueMonitor.bind(null, refresh);
	    EventListener.listen(window, 'scroll', callback);
	  },

	  dispatchEvent: function (topLevelType, nativeEvent) {
	    if (!ReactEventListener._enabled) {
	      return;
	    }

	    var bookKeeping = TopLevelCallbackBookKeeping.getPooled(topLevelType, nativeEvent);
	    try {
	      // Event queue being processed in the same cycle allows
	      // `preventDefault`.
	      ReactUpdates.batchedUpdates(handleTopLevelImpl, bookKeeping);
	    } finally {
	      TopLevelCallbackBookKeeping.release(bookKeeping);
	    }
	  }
	};

	module.exports = ReactEventListener;

/***/ },
/* 169 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactInjection
	 */

	'use strict';

	var DOMProperty = __webpack_require__(18);
	var EventPluginHub = __webpack_require__(21);
	var EventPluginUtils = __webpack_require__(39);
	var ReactComponentEnvironment = __webpack_require__(43);
	var ReactClass = __webpack_require__(73);
	var ReactEmptyComponent = __webpack_require__(77);
	var ReactBrowserEventEmitter = __webpack_require__(28);
	var ReactHostComponent = __webpack_require__(79);
	var ReactUpdates = __webpack_require__(11);

	var ReactInjection = {
	  Component: ReactComponentEnvironment.injection,
	  Class: ReactClass.injection,
	  DOMProperty: DOMProperty.injection,
	  EmptyComponent: ReactEmptyComponent.injection,
	  EventPluginHub: EventPluginHub.injection,
	  EventPluginUtils: EventPluginUtils.injection,
	  EventEmitter: ReactBrowserEventEmitter.injection,
	  HostComponent: ReactHostComponent.injection,
	  Updates: ReactUpdates.injection
	};

	module.exports = ReactInjection;

/***/ },
/* 170 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactMarkupChecksum
	 */

	'use strict';

	var adler32 = __webpack_require__(191);

	var TAG_END = /\/?>/;
	var COMMENT_START = /^<\!\-\-/;

	var ReactMarkupChecksum = {
	  CHECKSUM_ATTR_NAME: 'data-react-checksum',

	  /**
	   * @param {string} markup Markup string
	   * @return {string} Markup string with checksum attribute attached
	   */
	  addChecksumToMarkup: function (markup) {
	    var checksum = adler32(markup);

	    // Add checksum (handle both parent tags, comments and self-closing tags)
	    if (COMMENT_START.test(markup)) {
	      return markup;
	    } else {
	      return markup.replace(TAG_END, ' ' + ReactMarkupChecksum.CHECKSUM_ATTR_NAME + '="' + checksum + '"$&');
	    }
	  },

	  /**
	   * @param {string} markup to use
	   * @param {DOMElement} element root React element
	   * @returns {boolean} whether or not the markup is the same
	   */
	  canReuseMarkup: function (markup, element) {
	    var existingChecksum = element.getAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);
	    existingChecksum = existingChecksum && parseInt(existingChecksum, 10);
	    var markupChecksum = adler32(markup);
	    return markupChecksum === existingChecksum;
	  }
	};

	module.exports = ReactMarkupChecksum;

/***/ },
/* 171 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactMultiChild
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(2);

	var ReactComponentEnvironment = __webpack_require__(43);
	var ReactInstanceMap = __webpack_require__(23);
	var ReactInstrumentation = __webpack_require__(8);
	var ReactMultiChildUpdateTypes = __webpack_require__(82);

	var ReactCurrentOwner = __webpack_require__(16);
	var ReactReconciler = __webpack_require__(19);
	var ReactChildReconciler = __webpack_require__(148);

	var emptyFunction = __webpack_require__(9);
	var flattenChildren = __webpack_require__(195);
	var invariant = __webpack_require__(1);

	/**
	 * Make an update for markup to be rendered and inserted at a supplied index.
	 *
	 * @param {string} markup Markup that renders into an element.
	 * @param {number} toIndex Destination index.
	 * @private
	 */
	function makeInsertMarkup(markup, afterNode, toIndex) {
	  // NOTE: Null values reduce hidden classes.
	  return {
	    type: ReactMultiChildUpdateTypes.INSERT_MARKUP,
	    content: markup,
	    fromIndex: null,
	    fromNode: null,
	    toIndex: toIndex,
	    afterNode: afterNode
	  };
	}

	/**
	 * Make an update for moving an existing element to another index.
	 *
	 * @param {number} fromIndex Source index of the existing element.
	 * @param {number} toIndex Destination index of the element.
	 * @private
	 */
	function makeMove(child, afterNode, toIndex) {
	  // NOTE: Null values reduce hidden classes.
	  return {
	    type: ReactMultiChildUpdateTypes.MOVE_EXISTING,
	    content: null,
	    fromIndex: child._mountIndex,
	    fromNode: ReactReconciler.getHostNode(child),
	    toIndex: toIndex,
	    afterNode: afterNode
	  };
	}

	/**
	 * Make an update for removing an element at an index.
	 *
	 * @param {number} fromIndex Index of the element to remove.
	 * @private
	 */
	function makeRemove(child, node) {
	  // NOTE: Null values reduce hidden classes.
	  return {
	    type: ReactMultiChildUpdateTypes.REMOVE_NODE,
	    content: null,
	    fromIndex: child._mountIndex,
	    fromNode: node,
	    toIndex: null,
	    afterNode: null
	  };
	}

	/**
	 * Make an update for setting the markup of a node.
	 *
	 * @param {string} markup Markup that renders into an element.
	 * @private
	 */
	function makeSetMarkup(markup) {
	  // NOTE: Null values reduce hidden classes.
	  return {
	    type: ReactMultiChildUpdateTypes.SET_MARKUP,
	    content: markup,
	    fromIndex: null,
	    fromNode: null,
	    toIndex: null,
	    afterNode: null
	  };
	}

	/**
	 * Make an update for setting the text content.
	 *
	 * @param {string} textContent Text content to set.
	 * @private
	 */
	function makeTextContent(textContent) {
	  // NOTE: Null values reduce hidden classes.
	  return {
	    type: ReactMultiChildUpdateTypes.TEXT_CONTENT,
	    content: textContent,
	    fromIndex: null,
	    fromNode: null,
	    toIndex: null,
	    afterNode: null
	  };
	}

	/**
	 * Push an update, if any, onto the queue. Creates a new queue if none is
	 * passed and always returns the queue. Mutative.
	 */
	function enqueue(queue, update) {
	  if (update) {
	    queue = queue || [];
	    queue.push(update);
	  }
	  return queue;
	}

	/**
	 * Processes any enqueued updates.
	 *
	 * @private
	 */
	function processQueue(inst, updateQueue) {
	  ReactComponentEnvironment.processChildrenUpdates(inst, updateQueue);
	}

	var setParentForInstrumentation = emptyFunction;
	var setChildrenForInstrumentation = emptyFunction;
	if (false) {
	  var getDebugID = function (inst) {
	    if (!inst._debugID) {
	      // Check for ART-like instances. TODO: This is silly/gross.
	      var internal;
	      if (internal = ReactInstanceMap.get(inst)) {
	        inst = internal;
	      }
	    }
	    return inst._debugID;
	  };
	  setParentForInstrumentation = function (child) {
	    if (child._debugID !== 0) {
	      ReactInstrumentation.debugTool.onSetParent(child._debugID, getDebugID(this));
	    }
	  };
	  setChildrenForInstrumentation = function (children) {
	    var debugID = getDebugID(this);
	    // TODO: React Native empty components are also multichild.
	    // This means they still get into this method but don't have _debugID.
	    if (debugID !== 0) {
	      ReactInstrumentation.debugTool.onSetChildren(debugID, children ? Object.keys(children).map(function (key) {
	        return children[key]._debugID;
	      }) : []);
	    }
	  };
	}

	/**
	 * ReactMultiChild are capable of reconciling multiple children.
	 *
	 * @class ReactMultiChild
	 * @internal
	 */
	var ReactMultiChild = {

	  /**
	   * Provides common functionality for components that must reconcile multiple
	   * children. This is used by `ReactDOMComponent` to mount, update, and
	   * unmount child components.
	   *
	   * @lends {ReactMultiChild.prototype}
	   */
	  Mixin: {

	    _reconcilerInstantiateChildren: function (nestedChildren, transaction, context) {
	      if (false) {
	        if (this._currentElement) {
	          try {
	            ReactCurrentOwner.current = this._currentElement._owner;
	            return ReactChildReconciler.instantiateChildren(nestedChildren, transaction, context, this._debugID);
	          } finally {
	            ReactCurrentOwner.current = null;
	          }
	        }
	      }
	      return ReactChildReconciler.instantiateChildren(nestedChildren, transaction, context);
	    },

	    _reconcilerUpdateChildren: function (prevChildren, nextNestedChildrenElements, mountImages, removedNodes, transaction, context) {
	      var nextChildren;
	      if (false) {
	        if (this._currentElement) {
	          try {
	            ReactCurrentOwner.current = this._currentElement._owner;
	            nextChildren = flattenChildren(nextNestedChildrenElements, this._debugID);
	          } finally {
	            ReactCurrentOwner.current = null;
	          }
	          ReactChildReconciler.updateChildren(prevChildren, nextChildren, mountImages, removedNodes, transaction, this, this._hostContainerInfo, context);
	          return nextChildren;
	        }
	      }
	      nextChildren = flattenChildren(nextNestedChildrenElements);
	      ReactChildReconciler.updateChildren(prevChildren, nextChildren, mountImages, removedNodes, transaction, this, this._hostContainerInfo, context);
	      return nextChildren;
	    },

	    /**
	     * Generates a "mount image" for each of the supplied children. In the case
	     * of `ReactDOMComponent`, a mount image is a string of markup.
	     *
	     * @param {?object} nestedChildren Nested child maps.
	     * @return {array} An array of mounted representations.
	     * @internal
	     */
	    mountChildren: function (nestedChildren, transaction, context) {
	      var children = this._reconcilerInstantiateChildren(nestedChildren, transaction, context);
	      this._renderedChildren = children;

	      var mountImages = [];
	      var index = 0;
	      for (var name in children) {
	        if (children.hasOwnProperty(name)) {
	          var child = children[name];
	          if (false) {
	            setParentForInstrumentation.call(this, child);
	          }
	          var mountImage = ReactReconciler.mountComponent(child, transaction, this, this._hostContainerInfo, context);
	          child._mountIndex = index++;
	          mountImages.push(mountImage);
	        }
	      }

	      if (false) {
	        setChildrenForInstrumentation.call(this, children);
	      }

	      return mountImages;
	    },

	    /**
	     * Replaces any rendered children with a text content string.
	     *
	     * @param {string} nextContent String of content.
	     * @internal
	     */
	    updateTextContent: function (nextContent) {
	      var prevChildren = this._renderedChildren;
	      // Remove any rendered children.
	      ReactChildReconciler.unmountChildren(prevChildren, false);
	      for (var name in prevChildren) {
	        if (prevChildren.hasOwnProperty(name)) {
	           true ?  false ? invariant(false, 'updateTextContent called on non-empty component.') : _prodInvariant('118') : void 0;
	        }
	      }
	      // Set new text content.
	      var updates = [makeTextContent(nextContent)];
	      processQueue(this, updates);
	    },

	    /**
	     * Replaces any rendered children with a markup string.
	     *
	     * @param {string} nextMarkup String of markup.
	     * @internal
	     */
	    updateMarkup: function (nextMarkup) {
	      var prevChildren = this._renderedChildren;
	      // Remove any rendered children.
	      ReactChildReconciler.unmountChildren(prevChildren, false);
	      for (var name in prevChildren) {
	        if (prevChildren.hasOwnProperty(name)) {
	           true ?  false ? invariant(false, 'updateTextContent called on non-empty component.') : _prodInvariant('118') : void 0;
	        }
	      }
	      var updates = [makeSetMarkup(nextMarkup)];
	      processQueue(this, updates);
	    },

	    /**
	     * Updates the rendered children with new children.
	     *
	     * @param {?object} nextNestedChildrenElements Nested child element maps.
	     * @param {ReactReconcileTransaction} transaction
	     * @internal
	     */
	    updateChildren: function (nextNestedChildrenElements, transaction, context) {
	      // Hook used by React ART
	      this._updateChildren(nextNestedChildrenElements, transaction, context);
	    },

	    /**
	     * @param {?object} nextNestedChildrenElements Nested child element maps.
	     * @param {ReactReconcileTransaction} transaction
	     * @final
	     * @protected
	     */
	    _updateChildren: function (nextNestedChildrenElements, transaction, context) {
	      var prevChildren = this._renderedChildren;
	      var removedNodes = {};
	      var mountImages = [];
	      var nextChildren = this._reconcilerUpdateChildren(prevChildren, nextNestedChildrenElements, mountImages, removedNodes, transaction, context);
	      if (!nextChildren && !prevChildren) {
	        return;
	      }
	      var updates = null;
	      var name;
	      // `nextIndex` will increment for each child in `nextChildren`, but
	      // `lastIndex` will be the last index visited in `prevChildren`.
	      var nextIndex = 0;
	      var lastIndex = 0;
	      // `nextMountIndex` will increment for each newly mounted child.
	      var nextMountIndex = 0;
	      var lastPlacedNode = null;
	      for (name in nextChildren) {
	        if (!nextChildren.hasOwnProperty(name)) {
	          continue;
	        }
	        var prevChild = prevChildren && prevChildren[name];
	        var nextChild = nextChildren[name];
	        if (prevChild === nextChild) {
	          updates = enqueue(updates, this.moveChild(prevChild, lastPlacedNode, nextIndex, lastIndex));
	          lastIndex = Math.max(prevChild._mountIndex, lastIndex);
	          prevChild._mountIndex = nextIndex;
	        } else {
	          if (prevChild) {
	            // Update `lastIndex` before `_mountIndex` gets unset by unmounting.
	            lastIndex = Math.max(prevChild._mountIndex, lastIndex);
	            // The `removedNodes` loop below will actually remove the child.
	          }
	          // The child must be instantiated before it's mounted.
	          updates = enqueue(updates, this._mountChildAtIndex(nextChild, mountImages[nextMountIndex], lastPlacedNode, nextIndex, transaction, context));
	          nextMountIndex++;
	        }
	        nextIndex++;
	        lastPlacedNode = ReactReconciler.getHostNode(nextChild);
	      }
	      // Remove children that are no longer present.
	      for (name in removedNodes) {
	        if (removedNodes.hasOwnProperty(name)) {
	          updates = enqueue(updates, this._unmountChild(prevChildren[name], removedNodes[name]));
	        }
	      }
	      if (updates) {
	        processQueue(this, updates);
	      }
	      this._renderedChildren = nextChildren;

	      if (false) {
	        setChildrenForInstrumentation.call(this, nextChildren);
	      }
	    },

	    /**
	     * Unmounts all rendered children. This should be used to clean up children
	     * when this component is unmounted. It does not actually perform any
	     * backend operations.
	     *
	     * @internal
	     */
	    unmountChildren: function (safely) {
	      var renderedChildren = this._renderedChildren;
	      ReactChildReconciler.unmountChildren(renderedChildren, safely);
	      this._renderedChildren = null;
	    },

	    /**
	     * Moves a child component to the supplied index.
	     *
	     * @param {ReactComponent} child Component to move.
	     * @param {number} toIndex Destination index of the element.
	     * @param {number} lastIndex Last index visited of the siblings of `child`.
	     * @protected
	     */
	    moveChild: function (child, afterNode, toIndex, lastIndex) {
	      // If the index of `child` is less than `lastIndex`, then it needs to
	      // be moved. Otherwise, we do not need to move it because a child will be
	      // inserted or moved before `child`.
	      if (child._mountIndex < lastIndex) {
	        return makeMove(child, afterNode, toIndex);
	      }
	    },

	    /**
	     * Creates a child component.
	     *
	     * @param {ReactComponent} child Component to create.
	     * @param {string} mountImage Markup to insert.
	     * @protected
	     */
	    createChild: function (child, afterNode, mountImage) {
	      return makeInsertMarkup(mountImage, afterNode, child._mountIndex);
	    },

	    /**
	     * Removes a child component.
	     *
	     * @param {ReactComponent} child Child to remove.
	     * @protected
	     */
	    removeChild: function (child, node) {
	      return makeRemove(child, node);
	    },

	    /**
	     * Mounts a child with the supplied name.
	     *
	     * NOTE: This is part of `updateChildren` and is here for readability.
	     *
	     * @param {ReactComponent} child Component to mount.
	     * @param {string} name Name of the child.
	     * @param {number} index Index at which to insert the child.
	     * @param {ReactReconcileTransaction} transaction
	     * @private
	     */
	    _mountChildAtIndex: function (child, mountImage, afterNode, index, transaction, context) {
	      child._mountIndex = index;
	      return this.createChild(child, afterNode, mountImage);
	    },

	    /**
	     * Unmounts a rendered child.
	     *
	     * NOTE: This is part of `updateChildren` and is here for readability.
	     *
	     * @param {ReactComponent} child Component to unmount.
	     * @private
	     */
	    _unmountChild: function (child, node) {
	      var update = this.removeChild(child, node);
	      child._mountIndex = null;
	      return update;
	    }

	  }

	};

	module.exports = ReactMultiChild;

/***/ },
/* 172 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactOwner
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(2);

	var invariant = __webpack_require__(1);

	/**
	 * ReactOwners are capable of storing references to owned components.
	 *
	 * All components are capable of //being// referenced by owner components, but
	 * only ReactOwner components are capable of //referencing// owned components.
	 * The named reference is known as a "ref".
	 *
	 * Refs are available when mounted and updated during reconciliation.
	 *
	 *   var MyComponent = React.createClass({
	 *     render: function() {
	 *       return (
	 *         <div onClick={this.handleClick}>
	 *           <CustomComponent ref="custom" />
	 *         </div>
	 *       );
	 *     },
	 *     handleClick: function() {
	 *       this.refs.custom.handleClick();
	 *     },
	 *     componentDidMount: function() {
	 *       this.refs.custom.initialize();
	 *     }
	 *   });
	 *
	 * Refs should rarely be used. When refs are used, they should only be done to
	 * control data that is not handled by React's data flow.
	 *
	 * @class ReactOwner
	 */
	var ReactOwner = {

	  /**
	   * @param {?object} object
	   * @return {boolean} True if `object` is a valid owner.
	   * @final
	   */
	  isValidOwner: function (object) {
	    return !!(object && typeof object.attachRef === 'function' && typeof object.detachRef === 'function');
	  },

	  /**
	   * Adds a component by ref to an owner component.
	   *
	   * @param {ReactComponent} component Component to reference.
	   * @param {string} ref Name by which to refer to the component.
	   * @param {ReactOwner} owner Component on which to record the ref.
	   * @final
	   * @internal
	   */
	  addComponentAsRefTo: function (component, ref, owner) {
	    !ReactOwner.isValidOwner(owner) ?  false ? invariant(false, 'addComponentAsRefTo(...): Only a ReactOwner can have refs. You might be adding a ref to a component that was not created inside a component\'s `render` method, or you have multiple copies of React loaded (details: https://fb.me/react-refs-must-have-owner).') : _prodInvariant('119') : void 0;
	    owner.attachRef(ref, component);
	  },

	  /**
	   * Removes a component by ref from an owner component.
	   *
	   * @param {ReactComponent} component Component to dereference.
	   * @param {string} ref Name of the ref to remove.
	   * @param {ReactOwner} owner Component on which the ref is recorded.
	   * @final
	   * @internal
	   */
	  removeComponentAsRefFrom: function (component, ref, owner) {
	    !ReactOwner.isValidOwner(owner) ?  false ? invariant(false, 'removeComponentAsRefFrom(...): Only a ReactOwner can have refs. You might be removing a ref to a component that was not created inside a component\'s `render` method, or you have multiple copies of React loaded (details: https://fb.me/react-refs-must-have-owner).') : _prodInvariant('120') : void 0;
	    var ownerPublicInstance = owner.getPublicInstance();
	    // Check that `component`'s owner is still alive and that `component` is still the current ref
	    // because we do not want to detach the ref if another component stole it.
	    if (ownerPublicInstance && ownerPublicInstance.refs[ref] === component.getPublicInstance()) {
	      owner.detachRef(ref);
	    }
	  }

	};

	module.exports = ReactOwner;

/***/ },
/* 173 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactPureComponent
	 */

	'use strict';

	var _assign = __webpack_require__(4);

	var ReactComponent = __webpack_require__(42);
	var ReactNoopUpdateQueue = __webpack_require__(46);

	var emptyObject = __webpack_require__(20);

	/**
	 * Base class helpers for the updating state of a component.
	 */
	function ReactPureComponent(props, context, updater) {
	  // Duplicated from ReactComponent.
	  this.props = props;
	  this.context = context;
	  this.refs = emptyObject;
	  // We initialize the default updater but the real one gets injected by the
	  // renderer.
	  this.updater = updater || ReactNoopUpdateQueue;
	}

	function ComponentDummy() {}
	ComponentDummy.prototype = ReactComponent.prototype;
	ReactPureComponent.prototype = new ComponentDummy();
	ReactPureComponent.prototype.constructor = ReactPureComponent;
	// Avoid an extra prototype jump for these methods.
	_assign(ReactPureComponent.prototype, ReactComponent.prototype);
	ReactPureComponent.prototype.isPureReactComponent = true;

	module.exports = ReactPureComponent;

/***/ },
/* 174 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactReconcileTransaction
	 */

	'use strict';

	var _assign = __webpack_require__(4);

	var CallbackQueue = __webpack_require__(70);
	var PooledClass = __webpack_require__(15);
	var ReactBrowserEventEmitter = __webpack_require__(28);
	var ReactInputSelection = __webpack_require__(80);
	var ReactInstrumentation = __webpack_require__(8);
	var Transaction = __webpack_require__(25);
	var ReactUpdateQueue = __webpack_require__(50);

	/**
	 * Ensures that, when possible, the selection range (currently selected text
	 * input) is not disturbed by performing the transaction.
	 */
	var SELECTION_RESTORATION = {
	  /**
	   * @return {Selection} Selection information.
	   */
	  initialize: ReactInputSelection.getSelectionInformation,
	  /**
	   * @param {Selection} sel Selection information returned from `initialize`.
	   */
	  close: ReactInputSelection.restoreSelection
	};

	/**
	 * Suppresses events (blur/focus) that could be inadvertently dispatched due to
	 * high level DOM manipulations (like temporarily removing a text input from the
	 * DOM).
	 */
	var EVENT_SUPPRESSION = {
	  /**
	   * @return {boolean} The enabled status of `ReactBrowserEventEmitter` before
	   * the reconciliation.
	   */
	  initialize: function () {
	    var currentlyEnabled = ReactBrowserEventEmitter.isEnabled();
	    ReactBrowserEventEmitter.setEnabled(false);
	    return currentlyEnabled;
	  },

	  /**
	   * @param {boolean} previouslyEnabled Enabled status of
	   *   `ReactBrowserEventEmitter` before the reconciliation occurred. `close`
	   *   restores the previous value.
	   */
	  close: function (previouslyEnabled) {
	    ReactBrowserEventEmitter.setEnabled(previouslyEnabled);
	  }
	};

	/**
	 * Provides a queue for collecting `componentDidMount` and
	 * `componentDidUpdate` callbacks during the transaction.
	 */
	var ON_DOM_READY_QUEUEING = {
	  /**
	   * Initializes the internal `onDOMReady` queue.
	   */
	  initialize: function () {
	    this.reactMountReady.reset();
	  },

	  /**
	   * After DOM is flushed, invoke all registered `onDOMReady` callbacks.
	   */
	  close: function () {
	    this.reactMountReady.notifyAll();
	  }
	};

	/**
	 * Executed within the scope of the `Transaction` instance. Consider these as
	 * being member methods, but with an implied ordering while being isolated from
	 * each other.
	 */
	var TRANSACTION_WRAPPERS = [SELECTION_RESTORATION, EVENT_SUPPRESSION, ON_DOM_READY_QUEUEING];

	if (false) {
	  TRANSACTION_WRAPPERS.push({
	    initialize: ReactInstrumentation.debugTool.onBeginFlush,
	    close: ReactInstrumentation.debugTool.onEndFlush
	  });
	}

	/**
	 * Currently:
	 * - The order that these are listed in the transaction is critical:
	 * - Suppresses events.
	 * - Restores selection range.
	 *
	 * Future:
	 * - Restore document/overflow scroll positions that were unintentionally
	 *   modified via DOM insertions above the top viewport boundary.
	 * - Implement/integrate with customized constraint based layout system and keep
	 *   track of which dimensions must be remeasured.
	 *
	 * @class ReactReconcileTransaction
	 */
	function ReactReconcileTransaction(useCreateElement) {
	  this.reinitializeTransaction();
	  // Only server-side rendering really needs this option (see
	  // `ReactServerRendering`), but server-side uses
	  // `ReactServerRenderingTransaction` instead. This option is here so that it's
	  // accessible and defaults to false when `ReactDOMComponent` and
	  // `ReactDOMTextComponent` checks it in `mountComponent`.`
	  this.renderToStaticMarkup = false;
	  this.reactMountReady = CallbackQueue.getPooled(null);
	  this.useCreateElement = useCreateElement;
	}

	var Mixin = {
	  /**
	   * @see Transaction
	   * @abstract
	   * @final
	   * @return {array<object>} List of operation wrap procedures.
	   *   TODO: convert to array<TransactionWrapper>
	   */
	  getTransactionWrappers: function () {
	    return TRANSACTION_WRAPPERS;
	  },

	  /**
	   * @return {object} The queue to collect `onDOMReady` callbacks with.
	   */
	  getReactMountReady: function () {
	    return this.reactMountReady;
	  },

	  /**
	   * @return {object} The queue to collect React async events.
	   */
	  getUpdateQueue: function () {
	    return ReactUpdateQueue;
	  },

	  /**
	   * Save current transaction state -- if the return value from this method is
	   * passed to `rollback`, the transaction will be reset to that state.
	   */
	  checkpoint: function () {
	    // reactMountReady is the our only stateful wrapper
	    return this.reactMountReady.checkpoint();
	  },

	  rollback: function (checkpoint) {
	    this.reactMountReady.rollback(checkpoint);
	  },

	  /**
	   * `PooledClass` looks for this, and will invoke this before allowing this
	   * instance to be reused.
	   */
	  destructor: function () {
	    CallbackQueue.release(this.reactMountReady);
	    this.reactMountReady = null;
	  }
	};

	_assign(ReactReconcileTransaction.prototype, Transaction.Mixin, Mixin);

	PooledClass.addPoolingTo(ReactReconcileTransaction);

	module.exports = ReactReconcileTransaction;

/***/ },
/* 175 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactRef
	 */

	'use strict';

	var ReactOwner = __webpack_require__(172);

	var ReactRef = {};

	function attachRef(ref, component, owner) {
	  if (typeof ref === 'function') {
	    ref(component.getPublicInstance());
	  } else {
	    // Legacy ref
	    ReactOwner.addComponentAsRefTo(component, ref, owner);
	  }
	}

	function detachRef(ref, component, owner) {
	  if (typeof ref === 'function') {
	    ref(null);
	  } else {
	    // Legacy ref
	    ReactOwner.removeComponentAsRefFrom(component, ref, owner);
	  }
	}

	ReactRef.attachRefs = function (instance, element) {
	  if (element === null || element === false) {
	    return;
	  }
	  var ref = element.ref;
	  if (ref != null) {
	    attachRef(ref, instance, element._owner);
	  }
	};

	ReactRef.shouldUpdateRefs = function (prevElement, nextElement) {
	  // If either the owner or a `ref` has changed, make sure the newest owner
	  // has stored a reference to `this`, and the previous owner (if different)
	  // has forgotten the reference to `this`. We use the element instead
	  // of the public this.props because the post processing cannot determine
	  // a ref. The ref conceptually lives on the element.

	  // TODO: Should this even be possible? The owner cannot change because
	  // it's forbidden by shouldUpdateReactComponent. The ref can change
	  // if you swap the keys of but not the refs. Reconsider where this check
	  // is made. It probably belongs where the key checking and
	  // instantiateReactComponent is done.

	  var prevEmpty = prevElement === null || prevElement === false;
	  var nextEmpty = nextElement === null || nextElement === false;

	  return(
	    // This has a few false positives w/r/t empty components.
	    prevEmpty || nextEmpty || nextElement.ref !== prevElement.ref ||
	    // If owner changes but we have an unchanged function ref, don't update refs
	    typeof nextElement.ref === 'string' && nextElement._owner !== prevElement._owner
	  );
	};

	ReactRef.detachRefs = function (instance, element) {
	  if (element === null || element === false) {
	    return;
	  }
	  var ref = element.ref;
	  if (ref != null) {
	    detachRef(ref, instance, element._owner);
	  }
	};

	module.exports = ReactRef;

/***/ },
/* 176 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2014-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactServerRenderingTransaction
	 */

	'use strict';

	var _assign = __webpack_require__(4);

	var PooledClass = __webpack_require__(15);
	var Transaction = __webpack_require__(25);
	var ReactInstrumentation = __webpack_require__(8);
	var ReactServerUpdateQueue = __webpack_require__(177);

	/**
	 * Executed within the scope of the `Transaction` instance. Consider these as
	 * being member methods, but with an implied ordering while being isolated from
	 * each other.
	 */
	var TRANSACTION_WRAPPERS = [];

	if (false) {
	  TRANSACTION_WRAPPERS.push({
	    initialize: ReactInstrumentation.debugTool.onBeginFlush,
	    close: ReactInstrumentation.debugTool.onEndFlush
	  });
	}

	var noopCallbackQueue = {
	  enqueue: function () {}
	};

	/**
	 * @class ReactServerRenderingTransaction
	 * @param {boolean} renderToStaticMarkup
	 */
	function ReactServerRenderingTransaction(renderToStaticMarkup) {
	  this.reinitializeTransaction();
	  this.renderToStaticMarkup = renderToStaticMarkup;
	  this.useCreateElement = false;
	  this.updateQueue = new ReactServerUpdateQueue(this);
	}

	var Mixin = {
	  /**
	   * @see Transaction
	   * @abstract
	   * @final
	   * @return {array} Empty list of operation wrap procedures.
	   */
	  getTransactionWrappers: function () {
	    return TRANSACTION_WRAPPERS;
	  },

	  /**
	   * @return {object} The queue to collect `onDOMReady` callbacks with.
	   */
	  getReactMountReady: function () {
	    return noopCallbackQueue;
	  },

	  /**
	   * @return {object} The queue to collect React async events.
	   */
	  getUpdateQueue: function () {
	    return this.updateQueue;
	  },

	  /**
	   * `PooledClass` looks for this, and will invoke this before allowing this
	   * instance to be reused.
	   */
	  destructor: function () {},

	  checkpoint: function () {},

	  rollback: function () {}
	};

	_assign(ReactServerRenderingTransaction.prototype, Transaction.Mixin, Mixin);

	PooledClass.addPoolingTo(ReactServerRenderingTransaction);

	module.exports = ReactServerRenderingTransaction;

/***/ },
/* 177 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2015-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactServerUpdateQueue
	 *
	 */

	'use strict';

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	var ReactUpdateQueue = __webpack_require__(50);
	var Transaction = __webpack_require__(25);
	var warning = __webpack_require__(3);

	function warnNoop(publicInstance, callerName) {
	  if (false) {
	    var constructor = publicInstance.constructor;
	    process.env.NODE_ENV !== 'production' ? warning(false, '%s(...): Can only update a mounting component. ' + 'This usually means you called %s() outside componentWillMount() on the server. ' + 'This is a no-op. Please check the code for the %s component.', callerName, callerName, constructor && (constructor.displayName || constructor.name) || 'ReactClass') : void 0;
	  }
	}

	/**
	 * This is the update queue used for server rendering.
	 * It delegates to ReactUpdateQueue while server rendering is in progress and
	 * switches to ReactNoopUpdateQueue after the transaction has completed.
	 * @class ReactServerUpdateQueue
	 * @param {Transaction} transaction
	 */

	var ReactServerUpdateQueue = function () {
	  /* :: transaction: Transaction; */

	  function ReactServerUpdateQueue(transaction) {
	    _classCallCheck(this, ReactServerUpdateQueue);

	    this.transaction = transaction;
	  }

	  /**
	   * Checks whether or not this composite component is mounted.
	   * @param {ReactClass} publicInstance The instance we want to test.
	   * @return {boolean} True if mounted, false otherwise.
	   * @protected
	   * @final
	   */


	  ReactServerUpdateQueue.prototype.isMounted = function isMounted(publicInstance) {
	    return false;
	  };

	  /**
	   * Enqueue a callback that will be executed after all the pending updates
	   * have processed.
	   *
	   * @param {ReactClass} publicInstance The instance to use as `this` context.
	   * @param {?function} callback Called after state is updated.
	   * @internal
	   */


	  ReactServerUpdateQueue.prototype.enqueueCallback = function enqueueCallback(publicInstance, callback, callerName) {
	    if (this.transaction.isInTransaction()) {
	      ReactUpdateQueue.enqueueCallback(publicInstance, callback, callerName);
	    }
	  };

	  /**
	   * Forces an update. This should only be invoked when it is known with
	   * certainty that we are **not** in a DOM transaction.
	   *
	   * You may want to call this when you know that some deeper aspect of the
	   * component's state has changed but `setState` was not called.
	   *
	   * This will not invoke `shouldComponentUpdate`, but it will invoke
	   * `componentWillUpdate` and `componentDidUpdate`.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @internal
	   */


	  ReactServerUpdateQueue.prototype.enqueueForceUpdate = function enqueueForceUpdate(publicInstance) {
	    if (this.transaction.isInTransaction()) {
	      ReactUpdateQueue.enqueueForceUpdate(publicInstance);
	    } else {
	      warnNoop(publicInstance, 'forceUpdate');
	    }
	  };

	  /**
	   * Replaces all of the state. Always use this or `setState` to mutate state.
	   * You should treat `this.state` as immutable.
	   *
	   * There is no guarantee that `this.state` will be immediately updated, so
	   * accessing `this.state` after calling this method may return the old value.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object|function} completeState Next state.
	   * @internal
	   */


	  ReactServerUpdateQueue.prototype.enqueueReplaceState = function enqueueReplaceState(publicInstance, completeState) {
	    if (this.transaction.isInTransaction()) {
	      ReactUpdateQueue.enqueueReplaceState(publicInstance, completeState);
	    } else {
	      warnNoop(publicInstance, 'replaceState');
	    }
	  };

	  /**
	   * Sets a subset of the state. This only exists because _pendingState is
	   * internal. This provides a merging strategy that is not available to deep
	   * properties which is confusing. TODO: Expose pendingState or don't use it
	   * during the merge.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object|function} partialState Next partial state to be merged with state.
	   * @internal
	   */


	  ReactServerUpdateQueue.prototype.enqueueSetState = function enqueueSetState(publicInstance, partialState) {
	    if (this.transaction.isInTransaction()) {
	      ReactUpdateQueue.enqueueSetState(publicInstance, partialState);
	    } else {
	      warnNoop(publicInstance, 'setState');
	    }
	  };

	  return ReactServerUpdateQueue;
	}();

	module.exports = ReactServerUpdateQueue;

/***/ },
/* 178 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SVGDOMPropertyConfig
	 */

	'use strict';

	var NS = {
	  xlink: 'http://www.w3.org/1999/xlink',
	  xml: 'http://www.w3.org/XML/1998/namespace'
	};

	// We use attributes for everything SVG so var's avoid some duplication and run
	// code instead.
	// The following are all specified in the HTML config already so we exclude here.
	// - class (as className)
	// - color
	// - height
	// - id
	// - lang
	// - max
	// - media
	// - method
	// - min
	// - name
	// - style
	// - target
	// - type
	// - width
	var ATTRS = {
	  accentHeight: 'accent-height',
	  accumulate: 0,
	  additive: 0,
	  alignmentBaseline: 'alignment-baseline',
	  allowReorder: 'allowReorder',
	  alphabetic: 0,
	  amplitude: 0,
	  arabicForm: 'arabic-form',
	  ascent: 0,
	  attributeName: 'attributeName',
	  attributeType: 'attributeType',
	  autoReverse: 'autoReverse',
	  azimuth: 0,
	  baseFrequency: 'baseFrequency',
	  baseProfile: 'baseProfile',
	  baselineShift: 'baseline-shift',
	  bbox: 0,
	  begin: 0,
	  bias: 0,
	  by: 0,
	  calcMode: 'calcMode',
	  capHeight: 'cap-height',
	  clip: 0,
	  clipPath: 'clip-path',
	  clipRule: 'clip-rule',
	  clipPathUnits: 'clipPathUnits',
	  colorInterpolation: 'color-interpolation',
	  colorInterpolationFilters: 'color-interpolation-filters',
	  colorProfile: 'color-profile',
	  colorRendering: 'color-rendering',
	  contentScriptType: 'contentScriptType',
	  contentStyleType: 'contentStyleType',
	  cursor: 0,
	  cx: 0,
	  cy: 0,
	  d: 0,
	  decelerate: 0,
	  descent: 0,
	  diffuseConstant: 'diffuseConstant',
	  direction: 0,
	  display: 0,
	  divisor: 0,
	  dominantBaseline: 'dominant-baseline',
	  dur: 0,
	  dx: 0,
	  dy: 0,
	  edgeMode: 'edgeMode',
	  elevation: 0,
	  enableBackground: 'enable-background',
	  end: 0,
	  exponent: 0,
	  externalResourcesRequired: 'externalResourcesRequired',
	  fill: 0,
	  fillOpacity: 'fill-opacity',
	  fillRule: 'fill-rule',
	  filter: 0,
	  filterRes: 'filterRes',
	  filterUnits: 'filterUnits',
	  floodColor: 'flood-color',
	  floodOpacity: 'flood-opacity',
	  focusable: 0,
	  fontFamily: 'font-family',
	  fontSize: 'font-size',
	  fontSizeAdjust: 'font-size-adjust',
	  fontStretch: 'font-stretch',
	  fontStyle: 'font-style',
	  fontVariant: 'font-variant',
	  fontWeight: 'font-weight',
	  format: 0,
	  from: 0,
	  fx: 0,
	  fy: 0,
	  g1: 0,
	  g2: 0,
	  glyphName: 'glyph-name',
	  glyphOrientationHorizontal: 'glyph-orientation-horizontal',
	  glyphOrientationVertical: 'glyph-orientation-vertical',
	  glyphRef: 'glyphRef',
	  gradientTransform: 'gradientTransform',
	  gradientUnits: 'gradientUnits',
	  hanging: 0,
	  horizAdvX: 'horiz-adv-x',
	  horizOriginX: 'horiz-origin-x',
	  ideographic: 0,
	  imageRendering: 'image-rendering',
	  'in': 0,
	  in2: 0,
	  intercept: 0,
	  k: 0,
	  k1: 0,
	  k2: 0,
	  k3: 0,
	  k4: 0,
	  kernelMatrix: 'kernelMatrix',
	  kernelUnitLength: 'kernelUnitLength',
	  kerning: 0,
	  keyPoints: 'keyPoints',
	  keySplines: 'keySplines',
	  keyTimes: 'keyTimes',
	  lengthAdjust: 'lengthAdjust',
	  letterSpacing: 'letter-spacing',
	  lightingColor: 'lighting-color',
	  limitingConeAngle: 'limitingConeAngle',
	  local: 0,
	  markerEnd: 'marker-end',
	  markerMid: 'marker-mid',
	  markerStart: 'marker-start',
	  markerHeight: 'markerHeight',
	  markerUnits: 'markerUnits',
	  markerWidth: 'markerWidth',
	  mask: 0,
	  maskContentUnits: 'maskContentUnits',
	  maskUnits: 'maskUnits',
	  mathematical: 0,
	  mode: 0,
	  numOctaves: 'numOctaves',
	  offset: 0,
	  opacity: 0,
	  operator: 0,
	  order: 0,
	  orient: 0,
	  orientation: 0,
	  origin: 0,
	  overflow: 0,
	  overlinePosition: 'overline-position',
	  overlineThickness: 'overline-thickness',
	  paintOrder: 'paint-order',
	  panose1: 'panose-1',
	  pathLength: 'pathLength',
	  patternContentUnits: 'patternContentUnits',
	  patternTransform: 'patternTransform',
	  patternUnits: 'patternUnits',
	  pointerEvents: 'pointer-events',
	  points: 0,
	  pointsAtX: 'pointsAtX',
	  pointsAtY: 'pointsAtY',
	  pointsAtZ: 'pointsAtZ',
	  preserveAlpha: 'preserveAlpha',
	  preserveAspectRatio: 'preserveAspectRatio',
	  primitiveUnits: 'primitiveUnits',
	  r: 0,
	  radius: 0,
	  refX: 'refX',
	  refY: 'refY',
	  renderingIntent: 'rendering-intent',
	  repeatCount: 'repeatCount',
	  repeatDur: 'repeatDur',
	  requiredExtensions: 'requiredExtensions',
	  requiredFeatures: 'requiredFeatures',
	  restart: 0,
	  result: 0,
	  rotate: 0,
	  rx: 0,
	  ry: 0,
	  scale: 0,
	  seed: 0,
	  shapeRendering: 'shape-rendering',
	  slope: 0,
	  spacing: 0,
	  specularConstant: 'specularConstant',
	  specularExponent: 'specularExponent',
	  speed: 0,
	  spreadMethod: 'spreadMethod',
	  startOffset: 'startOffset',
	  stdDeviation: 'stdDeviation',
	  stemh: 0,
	  stemv: 0,
	  stitchTiles: 'stitchTiles',
	  stopColor: 'stop-color',
	  stopOpacity: 'stop-opacity',
	  strikethroughPosition: 'strikethrough-position',
	  strikethroughThickness: 'strikethrough-thickness',
	  string: 0,
	  stroke: 0,
	  strokeDasharray: 'stroke-dasharray',
	  strokeDashoffset: 'stroke-dashoffset',
	  strokeLinecap: 'stroke-linecap',
	  strokeLinejoin: 'stroke-linejoin',
	  strokeMiterlimit: 'stroke-miterlimit',
	  strokeOpacity: 'stroke-opacity',
	  strokeWidth: 'stroke-width',
	  surfaceScale: 'surfaceScale',
	  systemLanguage: 'systemLanguage',
	  tableValues: 'tableValues',
	  targetX: 'targetX',
	  targetY: 'targetY',
	  textAnchor: 'text-anchor',
	  textDecoration: 'text-decoration',
	  textRendering: 'text-rendering',
	  textLength: 'textLength',
	  to: 0,
	  transform: 0,
	  u1: 0,
	  u2: 0,
	  underlinePosition: 'underline-position',
	  underlineThickness: 'underline-thickness',
	  unicode: 0,
	  unicodeBidi: 'unicode-bidi',
	  unicodeRange: 'unicode-range',
	  unitsPerEm: 'units-per-em',
	  vAlphabetic: 'v-alphabetic',
	  vHanging: 'v-hanging',
	  vIdeographic: 'v-ideographic',
	  vMathematical: 'v-mathematical',
	  values: 0,
	  vectorEffect: 'vector-effect',
	  version: 0,
	  vertAdvY: 'vert-adv-y',
	  vertOriginX: 'vert-origin-x',
	  vertOriginY: 'vert-origin-y',
	  viewBox: 'viewBox',
	  viewTarget: 'viewTarget',
	  visibility: 0,
	  widths: 0,
	  wordSpacing: 'word-spacing',
	  writingMode: 'writing-mode',
	  x: 0,
	  xHeight: 'x-height',
	  x1: 0,
	  x2: 0,
	  xChannelSelector: 'xChannelSelector',
	  xlinkActuate: 'xlink:actuate',
	  xlinkArcrole: 'xlink:arcrole',
	  xlinkHref: 'xlink:href',
	  xlinkRole: 'xlink:role',
	  xlinkShow: 'xlink:show',
	  xlinkTitle: 'xlink:title',
	  xlinkType: 'xlink:type',
	  xmlBase: 'xml:base',
	  xmlns: 0,
	  xmlnsXlink: 'xmlns:xlink',
	  xmlLang: 'xml:lang',
	  xmlSpace: 'xml:space',
	  y: 0,
	  y1: 0,
	  y2: 0,
	  yChannelSelector: 'yChannelSelector',
	  z: 0,
	  zoomAndPan: 'zoomAndPan'
	};

	var SVGDOMPropertyConfig = {
	  Properties: {},
	  DOMAttributeNamespaces: {
	    xlinkActuate: NS.xlink,
	    xlinkArcrole: NS.xlink,
	    xlinkHref: NS.xlink,
	    xlinkRole: NS.xlink,
	    xlinkShow: NS.xlink,
	    xlinkTitle: NS.xlink,
	    xlinkType: NS.xlink,
	    xmlBase: NS.xml,
	    xmlLang: NS.xml,
	    xmlSpace: NS.xml
	  },
	  DOMAttributeNames: {}
	};

	Object.keys(ATTRS).forEach(function (key) {
	  SVGDOMPropertyConfig.Properties[key] = 0;
	  if (ATTRS[key]) {
	    SVGDOMPropertyConfig.DOMAttributeNames[key] = ATTRS[key];
	  }
	});

	module.exports = SVGDOMPropertyConfig;

/***/ },
/* 179 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SelectEventPlugin
	 */

	'use strict';

	var EventConstants = __webpack_require__(12);
	var EventPropagators = __webpack_require__(22);
	var ExecutionEnvironment = __webpack_require__(7);
	var ReactDOMComponentTree = __webpack_require__(5);
	var ReactInputSelection = __webpack_require__(80);
	var SyntheticEvent = __webpack_require__(13);

	var getActiveElement = __webpack_require__(61);
	var isTextInputElement = __webpack_require__(94);
	var keyOf = __webpack_require__(14);
	var shallowEqual = __webpack_require__(32);

	var topLevelTypes = EventConstants.topLevelTypes;

	var skipSelectionChangeEvent = ExecutionEnvironment.canUseDOM && 'documentMode' in document && document.documentMode <= 11;

	var eventTypes = {
	  select: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onSelect: null }),
	      captured: keyOf({ onSelectCapture: null })
	    },
	    dependencies: [topLevelTypes.topBlur, topLevelTypes.topContextMenu, topLevelTypes.topFocus, topLevelTypes.topKeyDown, topLevelTypes.topMouseDown, topLevelTypes.topMouseUp, topLevelTypes.topSelectionChange]
	  }
	};

	var activeElement = null;
	var activeElementInst = null;
	var lastSelection = null;
	var mouseDown = false;

	// Track whether a listener exists for this plugin. If none exist, we do
	// not extract events. See #3639.
	var hasListener = false;
	var ON_SELECT_KEY = keyOf({ onSelect: null });

	/**
	 * Get an object which is a unique representation of the current selection.
	 *
	 * The return value will not be consistent across nodes or browsers, but
	 * two identical selections on the same node will return identical objects.
	 *
	 * @param {DOMElement} node
	 * @return {object}
	 */
	function getSelection(node) {
	  if ('selectionStart' in node && ReactInputSelection.hasSelectionCapabilities(node)) {
	    return {
	      start: node.selectionStart,
	      end: node.selectionEnd
	    };
	  } else if (window.getSelection) {
	    var selection = window.getSelection();
	    return {
	      anchorNode: selection.anchorNode,
	      anchorOffset: selection.anchorOffset,
	      focusNode: selection.focusNode,
	      focusOffset: selection.focusOffset
	    };
	  } else if (document.selection) {
	    var range = document.selection.createRange();
	    return {
	      parentElement: range.parentElement(),
	      text: range.text,
	      top: range.boundingTop,
	      left: range.boundingLeft
	    };
	  }
	}

	/**
	 * Poll selection to see whether it's changed.
	 *
	 * @param {object} nativeEvent
	 * @return {?SyntheticEvent}
	 */
	function constructSelectEvent(nativeEvent, nativeEventTarget) {
	  // Ensure we have the right element, and that the user is not dragging a
	  // selection (this matches native `select` event behavior). In HTML5, select
	  // fires only on input and textarea thus if there's no focused element we
	  // won't dispatch.
	  if (mouseDown || activeElement == null || activeElement !== getActiveElement()) {
	    return null;
	  }

	  // Only fire when selection has actually changed.
	  var currentSelection = getSelection(activeElement);
	  if (!lastSelection || !shallowEqual(lastSelection, currentSelection)) {
	    lastSelection = currentSelection;

	    var syntheticEvent = SyntheticEvent.getPooled(eventTypes.select, activeElementInst, nativeEvent, nativeEventTarget);

	    syntheticEvent.type = 'select';
	    syntheticEvent.target = activeElement;

	    EventPropagators.accumulateTwoPhaseDispatches(syntheticEvent);

	    return syntheticEvent;
	  }

	  return null;
	}

	/**
	 * This plugin creates an `onSelect` event that normalizes select events
	 * across form elements.
	 *
	 * Supported elements are:
	 * - input (see `isTextInputElement`)
	 * - textarea
	 * - contentEditable
	 *
	 * This differs from native browser implementations in the following ways:
	 * - Fires on contentEditable fields as well as inputs.
	 * - Fires for collapsed selection.
	 * - Fires after user input.
	 */
	var SelectEventPlugin = {

	  eventTypes: eventTypes,

	  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	    if (!hasListener) {
	      return null;
	    }

	    var targetNode = targetInst ? ReactDOMComponentTree.getNodeFromInstance(targetInst) : window;

	    switch (topLevelType) {
	      // Track the input node that has focus.
	      case topLevelTypes.topFocus:
	        if (isTextInputElement(targetNode) || targetNode.contentEditable === 'true') {
	          activeElement = targetNode;
	          activeElementInst = targetInst;
	          lastSelection = null;
	        }
	        break;
	      case topLevelTypes.topBlur:
	        activeElement = null;
	        activeElementInst = null;
	        lastSelection = null;
	        break;

	      // Don't fire the event while the user is dragging. This matches the
	      // semantics of the native select event.
	      case topLevelTypes.topMouseDown:
	        mouseDown = true;
	        break;
	      case topLevelTypes.topContextMenu:
	      case topLevelTypes.topMouseUp:
	        mouseDown = false;
	        return constructSelectEvent(nativeEvent, nativeEventTarget);

	      // Chrome and IE fire non-standard event when selection is changed (and
	      // sometimes when it hasn't). IE's event fires out of order with respect
	      // to key and input events on deletion, so we discard it.
	      //
	      // Firefox doesn't support selectionchange, so check selection status
	      // after each key entry. The selection changes after keydown and before
	      // keyup, but we check on keydown as well in the case of holding down a
	      // key, when multiple keydown events are fired but only one keyup is.
	      // This is also our approach for IE handling, for the reason above.
	      case topLevelTypes.topSelectionChange:
	        if (skipSelectionChangeEvent) {
	          break;
	        }
	      // falls through
	      case topLevelTypes.topKeyDown:
	      case topLevelTypes.topKeyUp:
	        return constructSelectEvent(nativeEvent, nativeEventTarget);
	    }

	    return null;
	  },

	  didPutListener: function (inst, registrationName, listener) {
	    if (registrationName === ON_SELECT_KEY) {
	      hasListener = true;
	    }
	  }
	};

	module.exports = SelectEventPlugin;

/***/ },
/* 180 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SimpleEventPlugin
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(2);

	var EventConstants = __webpack_require__(12);
	var EventListener = __webpack_require__(59);
	var EventPropagators = __webpack_require__(22);
	var ReactDOMComponentTree = __webpack_require__(5);
	var SyntheticAnimationEvent = __webpack_require__(181);
	var SyntheticClipboardEvent = __webpack_require__(182);
	var SyntheticEvent = __webpack_require__(13);
	var SyntheticFocusEvent = __webpack_require__(185);
	var SyntheticKeyboardEvent = __webpack_require__(187);
	var SyntheticMouseEvent = __webpack_require__(29);
	var SyntheticDragEvent = __webpack_require__(184);
	var SyntheticTouchEvent = __webpack_require__(188);
	var SyntheticTransitionEvent = __webpack_require__(189);
	var SyntheticUIEvent = __webpack_require__(24);
	var SyntheticWheelEvent = __webpack_require__(190);

	var emptyFunction = __webpack_require__(9);
	var getEventCharCode = __webpack_require__(52);
	var invariant = __webpack_require__(1);
	var keyOf = __webpack_require__(14);

	var topLevelTypes = EventConstants.topLevelTypes;

	var eventTypes = {
	  abort: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onAbort: true }),
	      captured: keyOf({ onAbortCapture: true })
	    }
	  },
	  animationEnd: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onAnimationEnd: true }),
	      captured: keyOf({ onAnimationEndCapture: true })
	    }
	  },
	  animationIteration: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onAnimationIteration: true }),
	      captured: keyOf({ onAnimationIterationCapture: true })
	    }
	  },
	  animationStart: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onAnimationStart: true }),
	      captured: keyOf({ onAnimationStartCapture: true })
	    }
	  },
	  blur: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onBlur: true }),
	      captured: keyOf({ onBlurCapture: true })
	    }
	  },
	  canPlay: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onCanPlay: true }),
	      captured: keyOf({ onCanPlayCapture: true })
	    }
	  },
	  canPlayThrough: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onCanPlayThrough: true }),
	      captured: keyOf({ onCanPlayThroughCapture: true })
	    }
	  },
	  click: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onClick: true }),
	      captured: keyOf({ onClickCapture: true })
	    }
	  },
	  contextMenu: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onContextMenu: true }),
	      captured: keyOf({ onContextMenuCapture: true })
	    }
	  },
	  copy: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onCopy: true }),
	      captured: keyOf({ onCopyCapture: true })
	    }
	  },
	  cut: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onCut: true }),
	      captured: keyOf({ onCutCapture: true })
	    }
	  },
	  doubleClick: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDoubleClick: true }),
	      captured: keyOf({ onDoubleClickCapture: true })
	    }
	  },
	  drag: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDrag: true }),
	      captured: keyOf({ onDragCapture: true })
	    }
	  },
	  dragEnd: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDragEnd: true }),
	      captured: keyOf({ onDragEndCapture: true })
	    }
	  },
	  dragEnter: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDragEnter: true }),
	      captured: keyOf({ onDragEnterCapture: true })
	    }
	  },
	  dragExit: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDragExit: true }),
	      captured: keyOf({ onDragExitCapture: true })
	    }
	  },
	  dragLeave: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDragLeave: true }),
	      captured: keyOf({ onDragLeaveCapture: true })
	    }
	  },
	  dragOver: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDragOver: true }),
	      captured: keyOf({ onDragOverCapture: true })
	    }
	  },
	  dragStart: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDragStart: true }),
	      captured: keyOf({ onDragStartCapture: true })
	    }
	  },
	  drop: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDrop: true }),
	      captured: keyOf({ onDropCapture: true })
	    }
	  },
	  durationChange: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDurationChange: true }),
	      captured: keyOf({ onDurationChangeCapture: true })
	    }
	  },
	  emptied: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onEmptied: true }),
	      captured: keyOf({ onEmptiedCapture: true })
	    }
	  },
	  encrypted: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onEncrypted: true }),
	      captured: keyOf({ onEncryptedCapture: true })
	    }
	  },
	  ended: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onEnded: true }),
	      captured: keyOf({ onEndedCapture: true })
	    }
	  },
	  error: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onError: true }),
	      captured: keyOf({ onErrorCapture: true })
	    }
	  },
	  focus: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onFocus: true }),
	      captured: keyOf({ onFocusCapture: true })
	    }
	  },
	  input: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onInput: true }),
	      captured: keyOf({ onInputCapture: true })
	    }
	  },
	  invalid: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onInvalid: true }),
	      captured: keyOf({ onInvalidCapture: true })
	    }
	  },
	  keyDown: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onKeyDown: true }),
	      captured: keyOf({ onKeyDownCapture: true })
	    }
	  },
	  keyPress: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onKeyPress: true }),
	      captured: keyOf({ onKeyPressCapture: true })
	    }
	  },
	  keyUp: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onKeyUp: true }),
	      captured: keyOf({ onKeyUpCapture: true })
	    }
	  },
	  load: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onLoad: true }),
	      captured: keyOf({ onLoadCapture: true })
	    }
	  },
	  loadedData: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onLoadedData: true }),
	      captured: keyOf({ onLoadedDataCapture: true })
	    }
	  },
	  loadedMetadata: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onLoadedMetadata: true }),
	      captured: keyOf({ onLoadedMetadataCapture: true })
	    }
	  },
	  loadStart: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onLoadStart: true }),
	      captured: keyOf({ onLoadStartCapture: true })
	    }
	  },
	  // Note: We do not allow listening to mouseOver events. Instead, use the
	  // onMouseEnter/onMouseLeave created by `EnterLeaveEventPlugin`.
	  mouseDown: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onMouseDown: true }),
	      captured: keyOf({ onMouseDownCapture: true })
	    }
	  },
	  mouseMove: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onMouseMove: true }),
	      captured: keyOf({ onMouseMoveCapture: true })
	    }
	  },
	  mouseOut: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onMouseOut: true }),
	      captured: keyOf({ onMouseOutCapture: true })
	    }
	  },
	  mouseOver: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onMouseOver: true }),
	      captured: keyOf({ onMouseOverCapture: true })
	    }
	  },
	  mouseUp: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onMouseUp: true }),
	      captured: keyOf({ onMouseUpCapture: true })
	    }
	  },
	  paste: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onPaste: true }),
	      captured: keyOf({ onPasteCapture: true })
	    }
	  },
	  pause: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onPause: true }),
	      captured: keyOf({ onPauseCapture: true })
	    }
	  },
	  play: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onPlay: true }),
	      captured: keyOf({ onPlayCapture: true })
	    }
	  },
	  playing: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onPlaying: true }),
	      captured: keyOf({ onPlayingCapture: true })
	    }
	  },
	  progress: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onProgress: true }),
	      captured: keyOf({ onProgressCapture: true })
	    }
	  },
	  rateChange: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onRateChange: true }),
	      captured: keyOf({ onRateChangeCapture: true })
	    }
	  },
	  reset: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onReset: true }),
	      captured: keyOf({ onResetCapture: true })
	    }
	  },
	  scroll: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onScroll: true }),
	      captured: keyOf({ onScrollCapture: true })
	    }
	  },
	  seeked: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onSeeked: true }),
	      captured: keyOf({ onSeekedCapture: true })
	    }
	  },
	  seeking: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onSeeking: true }),
	      captured: keyOf({ onSeekingCapture: true })
	    }
	  },
	  stalled: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onStalled: true }),
	      captured: keyOf({ onStalledCapture: true })
	    }
	  },
	  submit: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onSubmit: true }),
	      captured: keyOf({ onSubmitCapture: true })
	    }
	  },
	  suspend: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onSuspend: true }),
	      captured: keyOf({ onSuspendCapture: true })
	    }
	  },
	  timeUpdate: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onTimeUpdate: true }),
	      captured: keyOf({ onTimeUpdateCapture: true })
	    }
	  },
	  touchCancel: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onTouchCancel: true }),
	      captured: keyOf({ onTouchCancelCapture: true })
	    }
	  },
	  touchEnd: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onTouchEnd: true }),
	      captured: keyOf({ onTouchEndCapture: true })
	    }
	  },
	  touchMove: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onTouchMove: true }),
	      captured: keyOf({ onTouchMoveCapture: true })
	    }
	  },
	  touchStart: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onTouchStart: true }),
	      captured: keyOf({ onTouchStartCapture: true })
	    }
	  },
	  transitionEnd: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onTransitionEnd: true }),
	      captured: keyOf({ onTransitionEndCapture: true })
	    }
	  },
	  volumeChange: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onVolumeChange: true }),
	      captured: keyOf({ onVolumeChangeCapture: true })
	    }
	  },
	  waiting: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onWaiting: true }),
	      captured: keyOf({ onWaitingCapture: true })
	    }
	  },
	  wheel: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onWheel: true }),
	      captured: keyOf({ onWheelCapture: true })
	    }
	  }
	};

	var topLevelEventsToDispatchConfig = {
	  topAbort: eventTypes.abort,
	  topAnimationEnd: eventTypes.animationEnd,
	  topAnimationIteration: eventTypes.animationIteration,
	  topAnimationStart: eventTypes.animationStart,
	  topBlur: eventTypes.blur,
	  topCanPlay: eventTypes.canPlay,
	  topCanPlayThrough: eventTypes.canPlayThrough,
	  topClick: eventTypes.click,
	  topContextMenu: eventTypes.contextMenu,
	  topCopy: eventTypes.copy,
	  topCut: eventTypes.cut,
	  topDoubleClick: eventTypes.doubleClick,
	  topDrag: eventTypes.drag,
	  topDragEnd: eventTypes.dragEnd,
	  topDragEnter: eventTypes.dragEnter,
	  topDragExit: eventTypes.dragExit,
	  topDragLeave: eventTypes.dragLeave,
	  topDragOver: eventTypes.dragOver,
	  topDragStart: eventTypes.dragStart,
	  topDrop: eventTypes.drop,
	  topDurationChange: eventTypes.durationChange,
	  topEmptied: eventTypes.emptied,
	  topEncrypted: eventTypes.encrypted,
	  topEnded: eventTypes.ended,
	  topError: eventTypes.error,
	  topFocus: eventTypes.focus,
	  topInput: eventTypes.input,
	  topInvalid: eventTypes.invalid,
	  topKeyDown: eventTypes.keyDown,
	  topKeyPress: eventTypes.keyPress,
	  topKeyUp: eventTypes.keyUp,
	  topLoad: eventTypes.load,
	  topLoadedData: eventTypes.loadedData,
	  topLoadedMetadata: eventTypes.loadedMetadata,
	  topLoadStart: eventTypes.loadStart,
	  topMouseDown: eventTypes.mouseDown,
	  topMouseMove: eventTypes.mouseMove,
	  topMouseOut: eventTypes.mouseOut,
	  topMouseOver: eventTypes.mouseOver,
	  topMouseUp: eventTypes.mouseUp,
	  topPaste: eventTypes.paste,
	  topPause: eventTypes.pause,
	  topPlay: eventTypes.play,
	  topPlaying: eventTypes.playing,
	  topProgress: eventTypes.progress,
	  topRateChange: eventTypes.rateChange,
	  topReset: eventTypes.reset,
	  topScroll: eventTypes.scroll,
	  topSeeked: eventTypes.seeked,
	  topSeeking: eventTypes.seeking,
	  topStalled: eventTypes.stalled,
	  topSubmit: eventTypes.submit,
	  topSuspend: eventTypes.suspend,
	  topTimeUpdate: eventTypes.timeUpdate,
	  topTouchCancel: eventTypes.touchCancel,
	  topTouchEnd: eventTypes.touchEnd,
	  topTouchMove: eventTypes.touchMove,
	  topTouchStart: eventTypes.touchStart,
	  topTransitionEnd: eventTypes.transitionEnd,
	  topVolumeChange: eventTypes.volumeChange,
	  topWaiting: eventTypes.waiting,
	  topWheel: eventTypes.wheel
	};

	for (var type in topLevelEventsToDispatchConfig) {
	  topLevelEventsToDispatchConfig[type].dependencies = [type];
	}

	var ON_CLICK_KEY = keyOf({ onClick: null });
	var onClickListeners = {};

	function getDictionaryKey(inst) {
	  return '.' + inst._rootNodeID;
	}

	var SimpleEventPlugin = {

	  eventTypes: eventTypes,

	  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	    var dispatchConfig = topLevelEventsToDispatchConfig[topLevelType];
	    if (!dispatchConfig) {
	      return null;
	    }
	    var EventConstructor;
	    switch (topLevelType) {
	      case topLevelTypes.topAbort:
	      case topLevelTypes.topCanPlay:
	      case topLevelTypes.topCanPlayThrough:
	      case topLevelTypes.topDurationChange:
	      case topLevelTypes.topEmptied:
	      case topLevelTypes.topEncrypted:
	      case topLevelTypes.topEnded:
	      case topLevelTypes.topError:
	      case topLevelTypes.topInput:
	      case topLevelTypes.topInvalid:
	      case topLevelTypes.topLoad:
	      case topLevelTypes.topLoadedData:
	      case topLevelTypes.topLoadedMetadata:
	      case topLevelTypes.topLoadStart:
	      case topLevelTypes.topPause:
	      case topLevelTypes.topPlay:
	      case topLevelTypes.topPlaying:
	      case topLevelTypes.topProgress:
	      case topLevelTypes.topRateChange:
	      case topLevelTypes.topReset:
	      case topLevelTypes.topSeeked:
	      case topLevelTypes.topSeeking:
	      case topLevelTypes.topStalled:
	      case topLevelTypes.topSubmit:
	      case topLevelTypes.topSuspend:
	      case topLevelTypes.topTimeUpdate:
	      case topLevelTypes.topVolumeChange:
	      case topLevelTypes.topWaiting:
	        // HTML Events
	        // @see http://www.w3.org/TR/html5/index.html#events-0
	        EventConstructor = SyntheticEvent;
	        break;
	      case topLevelTypes.topKeyPress:
	        // Firefox creates a keypress event for function keys too. This removes
	        // the unwanted keypress events. Enter is however both printable and
	        // non-printable. One would expect Tab to be as well (but it isn't).
	        if (getEventCharCode(nativeEvent) === 0) {
	          return null;
	        }
	      /* falls through */
	      case topLevelTypes.topKeyDown:
	      case topLevelTypes.topKeyUp:
	        EventConstructor = SyntheticKeyboardEvent;
	        break;
	      case topLevelTypes.topBlur:
	      case topLevelTypes.topFocus:
	        EventConstructor = SyntheticFocusEvent;
	        break;
	      case topLevelTypes.topClick:
	        // Firefox creates a click event on right mouse clicks. This removes the
	        // unwanted click events.
	        if (nativeEvent.button === 2) {
	          return null;
	        }
	      /* falls through */
	      case topLevelTypes.topContextMenu:
	      case topLevelTypes.topDoubleClick:
	      case topLevelTypes.topMouseDown:
	      case topLevelTypes.topMouseMove:
	      case topLevelTypes.topMouseOut:
	      case topLevelTypes.topMouseOver:
	      case topLevelTypes.topMouseUp:
	        EventConstructor = SyntheticMouseEvent;
	        break;
	      case topLevelTypes.topDrag:
	      case topLevelTypes.topDragEnd:
	      case topLevelTypes.topDragEnter:
	      case topLevelTypes.topDragExit:
	      case topLevelTypes.topDragLeave:
	      case topLevelTypes.topDragOver:
	      case topLevelTypes.topDragStart:
	      case topLevelTypes.topDrop:
	        EventConstructor = SyntheticDragEvent;
	        break;
	      case topLevelTypes.topTouchCancel:
	      case topLevelTypes.topTouchEnd:
	      case topLevelTypes.topTouchMove:
	      case topLevelTypes.topTouchStart:
	        EventConstructor = SyntheticTouchEvent;
	        break;
	      case topLevelTypes.topAnimationEnd:
	      case topLevelTypes.topAnimationIteration:
	      case topLevelTypes.topAnimationStart:
	        EventConstructor = SyntheticAnimationEvent;
	        break;
	      case topLevelTypes.topTransitionEnd:
	        EventConstructor = SyntheticTransitionEvent;
	        break;
	      case topLevelTypes.topScroll:
	        EventConstructor = SyntheticUIEvent;
	        break;
	      case topLevelTypes.topWheel:
	        EventConstructor = SyntheticWheelEvent;
	        break;
	      case topLevelTypes.topCopy:
	      case topLevelTypes.topCut:
	      case topLevelTypes.topPaste:
	        EventConstructor = SyntheticClipboardEvent;
	        break;
	    }
	    !EventConstructor ?  false ? invariant(false, 'SimpleEventPlugin: Unhandled event type, `%s`.', topLevelType) : _prodInvariant('86', topLevelType) : void 0;
	    var event = EventConstructor.getPooled(dispatchConfig, targetInst, nativeEvent, nativeEventTarget);
	    EventPropagators.accumulateTwoPhaseDispatches(event);
	    return event;
	  },

	  didPutListener: function (inst, registrationName, listener) {
	    // Mobile Safari does not fire properly bubble click events on
	    // non-interactive elements, which means delegated click listeners do not
	    // fire. The workaround for this bug involves attaching an empty click
	    // listener on the target node.
	    if (registrationName === ON_CLICK_KEY) {
	      var key = getDictionaryKey(inst);
	      var node = ReactDOMComponentTree.getNodeFromInstance(inst);
	      if (!onClickListeners[key]) {
	        onClickListeners[key] = EventListener.listen(node, 'click', emptyFunction);
	      }
	    }
	  },

	  willDeleteListener: function (inst, registrationName) {
	    if (registrationName === ON_CLICK_KEY) {
	      var key = getDictionaryKey(inst);
	      onClickListeners[key].remove();
	      delete onClickListeners[key];
	    }
	  }

	};

	module.exports = SimpleEventPlugin;

/***/ },
/* 181 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticAnimationEvent
	 */

	'use strict';

	var SyntheticEvent = __webpack_require__(13);

	/**
	 * @interface Event
	 * @see http://www.w3.org/TR/css3-animations/#AnimationEvent-interface
	 * @see https://developer.mozilla.org/en-US/docs/Web/API/AnimationEvent
	 */
	var AnimationEventInterface = {
	  animationName: null,
	  elapsedTime: null,
	  pseudoElement: null
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticEvent}
	 */
	function SyntheticAnimationEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}

	SyntheticEvent.augmentClass(SyntheticAnimationEvent, AnimationEventInterface);

	module.exports = SyntheticAnimationEvent;

/***/ },
/* 182 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticClipboardEvent
	 */

	'use strict';

	var SyntheticEvent = __webpack_require__(13);

	/**
	 * @interface Event
	 * @see http://www.w3.org/TR/clipboard-apis/
	 */
	var ClipboardEventInterface = {
	  clipboardData: function (event) {
	    return 'clipboardData' in event ? event.clipboardData : window.clipboardData;
	  }
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticClipboardEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}

	SyntheticEvent.augmentClass(SyntheticClipboardEvent, ClipboardEventInterface);

	module.exports = SyntheticClipboardEvent;

/***/ },
/* 183 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticCompositionEvent
	 */

	'use strict';

	var SyntheticEvent = __webpack_require__(13);

	/**
	 * @interface Event
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/#events-compositionevents
	 */
	var CompositionEventInterface = {
	  data: null
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticCompositionEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}

	SyntheticEvent.augmentClass(SyntheticCompositionEvent, CompositionEventInterface);

	module.exports = SyntheticCompositionEvent;

/***/ },
/* 184 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticDragEvent
	 */

	'use strict';

	var SyntheticMouseEvent = __webpack_require__(29);

	/**
	 * @interface DragEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var DragEventInterface = {
	  dataTransfer: null
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticDragEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticMouseEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}

	SyntheticMouseEvent.augmentClass(SyntheticDragEvent, DragEventInterface);

	module.exports = SyntheticDragEvent;

/***/ },
/* 185 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticFocusEvent
	 */

	'use strict';

	var SyntheticUIEvent = __webpack_require__(24);

	/**
	 * @interface FocusEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var FocusEventInterface = {
	  relatedTarget: null
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticFocusEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}

	SyntheticUIEvent.augmentClass(SyntheticFocusEvent, FocusEventInterface);

	module.exports = SyntheticFocusEvent;

/***/ },
/* 186 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticInputEvent
	 */

	'use strict';

	var SyntheticEvent = __webpack_require__(13);

	/**
	 * @interface Event
	 * @see http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105
	 *      /#events-inputevents
	 */
	var InputEventInterface = {
	  data: null
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticInputEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}

	SyntheticEvent.augmentClass(SyntheticInputEvent, InputEventInterface);

	module.exports = SyntheticInputEvent;

/***/ },
/* 187 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticKeyboardEvent
	 */

	'use strict';

	var SyntheticUIEvent = __webpack_require__(24);

	var getEventCharCode = __webpack_require__(52);
	var getEventKey = __webpack_require__(196);
	var getEventModifierState = __webpack_require__(53);

	/**
	 * @interface KeyboardEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var KeyboardEventInterface = {
	  key: getEventKey,
	  location: null,
	  ctrlKey: null,
	  shiftKey: null,
	  altKey: null,
	  metaKey: null,
	  repeat: null,
	  locale: null,
	  getModifierState: getEventModifierState,
	  // Legacy Interface
	  charCode: function (event) {
	    // `charCode` is the result of a KeyPress event and represents the value of
	    // the actual printable character.

	    // KeyPress is deprecated, but its replacement is not yet final and not
	    // implemented in any major browser. Only KeyPress has charCode.
	    if (event.type === 'keypress') {
	      return getEventCharCode(event);
	    }
	    return 0;
	  },
	  keyCode: function (event) {
	    // `keyCode` is the result of a KeyDown/Up event and represents the value of
	    // physical keyboard key.

	    // The actual meaning of the value depends on the users' keyboard layout
	    // which cannot be detected. Assuming that it is a US keyboard layout
	    // provides a surprisingly accurate mapping for US and European users.
	    // Due to this, it is left to the user to implement at this time.
	    if (event.type === 'keydown' || event.type === 'keyup') {
	      return event.keyCode;
	    }
	    return 0;
	  },
	  which: function (event) {
	    // `which` is an alias for either `keyCode` or `charCode` depending on the
	    // type of the event.
	    if (event.type === 'keypress') {
	      return getEventCharCode(event);
	    }
	    if (event.type === 'keydown' || event.type === 'keyup') {
	      return event.keyCode;
	    }
	    return 0;
	  }
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticKeyboardEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}

	SyntheticUIEvent.augmentClass(SyntheticKeyboardEvent, KeyboardEventInterface);

	module.exports = SyntheticKeyboardEvent;

/***/ },
/* 188 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticTouchEvent
	 */

	'use strict';

	var SyntheticUIEvent = __webpack_require__(24);

	var getEventModifierState = __webpack_require__(53);

	/**
	 * @interface TouchEvent
	 * @see http://www.w3.org/TR/touch-events/
	 */
	var TouchEventInterface = {
	  touches: null,
	  targetTouches: null,
	  changedTouches: null,
	  altKey: null,
	  metaKey: null,
	  ctrlKey: null,
	  shiftKey: null,
	  getModifierState: getEventModifierState
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticTouchEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}

	SyntheticUIEvent.augmentClass(SyntheticTouchEvent, TouchEventInterface);

	module.exports = SyntheticTouchEvent;

/***/ },
/* 189 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticTransitionEvent
	 */

	'use strict';

	var SyntheticEvent = __webpack_require__(13);

	/**
	 * @interface Event
	 * @see http://www.w3.org/TR/2009/WD-css3-transitions-20090320/#transition-events-
	 * @see https://developer.mozilla.org/en-US/docs/Web/API/TransitionEvent
	 */
	var TransitionEventInterface = {
	  propertyName: null,
	  elapsedTime: null,
	  pseudoElement: null
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticEvent}
	 */
	function SyntheticTransitionEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}

	SyntheticEvent.augmentClass(SyntheticTransitionEvent, TransitionEventInterface);

	module.exports = SyntheticTransitionEvent;

/***/ },
/* 190 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticWheelEvent
	 */

	'use strict';

	var SyntheticMouseEvent = __webpack_require__(29);

	/**
	 * @interface WheelEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var WheelEventInterface = {
	  deltaX: function (event) {
	    return 'deltaX' in event ? event.deltaX :
	    // Fallback to `wheelDeltaX` for Webkit and normalize (right is positive).
	    'wheelDeltaX' in event ? -event.wheelDeltaX : 0;
	  },
	  deltaY: function (event) {
	    return 'deltaY' in event ? event.deltaY :
	    // Fallback to `wheelDeltaY` for Webkit and normalize (down is positive).
	    'wheelDeltaY' in event ? -event.wheelDeltaY :
	    // Fallback to `wheelDelta` for IE<9 and normalize (down is positive).
	    'wheelDelta' in event ? -event.wheelDelta : 0;
	  },
	  deltaZ: null,

	  // Browsers without "deltaMode" is reporting in raw wheel delta where one
	  // notch on the scroll is always +/- 120, roughly equivalent to pixels.
	  // A good approximation of DOM_DELTA_LINE (1) is 5% of viewport size or
	  // ~40 pixels, for DOM_DELTA_SCREEN (2) it is 87.5% of viewport size.
	  deltaMode: null
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticMouseEvent}
	 */
	function SyntheticWheelEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticMouseEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}

	SyntheticMouseEvent.augmentClass(SyntheticWheelEvent, WheelEventInterface);

	module.exports = SyntheticWheelEvent;

/***/ },
/* 191 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule adler32
	 *
	 */

	'use strict';

	var MOD = 65521;

	// adler32 is not cryptographically strong, and is only used to sanity check that
	// markup generated on the server matches the markup generated on the client.
	// This implementation (a modified version of the SheetJS version) has been optimized
	// for our use case, at the expense of conforming to the adler32 specification
	// for non-ascii inputs.
	function adler32(data) {
	  var a = 1;
	  var b = 0;
	  var i = 0;
	  var l = data.length;
	  var m = l & ~0x3;
	  while (i < m) {
	    var n = Math.min(i + 4096, m);
	    for (; i < n; i += 4) {
	      b += (a += data.charCodeAt(i)) + (a += data.charCodeAt(i + 1)) + (a += data.charCodeAt(i + 2)) + (a += data.charCodeAt(i + 3));
	    }
	    a %= MOD;
	    b %= MOD;
	  }
	  for (; i < l; i++) {
	    b += a += data.charCodeAt(i);
	  }
	  a %= MOD;
	  b %= MOD;
	  return a | b << 16;
	}

	module.exports = adler32;

/***/ },
/* 192 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule checkReactTypeSpec
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(2);

	var ReactPropTypeLocationNames = __webpack_require__(47);
	var ReactPropTypesSecret = __webpack_require__(49);

	var invariant = __webpack_require__(1);
	var warning = __webpack_require__(3);

	var ReactComponentTreeDevtool;

	if (typeof process !== 'undefined' && process.env && ("production") === 'test') {
	  // Temporary hack.
	  // Inline requires don't work well with Jest:
	  // https://github.com/facebook/react/issues/7240
	  // Remove the inline requires when we don't need them anymore:
	  // https://github.com/facebook/react/pull/7178
	  ReactComponentTreeDevtool = __webpack_require__(44);
	}

	var loggedTypeFailures = {};

	/**
	 * Assert that the values match with the type specs.
	 * Error messages are memorized and will only be shown once.
	 *
	 * @param {object} typeSpecs Map of name to a ReactPropType
	 * @param {object} values Runtime values that need to be type-checked
	 * @param {string} location e.g. "prop", "context", "child context"
	 * @param {string} componentName Name of the component for error messages.
	 * @param {?object} element The React element that is being type-checked
	 * @param {?number} debugID The React component instance that is being type-checked
	 * @private
	 */
	function checkReactTypeSpec(typeSpecs, values, location, componentName, element, debugID) {
	  for (var typeSpecName in typeSpecs) {
	    if (typeSpecs.hasOwnProperty(typeSpecName)) {
	      var error;
	      // Prop type validation may throw. In case they do, we don't want to
	      // fail the render phase where it didn't fail before. So we log it.
	      // After these have been cleaned up, we'll var them throw.
	      try {
	        // This is intentionally an invariant that gets caught. It's the same
	        // behavior as without this statement except with a better message.
	        !(typeof typeSpecs[typeSpecName] === 'function') ?  false ? invariant(false, '%s: %s type `%s` is invalid; it must be a function, usually from React.PropTypes.', componentName || 'React class', ReactPropTypeLocationNames[location], typeSpecName) : _prodInvariant('84', componentName || 'React class', ReactPropTypeLocationNames[location], typeSpecName) : void 0;
	        error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);
	      } catch (ex) {
	        error = ex;
	      }
	       false ? warning(!error || error instanceof Error, '%s: type specification of %s `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', ReactPropTypeLocationNames[location], typeSpecName, typeof error) : void 0;
	      if (error instanceof Error && !(error.message in loggedTypeFailures)) {
	        // Only monitor this failure once because there tends to be a lot of the
	        // same error.
	        loggedTypeFailures[error.message] = true;

	        var componentStackInfo = '';

	        if (false) {
	          if (!ReactComponentTreeDevtool) {
	            ReactComponentTreeDevtool = require('./ReactComponentTreeDevtool');
	          }
	          if (debugID !== null) {
	            componentStackInfo = ReactComponentTreeDevtool.getStackAddendumByID(debugID);
	          } else if (element !== null) {
	            componentStackInfo = ReactComponentTreeDevtool.getCurrentStackAddendum(element);
	          }
	        }

	         false ? warning(false, 'Failed %s type: %s%s', location, error.message, componentStackInfo) : void 0;
	      }
	    }
	  }
	}

	module.exports = checkReactTypeSpec;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(35)))

/***/ },
/* 193 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule dangerousStyleValue
	 */

	'use strict';

	var CSSProperty = __webpack_require__(69);
	var warning = __webpack_require__(3);

	var isUnitlessNumber = CSSProperty.isUnitlessNumber;
	var styleWarnings = {};

	/**
	 * Convert a value into the proper css writable value. The style name `name`
	 * should be logical (no hyphens), as specified
	 * in `CSSProperty.isUnitlessNumber`.
	 *
	 * @param {string} name CSS property name such as `topMargin`.
	 * @param {*} value CSS property value such as `10px`.
	 * @param {ReactDOMComponent} component
	 * @return {string} Normalized style value with dimensions applied.
	 */
	function dangerousStyleValue(name, value, component) {
	  // Note that we've removed escapeTextForBrowser() calls here since the
	  // whole string will be escaped when the attribute is injected into
	  // the markup. If you provide unsafe user data here they can inject
	  // arbitrary CSS which may be problematic (I couldn't repro this):
	  // https://www.owasp.org/index.php/XSS_Filter_Evasion_Cheat_Sheet
	  // http://www.thespanner.co.uk/2007/11/26/ultimate-xss-css-injection/
	  // This is not an XSS hole but instead a potential CSS injection issue
	  // which has lead to a greater discussion about how we're going to
	  // trust URLs moving forward. See #2115901

	  var isEmpty = value == null || typeof value === 'boolean' || value === '';
	  if (isEmpty) {
	    return '';
	  }

	  var isNonNumeric = isNaN(value);
	  if (isNonNumeric || value === 0 || isUnitlessNumber.hasOwnProperty(name) && isUnitlessNumber[name]) {
	    return '' + value; // cast to string
	  }

	  if (typeof value === 'string') {
	    if (false) {
	      // Allow '0' to pass through without warning. 0 is already special and
	      // doesn't require units, so we don't need to warn about it.
	      if (component && value !== '0') {
	        var owner = component._currentElement._owner;
	        var ownerName = owner ? owner.getName() : null;
	        if (ownerName && !styleWarnings[ownerName]) {
	          styleWarnings[ownerName] = {};
	        }
	        var warned = false;
	        if (ownerName) {
	          var warnings = styleWarnings[ownerName];
	          warned = warnings[name];
	          if (!warned) {
	            warnings[name] = true;
	          }
	        }
	        if (!warned) {
	          process.env.NODE_ENV !== 'production' ? warning(false, 'a `%s` tag (owner: `%s`) was passed a numeric string value ' + 'for CSS property `%s` (value: `%s`) which will be treated ' + 'as a unitless number in a future version of React.', component._currentElement.type, ownerName || 'unknown', name, value) : void 0;
	        }
	      }
	    }
	    value = value.trim();
	  }
	  return value + 'px';
	}

	module.exports = dangerousStyleValue;

/***/ },
/* 194 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule findDOMNode
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(2);

	var ReactCurrentOwner = __webpack_require__(16);
	var ReactDOMComponentTree = __webpack_require__(5);
	var ReactInstanceMap = __webpack_require__(23);

	var getHostComponentFromComposite = __webpack_require__(90);
	var invariant = __webpack_require__(1);
	var warning = __webpack_require__(3);

	/**
	 * Returns the DOM node rendered by this element.
	 *
	 * See https://facebook.github.io/react/docs/top-level-api.html#reactdom.finddomnode
	 *
	 * @param {ReactComponent|DOMElement} componentOrElement
	 * @return {?DOMElement} The root node of this element.
	 */
	function findDOMNode(componentOrElement) {
	  if (false) {
	    var owner = ReactCurrentOwner.current;
	    if (owner !== null) {
	      process.env.NODE_ENV !== 'production' ? warning(owner._warnedAboutRefsInRender, '%s is accessing findDOMNode inside its render(). ' + 'render() should be a pure function of props and state. It should ' + 'never access something that requires stale data from the previous ' + 'render, such as refs. Move this logic to componentDidMount and ' + 'componentDidUpdate instead.', owner.getName() || 'A component') : void 0;
	      owner._warnedAboutRefsInRender = true;
	    }
	  }
	  if (componentOrElement == null) {
	    return null;
	  }
	  if (componentOrElement.nodeType === 1) {
	    return componentOrElement;
	  }

	  var inst = ReactInstanceMap.get(componentOrElement);
	  if (inst) {
	    inst = getHostComponentFromComposite(inst);
	    return inst ? ReactDOMComponentTree.getNodeFromInstance(inst) : null;
	  }

	  if (typeof componentOrElement.render === 'function') {
	     true ?  false ? invariant(false, 'findDOMNode was called on an unmounted component.') : _prodInvariant('44') : void 0;
	  } else {
	     true ?  false ? invariant(false, 'Element appears to be neither ReactComponent nor DOMNode (keys: %s)', Object.keys(componentOrElement)) : _prodInvariant('45', Object.keys(componentOrElement)) : void 0;
	  }
	}

	module.exports = findDOMNode;

/***/ },
/* 195 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule flattenChildren
	 *
	 */

	'use strict';

	var KeyEscapeUtils = __webpack_require__(40);
	var traverseAllChildren = __webpack_require__(57);
	var warning = __webpack_require__(3);

	var ReactComponentTreeDevtool;

	if (typeof process !== 'undefined' && process.env && ("production") === 'test') {
	  // Temporary hack.
	  // Inline requires don't work well with Jest:
	  // https://github.com/facebook/react/issues/7240
	  // Remove the inline requires when we don't need them anymore:
	  // https://github.com/facebook/react/pull/7178
	  ReactComponentTreeDevtool = __webpack_require__(44);
	}

	/**
	 * @param {function} traverseContext Context passed through traversal.
	 * @param {?ReactComponent} child React child component.
	 * @param {!string} name String name of key path to child.
	 * @param {number=} selfDebugID Optional debugID of the current internal instance.
	 */
	function flattenSingleChildIntoContext(traverseContext, child, name, selfDebugID) {
	  // We found a component instance.
	  if (traverseContext && typeof traverseContext === 'object') {
	    var result = traverseContext;
	    var keyUnique = result[name] === undefined;
	    if (false) {
	      if (!ReactComponentTreeDevtool) {
	        ReactComponentTreeDevtool = require('./ReactComponentTreeDevtool');
	      }
	      process.env.NODE_ENV !== 'production' ? warning(keyUnique, 'flattenChildren(...): Encountered two children with the same key, ' + '`%s`. Child keys must be unique; when two children share a key, only ' + 'the first child will be used.%s', KeyEscapeUtils.unescape(name), ReactComponentTreeDevtool.getStackAddendumByID(selfDebugID)) : void 0;
	    }
	    if (keyUnique && child != null) {
	      result[name] = child;
	    }
	  }
	}

	/**
	 * Flattens children that are typically specified as `props.children`. Any null
	 * children will not be included in the resulting object.
	 * @return {!object} flattened children keyed by name.
	 */
	function flattenChildren(children, selfDebugID) {
	  if (children == null) {
	    return children;
	  }
	  var result = {};

	  if (false) {
	    traverseAllChildren(children, function (traverseContext, child, name) {
	      return flattenSingleChildIntoContext(traverseContext, child, name, selfDebugID);
	    }, result);
	  } else {
	    traverseAllChildren(children, flattenSingleChildIntoContext, result);
	  }
	  return result;
	}

	module.exports = flattenChildren;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(35)))

/***/ },
/* 196 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getEventKey
	 */

	'use strict';

	var getEventCharCode = __webpack_require__(52);

	/**
	 * Normalization of deprecated HTML5 `key` values
	 * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names
	 */
	var normalizeKey = {
	  'Esc': 'Escape',
	  'Spacebar': ' ',
	  'Left': 'ArrowLeft',
	  'Up': 'ArrowUp',
	  'Right': 'ArrowRight',
	  'Down': 'ArrowDown',
	  'Del': 'Delete',
	  'Win': 'OS',
	  'Menu': 'ContextMenu',
	  'Apps': 'ContextMenu',
	  'Scroll': 'ScrollLock',
	  'MozPrintableKey': 'Unidentified'
	};

	/**
	 * Translation from legacy `keyCode` to HTML5 `key`
	 * Only special keys supported, all others depend on keyboard layout or browser
	 * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names
	 */
	var translateToKey = {
	  8: 'Backspace',
	  9: 'Tab',
	  12: 'Clear',
	  13: 'Enter',
	  16: 'Shift',
	  17: 'Control',
	  18: 'Alt',
	  19: 'Pause',
	  20: 'CapsLock',
	  27: 'Escape',
	  32: ' ',
	  33: 'PageUp',
	  34: 'PageDown',
	  35: 'End',
	  36: 'Home',
	  37: 'ArrowLeft',
	  38: 'ArrowUp',
	  39: 'ArrowRight',
	  40: 'ArrowDown',
	  45: 'Insert',
	  46: 'Delete',
	  112: 'F1', 113: 'F2', 114: 'F3', 115: 'F4', 116: 'F5', 117: 'F6',
	  118: 'F7', 119: 'F8', 120: 'F9', 121: 'F10', 122: 'F11', 123: 'F12',
	  144: 'NumLock',
	  145: 'ScrollLock',
	  224: 'Meta'
	};

	/**
	 * @param {object} nativeEvent Native browser event.
	 * @return {string} Normalized `key` property.
	 */
	function getEventKey(nativeEvent) {
	  if (nativeEvent.key) {
	    // Normalize inconsistent values reported by browsers due to
	    // implementations of a working draft specification.

	    // FireFox implements `key` but returns `MozPrintableKey` for all
	    // printable characters (normalized to `Unidentified`), ignore it.
	    var key = normalizeKey[nativeEvent.key] || nativeEvent.key;
	    if (key !== 'Unidentified') {
	      return key;
	    }
	  }

	  // Browser does not implement `key`, polyfill as much of it as we can.
	  if (nativeEvent.type === 'keypress') {
	    var charCode = getEventCharCode(nativeEvent);

	    // The enter-key is technically both printable and non-printable and can
	    // thus be captured by `keypress`, no other non-printable key should.
	    return charCode === 13 ? 'Enter' : String.fromCharCode(charCode);
	  }
	  if (nativeEvent.type === 'keydown' || nativeEvent.type === 'keyup') {
	    // While user keyboard layout determines the actual meaning of each
	    // `keyCode` value, almost all function keys have a universal value.
	    return translateToKey[nativeEvent.keyCode] || 'Unidentified';
	  }
	  return '';
	}

	module.exports = getEventKey;

/***/ },
/* 197 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getNodeForCharacterOffset
	 */

	'use strict';

	/**
	 * Given any node return the first leaf node without children.
	 *
	 * @param {DOMElement|DOMTextNode} node
	 * @return {DOMElement|DOMTextNode}
	 */

	function getLeafNode(node) {
	  while (node && node.firstChild) {
	    node = node.firstChild;
	  }
	  return node;
	}

	/**
	 * Get the next sibling within a container. This will walk up the
	 * DOM if a node's siblings have been exhausted.
	 *
	 * @param {DOMElement|DOMTextNode} node
	 * @return {?DOMElement|DOMTextNode}
	 */
	function getSiblingNode(node) {
	  while (node) {
	    if (node.nextSibling) {
	      return node.nextSibling;
	    }
	    node = node.parentNode;
	  }
	}

	/**
	 * Get object describing the nodes which contain characters at offset.
	 *
	 * @param {DOMElement|DOMTextNode} root
	 * @param {number} offset
	 * @return {?object}
	 */
	function getNodeForCharacterOffset(root, offset) {
	  var node = getLeafNode(root);
	  var nodeStart = 0;
	  var nodeEnd = 0;

	  while (node) {
	    if (node.nodeType === 3) {
	      nodeEnd = nodeStart + node.textContent.length;

	      if (nodeStart <= offset && nodeEnd >= offset) {
	        return {
	          node: node,
	          offset: offset - nodeStart
	        };
	      }

	      nodeStart = nodeEnd;
	    }

	    node = getLeafNode(getSiblingNode(node));
	  }
	}

	module.exports = getNodeForCharacterOffset;

/***/ },
/* 198 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getVendorPrefixedEventName
	 */

	'use strict';

	var ExecutionEnvironment = __webpack_require__(7);

	/**
	 * Generate a mapping of standard vendor prefixes using the defined style property and event name.
	 *
	 * @param {string} styleProp
	 * @param {string} eventName
	 * @returns {object}
	 */
	function makePrefixMap(styleProp, eventName) {
	  var prefixes = {};

	  prefixes[styleProp.toLowerCase()] = eventName.toLowerCase();
	  prefixes['Webkit' + styleProp] = 'webkit' + eventName;
	  prefixes['Moz' + styleProp] = 'moz' + eventName;
	  prefixes['ms' + styleProp] = 'MS' + eventName;
	  prefixes['O' + styleProp] = 'o' + eventName.toLowerCase();

	  return prefixes;
	}

	/**
	 * A list of event names to a configurable list of vendor prefixes.
	 */
	var vendorPrefixes = {
	  animationend: makePrefixMap('Animation', 'AnimationEnd'),
	  animationiteration: makePrefixMap('Animation', 'AnimationIteration'),
	  animationstart: makePrefixMap('Animation', 'AnimationStart'),
	  transitionend: makePrefixMap('Transition', 'TransitionEnd')
	};

	/**
	 * Event names that have already been detected and prefixed (if applicable).
	 */
	var prefixedEventNames = {};

	/**
	 * Element to check for prefixes on.
	 */
	var style = {};

	/**
	 * Bootstrap if a DOM exists.
	 */
	if (ExecutionEnvironment.canUseDOM) {
	  style = document.createElement('div').style;

	  // On some platforms, in particular some releases of Android 4.x,
	  // the un-prefixed "animation" and "transition" properties are defined on the
	  // style object but the events that fire will still be prefixed, so we need
	  // to check if the un-prefixed events are usable, and if not remove them from the map.
	  if (!('AnimationEvent' in window)) {
	    delete vendorPrefixes.animationend.animation;
	    delete vendorPrefixes.animationiteration.animation;
	    delete vendorPrefixes.animationstart.animation;
	  }

	  // Same as above
	  if (!('TransitionEvent' in window)) {
	    delete vendorPrefixes.transitionend.transition;
	  }
	}

	/**
	 * Attempts to determine the correct vendor prefixed event name.
	 *
	 * @param {string} eventName
	 * @returns {string}
	 */
	function getVendorPrefixedEventName(eventName) {
	  if (prefixedEventNames[eventName]) {
	    return prefixedEventNames[eventName];
	  } else if (!vendorPrefixes[eventName]) {
	    return eventName;
	  }

	  var prefixMap = vendorPrefixes[eventName];

	  for (var styleProp in prefixMap) {
	    if (prefixMap.hasOwnProperty(styleProp) && styleProp in style) {
	      return prefixedEventNames[eventName] = prefixMap[styleProp];
	    }
	  }

	  return '';
	}

	module.exports = getVendorPrefixedEventName;

/***/ },
/* 199 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule onlyChild
	 */
	'use strict';

	var _prodInvariant = __webpack_require__(2);

	var ReactElement = __webpack_require__(10);

	var invariant = __webpack_require__(1);

	/**
	 * Returns the first child in a collection of children and verifies that there
	 * is only one child in the collection.
	 *
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.children.only
	 *
	 * The current implementation of this function assumes that a single child gets
	 * passed without a wrapper, but the purpose of this helper function is to
	 * abstract away the particular structure of children.
	 *
	 * @param {?object} children Child collection structure.
	 * @return {ReactElement} The first and only `ReactElement` contained in the
	 * structure.
	 */
	function onlyChild(children) {
	  !ReactElement.isValidElement(children) ?  false ? invariant(false, 'onlyChild must be passed a children with exactly one child.') : _prodInvariant('23') : void 0;
	  return children;
	}

	module.exports = onlyChild;

/***/ },
/* 200 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule quoteAttributeValueForBrowser
	 */

	'use strict';

	var escapeTextContentForBrowser = __webpack_require__(30);

	/**
	 * Escapes attribute value to prevent scripting attacks.
	 *
	 * @param {*} value Value to escape.
	 * @return {string} An escaped string.
	 */
	function quoteAttributeValueForBrowser(value) {
	  return '"' + escapeTextContentForBrowser(value) + '"';
	}

	module.exports = quoteAttributeValueForBrowser;

/***/ },
/* 201 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	* @providesModule renderSubtreeIntoContainer
	*/

	'use strict';

	var ReactMount = __webpack_require__(81);

	module.exports = ReactMount.renderSubtreeIntoContainer;

/***/ }
/******/ ])));
//# sourceMappingURL=main.1690734f.js.map
